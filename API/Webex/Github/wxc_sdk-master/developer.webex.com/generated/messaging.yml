# command: developer.webex.com/read_api_spec.py -s Messaging -t "Attachment Actions" Events Memberships Messages People "Room Tabs" Rooms "Team Memberships" Teams Webhooks -f developer.webex.com/generated/messaging.yml
docs:
  Attachment Actions:
    doc: Users create attachment actions by interacting with message attachments such
      as clicking on a submit button in a card.
    header: Attachment Actions
    methods:
    - doc: Create a new attachment action.
      documentation:
        doc: Create an Attachment Action
        doc_link: https://developer.webex.com/docs/api/v1/attachment-actions/create-an-attachment-action
        endpoint: https://webexapis.com/v1/attachment/actions
        http_method: POST
      header: Create an Attachment Action
      parameters_and_response:
        Body Parameters:
        - doc: 'The type of action to perform.

            '
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ID of the message which contains the attachment.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The attachment action's inputs.
          name: inputs
          param_attrs:
          - doc: ''
            name: Name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Url
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Tel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the action.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who performed the action.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the room in which the action was performed.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The type of action performed.

            '
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The parent message on which the attachment action was performed.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The action's inputs.
          name: inputs
          param_attrs: []
          param_object:
          - doc: ''
            name: Name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Url
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Tel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: The date and time the action was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a attachment action, by ID.

        Specify the attachment action ID in the id URI parameter.'
      documentation:
        doc: Get Attachment Action Details
        doc_link: https://developer.webex.com/docs/api/v1/attachment-actions/get-attachment-action-details
        endpoint: https://webexapis.com/v1/attachment/actions/{id}
        http_method: GET
      header: Get Attachment Action Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the action.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who performed the action.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the room in which the action was performed.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The type of action performed.

            '
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The parent message on which the attachment action was performed.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The action's inputs.
          name: inputs
          param_attrs: []
          param_object:
          - doc: ''
            name: Name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Url
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Tel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: The date and time the action was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the attachment action.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Events:
    doc: 'Events are generated when actions take place within Webex, such as when
      someone creates or deletes a message.

      The Events API can only be used by a Compliance Officer with an API access token
      that contains the spark-compliance:events_read scope. See the Compliance Guide
      for more information.'
    header: Events
    methods:
    - doc: 'List events in your organization. Several query parameters are available
        to filter the events returned in the response.

        Long result sets will be split into pages.'
      documentation:
        doc: List Events
        doc_link: https://developer.webex.com/docs/api/v1/events/list-events
        endpoint: https://webexapis.com/v1/events
        http_method: GET
      header: List Events
      parameters_and_response:
        Query Parameters:
        - doc: 'List events with a specific resource type.

            Possible values: messages, memberships, meetings, meetingMessages, meetingTranscripts,
            tabs, rooms, attachmentActions, files, file_transcodings'
          name: resource
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List events with a specific event type.

            Possible values: created, updated, deleted, ended'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List events performed by this person, by person ID.
          name: actorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List events which occurred after a specific date and time.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List events which occurred before a specific date and time. If unspecified,
            or set to a time in the future, lists events up to the present.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of events in the response. Value must be between
            1 and 1000, inclusive.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique identifier for the event.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of resource in the event.
            name: resource
            param_attrs:
            - doc: State changed on a messages resource
              name: messages
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a memberships resource
              name: memberships
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State change on a meeting ( here combined with type = 'ended' )
              name: meetings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State change on a automatic transcript resource for Webex Assistant
              name: meetingTranscripts
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a meeting message, i.e. message exchanged as part
                of a meeting
              name: meetingMessages
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a room tabs in a space
              name: tabs
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a space classification
              name: rooms
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a card attachment
              name: attachmentActions
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a file download
              name: files
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State change on a file preview
              name: file_transcodings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Event Resource Enum
            type_spec: null
          - doc: The action which took place in the event.
            name: type
            param_attrs:
            - doc: The resource has been created
              name: created
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A property on the resource has been updated
              name: updated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The resource has been deleted
              name: deleted
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The meeting has ended
              name: ended
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Event Type Enum
            type_spec: null
          - doc: The ID of the application for the event.
            name: appId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the person who performed the action.
            name: actorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization for the event.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time of the event.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The event's data representation. This object will contain the event's
              resource, such as memberships, messages, meetings, tabs, rooms or attachmentActions
              at the time the event took place.
            name: data
            param_attrs: []
            param_object:
            - doc: ''
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: roomId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: roomType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: orgId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: text
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: personId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: personEmail
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: meetingId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: creatorId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The meeting's host data
              name: host
              param_attrs: []
              param_object: []
              type: object
              type_spec: null
            - doc: Common Identity (CI) authenticated meeting attendees
              name: attendees
              param_attrs: []
              param_object: []
              type: array
              type_spec: null
            - doc: indicates whether or not the Voice Assistant was enabled during
                the meeting. If true a transcript should be available a couple minutes
                after the meeting ended at the meetingTranscripts resource
              name: transcriptionEnabled
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: indicates if recording was enabled for all or parts of the meeting.
                If true a recording should be available shortly after the meeting
                ended at the recordings resource
              name: recordingEnabled
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: indicates i chat messages were exchanged during the meeting in
                the meetings client (not the unified client). If true these messages
                can be accessed by a compliance officer at the postMeetingsChat resource.
                Meetings chat collection must be custom enabled.
              name: hasPostMeetingsChat
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: created
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: array[Event]
          type_spec: null
    - doc: 'Shows details for an event, by event ID.

        Specify the event ID in the eventId parameter in the URI.'
      documentation:
        doc: Get Event Details
        doc_link: https://developer.webex.com/docs/api/v1/events/get-event-details
        endpoint: https://webexapis.com/v1/events/{eventId}
        http_method: GET
      header: Get Event Details
      parameters_and_response:
        Response Properties:
        - doc: The unique identifier for the event.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The type of resource in the event.
          name: resource
          param_attrs:
          - doc: State changed on a messages resource
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a memberships resource
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State change on a meeting ( here combined with type = 'ended' )
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State change on a automatic transcript resource for Webex Assistant
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a meeting message, i.e. message exchanged as part
              of a meeting
            name: meetingMessages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a room tabs in a space
            name: tabs
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a space classification
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a card attachment
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a file download
            name: files
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State change on a file preview
            name: file_transcodings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Event Resource Enum
          type_spec: null
        - doc: The action which took place in the event.
          name: type
          param_attrs:
          - doc: The resource has been created
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A property on the resource has been updated
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The resource has been deleted
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The meeting has ended
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Event Type Enum
          type_spec: null
        - doc: The ID of the application for the event.
          name: appId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who performed the action.
          name: actorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization for the event.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the event.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The event's data representation. This object will contain the event's
            resource, such as memberships, messages, meetings, tabs, rooms or attachmentActions
            at the time the event took place.
          name: data
          param_attrs: []
          param_object:
          - doc: ''
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: roomType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: creatorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The meeting's host data
            name: host
            param_attrs: []
            param_object: []
            type: object
            type_spec: null
          - doc: Common Identity (CI) authenticated meeting attendees
            name: attendees
            param_attrs: []
            param_object: []
            type: array
            type_spec: null
          - doc: indicates whether or not the Voice Assistant was enabled during the
              meeting. If true a transcript should be available a couple minutes after
              the meeting ended at the meetingTranscripts resource
            name: transcriptionEnabled
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: indicates if recording was enabled for all or parts of the meeting.
              If true a recording should be available shortly after the meeting ended
              at the recordings resource
            name: recordingEnabled
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: indicates i chat messages were exchanged during the meeting in the
              meetings client (not the unified client). If true these messages can
              be accessed by a compliance officer at the postMeetingsChat resource.
              Meetings chat collection must be custom enabled.
            name: hasPostMeetingsChat
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the event.
          name: eventId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Memberships:
    doc: 'Memberships represent a person''s relationship to a room. Use this API to
      list members of any room that you''re in or create memberships to invite someone
      to a room. Compliance Officers can now also list memberships for personEmails
      where the CO is not part of the room.

      Memberships can also be updated to make someone a moderator, or deleted, to
      remove someone from the room.

      Just like in the Webex client, you must be a member of the room in order to
      list its memberships or invite people.'
    header: Memberships
    methods:
    - doc: 'Lists all room memberships. By default, lists memberships for rooms to
        which the authenticated user belongs.

        Use query parameters to filter the response.

        Use roomId to list memberships for a room, by ID.

        NOTE: For moderated team spaces, the list of memberships will include only
        the space moderators if the user is a team member but not a direct participant
        of the space.

        Use either personId or personEmail to filter the results. The roomId parameter
        is required when using these parameters.

        Long result sets will be split into pages.'
      documentation:
        doc: List Memberships
        doc_link: https://developer.webex.com/docs/api/v1/memberships/list-memberships
        endpoint: https://webexapis.com/v1/memberships
        http_method: GET
      header: List Memberships
      parameters_and_response:
        Query Parameters:
        - doc: List memberships associated with a room, by ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List memberships associated with a person, by ID. The roomId parameter
            is required when using this parameter.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List memberships associated with a person, by email address. The roomId
            parameter is required when using this parameter.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of memberships in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the membership.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room ID.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person ID.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the person.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The display name of the person.
            name: personDisplayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The organization ID of the person.
            name: personOrgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the participant is a room moderator.
            name: isModerator
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the direct type room is hidden in the Webex clients.
            name: isRoomHidden
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The type of room the membership is associated with.
            name: roomType
            param_attrs:
            - doc: 1:1 room.
              name: direct
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Group room.
              name: group
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not the participant is a monitoring bot (deprecated).
            name: isMonitor
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The date and time when the membership was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Membership]
          type_spec: null
    - doc: Add someone to a room by Person ID or email address, optionally making
        them a moderator. Compliance Officers cannot add people to empty (team) spaces.
      documentation:
        doc: Create a Membership
        doc_link: https://developer.webex.com/docs/api/v1/memberships/create-a-membership
        endpoint: https://webexapis.com/v1/memberships
        http_method: POST
      header: Create a Membership
      parameters_and_response:
        Body Parameters:
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the direct type room is hidden in the Webex clients.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The type of room the membership is associated with.
          name: roomType
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the participant is a monitoring bot (deprecated).
          name: isMonitor
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Get details for a membership by ID.

        Specify the membership ID in the membershipId URI parameter.'
      documentation:
        doc: Get Membership Details
        doc_link: https://developer.webex.com/docs/api/v1/memberships/get-membership-details
        endpoint: https://webexapis.com/v1/memberships/{membershipId}
        http_method: GET
      header: Get Membership Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the direct type room is hidden in the Webex clients.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The type of room the membership is associated with.
          name: roomType
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the participant is a monitoring bot (deprecated).
          name: isMonitor
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates properties for a membership by ID.

        Specify the membership ID in the membershipId URI parameter.'
      documentation:
        doc: Update a Membership
        doc_link: https://developer.webex.com/docs/api/v1/memberships/update-a-membership
        endpoint: https://webexapis.com/v1/memberships/{membershipId}
        http_method: PUT
      header: Update a Membership
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: When set to true, hides direct spaces in the teams client. Any new
            message will make the room visible again.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the direct type room is hidden in the Webex clients.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The type of room the membership is associated with.
          name: roomType
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the participant is a monitoring bot (deprecated).
          name: isMonitor
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a membership by ID.

        Specify the membership ID in the membershipId URI parameter.

        The membership for the last moderator of a Team''s General space may not be
        deleted; promote another user to team moderator first.'
      documentation:
        doc: Delete a Membership
        doc_link: https://developer.webex.com/docs/api/v1/memberships/delete-a-membership
        endpoint: https://webexapis.com/v1/memberships/{membershipId}
        http_method: DELETE
      header: Delete a Membership
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Messages:
    doc: 'Messages are how you communicate in a room. In Webex, each message is displayed
      on its own line along with a timestamp and sender information. Use this API
      to list, create, update, and delete messages.

      Message can contain plain text, rich text, and a file attachment.

      Just like in the Webex app, you must be a member of the room in order to target
      it with this API.'
    header: Messages
    methods:
    - doc: 'Lists all messages in a room.  Each message will include content attachments
        if present.

        The list sorts the messages in descending order by creation date.

        Long result sets will be split into pages.'
      documentation:
        doc: List Messages
        doc_link: https://developer.webex.com/docs/api/v1/messages/list-messages
        endpoint: https://webexapis.com/v1/messages
        http_method: GET
      header: List Messages
      parameters_and_response:
        Query Parameters:
        - doc: List messages in a room, by ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: List messages with a parent, by ID.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List messages with these people mentioned, by ID. Use me as a shorthand
            for the current API user. Only me or the person ID of the current user
            may be specified. Bots must include this parameter to list messages in
            group rooms (spaces).
          name: mentionedPeople
          param_attrs: []
          param_object: []
          type: array
          type_spec: null
        - doc: List messages sent before a date and time.
          name: before
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List messages sent before a message, by ID.
          name: beforeMessage
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of messages in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique identifier for the message.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The unique identifier for the parent message.
            name: parentId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room ID of the message.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of room.
            name: roomType
            param_attrs:
            - doc: 1:1 room
              name: direct
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: group room
              name: group
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The message, in plain text. If markdown is specified this parameter
              may be optionally used to provide alternate text for UI clients that
              do not support rich text.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The message, in Markdown format.
            name: markdown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The text content of the message, in HTML format. This read-only property
              is used by the Webex clients.
            name: html
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Public URLs for files attached to the message. For the supported
              media types and the behavior of file uploads, see Message Attachments.
            name: files
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: The person ID of the message author.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the message author.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: People IDs for anyone mentioned in the message.
            name: mentionedPeople
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Group names for the groups mentioned in the message.
            name: mentionedGroups
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Message content attachments attached to the message. See the Cards
              Guide for more information.
            name: attachments
            param_attrs:
            - doc: The content type of the attachment.
              name: contentType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Adaptive Card content.
              name: content
              param_attrs:
              - doc: Must be AdaptiveCard.
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Adaptive Card schema version.
                name: version
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The card's elements.
                name: body
                param_attrs:
                - doc: '

                    Possible values: TextBlock'
                  name: type
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: Adaptive Cards'
                  name: text
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: large'
                  name: size
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[object]
                type_spec: null
              - doc: The card's actions.
                name: actions
                param_attrs:
                - doc: '

                    Possible values: Action.OpenUrl'
                  name: type
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: http://adaptivecards.io'
                  name: url
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: Learn More'
                  name: title
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[object]
                type_spec: null
              param_object: []
              type: Adaptive Card
              type_spec: null
            param_object: []
            type: array[Attachment]
            type_spec: null
          - doc: The date and time the message was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time that the message was last edited by the author.
              This field is only present when the message contents have changed.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: true if the audio file is a voice clip recorded by the client; false
              if the audio file is a standard audio file not posted using the voice
              clip feature.
            name: isVoiceClip
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[List Message]
          type_spec: null
    - doc: 'List all messages in a 1:1 (direct) room. Use the personId or personEmail
        query parameter to specify the room. Each message will include content attachments
        if present.

        The list sorts the messages in descending order by creation date.'
      documentation:
        doc: List Direct Messages
        doc_link: https://developer.webex.com/docs/api/v1/messages/list-direct-messages
        endpoint: https://webexapis.com/v1/messages/direct
        http_method: GET
      header: List Direct Messages
      parameters_and_response:
        Query Parameters:
        - doc: List messages with a parent, by ID.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List messages in a 1:1 room, by person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List messages in a 1:1 room, by person email.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique identifier for the message.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The unique identifier for the parent message.
            name: parentId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room ID of the message.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of room. Will always be direct.
            name: roomType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The message, in plain text. If markdown is specified this parameter
              may be optionally used to provide alternate text for UI clients that
              do not support rich text.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The message, in Markdown format.
            name: markdown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The text content of the message, in HTML format. This read-only property
              is used by the Webex clients.
            name: html
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Public URLs for files attached to the message. For the supported
              media types and the behavior of file uploads, see Message Attachments.
            name: files
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: The person ID of the message author.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the message author.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Message content attachments attached to the message. See the Cards
              Guide for more information.
            name: attachments
            param_attrs:
            - doc: The content type of the attachment.
              name: contentType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Adaptive Card content.
              name: content
              param_attrs:
              - doc: Must be AdaptiveCard.
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Adaptive Card schema version.
                name: version
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The card's elements.
                name: body
                param_attrs:
                - doc: '

                    Possible values: TextBlock'
                  name: type
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: Adaptive Cards'
                  name: text
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: large'
                  name: size
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[object]
                type_spec: null
              - doc: The card's actions.
                name: actions
                param_attrs:
                - doc: '

                    Possible values: Action.OpenUrl'
                  name: type
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: http://adaptivecards.io'
                  name: url
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: Learn More'
                  name: title
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[object]
                type_spec: null
              param_object: []
              type: Adaptive Card
              type_spec: null
            param_object: []
            type: array[Attachment]
            type_spec: null
          - doc: The date and time the message was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time that the message was last edited by the author.
              This field is only present when the message contents have changed.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: True if the audio file is a voice clip recorded by the client; false
              if the audio file is a standard audio file not posted using the voice
              clip feature.
            name: isVoiceClip
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[Direct Message]
          type_spec: null
    - doc: 'Post a plain text or rich text message, and optionally, a file attachment
        attachment, to a room.

        The files parameter is an array, which accepts multiple values to allow for
        future expansion, but currently only one file may be included with the message.
        File previews are only rendered for attachments of 1MB or less.'
      documentation:
        doc: Create a Message
        doc_link: https://developer.webex.com/docs/api/v1/messages/create-a-message
        endpoint: https://webexapis.com/v1/messages
        http_method: POST
      header: Create a Message
      parameters_and_response:
        Body Parameters:
        - doc: The room ID of the message.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The parent message to reply to.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the recipient when sending a private 1:1 message.
          name: toPersonId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the recipient when sending a private 1:1 message.
          name: toPersonEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in plain text. If markdown is specified this parameter
            may be optionally used to provide alternate text for UI clients that do
            not support rich text. The maximum message length is 7439 bytes.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in Markdown format. The maximum message length is 7439
            bytes.
          name: markdown
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The public URL to a binary file to be posted into the room. Only one
            file is allowed per message. Uploaded files are automatically converted
            into a format that all Webex clients can render. For the supported media
            types and the behavior of uploads, see the Message Attachments Guide.

            Possible values: http://www.example.com/images/media.png'
          name: files
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Content attachments to attach to the message. Only one card per message
            is supported. See the Cards Guide for more information.
          name: attachments
          param_attrs:
          - doc: The content type of the attachment.
            name: contentType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Adaptive Card content.
            name: content
            param_attrs:
            - doc: Must be AdaptiveCard.
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Adaptive Card schema version.
              name: version
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: The card's elements.
              name: body
              param_attrs:
              - doc: ''
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: text
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: size
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The card's actions.
              name: actions
              param_attrs:
              - doc: ''
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: url
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: title
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            param_object: []
            type: Adaptive Card
            type_spec: null
          param_object: []
          type: array[Attachment]
          type_spec: null
        Response Properties:
        - doc: The unique identifier for the message.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique identifier for the parent message.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID of the message.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The type of room.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The person ID of the recipient when sending a private 1:1 message.
          name: toPersonId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the recipient when sending a private 1:1 message.
          name: toPersonEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in plain text. If markdown is specified this parameter
            may be optionally used to provide alternate text for UI clients that do
            not support rich text.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in Markdown format.
          name: markdown
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The text content of the message, in HTML format. This read-only property
            is used by the Webex clients.
          name: html
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Public URLs for files attached to the message. For the supported media
            types and the behavior of file uploads, see Message Attachments.
          name: files
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The person ID of the message author.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the message author.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: People IDs for anyone mentioned in the message.
          name: mentionedPeople
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Group names for the groups mentioned in the message.
          name: mentionedGroups
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Message content attachments attached to the message. See the Cards
            Guide for more information.
          name: attachments
          param_attrs:
          - doc: The content type of the attachment.
            name: contentType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Adaptive Card content.
            name: content
            param_attrs:
            - doc: Must be AdaptiveCard.
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Adaptive Card schema version.
              name: version
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The card's elements.
              name: body
              param_attrs:
              - doc: '

                  Possible values: TextBlock'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Adaptive Cards'
                name: text
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: large'
                name: size
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The card's actions.
              name: actions
              param_attrs:
              - doc: '

                  Possible values: Action.OpenUrl'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: http://adaptivecards.io'
                name: url
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Learn More'
                name: title
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            param_object: []
            type: Adaptive Card
            type_spec: null
          param_object: []
          type: array[Attachment]
          type_spec: null
        - doc: The date and time the message was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time that the message was last edited by the author. This
            field is only present when the message contents have changed.
          name: updated
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: True if the audio file is a voice clip recorded by the client; false
            if the audio file is a standard audio file not posted using the voice
            clip feature.
          name: isVoiceClip
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
    - doc: "Update a message you have posted not more than 10 times.\nSpecify the\
        \ messageId of the message you want to edit.\nEdits of messages containing\
        \ files or attachments are not currently supported.\nIf a user attempts to\
        \ edit a message containing files or attachments a 400 Bad Request will be\
        \ returned by the API with a message stating that the feature is currently\
        \ unsupported.\nThere is also a maximum number of times a user can edit a\
        \ message. The maximum currently supported is 10 edits per message.\n    If\
        \ a user attempts to edit a message greater that the maximum times allowed\
        \ the API will return 400 Bad Request with a message stating the edit limit\
        \ has been reached.\nWhile only the roomId and text or markdown attributes\
        \ are required in the request body, a common pattern for editing message is\
        \ to first call GET /messages/{id} for the message you wish to edit and to\
        \ then update the text or markdown attribute accordingly, passing the updated\
        \ message object in the request body of the PUT /messages/{id} request.\n\
        When this pattern is used on a message that included markdown, the html attribute\
        \ must be deleted prior to making the PUT request."
      documentation:
        doc: Edit a Message
        doc_link: https://developer.webex.com/docs/api/v1/messages/edit-a-message
        endpoint: https://webexapis.com/v1/messages/{messageId}
        http_method: PUT
      header: Edit a Message
      parameters_and_response:
        Body Parameters:
        - doc: The room ID of the message.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The message, in plain text. If markdown is specified this parameter
            may be optionally used to provide alternate text for UI clients that do
            not support rich text. The maximum message length is 7439 bytes.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in Markdown format. If this attribute is set ensure that
            the request does NOT contain an html attribute.
          name: markdown
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: The unique identifier for the message.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique identifier for the parent message.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID of the message.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The type of room.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The message, in plain text. If markdown is specified this parameter
            may be optionally used to provide alternate text for UI clients that do
            not support rich text.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in Markdown format.
          name: markdown
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The text content of the message, in HTML format. This read-only property
            is used by the Webex clients.
          name: html
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Public URLs for files attached to the message. For the supported media
            types and the behavior of file uploads, see Message Attachments.
          name: files
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The person ID of the message author.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the message author.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: People IDs for anyone mentioned in the message.
          name: mentionedPeople
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Group names for the groups mentioned in the message.
          name: mentionedGroups
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Message content attachments attached to the message. See the Cards
            Guide for more information.
          name: attachments
          param_attrs:
          - doc: The content type of the attachment.
            name: contentType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Adaptive Card content.
            name: content
            param_attrs:
            - doc: Must be AdaptiveCard.
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Adaptive Card schema version.
              name: version
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The card's elements.
              name: body
              param_attrs:
              - doc: '

                  Possible values: TextBlock'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Adaptive Cards'
                name: text
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: large'
                name: size
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The card's actions.
              name: actions
              param_attrs:
              - doc: '

                  Possible values: Action.OpenUrl'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: http://adaptivecards.io'
                name: url
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Learn More'
                name: title
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            param_object: []
            type: Adaptive Card
            type_spec: null
          param_object: []
          type: array[Attachment]
          type_spec: null
        - doc: The date and time the message was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time that the message was last edited by the author. This
            field is only present when the message contents have changed.
          name: updated
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: true if the audio file is a voice clip recorded by the client; false
            if the audio file is a standard audio file not posted using the voice
            clip feature.
          name: isVoiceClip
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the message.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Show details for a message, by message ID.

        Specify the message ID in the messageId parameter in the URI.'
      documentation:
        doc: Get Message Details
        doc_link: https://developer.webex.com/docs/api/v1/messages/get-message-details
        endpoint: https://webexapis.com/v1/messages/{messageId}
        http_method: GET
      header: Get Message Details
      parameters_and_response:
        Response Properties:
        - doc: The unique identifier for the message.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique identifier for the parent message.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID of the message.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The type of room.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The message, in plain text. If markdown is specified this parameter
            may be optionally used to provide alternate text for UI clients that do
            not support rich text.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in Markdown format.
          name: markdown
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The text content of the message, in HTML format. This read-only property
            is used by the Webex clients.
          name: html
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Public URLs for files attached to the message. For the supported media
            types and the behavior of file uploads, see Message Attachments.
          name: files
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The person ID of the message author.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the message author.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: People IDs for anyone mentioned in the message.
          name: mentionedPeople
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Group names for the groups mentioned in the message.
          name: mentionedGroups
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Message content attachments attached to the message. See the Cards
            Guide for more information.
          name: attachments
          param_attrs:
          - doc: The content type of the attachment.
            name: contentType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Adaptive Card content.
            name: content
            param_attrs:
            - doc: Must be AdaptiveCard.
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Adaptive Card schema version.
              name: version
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The card's elements.
              name: body
              param_attrs:
              - doc: '

                  Possible values: TextBlock'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Adaptive Cards'
                name: text
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: large'
                name: size
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The card's actions.
              name: actions
              param_attrs:
              - doc: '

                  Possible values: Action.OpenUrl'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: http://adaptivecards.io'
                name: url
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Learn More'
                name: title
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            param_object: []
            type: Adaptive Card
            type_spec: null
          param_object: []
          type: array[Attachment]
          type_spec: null
        - doc: The date and time the message was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time that the message was last edited by the author. This
            field is only present when the message contents have changed.
          name: updated
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: true if the audio file is a voice clip recorded by the client; false
            if the audio file is a standard audio file not posted using the voice
            clip feature.
          name: isVoiceClip
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the message.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete a message, by message ID.

        Specify the message ID in the messageId parameter in the URI.'
      documentation:
        doc: Delete a Message
        doc_link: https://developer.webex.com/docs/api/v1/messages/delete-a-message
        endpoint: https://webexapis.com/v1/messages/{messageId}
        http_method: DELETE
      header: Delete a Message
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the message.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  People:
    doc: 'People are registered users of Webex. Searching and viewing People requires
      an auth token with a scope of spark:people_read. Viewing the list of all People
      in your Organization requires an administrator auth token with spark-admin:people_read
      scope. Adding, updating, and removing People requires an administrator auth
      token with the spark-admin:people_write and spark-admin:people_read scope.

      A person''s call settings are for Webex Calling and necessitate Webex Calling
      licenses.

      To learn more about managing people in a room see the Memberships API. For information
      about how to allocate Hybrid Services licenses to people, see the Managing Hybrid
      Services guide.'
    header: People
    methods:
    - doc: 'List people in your organization. For most users, either the email or
        displayName parameter is required. Admin users can omit these fields and list
        all users in their organization.

        Response properties associated with a user''s presence status, such as status
        or lastActivity, will only be returned for people within your organization
        or an organization you manage. Presence information will not be returned if
        the authenticated user has disabled status sharing.

        Admin users can include Webex Calling (BroadCloud) user details in the response
        by specifying callingData parameter as true. Admin users can list all users
        in a location or with a specific phone number. Admin users will receive an
        enriched payload with additional administrative fields like liceneses,roles
        etc. These fields are shown when accessing a user via GET /people/{id}, not
        when doing a GET /people?id=

        Lookup by email is only supported for people within the same org or where
        a partner admin relationship is in place.

        Lookup by roles is only supported for Admin users for the people within the
        same org.

        Long result sets will be split into pages.'
      documentation:
        doc: List People
        doc_link: https://developer.webex.com/docs/api/v1/people/list-people
        endpoint: https://webexapis.com/v1/people
        http_method: GET
      header: List People
      parameters_and_response:
        Query Parameters:
        - doc: List people with this email address. For non-admin requests, either
            this or displayName are required. With the exception of partner admins
            and a managed org relationship, people lookup by email is only available
            for users in the same org.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List people whose name starts with this string. For non-admin requests,
            either this or email are required.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List people by ID. Accepts up to 85 person IDs separated by commas.
            If this parameter is provided then presence information (such as the lastActivity
            or status properties) will not be included in the response.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List people in this organization. Only admin users of another organization
            (such as partners) may use this parameter.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List of roleIds separated by commas.
          name: roles
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Include Webex Calling user details in the response.
          name: callingData
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: List people present in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of people in the response. If callingData=true,
            then max will not be more than 50.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: An array of person objects.
          name: items
          param_attrs:
          - doc: A unique identifier for the person.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email addresses of the person.
            name: emails
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Phone numbers for the person.
            name: phoneNumbers
            param_attrs:
            - doc: 'The type of phone number.

                Possible values: work, mobile, fax'
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The phone number.

                Possible values: +1 408 526 7209'
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: The Webex Calling extension for the person. Only applies to a person
              with a Webex Calling license
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the location for this person retrieved from BroadCloud.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The full name of the person.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The nickname of the person if configured. If no nickname is configured
              for the person, this field will not be present.
            name: nickName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The first name of the person.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The last name of the person.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The URL to the person's avatar in PNG format.
            name: avatar
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization to which this person belongs.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An array of role strings representing the roles to which this admin
              user belongs.
            name: roles
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: An array of license strings allocated to this person.
            name: licenses
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: The business department the user belongs to.
            name: department
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A manager identifier
            name: manager
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Person Id of the manager
            name: managerId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: the person's title
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Person's address
            name: addresses
            param_attrs:
            - doc: 'The type of address

                Possible values: work'
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The user''s country

                Possible values: US'
              name: country
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'the user''s locality, often city

                Possible values: Milpitas'
              name: locality
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'the user''s region, often state

                Possible values: California'
              name: region
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'the user''s street

                Possible values: 1099 Bird Ave.'
              name: streetAddress
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'the user''s postal or zip code

                Possible values: 99212'
              name: postalCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: The date and time the person was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the person was last changed.
            name: lastModified
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The time zone of the person if configured. If no timezone is configured
              on the account, this field will not be present
            name: timezone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time of the person's last activity within Webex. This
              will only be returned for people within your organization or an organization
              you manage. Presence information will not be shown if the authenticated
              user has disabled status sharing.
            name: lastActivity
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: One or several site names where this user has a role (host or attendee)
            name: siteUrls
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: The users sip addresses. Read-only.
            name: sipAddresses
            param_attrs: []
            param_object: []
            type: 'array[{"type": "personal-room","value": "testuser5@mycompany.webex.com","primary":
              false}]'
            type_spec: null
          - doc: The current presence status of the person. This will only be returned
              for people within your organization or an organization you manage. Presence
              information will not be shown if the authenticated user has disabled
              status sharing.
            name: status
            param_attrs:
            - doc: Active within the last 10 minutes
              name: active
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user is in a call
              name: call
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user has manually set their status to "Do Not Disturb"
              name: DoNotDisturb
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Last activity occurred more than 10 minutes ago
              name: inactive
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user is in a meeting
              name: meeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user or a Hybrid Calendar service has indicated that they are
                "Out of Office"
              name: OutOfOffice
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user has never logged in; a status cannot be determined
              name: pending
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user is sharing content
              name: presenting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: "The user\u2019s status could not be determined"
              name: unknown
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not an invite is pending for the user to complete account
              activation. This property is only returned if the authenticated user
              is an admin user for the person's organization.
            name: invitePending
            param_attrs:
            - doc: The person has been invited to Webex but has not created an account
              name: 'true'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An invite is not pending for this person
              name: 'false'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not the user is allowed to use Webex. This property is
              only returned if the authenticated user is an admin user for the person's
              organization.
            name: loginEnabled
            param_attrs:
            - doc: the person can log into Webex
              name: 'true'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: the person cannot log into Webex
              name: 'false'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The type of person account, such as person or bot.
            name: type
            param_attrs:
            - doc: Account belongs to a person
              name: person
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Account is a bot user
              name: bot
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Account is a guest user
              name: appuser
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[Person]
          type_spec: null
        - doc: An array of person IDs that could not be found.
          name: notFoundIds
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
    - doc: 'Create a new user account for a given organization. Only an admin can
        create a new user account.

        At least one of the following body parameters is required to create a new
        user: displayName, firstName, lastName.

        Currently, users may have only one email address associated with their account.
        The emails parameter is an array, which accepts multiple values to allow for
        future expansion, but currently only one email address will be used for the
        new user.

        Admin users can include Webex calling (BroadCloud) user details in the response
        by specifying callingData parameter as true.

        When doing attendee management, append #attendee to the siteUrl parameter
        (e.g. mysite.webex.com#attendee) to make the new user an attendee for a site.'
      documentation:
        doc: Create a Person
        doc_link: https://developer.webex.com/docs/api/v1/people/create-a-person
        endpoint: https://webexapis.com/v1/people
        http_method: POST
      header: Create a Person
      parameters_and_response:
        Body Parameters:
        - doc: 'The email addresses of the person. Only one email address is allowed
            per person.

            Possible values: john.andersen@example.com'
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        - doc: Phone numbers for the person. Only settable for Webex Calling. Requires
            a Webex Calling license.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: Webex Calling extension of the person. This is only settable for a
            person with a Webex Calling license.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'An array of role strings representing the roles to which this admin
            user belongs.

            Possible values: Y2lzY29zcGFyazovL3VzL1JPTEUvOTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh,
            Y2lzY29zcGFyazovL3VzL1JPTEUvOTZhYmMyYWEtM2RjYy0xMWU1LWIyNjMtMGY0NTkyYWRlZmFi'
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: 'An array of license strings allocated to this person.

            Possible values: Y2lzY29zcGFyazovL3VzL0xJQ0VOU0UvOTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh,
            Y2lzY29zcGFyazovL3VzL0xJQ0VOU0UvOTZhYmMyYWEtM2RjYy0xMWU1LWIyNjMtMGY0NTkyYWRlZmFi'
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier.
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: 'One or several site names where this user has an attendee role. Append
            #attendee to the sitename (eg: mysite.webex.com#attendee)

            Possible values: mysite.webex.com#attendee'
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: Include Webex Calling user details in the response.
          name: callingData
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the person.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email addresses of the person.
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Phone numbers for the person.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work, mobile, fax'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: +1 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The Webex Calling extension for the person. Only applies to a person
            with a Webex Calling license
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person retrieved from BroadCloud.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The nickname of the person if configured. If no nickname is configured
            for the person, this field will not be present.
          name: nickName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of role strings representing the roles to which this admin
            user belongs.
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: An array of license strings allocated to this person.
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The date and time the person was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the person was last changed.
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time zone of the person if configured. If no timezone is configured
            on the account, this field will not be present
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the person's last activity within Webex. This
            will only be returned for people within your organization or an organization
            you manage. Presence information will not be shown if the authenticated
            user has disabled status sharing.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: One or several site names where this user has a role (host or attendee)
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The users sip addresses. Read-only.
          name: sipAddresses
          param_attrs: []
          param_object: []
          type: 'array[{"type": "personal-room","value": "testuser5@mycompany.webex.com","primary":
            false}]'
          type_spec: null
        - doc: The current presence status of the person. This will only be returned
            for people within your organization or an organization you manage. Presence
            information will not be shown if the authenticated user has disabled status
            sharing.
          name: status
          param_attrs:
          - doc: Active within the last 10 minutes
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a call
            name: call
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has manually set their status to "Do Not Disturb"
            name: DoNotDisturb
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last activity occurred more than 10 minutes ago
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a meeting
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user or a Hybrid Calendar service has indicated that they are
              "Out of Office"
            name: OutOfOffice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has never logged in; a status cannot be determined
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is sharing content
            name: presenting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "The user\u2019s status could not be determined"
            name: unknown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not an invite is pending for the user to complete account
            activation. This property is only returned if the authenticated user is
            an admin user for the person's organization.
          name: invitePending
          param_attrs:
          - doc: The person has been invited to Webex but has not created an account
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An invite is not pending for this person
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the user is allowed to use Webex. This property is only
            returned if the authenticated user is an admin user for the person's organization.
          name: loginEnabled
          param_attrs:
          - doc: the person can log into Webex
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: the person cannot log into Webex
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The type of person account, such as person or bot.
          name: type
          param_attrs:
          - doc: Account belongs to a person
            name: person
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a bot user
            name: bot
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a guest user
            name: appuser
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
    - doc: 'Shows details for a person, by ID.

        Response properties associated with a user''s presence status, such as status
        or lastActivity, will only be displayed for people within your organization
        or an organization you manage. Presence information will not be shown if the
        authenticated user has disabled status sharing.

        Admin users can include Webex Calling (BroadCloud) user details in the response
        by specifying callingData parameter as true.

        Specify the person ID in the personId parameter in the URI.'
      documentation:
        doc: Get Person Details
        doc_link: https://developer.webex.com/docs/api/v1/people/get-person-details
        endpoint: https://webexapis.com/v1/people/{personId}
        http_method: GET
      header: Get Person Details
      parameters_and_response:
        Query Parameters:
        - doc: Include Webex Calling user details in the response.
          name: callingData
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the person.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email addresses of the person.
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Phone numbers for the person.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work, mobile, fax'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: +1 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The Webex Calling extension for the person. Only applies to a person
            with a Webex Calling license
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person retrieved from BroadCloud.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The nickname of the person if configured. If no nickname is configured
            for the person, this field will not be present.
          name: nickName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of role strings representing the roles to which this admin
            user belongs.
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: An array of license strings allocated to this person.
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The date and time the person was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the person was last changed.
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time zone of the person if configured. If no timezone is configured
            on the account, this field will not be present
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the person's last activity within Webex. This
            will only be returned for people within your organization or an organization
            you manage. Presence information will not be shown if the authenticated
            user has disabled status sharing.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: One or several site names where this user has a role (host or attendee)
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The users sip addresses. Read-only.
          name: sipAddresses
          param_attrs: []
          param_object: []
          type: 'array[{"type": "personal-room","value": "testuser5@mycompany.webex.com","primary":
            false}]'
          type_spec: null
        - doc: The current presence status of the person. This will only be returned
            for people within your organization or an organization you manage. Presence
            information will not be shown if the authenticated user has disabled status
            sharing.
          name: status
          param_attrs:
          - doc: Active within the last 10 minutes
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a call
            name: call
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has manually set their status to "Do Not Disturb"
            name: DoNotDisturb
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last activity occurred more than 10 minutes ago
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a meeting
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user or a Hybrid Calendar service has indicated that they are
              "Out of Office"
            name: OutOfOffice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has never logged in; a status cannot be determined
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is sharing content
            name: presenting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "The user\u2019s status could not be determined"
            name: unknown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not an invite is pending for the user to complete account
            activation. This property is only returned if the authenticated user is
            an admin user for the person's organization.
          name: invitePending
          param_attrs:
          - doc: The person has been invited to Webex but has not created an account
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An invite is not pending for this person
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the user is allowed to use Webex. This property is only
            returned if the authenticated user is an admin user for the person's organization.
          name: loginEnabled
          param_attrs:
          - doc: the person can log into Webex
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: the person cannot log into Webex
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The type of person account, such as person or bot.
          name: type
          param_attrs:
          - doc: Account belongs to a person
            name: person
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a bot user
            name: bot
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a guest user
            name: appuser
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update details for a person, by ID.

        Specify the person ID in the personId parameter in the URI. Only an admin
        can update a person details.

        Include all details for the person. This action expects all user details to
        be present in the request. A common approach is to first GET the person''s
        details, make changes, then PUT both the changed and unchanged values.

        Admin users can include Webex Calling (BroadCloud) user details in the response
        by specifying callingData parameter as true.

        Note: The locationId can only be set when adding a calling license to a user.
        It cannot be changed if a user is already an existing calling user.

        When doing attendee management, to update a user from host role to an attendee
        for a site append #attendee to the respective siteUrl and remove the meeting
        host license for this site from the license array.

        To update a person from an attendee role to a host for a site, add the meeting
        license for this site in the meeting array, and remove that site from the
        siteurl parameter.

        To remove the attendee privilege for a user on a meeting site, remove the
        sitename#attendee from the siteUrls array. The showAllTypes parameter must
        be set to true.'
      documentation:
        doc: Update a Person
        doc_link: https://developer.webex.com/docs/api/v1/people/update-a-person
        endpoint: https://webexapis.com/v1/people/{personId}
        http_method: PUT
      header: Update a Person
      parameters_and_response:
        Body Parameters:
        - doc: 'The email addresses of the person. Only one email address is allowed
            per person.

            Possible values: john.andersen@example.com'
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Phone numbers for the person. Can only be set for Webex Calling. Needs
            a Webex Calling license.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: Webex Calling extension of the person. This is only settable for a
            person with a Webex Calling license
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The nickname of the person if configured. Set to the firstName automatically
            in update request.
          name: nickName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'An array of role strings representing the roles to which this admin
            user belongs.

            Possible values: Y2lzY29zcGFyazovL3VzL1JPTEUvOTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh,
            Y2lzY29zcGFyazovL3VzL1JPTEUvOTZhYmMyYWEtM2RjYy0xMWU1LWIyNjMtMGY0NTkyYWRlZmFi'
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: 'An array of license strings allocated to this person.

            Possible values: Y2lzY29zcGFyazovL3VzL0xJQ0VOU0UvOTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh,
            Y2lzY29zcGFyazovL3VzL0xJQ0VOU0UvOTZhYmMyYWEtM2RjYy0xMWU1LWIyNjMtMGY0NTkyYWRlZmFi'
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: 'One or several site names where this user has a role (host or attendee).
            Append #attendee to the site name to designate the attendee role on that
            site.

            Possible values: mysite.webex.com#attendee'
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Whether or not the user is allowed to use Webex. This property is only
            accessible if the authenticated user is an admin user for the person's
            organization.
          name: loginEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: Include Webex Calling user details in the response.
          name: callingData
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: 'Include additional user data like #attendee role'
          name: showAllTypes
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the person.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email addresses of the person.
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Phone numbers for the person.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work, mobile, fax'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: +1 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The Webex Calling extension for the person. Only applies to a person
            with a Webex Calling license
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person retrieved from BroadCloud.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The nickname of the person if configured. If no nickname is configured
            for the person, this field will not be present.
          name: nickName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of role strings representing the roles to which this admin
            user belongs.
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: An array of license strings allocated to this person.
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The date and time the person was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the person was last changed.
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time zone of the person if configured. If no timezone is configured
            on the account, this field will not be present
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the person's last activity within Webex. This
            will only be returned for people within your organization or an organization
            you manage. Presence information will not be shown if the authenticated
            user has disabled status sharing.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: One or several site names where this user has a role (host or attendee)
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The users sip addresses. Read-only.
          name: sipAddresses
          param_attrs: []
          param_object: []
          type: 'array[{"type": "personal-room","value": "testuser5@mycompany.webex.com","primary":
            false}]'
          type_spec: null
        - doc: The current presence status of the person. This will only be returned
            for people within your organization or an organization you manage. Presence
            information will not be shown if the authenticated user has disabled status
            sharing.
          name: status
          param_attrs:
          - doc: Active within the last 10 minutes
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a call
            name: call
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has manually set their status to "Do Not Disturb"
            name: DoNotDisturb
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last activity occurred more than 10 minutes ago
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a meeting
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user or a Hybrid Calendar service has indicated that they are
              "Out of Office"
            name: OutOfOffice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has never logged in; a status cannot be determined
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is sharing content
            name: presenting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "The user\u2019s status could not be determined"
            name: unknown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not an invite is pending for the user to complete account
            activation. This property is only returned if the authenticated user is
            an admin user for the person's organization.
          name: invitePending
          param_attrs:
          - doc: The person has been invited to Webex but has not created an account
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An invite is not pending for this person
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the user is allowed to use Webex. This property is only
            returned if the authenticated user is an admin user for the person's organization.
          name: loginEnabled
          param_attrs:
          - doc: the person can log into Webex
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: the person cannot log into Webex
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The type of person account, such as person or bot.
          name: type
          param_attrs:
          - doc: Account belongs to a person
            name: person
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a bot user
            name: bot
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a guest user
            name: appuser
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Remove a person from the system. Only an admin can remove a person.

        Specify the person ID in the personId parameter in the URI.'
      documentation:
        doc: Delete a Person
        doc_link: https://developer.webex.com/docs/api/v1/people/delete-a-person
        endpoint: https://webexapis.com/v1/people/{personId}
        http_method: DELETE
      header: Delete a Person
      parameters_and_response:
        URI Parameters:
        - doc: A unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get profile details for the authenticated user. This is the same as GET
        /people/{personId} using the Person ID associated with your Auth token.

        Admin users can include Webex Calling (BroadCloud) user details in the response
        by specifying callingData parameter as true.'
      documentation:
        doc: Get My Own Details
        doc_link: https://developer.webex.com/docs/api/v1/people/get-my-own-details
        endpoint: https://webexapis.com/v1/people/me
        http_method: GET
      header: Get My Own Details
      parameters_and_response:
        Query Parameters:
        - doc: Include Webex Calling user details in the response.
          name: callingData
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the person.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email addresses of the person.
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Phone numbers for the person.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work, mobile, fax'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: +1 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The Webex Calling extension for the person. Only applies to a person
            with a Webex Calling license
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person retrieved from BroadCloud.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The nickname of the person if configured. If no nickname is configured
            for the person, this field will not be present.
          name: nickName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of role strings representing the roles to which this admin
            user belongs.
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: An array of license strings allocated to this person.
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The date and time the person was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the person was last changed.
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time zone of the person if configured. If no timezone is configured
            on the account, this field will not be present
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the person's last activity within Webex. This
            will only be returned for people within your organization or an organization
            you manage. Presence information will not be shown if the authenticated
            user has disabled status sharing.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: One or several site names where this user has a role (host or attendee)
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The users sip addresses. Read-only.
          name: sipAddresses
          param_attrs: []
          param_object: []
          type: 'array[{"type": "personal-room","value": "testuser5@mycompany.webex.com","primary":
            false}]'
          type_spec: null
        - doc: The current presence status of the person. This will only be returned
            for people within your organization or an organization you manage. Presence
            information will not be shown if the authenticated user has disabled status
            sharing.
          name: status
          param_attrs:
          - doc: Active within the last 10 minutes
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a call
            name: call
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has manually set their status to "Do Not Disturb"
            name: DoNotDisturb
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last activity occurred more than 10 minutes ago
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a meeting
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user or a Hybrid Calendar service has indicated that they are
              "Out of Office"
            name: OutOfOffice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has never logged in; a status cannot be determined
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is sharing content
            name: presenting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "The user\u2019s status could not be determined"
            name: unknown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not an invite is pending for the user to complete account
            activation. This property is only returned if the authenticated user is
            an admin user for the person's organization.
          name: invitePending
          param_attrs:
          - doc: The person has been invited to Webex but has not created an account
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An invite is not pending for this person
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the user is allowed to use Webex. This property is only
            returned if the authenticated user is an admin user for the person's organization.
          name: loginEnabled
          param_attrs:
          - doc: the person can log into Webex
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: the person cannot log into Webex
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The type of person account, such as person or bot.
          name: type
          param_attrs:
          - doc: Account belongs to a person
            name: person
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a bot user
            name: bot
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a guest user
            name: appuser
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
  Room Tabs:
    doc: 'A Room Tab represents a URL shortcut that is added as a persistent tab to
      a Webex room (space) tab row. Use this API to list tabs of any Webex room that
      you belong to. Room Tabs can also be updated to point to a different content
      URL, or deleted to remove the tab from the room.

      Just like in the Webex app, you must be a member of the room in order to list
      its Room Tabs.'
    header: Room Tabs
    methods:
    - doc: Lists all Room Tabs of a room specified by the roomId query parameter.
      documentation:
        doc: List Room Tabs
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/list-room-tabs
        endpoint: https://webexapis.com/v1/room/tabs
        http_method: GET
      header: List Room Tabs
      parameters_and_response:
        Query Parameters:
        - doc: ID of the room for which to list room tabs.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the Room Tab.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the room containing the room tab.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room type.
            name: roomType
            param_attrs:
            - doc: 1:1 room
              name: direct
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: group room
              name: group
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: User-friendly name for the room tab.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Room Tab's content URL.
            name: contentUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person ID of the person who created this Room Tab.
            name: creatorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time when the Room Tab was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Room Tab]
          type_spec: null
    - doc: Add a tab with a specified URL to a room.
      documentation:
        doc: Create a Room Tab
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/create-a-room-tab
        endpoint: https://webexapis.com/v1/room/tabs
        http_method: POST
      header: Create a Room Tab
      parameters_and_response:
        Body Parameters:
        - doc: A unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: URL of the Room Tab. Must use https protocol.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the room containing the room tab.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room Tab's content URL.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the person who created this Room Tab.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time when the Room Tab was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Get details for a Room Tab with the specified room tab ID.
      documentation:
        doc: Get Room Tab Details
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/get-room-tab-details
        endpoint: https://webexapis.com/v1/room/tabs/{id}
        http_method: GET
      header: Get Room Tab Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the room containing the room tab.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room Tab's content URL.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the person who created this Room Tab.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time when the Room Tab was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Updates the content URL of the specified Room Tab ID.
      documentation:
        doc: Update a Room Tab
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/update-a-room-tab
        endpoint: https://webexapis.com/v1/room/tabs/{id}
        http_method: PUT
      header: Update a Room Tab
      parameters_and_response:
        Body Parameters:
        - doc: ID of the room that contains the room tab in question.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Content URL of the Room Tab. URL must use https protocol.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the room containing the room tab.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room Tab's content URL.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the person who created this Room Tab.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time when the Room Tab was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Deletes a Room Tab with the specified ID.
      documentation:
        doc: Delete a Room Tab
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/delete-a-room-tab
        endpoint: https://webexapis.com/v1/room/tabs/{id}
        http_method: DELETE
      header: Delete a Room Tab
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the Room Tab to delete.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Rooms:
    doc: 'Rooms are virtual meeting places where people post messages and collaborate
      to get work done. This API is used to manage the rooms themselves. Rooms are
      created and deleted with this API. You can also update a room to change its
      title or make it public, for example.

      To create a team room, specify the a teamId in the POST payload. Note that once
      a room is added to a team, it cannot be moved. To learn more about managing
      teams, see the Teams API.

      To manage people in a room see the Memberships API.

      To post content see the Messages API.'
    header: Rooms
    methods:
    - doc: 'List rooms.

        The title of the room for 1:1 rooms will be the display name of the other
        person. When a Compliance Officer lists 1:1 rooms, the "other" person cannot
        be determined. This means that the room''s title may not be filled in. Please
        use the memberships API to list the people in the space.

        By default, lists rooms to which the authenticated user belongs.

        Long result sets will be split into pages.

        Known Limitations:

        The underlying database does not support natural sorting by lastactivity and
        will only sort on limited set of results, which are pulled from the database
        in order of roomId. For users or bots in more than 3000 spaces this can result
        in anomalies such as spaces that have had recent activity not being returned
        in the results when sorting by lastacivity.'
      documentation:
        doc: List Rooms
        doc_link: https://developer.webex.com/docs/api/v1/rooms/list-rooms
        endpoint: https://webexapis.com/v1/rooms
        http_method: GET
      header: List Rooms
      parameters_and_response:
        Query Parameters:
        - doc: List rooms associated with a team, by ID. Cannot be set in combination
            with orgPublicSpaces.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List rooms by type. Cannot be set in combination with orgPublicSpaces.

            Possible values: direct, group'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Shows the org's public spaces joined and unjoined. When set the result
            list is sorted by the madePublic timestamp.
          name: orgPublicSpaces
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Filters rooms, that were made public after this time. See madePublic
            timestamp
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Filters rooms, that were made public before this time. See maePublic
            timestamp
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Sort results. Cannot be set in combination with orgPublicSpaces.

            Possible values: id, lastactivity, created'
          name: sortBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of rooms in the response. Value must be between
            1 and 1000, inclusive.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the room.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A user-friendly name for the room.
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room type.
            name: type
            param_attrs:
            - doc: 1:1 room.
              name: direct
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Group room.
              name: group
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether the room is moderated (locked) or not.
            name: isLocked
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The ID for the team with which this room is associated.
            name: teamId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time of the room's last activity.
            name: lastActivity
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the person who created this room.
            name: creatorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the room was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization which owns this room. See Webex Data in
              the Compliance Guide for more information.
            name: ownerId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Space classification ID represents the space's current classification.  It
              can be attached during space creation time, and can be modified at the
              request of an authorized user.
            name: classificationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates when a space is in Announcement Mode where only moderators
              can post messages
            name: isAnnouncementOnly
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: A compliance officer can set a direct room as read-only, which will
              disallow any new information exchanges in this space, while maintaing
              historical data.
            name: isReadOnly
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The room is public and therefore discoverable within the org. Anyone
              can find and join that room.
            name: isPublic
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Date and time when the room was made public.
            name: madePublic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The description of the space.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Room]
          type_spec: null
    - doc: 'Creates a room. The authenticated user is automatically added as a member
        of the room. See the Memberships API to learn how to add more people to the
        room.

        To create a 1:1 room, use the Create Messages endpoint to send a message directly
        to another person by using the toPersonId or toPersonEmail parameters.

        Bots are not able to create and simultaneously classify a room. A bot may
        update a space classification after a person of the same owning organization
        joined the space as the first human user.

        A space can only be put into announcement mode when it is locked.'
      documentation:
        doc: Create a Room
        doc_link: https://developer.webex.com/docs/api/v1/rooms/create-a-room
        endpoint: https://webexapis.com/v1/rooms
        http_method: POST
      header: Create a Room
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The classificationId for the room.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set the space as locked/moderated and the creator becomes a moderator
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room. When true the description must be filled
            in.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sets the space into announcement Mode.
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the room.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: type
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether the room is moderated (locked) or not.
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the room's last activity.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who created this room.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the room was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization which owns this room. See Webex Data in
            the Compliance Guide for more information.
          name: ownerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Space classification ID represents the space's current classification.  It
            can be attached during space creation time, and can be modified at the
            request of an authorized user.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates when a space is in Announcement Mode where only moderators
            can post messages
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Date and time when the room was made public.
          name: madePublic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a room, by ID.

        The title of the room for 1:1 rooms will be the display name of the other
        person.

        Specify the room ID in the roomId parameter in the URI.'
      documentation:
        doc: Get Room Details
        doc_link: https://developer.webex.com/docs/api/v1/rooms/get-room-details
        endpoint: https://webexapis.com/v1/rooms/{roomId}
        http_method: GET
      header: Get Room Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the room.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: type
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether the room is moderated (locked) or not.
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the room's last activity.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who created this room.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the room was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization which owns this room. See Webex Data in
            the Compliance Guide for more information.
          name: ownerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Space classification ID represents the space's current classification.  It
            can be attached during space creation time, and can be modified at the
            request of an authorized user.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates when a space is in Announcement Mode where only moderators
            can post messages
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Date and time when the room was made public.
          name: madePublic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Shows Webex meeting details for a room such as the SIP address, meeting
        URL, toll-free and toll dial-in numbers.

        Specify the room ID in the roomId parameter in the URI.'
      documentation:
        doc: Get Room Meeting Details
        doc_link: https://developer.webex.com/docs/api/v1/rooms/get-room-meeting-details
        endpoint: https://webexapis.com/v1/rooms/{roomId}/meetingInfo
        http_method: GET
      header: Get Room Meeting Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex meeting URL for the room.
          name: meetingLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The SIP address for the room.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex meeting number for the room.
          name: meetingNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex meeting ID for the room.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The toll-free PSTN number for the room.
          name: callInTollFreeNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The toll (local) PSTN number for the room.
          name: callInTollNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates details for a room, by ID.

        Specify the room ID in the roomId parameter in the URI.

        A space can only be put into announcement mode when it is locked.

        Any space participant or compliance officer can convert a space from public
        to private. Only a compliance officer can convert a space from private to
        public and only if the space is classified with the lowest category (usually
        public), and the space has a description.

        To remove a description please use a space character   by itself.'
      documentation:
        doc: Update a Room
        doc_link: https://developer.webex.com/docs/api/v1/rooms/update-a-room
        endpoint: https://webexapis.com/v1/rooms/{roomId}
        http_method: PUT
      header: Update a Room
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The classificationId for the room.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teamId to which this space should be assigned. Only unowned spaces
            can be assigned to a team. Assignment between teams is unsupported.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set the space as locked/moderated and the creator becomes a moderator
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room. When true the description must be filled
            in.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sets the space into Announcement Mode or clears the Anouncement Mode
            (false)
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the room.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: type
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether the room is moderated (locked) or not.
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the room's last activity.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who created this room.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the room was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization which owns this room. See Webex Data in
            the Compliance Guide for more information.
          name: ownerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Space classification ID represents the space's current classification.  It
            can be attached during space creation time, and can be modified at the
            request of an authorized user.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates when a space is in Announcement Mode where only moderators
            can post messages
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Date and time when the room was made public.
          name: madePublic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a room, by ID. Deleted rooms cannot be recovered.

        As a security measure to prevent accidental deletion, when a non moderator
        deletes the room they are removed from the room instead.

        Deleting a room that is part of a team will archive the room instead.

        Specify the room ID in the roomId parameter in the URI.'
      documentation:
        doc: Delete a Room
        doc_link: https://developer.webex.com/docs/api/v1/rooms/delete-a-room
        endpoint: https://webexapis.com/v1/rooms/{roomId}
        http_method: DELETE
      header: Delete a Room
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Team Memberships:
    doc: 'Team Memberships represent a person''s relationship to a team. Use this
      API to list members of any team that you''re in or create memberships to invite
      someone to a team. Team memberships can also be updated to make someone a moderator
      or deleted to remove them from the team.

      Just like in the Webex app, you must be a member of the team in order to list
      its memberships or invite people.'
    header: Team Memberships
    methods:
    - doc: 'Lists all team memberships for a given team, specified by the teamId query
        parameter.

        Use query parameters to filter the response.'
      documentation:
        doc: List Team Memberships
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/list-team-memberships
        endpoint: https://webexapis.com/v1/team/memberships
        http_method: GET
      header: List Team Memberships
      parameters_and_response:
        Query Parameters:
        - doc: List memberships for a team, by ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Limit the maximum number of team memberships in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the team membership.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The team ID.
            name: teamId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person ID.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the person.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The display name of the person.
            name: personDisplayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The organization ID of the person.
            name: personOrgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the participant is a team moderator.
            name: isModerator
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The date and time when the team membership was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Team Membership]
          type_spec: null
    - doc: Add someone to a team by Person ID or email address, optionally making
        them a moderator.
      documentation:
        doc: Create a Team Membership
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/create-a-team-membership
        endpoint: https://webexapis.com/v1/team/memberships
        http_method: POST
      header: Create a Team Membership
      parameters_and_response:
        Body Parameters:
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the team membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a team membership, by ID.

        Specify the team membership ID in the membershipId URI parameter.'
      documentation:
        doc: Get Team Membership Details
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/get-team-membership-details
        endpoint: https://webexapis.com/v1/team/memberships/{membershipId}
        http_method: GET
      header: Get Team Membership Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the team membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the team membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates a team membership, by ID.

        Specify the team membership ID in the membershipId URI parameter.'
      documentation:
        doc: Update a Team Membership
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/update-a-team-membership
        endpoint: https://webexapis.com/v1/team/memberships/{membershipId}
        http_method: PUT
      header: Update a Team Membership
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the team membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the team membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a team membership, by ID.

        Specify the team membership ID in the membershipId URI parameter.

        The team membership for the last moderator of a team may not be deleted; promote
        another user to team moderator first.'
      documentation:
        doc: Delete a Team Membership
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/delete-a-team-membership
        endpoint: https://webexapis.com/v1/team/memberships/{membershipId}
        http_method: DELETE
      header: Delete a Team Membership
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the team membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Teams:
    doc: 'Teams are groups of people with a set of rooms that are visible to all members
      of that team. This API is used to manage the teams themselves. Teams are created
      and deleted with this API. You can also update a team to change its name, for
      example.

      To manage people in a team see the Team Memberships API.

      To manage team rooms see the Rooms API.'
    header: Teams
    methods:
    - doc: Lists teams to which the authenticated user belongs.
      documentation:
        doc: List Teams
        doc_link: https://developer.webex.com/docs/api/v1/teams/list-teams
        endpoint: https://webexapis.com/v1/teams
        http_method: GET
      header: List Teams
      parameters_and_response:
        Query Parameters:
        - doc: Limit the maximum number of teams in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the team.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A user-friendly name for the team.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The teams description.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the team was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Team]
          type_spec: null
    - doc: 'Creates a team.

        The authenticated user is automatically added as a member of the team. See
        the Team Memberships API to learn how to add more people to the team.'
      documentation:
        doc: Create a Team
        doc_link: https://developer.webex.com/docs/api/v1/teams/create-a-team
        endpoint: https://webexapis.com/v1/teams
        http_method: POST
      header: Create a Team
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the team was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a team, by ID.

        Specify the team ID in the teamId parameter in the URI.'
      documentation:
        doc: Get Team Details
        doc_link: https://developer.webex.com/docs/api/v1/teams/get-team-details
        endpoint: https://webexapis.com/v1/teams/{teamId}
        http_method: GET
      header: Get Team Details
      parameters_and_response:
        Query Parameters:
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the team was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates details for a team, by ID.

        Specify the team ID in the teamId parameter in the URI.'
      documentation:
        doc: Update a Team
        doc_link: https://developer.webex.com/docs/api/v1/teams/update-a-team
        endpoint: https://webexapis.com/v1/teams/{teamId}
        http_method: PUT
      header: Update a Team
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the team was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a team, by ID.

        Specify the team ID in the teamId parameter in the URI.'
      documentation:
        doc: Delete a Team
        doc_link: https://developer.webex.com/docs/api/v1/teams/delete-a-team
        endpoint: https://webexapis.com/v1/teams/{teamId}
        http_method: DELETE
      header: Delete a Team
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the team.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Tracking Codes:
    doc: null
    header: null
    methods: []
  Webhooks:
    doc: 'For Webex for Government (FedRAMP), the following resource types are not
      available for Webhooks: meetings, recordings, meetingParticipants, and meetingTranscripts.

      Webhooks allow your app to be notified via HTTP when a specific event occurs
      in Webex. For example, your app can register a webhook to be notified when a
      new message is posted into a specific room.

      Events trigger in near real-time allowing your app and backend IT systems to
      stay in sync with new content and room activity.

      Check The Webhooks Guide and our blog regularly for announcements of additional
      webhook resources and event types.

      Long result sets will be split into pages.'
    header: Webhooks
    methods:
    - doc: List all of your webhooks.
      documentation:
        doc: List Webhooks
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/list-webhooks
        endpoint: https://webexapis.com/v1/webhooks
        http_method: GET
      header: List Webhooks
      parameters_and_response:
        Query Parameters:
        - doc: Limit the maximum number of webhooks in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Limit the result list to org wide webhooks. Only allowed value is org.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the webhook.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A user-friendly name for the webhook.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The URL that receives POST requests for each event.
            name: targetUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The resource type for the webhook. Creating a webhook requires 'read'
              scope on the resource the webhook is for.
            name: resource
            param_attrs:
            - doc: The Attachment Actions resource.
              name: attachmentActions
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Memberships resource.
              name: memberships
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Messages resource.
              name: messages
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Rooms resource.
              name: rooms
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Meetings resource.
              name: meetings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Recordings resource.
              name: recordings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Meeting Participants resource.
              name: meetingParticipants
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Meeting Transcripts resource.
              name: meetingTranscripts
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The event type for the webhook.
            name: event
            param_attrs:
            - doc: An object was created.
              name: created
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An object was updated.
              name: updated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An object was deleted.
              name: deleted
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A meeting was started.
              name: started
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A meeting was ended.
              name: ended
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A participant joined.
              name: joined
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A participant left.
              name: left
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A room was migrated to a different geography. The roomId has changed.
              name: migrated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The filter that defines the webhook scope.
            name: filter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The secret used to generate payload signature.
            name: secret
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The status of the webhook. Use active to reactivate a disabled webhook.
            name: status
            param_attrs:
            - doc: The webhook is active.
              name: active
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The webhook is inactive.
              name: inactive
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The date and time the webhook was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Specified when creating an org/admin level webhook.
            name: ownedBy
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Webhook]
          type_spec: null
    - doc: 'Creates a webhook.

        To learn more about how to create and use webhooks, see The Webhooks Guide.'
      documentation:
        doc: Create a Webhook
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/create-a-webhook
        endpoint: https://webexapis.com/v1/webhooks
        http_method: POST
      header: Create a Webhook
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object is created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object is updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object is deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting is started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting is ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A room was migrated to a different geography. The roomId has changed.
            name: migrated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: The filter that defines the webhook scope. See Filtering Webhooks for
            more information.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook. Supported for meetings,
            recordings, meetingParticipants, and meetingTranscripts resources.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the webhook.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A room was migrated to a different geography. The roomId has changed.
            name: migrated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The filter that defines the webhook scope.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use active to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: The webhook is active.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The webhook is inactive.
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The date and time the webhook was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a webhook, by ID.

        Specify the webhook ID in the webhookId parameter in the URI.'
      documentation:
        doc: Get Webhook Details
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/get-webhook-details
        endpoint: https://webexapis.com/v1/webhooks/{webhookId}
        http_method: GET
      header: Get Webhook Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the webhook.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A room was migrated to a different geography. The roomId has changed.
            name: migrated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The filter that defines the webhook scope.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use active to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: The webhook is active.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The webhook is inactive.
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The date and time the webhook was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the webhook.
          name: webhookId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: "Updates a webhook, by ID. You cannot use this call to deactivate a webhook,\
        \ only to activate a webhook that was auto deactivated. \nThe fields that\
        \ can be updated are name, targetURL, secret and status. All other fields,\
        \ if supplied, are ignored.\nSpecify the webhook ID in the webhookId parameter\
        \ in the URI."
      documentation:
        doc: Update a Webhook
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/update-a-webhook
        endpoint: https://webexapis.com/v1/webhooks/{webhookId}
        http_method: PUT
      header: Update a Webhook
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook. Supported for meetings,
            recordings, meetingParticipants and meetingTranscripts resources.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use "active" to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: ''
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the webhook.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A room was migrated to a different geography. The roomId has changed.
            name: migrated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The filter that defines the webhook scope.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use active to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: The webhook is active.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The webhook is inactive.
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The date and time the webhook was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the webhook.
          name: webhookId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a webhook, by ID.

        Specify the webhook ID in the webhookId parameter in the URI.'
      documentation:
        doc: Delete a Webhook
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/delete-a-webhook
        endpoint: https://webexapis.com/v1/webhooks/{webhookId}
        http_method: DELETE
      header: Delete a Webhook
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the webhook.
          name: webhookId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
