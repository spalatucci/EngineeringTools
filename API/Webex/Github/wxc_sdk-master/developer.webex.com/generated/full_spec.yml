# command: developer.webex.com/read_api_spec.py --no_ignore -s "Full API Reference" -f developer.webex.com/generated/full_spec.yml
docs:
  Admin Audit Events:
    doc: 'Admin Audit Events are available to full administrators for certain events
      performed in Webex Control Hub.

      Administrators with accounts created before 2019 who have never logged into
      Webex Control Hub will need to log into Webex Control Hub at least once to enable
      access to this API.

      An administrator account with the audit:events_read scope is required to use
      this API.'
    header: Admin Audit Events
    methods:
    - doc: 'List admin audit events in your organization. Several query parameters
        are available to filter the response.

        Long result sets will be split into pages.

        NOTE: A maximum of one year of audit events can be returned per request.'
      documentation:
        doc: List Admin Audit Events
        doc_link: https://developer.webex.com/docs/api/v1/admin-audit-events/list-admin-audit-events
        endpoint: https://webexapis.com/v1/adminAudit/events
        http_method: GET
      header: List Admin Audit Events
      parameters_and_response:
        Query Parameters:
        - doc: List events in this organization, by ID.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: List events which occurred after a specific date and time.
          name: from
          param_attrs: []
          param_object: []
          type: ''
          type_spec: required
        - doc: List events which occurred before a specific date and time.
          name: to
          param_attrs: []
          param_object: []
          type: ''
          type_spec: required
        - doc: List events performed by this person, by ID.
          name: actorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of events in the response. The maximum value
            is 200.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Offset from the first result that you want to fetch.
          name: offset
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: List events, by event categories.
          name: eventCategories
          param_attrs: []
          param_object: []
          type: list
          type_spec: null
        Response Properties:
        - doc: An array of audit event objects. See this article for details about
            each event type.
          name: items
          param_attrs:
          - doc: ''
            name: data
            param_attrs: []
            param_object:
            - doc: The display name of the organization.
              name: actorOrgName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The name of the resource being acted upon.
              name: targetName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A description for the event.
              name: eventDescription
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The name of the person who performed the action.
              name: actorName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The email of the person who performed the action.
              name: actorEmail
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Admin roles for the person.
              name: adminRoles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            - doc: A tracking identifier for the event.
              name: trackingId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The type of resource changed by the event.
              name: targetType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The identifier for the resource changed by the event.
              name: targetId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The category of resource changed by the event.
              name: eventCategory
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The browser user agent of the person who performed the action.
              name: actorUserAgent
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The IP address of the person who performed the action.
              name: actorIp
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The orgId of the organization.
              name: targetOrgId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A more detailed description of the change made by the person.
              name: actionText
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The name of the organization being acted upon.
              name: targetOrgName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          - doc: The date and time the event took place.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The orgId of the person who made the change.
            name: actorOrgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the event.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The personId of the person who made the change.
            name: actorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Audit Event]
          type_spec: null
    - doc: Get the list of all admin event categories.
      documentation:
        doc: List Admin Audit Event Categories
        doc_link: https://developer.webex.com/docs/api/v1/admin-audit-events/list-admin-audit-event-categories
        endpoint: https://webexapis.com/v1/adminAudit/eventCategories
        http_method: GET
      header: List Admin Audit Event Categories
      parameters_and_response:
        Response Properties:
        - doc: An array of audit event categories.
          name: eventCategories
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
  Attachment Actions:
    doc: Users create attachment actions by interacting with message attachments such
      as clicking on a submit button in a card.
    header: Attachment Actions
    methods:
    - doc: Create a new attachment action.
      documentation:
        doc: Create an Attachment Action
        doc_link: https://developer.webex.com/docs/api/v1/attachment-actions/create-an-attachment-action
        endpoint: https://webexapis.com/v1/attachment/actions
        http_method: POST
      header: Create an Attachment Action
      parameters_and_response:
        Body Parameters:
        - doc: 'The type of action to perform.

            '
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ID of the message which contains the attachment.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The attachment action's inputs.
          name: inputs
          param_attrs:
          - doc: ''
            name: Name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Url
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Tel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the action.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who performed the action.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the room in which the action was performed.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The type of action performed.

            '
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The parent message on which the attachment action was performed.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The action's inputs.
          name: inputs
          param_attrs: []
          param_object:
          - doc: ''
            name: Name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Url
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Tel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: The date and time the action was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a attachment action, by ID.

        Specify the attachment action ID in the id URI parameter.'
      documentation:
        doc: Get Attachment Action Details
        doc_link: https://developer.webex.com/docs/api/v1/attachment-actions/get-attachment-action-details
        endpoint: https://webexapis.com/v1/attachment/actions/{id}
        http_method: GET
      header: Get Attachment Action Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the action.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who performed the action.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the room in which the action was performed.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The type of action performed.

            '
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The parent message on which the attachment action was performed.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The action's inputs.
          name: inputs
          param_attrs: []
          param_object:
          - doc: ''
            name: Name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Url
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Tel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: The date and time the action was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the attachment action.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Authorizations:
    doc: 'Admin API. You need full or user level admin privileges to call this API.

      Authorizations are user grants to applications to act on the user''s behalf.
      Authorizations are how Integrations get authorized with specific access scopes
      in the oAuth client life-cycle. Integrations and some of the Webex service portals,
      like developer.webex.com, are all oAuth clients.

      Your application receives an API access token and a refresh token through the
      oAuth process. The access token is used to call Webex APIs for which the user
      authorized the scopes. Access tokens expire fairly frequently, while refresh
      tokens (when being regularly used) will be refreshed to last forever (see Using
      the Refresh Token for details).

      In this API an authorization is synonymous with an API access token.

      To provide admins with fine-grained token management control, you use the /authorizations
      API with

      the DELETE HTTP method to revoke access and refresh tokens.

      Deleting a refresh token will revoke all associated access tokens as well. Deleting
      an access token will revoke the developers ability to call the APIs with it.

      Webex subsystems may cache the validity of the token for a short while longer
      after the authorization was deleted.

      Admins can revoke user authorizations for users in their organization.

      To use the authorizations API in an Integration the scopes must include: identity:tokens_write,identity:tokens_read.'
    header: Authorizations
    methods:
    - doc: Lists all authorizations for a user. Either personId or personEmail must
        be provided. This API does not support pagination.
      documentation:
        doc: List authorizations for a user
        doc_link: https://developer.webex.com/docs/api/v1/authorizations/list-authorizations-for-a-user
        endpoint: https://webexapis.com/v1/authorizations
        http_method: GET
      header: List authorizations for a user
      parameters_and_response:
        Query Parameters:
        - doc: List authorizations for this user id.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: List authorizations for this user email.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique authorization identifier.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The unique identifier for the application.
            name: applicationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The name of the Integration.
            name: applicationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The unique oAuth client id.
            name: clientId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the authorization was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of token associated with the authorization.
            name: type
            param_attrs:
            - doc: refresh authorization used to create access tokens
              name: refresh
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: access token authorization
              name: access
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[Authorization]
          type_spec: null
    - doc: 'Deletes an authorization, by authorization ID.

        Specify the authorization Id in the authorizationId parameter in the URI which
        was listed in the list resource.'
      documentation:
        doc: Delete authorization
        doc_link: https://developer.webex.com/docs/api/v1/authorizations/delete-authorization
        endpoint: https://webexapis.com/v1/authorizations/{authorizationId}
        http_method: DELETE
      header: Delete authorization
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the message.
          name: authorizationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Deletes an authorization, by org ID and client ID.
      documentation:
        doc: Delete authorization of org and client ID
        doc_link: https://developer.webex.com/docs/api/v1/authorizations/delete-authorization-of-org-and-client-id
        endpoint: https://webexapis.com/v1/authorizations
        http_method: DELETE
      header: Delete authorization of org and client ID
      parameters_and_response:
        Query Parameters:
        - doc: The unique oAuth client id.
          name: clientId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ID of the organization to which this person belongs.  If no orgId
            is specified, use orgId from the OAuth token.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
  BroadWorks Billing Reports:
    doc: "These are a set of APIs that are specifically targeted at BroadWorks Service\
      \ Providers who sign up to the Webex for \nBroadWorks solution. These APIs helps\
      \ Service Providers to generate monthly billing reports with user billing data.\
      \ Service Providers can use these reports to reconcile their monthly invoice.\
      \ Please note\nthese APIs require a functional BroadWorks system configured\
      \ for Webex for BroadWorks. Read more about using this API\nat https://www.cisco.com/go/WebexBroadworksAPI.\n\
      Viewing Webex for BroadWorks billing reports information requires a partner\
      \ administrator auth token with spark-admin:broadworks_billing_reports_read\
      \ scope. Creating, Deleting billing reports require a partner administrator\
      \ auth token with spark-admin:broadworks_billing_reports_write scope."
    header: BroadWorks Billing Reports
    methods:
    - doc: Search for reports. There are a number of filter options which can be combined
        in a single request.
      documentation:
        doc: List BroadWorks Billing Reports
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-billing-reports/list-broadworks-billing-reports
        endpoint: https://webexapis.com/v1/broadworks/billing/reports
        http_method: GET
      header: List BroadWorks Billing Reports
      parameters_and_response:
        Query Parameters:
        - doc: Only include billing reports created before this date.
          name: before
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only include billing reports created after this date.
          name: after
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Sort the reports.

            * Members: id status billingPeriod'
          name: sortBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of reports objects.
          name: items
          param_attrs:
          - doc: A unique report ID that corresponds to a billing report.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The year and month (YYYY-MM) for which the billing report was generated.
            name: billingPeriod
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The status of the billing report.
            name: status
            param_attrs:
            - doc: Report generation is in progress.
              name: IN_PROGRESS
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Report generation is complete.
              name: COMPLETED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Report generation failed.
              name: FAILED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[ListReport]
          type_spec: null
    - doc: Retrieve a specific billing reconciliation report.
      documentation:
        doc: Get a BroadWorks Billing Report
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-billing-reports/get-a-broadworks-billing-report
        endpoint: https://webexapis.com/v1/broadworks/billing/reports/{id}
        http_method: GET
      header: Get a BroadWorks Billing Report
      parameters_and_response:
        Response Properties:
        - doc: A unique report ID that corresponds to a billing report.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The year and month (YYYY-MM) for which the billing report was generated.
          name: billingPeriod
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the billing report.
          name: status
          param_attrs:
          - doc: Report generation is in progress.
            name: IN_PROGRESS
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Report generation is complete.
            name: COMPLETED
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Report generation failed.
            name: FAILED
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The date and time the report was generated.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the partner administrator who created the report.
          name: createdBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL for partners to download the billing report.
          name: tempDownloadURL
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List of errors that occurred during report generation.

            Note:

            * Captures errors that occurred during asynchronous or background report
            generation, after the request has been accepted and a  202 OK  response
            is returned.'
          name: errors
          param_attrs:
          - doc: The error code itself.
            name: code
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A textual representation of the error code.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Report Error]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the report in request.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Generate a monthly reconciliation report.
      documentation:
        doc: Create a BroadWorks Billing Report
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-billing-reports/create-a-broadworks-billing-report
        endpoint: https://webexapis.com/v1/broadworks/billing/reports
        http_method: POST
      header: Create a BroadWorks Billing Report
      parameters_and_response:
        Body Parameters:
        - doc: The year and month (YYYY-MM) for which the billing report is to be
            generated.
          name: billingPeriod
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: A unique report ID that corresponds to a billing report.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Delete a monthly reconciliation report using a report ID.
      documentation:
        doc: Delete a BroadWorks Billing Report
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-billing-reports/delete-a-broadworks-billing-report
        endpoint: https://webexapis.com/v1/broadworks/billing/reports/{id}
        http_method: DELETE
      header: Delete a BroadWorks Billing Report
      parameters_and_response:
        URI Parameters:
        - doc: A unique report ID that corresponds to a billing report.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  BroadWorks Device Provisioning:
    doc: 'Not supported for Webex for Government (FedRAMP)

      These are a set of APIs that are specifically targeted at BroadWorks Service
      Providers who sign up to the Webex for

      BroadWorks solution. They enable Service Providers to provision Cisco Webex
      Services for their workspaces. Please note these APIs require a

      functional BroadWorks system configured for Webex for BroadWorks. Read more
      about using this API at

      https://www.cisco.com/go/WebexBroadworksAPI.

      Provisioning, updating, and removing workspaces requires an administrator auth
      token with the

      spark-admin:places_write scope.'
    header: Broadworks Workspace
    methods:
    - doc: 'Provision a new BroadWorks workspace for Cisco Webex services.

        This API allows a Service Provider to provision a workspace for an existing
        customer.'
      documentation:
        doc: Provision a BroadWorks Workspace
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-device-provisioning/provision-a-broadworks-workspace
        endpoint: https://webexapis.com/v1/broadworks/workspaces
        http_method: POST
      header: Provision a BroadWorks Workspace
      parameters_and_response:
        Body Parameters:
        - doc: Provisioning ID that defines how this workspace is to be provisioned
            for Cisco Webex Services. Each Customer Template will have their own unique
            Provisioning ID. This ID will be displayed under the chosen Customer Template
            on Cisco Webex Control Hub.
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The user ID of the workspace on BroadWorks.
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The Service Provider supplied unique identifier for the workspace's
            enterprise.
          name: spEnterpriseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The display name of the workspace.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The primary phone number configured against the workspace on BroadWorks.
          name: primaryPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The extension number configured against the workspace on BroadWorks.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Provisioning ID that defines how this workspace is to be provisioned
            for Cisco Webex Services. Each Customer Template will have their own unique
            Provisioning ID. This ID will be displayed under the chosen Customer Template
            on Cisco Webex Control Hub.
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The user ID of the workspace on BroadWorks.
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Service Provider supplied unique identifier for the workspace's
            enterprise.
          name: spEnterpriseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the workspace.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The primary phone number configured against the workspace on BroadWorks.
          name: primaryPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The extension number configured against the workspace on BroadWorks.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique Cisco identifier for the workspace.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the workspace was provisioned.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Update certain details of a provisioned BroadWorks workspace on Cisco Webex.
      documentation:
        doc: Update a Broadworks Workspace
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-device-provisioning/update-a-broadworks-workspace
        endpoint: https://webexapis.com/v1/broadworks/workspaces/{workspaceId}
        http_method: PUT
      header: Update a Broadworks Workspace
      parameters_and_response:
        Body Parameters:
        - doc: The user ID of the workspace on BroadWorks.
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The primary phone number configured against the workspace on BroadWorks.
          name: primaryPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The extension number configured against the workspace on BroadWorks.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Provisioning ID that defines how this workspace is to be provisioned
            for Cisco Webex Services. Each Customer Template will have their own unique
            Provisioning ID. This ID will be displayed under the chosen Customer Template
            on Cisco Webex Control Hub.
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The user ID of the workspace on BroadWorks.
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Service Provider supplied unique identifier for the workspace's
            enterprise.
          name: spEnterpriseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the workspace.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The primary phone number configured against the workspace on BroadWorks.
          name: primaryPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The extension number configured against the workspace on BroadWorks.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique Cisco identifier for the workspace.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the workspace was provisioned.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique Cisco identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Remove the mapping between a BroadWorks workspace and Cisco Webex device.
      documentation:
        doc: Remove a BroadWorks Workspace
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-device-provisioning/remove-a-broadworks-workspace
        endpoint: https://webexapis.com/v1/broadworks/workspaces/{workspaceId}
        http_method: DELETE
      header: Remove a BroadWorks Workspace
      parameters_and_response:
        URI Parameters:
        - doc: A unique Cisco identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  BroadWorks Enterprises:
    doc: 'Not supported for Webex for Government (FedRAMP)

      These are a set of APIs that are specifically targeted at BroadWorks Service
      Providers who sign up to the Webex for

      BroadWorks solution. They enable Service Providers to provision Webex Services
      for their subscribers. Please note

      these APIs require a functional BroadWorks system configured for Webex for BroadWorks.
      Read more about using this API

      at https://www.cisco.com/go/WebexBroadworksAPI.

      Viewing Webex for BroadWorks enterprise information requires an administrator
      auth token with spark-admin:broadworks_enterprises_read scope.

      Updating directory sync configuration or trigger directory sync for a Webex
      for BroadWorks enterprise require an administrator auth token with spark-admin:broadworks_enterprises_write
      scope.'
    header: BroadWorks Enterprises
    methods:
    - doc: List the provisioned enterprises for a Service Provider. This API also
        lets a Service Provider search for their provisioned enterprises on Webex.
        A search on enterprises can be performed by either a full or partial enterprise
        identifier.
      documentation:
        doc: List BroadWorks Enterprises
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-enterprises/list-broadworks-enterprises
        endpoint: https://webexapis.com/v1/broadworks/enterprises
        http_method: GET
      header: List BroadWorks Enterprises
      parameters_and_response:
        Query Parameters:
        - doc: The Service Provider supplied unique identifier for the subscriber's
            enterprise.
          name: spEnterpriseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The starting string of the enterprise identifiers to match against.
          name: startsWith
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of enterprises returned in the search, up to 1000.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: A unique Cisco identifier for the enterprise.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Organization ID of the enterprise on Webex.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Provisioning ID associated with the enterprise.
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Service Provider supplied unique identifier for the subscriber's
            enterprise.
          name: spEnterpriseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: BroadWorks Directory sync
          name: broadworksDirectorySync
          param_attrs: []
          param_object:
          - doc: The toggle to enable/disable directory sync.
            name: enableDirSync
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Directory sync status
            name: directorySyncStatus
            param_attrs: []
            param_object:
            - doc: The start date and time of the last sync.
              name: lastSyncStartTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The end date and time of the last sync.
              name: lastSyncEndTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The sync status of the enterprise.
              name: syncStatus
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The number of users added to Common Identity (CI) in this sync.
              name: usersAdded
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of users updated in Common Identity (CI) in this sync.
              name: usersUpdated
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of users deleted from Common Identity (CI) in this sync.
              name: usersDeleted
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of machines added to Common Identity (CI) in this sync.
              name: machinesAdded
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of machines updated in Common Identity (CI) in this
                sync.
              name: machinesUpdated
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of machines deleted from Common Identity (CI) in this
                sync.
              name: machinesDeleted
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of total external users that have been added to CI across
                all syncs.
              name: totalExternalUsersInCI
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of total external machines that have been added to Common
                Identity (CI) across all syncs.
              name: totalExternalMachinesInCI
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The date and time of the last successful sync.
              name: lastSuccessfulSyncTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Unique tracking identifier.
              name: lastSyncTrackingId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: List of errors that occurred during that last attempt to sync this
                BroadWorks enterprise. This list captures errors that occurred during
                directory sync of the BroadWorks enterprise, after the API has been
                accepted and 200 OK response returned. Any errors that occur during
                initial API request validation will be captured directly in error
                response with appropriate HTTP status code.
              name: errors
              param_attrs:
              - doc: 'An error code that identifies the reason for the error

                  Possible values: 6003'
                name: errorCode
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: 'A textual representation of the error code.

                  Possible values: Broadworks External Directory User Sync failed
                  while trying to connect to Broadworks cluster.'
                name: description
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The number of user contacts added to Contact service in this sync.
              name: userContactsAdded
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of user contacts updated in Contact service in this
                sync.
              name: userContactsUpdated
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of user contacts deleted from Contact service in this
                sync.
              name: userContactsDeleted
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of org contacts added to Contact service in this sync.
              name: orgContactsAdded
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of org contacts updated in Contact service in this sync.
              name: orgContactsUpdated
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of org contacts deleted from Contact service in this
                sync.
              name: orgContactsDeleted
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The total number of user contacts in Contact service.
              name: totalUserContactsInContactService
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The total number of org contacts in Contact service.
              name: totalOrgContactsInContactService
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
    - doc: This API lets a Partner Admin enable or disable directory sync for the
        customer's Broadworks enterprise on Webex.
      documentation:
        doc: Update Directory Sync for a BroadWorks Enterprise
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-enterprises/update-directory-sync-for-a-broadworks-enterprise
        endpoint: https://webexapis.com/v1/broadworks/enterprises/{id}/broadworksDirectorySync
        http_method: PUT
      header: Update Directory Sync for a BroadWorks Enterprise
      parameters_and_response:
        Body Parameters:
        - doc: The toggle to enable/disable directory sync.
          name: enableDirSync
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Response Properties:
        - doc: The toggle to enable/disable directory sync.
          name: enableDirSync
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Directory sync status
          name: directorySyncStatus
          param_attrs: []
          param_object:
          - doc: The sync status of the enterprise.
            name: syncStatus
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the enterprise in question.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: This API lets a Partner Admin trigger a directory sync for the customer's
        Broadworks enterprise on Webex.
      documentation:
        doc: Trigger Directory Sync for an Enterprise
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-enterprises/trigger-directory-sync-for-an-enterprise
        endpoint: https://webexapis.com/v1/broadworks/enterprises/{id}/broadworksDirectorySync
        http_method: POST
      header: Trigger Directory Sync for an Enterprise
      parameters_and_response:
        Body Parameters:
        - doc: At this time, the only value allowed for this attribute is SYNC_NOW
            which will trigger the directory sync for the BroadWorks enterprise.
          name: syncStatus
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: The toggle that enabled the directory sync.
          name: enableDirSync
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Directory sync status
          name: directorySyncStatus
          param_attrs: []
          param_object:
          - doc: The sync status of the enterprise.
            name: syncStatus
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the enterprise in question.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: This API lets a Partner Admin get the most recent directory sync status
        for a customer's Broadworks enterprise on Webex.
      documentation:
        doc: Get Directory Sync Status for an Enterprise
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-enterprises/get-directory-sync-status-for-an-enterprise
        endpoint: https://webexapis.com/v1/broadworks/enterprises/{id}/broadworksDirectorySync
        http_method: GET
      header: Get Directory Sync Status for an Enterprise
      parameters_and_response:
        Response Properties:
        - doc: The toggle to enable/disable directory sync.
          name: enableDirSync
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Directory sync status
          name: directorySyncStatus
          param_attrs: []
          param_object:
          - doc: The start date and time of the last sync.
            name: lastSyncStartTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The end date and time of the last sync.
            name: lastSyncEndTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The sync status of the enterprise.
            name: syncStatus
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The number of users added to Common Identity (CI) in this sync.
            name: usersAdded
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of users updated in Common Identity (CI) in this sync.
            name: usersUpdated
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of users deleted from Common Identity (CI) in this sync.
            name: usersDeleted
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of machines added to Common Identity (CI) in this sync.
            name: machinesAdded
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of machines updated in Common Identity (CI) in this sync.
            name: machinesUpdated
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of machines deleted from Common Identity (CI) in this
              sync.
            name: machinesDeleted
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of total external users that have been added to CI across
              all syncs.
            name: totalExternalUsersInCI
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of total external machines that have been added to Common
              Identity (CI) across all syncs.
            name: totalExternalMachinesInCI
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The date and time of the last successful sync.
            name: lastSuccessfulSyncTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique tracking identifier.
            name: lastSyncTrackingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: List of errors that occurred during that last attempt to sync this
              BroadWorks enterprise. This list captures errors that occurred during
              directory sync of the BroadWorks enterprise, after the API has been
              accepted and 200 OK response returned. Any errors that occur during
              initial API request validation will be captured directly in error response
              with appropriate HTTP status code.
            name: errors
            param_attrs:
            - doc: 'An error code that identifies the reason for the error

                Possible values: 6003'
              name: errorCode
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: 'A textual representation of the error code.

                Possible values: Broadworks External Directory User Sync failed while
                trying to connect to Broadworks cluster.'
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: The number of user contacts added to Contact service in this sync.
            name: userContactsAdded
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of user contacts updated in Contact service in this sync.
            name: userContactsUpdated
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of user contacts deleted from Contact service in this
              sync.
            name: userContactsDeleted
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of org contacts added to Contact service in this sync.
            name: orgContactsAdded
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of org contacts updated in Contact service in this sync.
            name: orgContactsUpdated
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of org contacts deleted from Contact service in this sync.
            name: orgContactsDeleted
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The total number of user contacts in Contact service.
            name: totalUserContactsInContactService
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The total number of org contacts in Contact service.
            name: totalOrgContactsInContactService
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the enterprise in question.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: This API lets a Partner Admin trigger a directory sync for an external
        user (real or virtual user) on Broadworks enterprise with Webex.
      documentation:
        doc: Trigger Directory Sync for a User
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-enterprises/trigger-directory-sync-for-a-user
        endpoint: https://webexapis.com/v1/broadworks/enterprises/{id}/broadworksDirectorySync/externalUser
        http_method: POST
      header: Trigger Directory Sync for a User
      parameters_and_response:
        Body Parameters:
        - doc: The user ID of the Broadworks user to be synced (A non-webex user).
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: User Directory sync response
          name: userResponse
          param_attrs: []
          param_object:
          - doc: The UserID of the user on Broadworks (A non-webex user).
            name: userId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of the user on Broadworks.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of the user on Broadworks.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Extension of the user on Broadworks.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number of the user on Broadworks.
            name: number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Mobile number of the user on Broadworks.
            name: mobile
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: The Status of the operation being performed.
          name: status
          param_attrs:
          - doc: The external user is added in this sync
            name: ADD
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The external user is updated in this sync
            name: UPDATE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The external user is deleted in this sync
            name: DELETE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: No changes made on the external user in this sync
            name: NO_OPERATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the enterprise in question.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  BroadWorks Subscribers:
    doc: 'These are a set of APIs that are specifically targeted at BroadWorks Service
      Providers who sign up to the Webex for

      BroadWorks solution. They enable Service Providers to provision Webex Services
      for their subscribers. Please note

      these APIs require a functional BroadWorks system configured for Webex for BroadWorks.
      Read more about using this API

      at https://www.cisco.com/go/WebexBroadworksAPI.

      Viewing Webex for BroadWorks subscriber information requires an administrator
      auth token with spark-admin:broadworks_subscribers_read scope. Provisioning,
      updating, and removing subscribers requires an administrator auth token with
      the spark-admin:broadworks_subscribers_write scope.

      Additional Infocodes are given for all success cases. To learn more about the
      Infocodes used in Broadworks Subscriber Provisioning Precheck APIs, see the
      Provisioning Precheck API Info Codes guides.'
    header: BroadWorks Subscribers
    methods:
    - doc: This API lets a Service Provider search for their associated subscribers.
        There are a number of filter options that can be combined in a single request.
      documentation:
        doc: List BroadWorks Subscribers
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-subscribers/list-broadworks-subscribers
        endpoint: https://webexapis.com/v1/broadworks/subscribers
        http_method: GET
      header: List BroadWorks Subscribers
      parameters_and_response:
        Query Parameters:
        - doc: The user ID of the subscriber on BroadWorks.
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Person ID of the Webex subscriber.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the subscriber.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Provisioning ID associated with this subscriber.
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Service Provider supplied unique identifier for the subscriber's
            enterprise.
          name: spEnterpriseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only include subscribers with a provisioning status change after this
            date and time. Epoch time (in milliseconds) preferred, but ISO 8601 date
            format also accepted.
          name: lastStatusChange
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The provisioning status of the subscriber. This Parameter supports
            multiple comma separated values. For example : status=error,provisioned,provisioning.

            Possible values: pending_email_input, pending_email_validation, pending_user_migration,
            provisioning, provisioned, updating, error'
          name: status
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only include subscribers created after this date and time. Epoch time
            (in milliseconds) preferred, but ISO 8601 date format also accepted.
          name: after
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates if the subscriber was self activated, rather than provisioned
            via these APIs.
          name: selfActivated
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Limit the maximum number of subscribers returned in the search response,
            up to 100 per page. Refer to the Pagination section of Webex REST API
            Basics.
          name: max
          param_attrs: []
          param_object: []
          type: integer
          type_spec: null
        Response Properties:
        - doc: An array of Subscriber objects.
          name: items
          param_attrs:
          - doc: A unique Cisco identifier for the subscriber.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Person Id of the subscriber on Webex. To be used when referencing
              this subscriber on other Webex APIs. Only presented when status is provisioned.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user ID of the subscriber on BroadWorks.
            name: userId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Service Provider supplied unique identifier for the subscriber's
              enterprise.
            name: spEnterpriseId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The first name of the subscriber.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The last name of the subscriber.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the subscriber.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The primary phone number configured against the subscriber on BroadWorks.
            name: primaryPhoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The mobile phone number configured against the subscriber on BroadWorks.
            name: mobilePhoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The extension number configured against the subscriber on BroadWorks.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Webex for BroadWorks Package assigned to the subscriber.
            name: package
            param_attrs:
            - doc: Softphone package.
              name: softphone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Basic package.
              name: basic
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Standard package.
              name: standard
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Premium package.
              name: premium
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The provisioning status of the user.
            name: status
            param_attrs:
            - doc: Subscriber Provisioning is paused, pending input of email address.
              name: pending_email_input
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Subscriber Provisioning is paused. The subscriber has entered an
                email address but has yet to complete validation.
              name: pending_email_validation
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Subscriber Provisioning is paused. An automated email is sent to
                the subscriber, waiting for the subscriber's consent.
              name: pending_user_migration
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Subscriber provisioning is in progress.
              name: provisioning
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The subscriber is fully provisioned on Webex.
              name: provisioned
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An update is in progress for a provisioned subscriber.
              name: updating
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An error occurred provisioning the subscriber on Webex.
              name: error
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: "List of errors that occurred during that last attempt to provision/update\
              \ this subscriber.\n Note:\n* This list captures errors that occurred\
              \ during  asynchronous or background  provisioning of the subscriber,\
              \  after  the API has been accepted and 200 OK response returned.\n\
              * Any errors that occur during initial API request validation will be\
              \ captured directly in error response with appropriate HTTP status code."
            name: errors
            param_attrs:
            - doc: An error code that identifies the reason for the error.
              name: errorCode
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: A description of the error.
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[Error]
            type_spec: null
          - doc: The date and time the subscriber was provisioned.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the provisioning status of the subscriber last
              changed.
            name: lastStatusChange
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: This Provisioning ID associated with this subscriber.
            name: provisioningId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates if the subscriber was self activated, rather than provisioned
              via these APIs.
            name: selfActivated
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[Subscriber]
          type_spec: null
    - doc: 'Provision a new BroadWorks subscriber for Webex services.

        This API lets a Service Provider map a BroadWorks subscriber to a new or existing
        Webex user and assign the required licenses and entitlements for Webex and
        Meetings.'
      documentation:
        doc: Provision a BroadWorks Subscriber
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-subscribers/provision-a-broadworks-subscriber
        endpoint: https://webexapis.com/v1/broadworks/subscribers
        http_method: POST
      header: Provision a BroadWorks Subscriber
      parameters_and_response:
        Body Parameters:
        - doc: 'This Provisioning ID defines how this subscriber is to be provisioned
            for Webex Services.

            Each Customer Template will have their own unique Provisioning ID. This
            ID will be displayed under the chosen Customer Template

            on Webex Control Hub.'
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The user ID of the subscriber on BroadWorks.
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The Service Provider supplied unique identifier for the subscriber's
            enterprise.
          name: spEnterpriseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The first name of the subscriber.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The last name of the subscriber.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The Webex for BroadWorks package to be assigned to the subscriber.
          name: package
          param_attrs:
          - doc: Softphone package
            name: softphone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Basic package
            name: basic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Standard package
            name: standard
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Premium package
            name: premium
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: The primary phone number configured against the subscriber on BroadWorks.
          name: primaryPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The mobile phone number configured against the subscriber on BroadWorks.
            Any empty value on update will remove the already configured mobile phone
            number.
          name: mobilePhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The extension number configured against the subscriber on BroadWorks.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the subscriber (mandatory for the trusted email
            provisioning flow).
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The {ISO-639-1}_{ISO-3166} or {ISO-639-1} locale or language code used
            as preferred language for organization and Webex Meeting Sites. Refer
            to the help page for more information.
          name: language
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time zone associated with the subscriber. Refer to the Webex Meetings
            Site Timezone section of the Webex for BroadWorks guide for more information.
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique Cisco identifier for the subscriber.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Person Id of the subscriber on Webex. To be used when referencing
            this subscriber on other Webex APIs. Only presented when status is provisioned.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The user ID of the subscriber on BroadWorks.
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Service Provider supplied unique identifier for the subscriber's
            enterprise.
          name: spEnterpriseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the subscriber.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the subscriber.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the subscriber.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The primary phone number configured against the subscriber on BroadWorks.
          name: primaryPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The mobile phone number configured against the subscriber on BroadWorks.
          name: mobilePhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The extension number configured against the subscriber on BroadWorks.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex for BroadWorks Package assigned to the subscriber.
          name: package
          param_attrs:
          - doc: Softphone package.
            name: softphone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Basic package.
            name: basic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Standard package.
            name: standard
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Premium package.
            name: premium
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The provisioning status of the user.
          name: status
          param_attrs:
          - doc: Subscriber Provisioning is paused, pending input of email address.
            name: pending_email_input
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Subscriber Provisioning is paused. The subscriber has entered an
              email address but has yet to complete validation.
            name: pending_email_validation
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Subscriber Provisioning is paused. An automated email is sent to
              the subscriber, waiting for the subscriber's consent.
            name: pending_user_migration
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Subscriber provisioning is in progress.
            name: provisioning
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The subscriber is fully provisioned on Webex.
            name: provisioned
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An update is in progress for a provisioned subscriber.
            name: updating
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An error occurred provisioning the subscriber on Webex.
            name: error
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: "List of errors that occurred during that last attempt to provision/update\
            \ this subscriber.\n Note:\n* This list captures errors that occurred\
            \ during  asynchronous or background  provisioning of the subscriber,\
            \  after  the API has been accepted and 200 OK response returned.\n* Any\
            \ errors that occur during initial API request validation will be captured\
            \ directly in error response with appropriate HTTP status code."
          name: errors
          param_attrs:
          - doc: An error code that identifies the reason for the error.
            name: errorCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A description of the error.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Error]
          type_spec: null
        - doc: The date and time the subscriber was provisioned.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the provisioning status of the subscriber last changed.
          name: lastStatusChange
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: This Provisioning ID associated with this subscriber.
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates if the subscriber was self activated, rather than provisioned
            via these APIs.
          name: selfActivated
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
    - doc: This API lets a Service Provider retrieve details of a provisioned BroadWorks
        subscriber on Webex.
      documentation:
        doc: Get a BroadWorks Subscriber
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-subscribers/get-a-broadworks-subscriber
        endpoint: https://webexapis.com/v1/broadworks/subscribers/{subscriberId}
        http_method: GET
      header: Get a BroadWorks Subscriber
      parameters_and_response:
        Response Properties:
        - doc: A unique Cisco identifier for the subscriber.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Person Id of the subscriber on Webex. To be used when referencing
            this subscriber on other Webex APIs. Only presented when status is provisioned.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The user ID of the subscriber on BroadWorks.
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Service Provider supplied unique identifier for the subscriber's
            enterprise.
          name: spEnterpriseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the subscriber.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the subscriber.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the subscriber.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The primary phone number configured against the subscriber on BroadWorks.
          name: primaryPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The mobile phone number configured against the subscriber on BroadWorks.
          name: mobilePhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The extension number configured against the subscriber on BroadWorks.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex for BroadWorks Package assigned to the subscriber.
          name: package
          param_attrs:
          - doc: Softphone package.
            name: softphone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Basic package.
            name: basic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Standard package.
            name: standard
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Premium package.
            name: premium
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The provisioning status of the user.
          name: status
          param_attrs:
          - doc: Subscriber Provisioning is paused, pending input of email address.
            name: pending_email_input
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Subscriber Provisioning is paused. The subscriber has entered an
              email address but has yet to complete validation.
            name: pending_email_validation
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Subscriber Provisioning is paused. An automated email is sent to
              the subscriber, waiting for the subscriber's consent.
            name: pending_user_migration
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Subscriber provisioning is in progress.
            name: provisioning
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The subscriber is fully provisioned on Webex.
            name: provisioned
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An update is in progress for a provisioned subscriber.
            name: updating
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An error occurred provisioning the subscriber on Webex.
            name: error
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: "List of errors that occurred during that last attempt to provision/update\
            \ this subscriber.\n Note:\n* This list captures errors that occurred\
            \ during  asynchronous or background  provisioning of the subscriber,\
            \  after  the API has been accepted and 200 OK response returned.\n* Any\
            \ errors that occur during initial API request validation will be captured\
            \ directly in error response with appropriate HTTP status code."
          name: errors
          param_attrs:
          - doc: An error code that identifies the reason for the error.
            name: errorCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A description of the error.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Error]
          type_spec: null
        - doc: The date and time the subscriber was provisioned.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the provisioning status of the subscriber last changed.
          name: lastStatusChange
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: This Provisioning ID associated with this subscriber.
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates if the subscriber was self activated, rather than provisioned
            via these APIs.
          name: selfActivated
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the subscriber in question.
          name: subscriberId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'This API lets a Service Provider update certain details of a provisioned
        BroadWorks subscriber

        on Webex.'
      documentation:
        doc: Update a BroadWorks Subscriber
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-subscribers/update-a-broadworks-subscriber
        endpoint: https://webexapis.com/v1/broadworks/subscribers/{subscriberId}
        http_method: PUT
      header: Update a BroadWorks Subscriber
      parameters_and_response:
        Body Parameters:
        - doc: The user ID of the subscriber on BroadWorks.
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the subscriber.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the subscriber.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The primary phone number configured against the subscriber on BroadWorks.
          name: primaryPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The mobile phone number configured against the subscriber on BroadWorks.
            Any empty value on update will remove the already configured mobile phone
            number.
          name: mobilePhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The extension number configured against the subscriber on BroadWorks.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time zone associated with the subscriber. Refer to the Webex Meetings
            Site Timezone section of the Webex for BroadWorks guide for more information.
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex for BroadWorks Package to be assigned to the subscriber.
          name: package
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique Cisco identifier for the subscriber.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Person Id of the subscriber on Webex. To be used when referencing
            this subscriber on other Webex APIs. Only presented when status is provisioned.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The user ID of the subscriber on BroadWorks.
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Service Provider supplied unique identifier for the subscriber's
            enterprise.
          name: spEnterpriseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the subscriber.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the subscriber.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the subscriber.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The primary phone number configured against the subscriber on BroadWorks.
          name: primaryPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The mobile phone number configured against the subscriber on BroadWorks.
          name: mobilePhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The extension number configured against the subscriber on BroadWorks.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex for BroadWorks Package assigned to the subscriber.
          name: package
          param_attrs:
          - doc: Softphone package.
            name: softphone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Basic package.
            name: basic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Standard package.
            name: standard
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Premium package.
            name: premium
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The provisioning status of the user.
          name: status
          param_attrs:
          - doc: Subscriber Provisioning is paused, pending input of email address.
            name: pending_email_input
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Subscriber Provisioning is paused. The subscriber has entered an
              email address but has yet to complete validation.
            name: pending_email_validation
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Subscriber Provisioning is paused. An automated email is sent to
              the subscriber, waiting for the subscriber's consent.
            name: pending_user_migration
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Subscriber provisioning is in progress.
            name: provisioning
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The subscriber is fully provisioned on Webex.
            name: provisioned
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An update is in progress for a provisioned subscriber.
            name: updating
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An error occurred provisioning the subscriber on Webex.
            name: error
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: "List of errors that occurred during that last attempt to provision/update\
            \ this subscriber.\n Note:\n* This list captures errors that occurred\
            \ during  asynchronous or background  provisioning of the subscriber,\
            \  after  the API has been accepted and 200 OK response returned.\n* Any\
            \ errors that occur during initial API request validation will be captured\
            \ directly in error response with appropriate HTTP status code."
          name: errors
          param_attrs:
          - doc: An error code that identifies the reason for the error.
            name: errorCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A description of the error.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Error]
          type_spec: null
        - doc: The date and time the subscriber was provisioned.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the provisioning status of the subscriber last changed.
          name: lastStatusChange
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: This Provisioning ID associated with this subscriber.
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates if the subscriber was self activated, rather than provisioned
            via these APIs.
          name: selfActivated
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the subscriber in question.
          name: subscriberId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: This API will allow a Service Provider to remove the mapping between a
        BroadWorks Subscriber and Webex user.
      documentation:
        doc: Remove a BroadWorks Subscriber
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-subscribers/remove-a-broadworks-subscriber
        endpoint: https://webexapis.com/v1/broadworks/subscribers/{subscriberId}
        http_method: DELETE
      header: Remove a BroadWorks Subscriber
      parameters_and_response:
        URI Parameters:
        - doc: A unique identifier for the subscriber in question.
          name: subscriberId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Verify the likely success of provisioning a broadworks subscriber.
      documentation:
        doc: Precheck a Broadworks Subscriber Provisioning
        doc_link: https://developer.webex.com/docs/api/v1/broadworks-subscribers/precheck-a-broadworks-subscriber-provisioning
        endpoint: https://webexapis.com/v1/broadworks/subscribers/validate
        http_method: POST
      header: Precheck a Broadworks Subscriber Provisioning
      parameters_and_response:
        Body Parameters:
        - doc: Provisioning ID that defines how this subscriber is to be provisioned
            for Cisco Webex Services. Each Customer Template has its unique Provisioning
            ID. This ID will be displayed under the chosen Customer Template on Cisco
            Webex Control Hub.
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The user ID of the Broadworks subscriber.
          name: userId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Service Provider supplied unique identifier for the subscriber's
            enterprise.
          name: spEnterpriseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the subscriber.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the subscriber.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex for BroadWorks package to be assigned to the subscriber.
          name: package
          param_attrs:
          - doc: Softphone package.
            name: softphone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Basic package.
            name: basic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Standard package.
            name: standard
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Premium package.
            name: premium
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The primary phone number configured for the subscriber on BroadWorks.
          name: primaryPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The mobile phone number configured against the subscriber on BroadWorks.
          name: mobilePhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The extension number configured against the subscriber on BroadWorks.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the subscriber.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ISO 639-1 language code associated with the subscriber. Reserved
            for future use. Any value currently specified will be ignored during subscriber
            provisioning.
          name: language
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time zone associated with the subscriber. Refer to the Webex Meetings
            Site Timezone section of the Webex for BroadWorks guide for more information.
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: '

            Email address of the customer org user to be provisioned.'
          name: customerInfo
          param_attrs: []
          param_object: []
          type: object
          type_spec: null
        Response Properties:
        - doc: A textual representation of the Precheck response message containing
            the infoCode object in the case of a success response and the errorCode
            object in the case of failure.
          name: message
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A list of ProvisioningPreCheckResponseInfo objects.
          name: info
          param_attrs: []
          param_object:
          - doc: Provisioning Precheck infoCode.
            name: infoCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A textual description of the infoCode.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
  Call Controls:
    doc: 'Not supported for Webex for Government (FedRAMP)

      Call Control APIs in support of Webex Calling.

      All GET commands require the spark:calls_read scope while all other commands
      require the spark:calls_write scope.

      NOTE: These APIs support 3rd Party Call Control only.'
    header: Call Controls
    methods:
    - doc: Initiate an outbound call to a specified destination. This is also commonly
        referred to as Click to Call or Click to Dial. Alerts occur on all the devices
        belonging to a user. When a user answers on one of these alerting devices,
        an outbound call is placed from that device to the destination.
      documentation:
        doc: Dial
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/dial
        endpoint: https://webexapis.com/v1/telephony/calls/dial
        http_method: POST
      header: Dial
      parameters_and_response:
        Body Parameters:
        - doc: 'The destination to be dialed. The destination can be digits or a URI.
            Some examples for destination include: 1234, 2223334444, +12223334444,
            *73, tel:+12223334444, user@company.domain, and sip:user@company.domain.'
          name: destination
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the call which is used in all subsequent commands
            for the same call.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the call session the call belongs to. This
            can be used to correlate multiple calls that are part of the same call
            session.
          name: callSessionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Answer an incoming call on a user's primary device.
      documentation:
        doc: Answer
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/answer
        endpoint: https://webexapis.com/v1/telephony/calls/answer
        http_method: POST
      header: Answer
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to be answered.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Reject an unanswered incoming call.
      documentation:
        doc: Reject
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/reject
        endpoint: https://webexapis.com/v1/telephony/calls/reject
        http_method: POST
      header: Reject
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to be rejected.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The rejection action to apply to the call. The busy action is applied
            if no specific action is provided.
          name: action
          param_attrs:
          - doc: ''
            name: busy
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: temporarilyUnavailable
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: ignore
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Reject Action Enum
          type_spec: null
    - doc: Hangup a call. If used on an unanswered incoming call, the call is rejected
        and sent to busy.
      documentation:
        doc: Hangup
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/hangup
        endpoint: https://webexapis.com/v1/telephony/calls/hangup
        http_method: POST
      header: Hangup
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to hangup.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Hold a connected call.
      documentation:
        doc: Hold
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/hold
        endpoint: https://webexapis.com/v1/telephony/calls/hold
        http_method: POST
      header: Hold
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to hold.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Resume a held call.
      documentation:
        doc: Resume
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/resume
        endpoint: https://webexapis.com/v1/telephony/calls/resume
        http_method: POST
      header: Resume
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to resume.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Divert a call to a destination or a user's voicemail. This is also commonly
        referred to as a Blind Transfer.
      documentation:
        doc: Divert
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/divert
        endpoint: https://webexapis.com/v1/telephony/calls/divert
        http_method: POST
      header: Divert
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to divert.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'The destination to divert the call to. If toVoicemail is false, destination
            is required. The destination can be digits or a URI. Some examples for
            destination include: 1234, 2223334444, +12223334444, *73, tel:+12223334444,
            user@company.domain, sip:user@company.domain'
          name: destination
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: If set to true, the call is diverted to voicemail. If no destination
            is specified, the call is diverted to the user's own voicemail. If a destination
            is specified, the call is diverted to the specified user's voicemail.
          name: toVoicemail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
    - doc: 'Transfer two calls together.

        Unanswered incoming calls cannot be transferred but can be diverted using
        the divert API.

        If the user has only two calls and wants to transfer them together, the callId1
        and callId2 parameters are optional and when not provided the calls are automatically
        selected and transferred.

        If the user has more than two calls and wants to transfer two of them together,
        the callId1 and callId2 parameters are mandatory to specify which calls are
        being transferred. Those are also commonly referred to as Attended Transfer,
        Consultative Transfer, or Supervised Transfer and will return a 204 response.

        If the user wants to transfer one call to a new destination but only when
        the destination responds, the callId1 and destination parameters are mandatory
        to specify the call being transferred and the destination.

        This is referred to as a Mute Transfer and is similar to the divert API with
        the difference of waiting for the destination to respond prior to transferring
        the call. If the destination does not respond, the call is not transferred.
        This will return a 201 response.'
      documentation:
        doc: Transfer
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/transfer
        endpoint: https://webexapis.com/v1/telephony/calls/transfer
        http_method: POST
      header: Transfer
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the first call to transfer. This parameter is
            mandatory if either callId2 or destination is provided.
          name: callId1
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The call identifier of the second call to transfer. This parameter
            is mandatory if callId1 is provided and destination is not provided.
          name: callId2
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The destination to be transferred to. The destination can be digits
            or a URI. Some examples for destination include: 1234, 2223334444, +12223334444,
            tel:+12223334444, user@company.domain, sip:user@company.domain. This parameter
            is mandatory if callId1 is provided and callId2 is not provided.'
          name: destination
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Park a connected call. The number field in the response can be used as
        the destination for the retrieve command to retrieve the parked call.
      documentation:
        doc: Park
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/park
        endpoint: https://webexapis.com/v1/telephony/calls/park
        http_method: POST
      header: Park
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to park.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Identifes where the call is to be parked. If not provided, the call
            is parked against the parking user. The destination can be digits or a
            URI. Some examples for destination include: 1234, 2223334444, +12223334444,
            *73, tel:+12223334444, user@company.domain, sip:user@company.domain'
          name: destination
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: If set totrue, the call is parked against an automatically selected
            member of the user's call park group and the destination parameter is
            ignored.
          name: isGroupPark
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: The details of where the call has been parked.
          name: parkedAgainst
          param_attrs:
          - doc: The party's name. Only present when the name is available and privacy
              is not enabled.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The party''s number. Only present when the number is available and
              privacy is not enabled. The number can be digits or a URI. Some examples
              for number include: 1234, 2223334444, +12223334444, *73, user@company.domain'
            name: number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The party's person ID. Only present when the person ID is available
              and privacy is not enabled.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The party's place ID. Only present when the place ID is available
              and privacy is not enabled.
            name: placeId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates whether privacy is enabled for the name, number and personId/placeId.
            name: privacyEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The call type for the party.
            name: callType
            param_attrs:
            - doc: ''
              name: location
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: organization
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: external
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: emergency
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: repair
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Call Type Enum
            type_spec: null
          param_object: []
          type: Party Information
          type_spec: null
    - doc: Retrieve a parked call. A new call is initiated to perform the retrieval
        in a similar manner to the dial command. The number field from the park command
        response can be used as the destination for the retrieve command.
      documentation:
        doc: Retrieve
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/retrieve
        endpoint: https://webexapis.com/v1/telephony/calls/retrieve
        http_method: POST
      header: Retrieve
      parameters_and_response:
        Body Parameters:
        - doc: 'Identifies where the call is parked. The number field from the park
            command response can be used as the destination for the retrieve command.
            If not provided, the call parked against the retrieving user is retrieved.
            The destination can be digits or a URI. Some examples for destination
            include: 1234, 2223334444, +12223334444, *73, tel:+12223334444, user@company.domain,
            sip:user@company.domain'
          name: destination
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the call which is used in all subsequent commands
            for this call.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unqiue identifier for the call session the call belongs to. This
            can be used to correlate multiple calls that are part of the same call
            session.
          name: callSessionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Start recording a call. Use of this API is only valid when the user's call
        recording mode is set to "On Demand".
      documentation:
        doc: Start Recording
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/start-recording
        endpoint: https://webexapis.com/v1/telephony/calls/startRecording
        http_method: POST
      header: Start Recording
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to start recording.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Stop recording a call. Use of this API is only valid when a call is being
        recorded and the user's call recording mode is set to "On Demand".
      documentation:
        doc: Stop Recording
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/stop-recording
        endpoint: https://webexapis.com/v1/telephony/calls/stopRecording
        http_method: POST
      header: Stop Recording
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to stop recording.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Pause recording on a call. Use of this API is only valid when a call is
        being recorded and the user's call recording mode is set to "On Demand" or
        "Always with Pause/Resume".
      documentation:
        doc: Pause Recording
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/pause-recording
        endpoint: https://webexapis.com/v1/telephony/calls/pauseRecording
        http_method: POST
      header: Pause Recording
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to pause recording.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Resume recording a call. Use of this API is only valid when a call's recording
        is paused and the user's call recording mode is set to "On Demand" or "Always
        with Pause/Resume".
      documentation:
        doc: Resume Recording
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/resume-recording
        endpoint: https://webexapis.com/v1/telephony/calls/resumeRecording
        http_method: POST
      header: Resume Recording
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to resume recording.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Transmit DTMF digits to a call.
      documentation:
        doc: Transmit DTMF
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/transmit-dtmf
        endpoint: https://webexapis.com/v1/telephony/calls/transmitDtmf
        http_method: POST
      header: Transmit DTMF
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to transmit DTMF digits for.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: "The DTMF digits to transmit. Each digit must be part of the following\
            \ set: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, *, #, A, B, C, D]. A comma \",\"\
            \ may be included to indicate a pause between digits. For the value \u201C\
            1,234\u201D, the DTMF 1 digit is initially sent. After a pause, the DTMF\
            \ 2, 3, and 4 digits are sent successively."
          name: dtmf
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Pushes a call from the assistant to the executive the call is associated
        with. Use of this API is only valid when the assistant's call is associated
        with an executive.
      documentation:
        doc: Push
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/push
        endpoint: https://webexapis.com/v1/telephony/calls/push
        http_method: POST
      header: Push
      parameters_and_response:
        Body Parameters:
        - doc: The call identifier of the call to push.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Picks up an incoming call to another user. A new call is initiated to perform
        the pickup in a similar manner to the dial command. When target is not present,
        the API pickups up a call from the user's call pickup group. When target is
        present, the API pickups an incoming call from the specified target user.
      documentation:
        doc: Pickup
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/pickup
        endpoint: https://webexapis.com/v1/telephony/calls/pickup
        http_method: POST
      header: Pickup
      parameters_and_response:
        Body Parameters:
        - doc: 'Identifies the user to pickup an incoming call from. If not provided,
            an incoming call to the user''s call pickup group is picked up. The target
            can be digits or a URI. Some examples for target include: 1234, 2223334444,
            +12223334444, tel:+12223334444, user@company.domain, sip:user@company.domain'
          name: target
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the call which is used in all subsequent commands
            for this call.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unqiue identifier for the call session the call belongs to. This
            can be used to correlate multiple calls that are part of the same call
            session.
          name: callSessionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Barge-in on another user's answered call. A new call is initiated to perform
        the barge-in in a similar manner to the dial command.
      documentation:
        doc: Barge In
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/barge-in
        endpoint: https://webexapis.com/v1/telephony/calls/bargeIn
        http_method: POST
      header: Barge In
      parameters_and_response:
        Body Parameters:
        - doc: 'Identifies the user to barge-in on. The target can be digits or a
            URI. Some examples for target include: 1234, 2223334444, +12223334444,
            tel:+12223334444, user@company.domain, sip:user@company.domain'
          name: target
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the call which is used in all subsequent commands
            for this call.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unqiue identifier for the call session the call belongs to. This
            can be used to correlate multiple calls that are part of the same call
            session.
          name: callSessionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Get the list of details for all active calls associated with the user.
      documentation:
        doc: List Calls
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/list-calls
        endpoint: https://webexapis.com/v1/telephony/calls
        http_method: GET
      header: List Calls
      parameters_and_response:
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The call identifier of the call.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The call session identifier of the call session the call belongs
              to. This can be used to correlate multiple calls that are part of the
              same call session.
            name: callSessionId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ' The personality of the call.'
            name: personality
            param_attrs:
            - doc: ''
              name: originator
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: terminator
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: clickToDial
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Call Personality Enum
            type_spec: null
          - doc: The current state of the call.
            name: state
            param_attrs:
            - doc: ''
              name: connecting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: alerting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: connected
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: held
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: remoteHeld
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: disconnected
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Call State Enum
            type_spec: null
          - doc: The remote party's details. For example, if user A calls user B then
              B is the remote party in A's outgoing call details and A is the remote
              party in B's incoming call details.
            name: remoteParty
            param_attrs:
            - doc: The party's name. Only present when the name is available and privacy
                is not enabled.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The party''s number. Only present when the number is available
                and privacy is not enabled. The number can be digits or a URI. Some
                examples for number include: 1234, 2223334444, +12223334444, *73,
                user@company.domain'
              name: number
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The party's person ID. Only present when the person ID is available
                and privacy is not enabled.
              name: personId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The party's place ID. Only present when the place ID is available
                and privacy is not enabled.
              name: placeId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates whether privacy is enabled for the name, number and personId/placeId.
              name: privacyEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The call type for the party.
              name: callType
              param_attrs:
              - doc: ''
                name: location
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: organization
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: external
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: emergency
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: repair
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: other
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: Call Type Enum
              type_spec: null
            param_object: []
            type: Party Information
            type_spec: null
          - doc: The appearance value for the call. The appearance value can be used
              to display the user's calls in an order consistent with the user's devices.
              Only present when the call has an appearance value assigned.
            name: appearance
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The date and time the call was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the call was answered. Only present when the call
              has been answered.
            name: answered
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The list of details for previous redirections of the incoming call
              ordered from most recent to least recent. For example, if user B forwards
              an incoming call to user C, then a redirection entry is present for
              B's forwarding in C's incoming call details. Only present when there
              were previous redirections and the incoming call's state is alerting.
            name: redirections
            param_attrs:
            - doc: The reason the incoming call was redirected.
              name: reason
              param_attrs:
              - doc: ''
                name: busy
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: noAnswer
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: unavailable
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: unconditional
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: timeOfDay
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: divert
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: followMe
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: huntGroup
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: callQueue
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: unknown
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: Redirection Reason Enum
              type_spec: null
            - doc: The details of a party who redirected the incoming call.
              name: redirectingParty
              param_attrs:
              - doc: The party's name. Only present when the name is available and
                  privacy is not enabled.
                name: name
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'The party''s number. Only present when the number is available
                  and privacy is not enabled. The number can be digits or a URI. Some
                  examples for number include: 1234, 2223334444, +12223334444, *73,
                  user@company.domain'
                name: number
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The party's person ID. Only present when the person ID is available
                  and privacy is not enabled.
                name: personId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The party's place ID. Only present when the place ID is available
                  and privacy is not enabled.
                name: placeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates whether privacy is enabled for the name, number and
                  personId/placeId.
                name: privacyEnabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: The call type for the party.
                name: callType
                param_attrs:
                - doc: ''
                  name: location
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: organization
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: external
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: emergency
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: repair
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: other
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: Call Type Enum
                type_spec: null
              param_object: []
              type: Party Information
              type_spec: null
            param_object: []
            type: array[Redirection Information]
            type_spec: null
          - doc: The recall details for the incoming call. Only present when the incoming
              call is for a recall.
            name: recall
            param_attrs:
            - doc: The type of recall the incoming call is for. Park is the only type
                of recall currently supported but additional values may be added in
                the future.
              name: type
              param_attrs:
              - doc: ''
                name: park
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: Recall Type Enum
              type_spec: null
            - doc: If the type is park, contains the details of where the call was
                parked. For example, if user A parks a call against user B and A is
                recalled for the park, then this field contains B's information in
                A's incoming call details. Only present when the type is park.
              name: party
              param_attrs:
              - doc: The party's name. Only present when the name is available and
                  privacy is not enabled.
                name: name
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'The party''s number. Only present when the number is available
                  and privacy is not enabled. The number can be digits or a URI. Some
                  examples for number include: 1234, 2223334444, +12223334444, *73,
                  user@company.domain'
                name: number
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The party's person ID. Only present when the person ID is available
                  and privacy is not enabled.
                name: personId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The party's place ID. Only present when the place ID is available
                  and privacy is not enabled.
                name: placeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates whether privacy is enabled for the name, number and
                  personId/placeId.
                name: privacyEnabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: The call type for the party.
                name: callType
                param_attrs:
                - doc: ''
                  name: location
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: organization
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: external
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: emergency
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: repair
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: other
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: Call Type Enum
                type_spec: null
              param_object: []
              type: Party Information
              type_spec: null
            param_object: []
            type: Recall Information
            type_spec: null
          - doc: The call's current recording state. Only present when the user's
              call recording has been invoked during the life of the call.
            name: recordingState
            param_attrs:
            - doc: ''
              name: pending
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: started
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: paused
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: stopped
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: failed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Recording State Enum
            type_spec: null
          param_object: []
          type: array[Call]
          type_spec: null
    - doc: Get the details of the specified active call for the user.
      documentation:
        doc: Get Call Details
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/get-call-details
        endpoint: https://webexapis.com/v1/telephony/calls/{callId}
        http_method: GET
      header: Get Call Details
      parameters_and_response:
        Response Properties:
        - doc: The call identifier of the call.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The call session identifier of the call session the call belongs to.
            This can be used to correlate multiple calls that are part of the same
            call session.
          name: callSessionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ' The personality of the call.'
          name: personality
          param_attrs:
          - doc: ''
            name: originator
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: terminator
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: clickToDial
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Call Personality Enum
          type_spec: null
        - doc: The current state of the call.
          name: state
          param_attrs:
          - doc: ''
            name: connecting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: alerting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: connected
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: held
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: remoteHeld
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: disconnected
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Call State Enum
          type_spec: null
        - doc: The remote party's details. For example, if user A calls user B then
            B is the remote party in A's outgoing call details and A is the remote
            party in B's incoming call details.
          name: remoteParty
          param_attrs:
          - doc: The party's name. Only present when the name is available and privacy
              is not enabled.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The party''s number. Only present when the number is available and
              privacy is not enabled. The number can be digits or a URI. Some examples
              for number include: 1234, 2223334444, +12223334444, *73, user@company.domain'
            name: number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The party's person ID. Only present when the person ID is available
              and privacy is not enabled.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The party's place ID. Only present when the place ID is available
              and privacy is not enabled.
            name: placeId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates whether privacy is enabled for the name, number and personId/placeId.
            name: privacyEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The call type for the party.
            name: callType
            param_attrs:
            - doc: ''
              name: location
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: organization
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: external
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: emergency
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: repair
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Call Type Enum
            type_spec: null
          param_object: []
          type: Party Information
          type_spec: null
        - doc: The appearance value for the call. The appearance value can be used
            to display the user's calls in an order consistent with the user's devices.
            Only present when the call has an appearance value assigned.
          name: appearance
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The date and time the call was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the call was answered. Only present when the call
            has been answered.
          name: answered
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The list of details for previous redirections of the incoming call
            ordered from most recent to least recent. For example, if user B forwards
            an incoming call to user C, then a redirection entry is present for B's
            forwarding in C's incoming call details. Only present when there were
            previous redirections and the incoming call's state is alerting.
          name: redirections
          param_attrs:
          - doc: The reason the incoming call was redirected.
            name: reason
            param_attrs:
            - doc: ''
              name: busy
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: noAnswer
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: unavailable
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: unconditional
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: timeOfDay
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: divert
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: followMe
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: huntGroup
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: callQueue
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: unknown
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Redirection Reason Enum
            type_spec: null
          - doc: The details of a party who redirected the incoming call.
            name: redirectingParty
            param_attrs:
            - doc: The party's name. Only present when the name is available and privacy
                is not enabled.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The party''s number. Only present when the number is available
                and privacy is not enabled. The number can be digits or a URI. Some
                examples for number include: 1234, 2223334444, +12223334444, *73,
                user@company.domain'
              name: number
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The party's person ID. Only present when the person ID is available
                and privacy is not enabled.
              name: personId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The party's place ID. Only present when the place ID is available
                and privacy is not enabled.
              name: placeId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates whether privacy is enabled for the name, number and personId/placeId.
              name: privacyEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The call type for the party.
              name: callType
              param_attrs:
              - doc: ''
                name: location
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: organization
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: external
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: emergency
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: repair
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: other
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: Call Type Enum
              type_spec: null
            param_object: []
            type: Party Information
            type_spec: null
          param_object: []
          type: array[Redirection Information]
          type_spec: null
        - doc: The recall details for the incoming call. Only present when the incoming
            call is for a recall.
          name: recall
          param_attrs:
          - doc: The type of recall the incoming call is for. Park is the only type
              of recall currently supported but additional values may be added in
              the future.
            name: type
            param_attrs:
            - doc: ''
              name: park
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Recall Type Enum
            type_spec: null
          - doc: If the type is park, contains the details of where the call was parked.
              For example, if user A parks a call against user B and A is recalled
              for the park, then this field contains B's information in A's incoming
              call details. Only present when the type is park.
            name: party
            param_attrs:
            - doc: The party's name. Only present when the name is available and privacy
                is not enabled.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The party''s number. Only present when the number is available
                and privacy is not enabled. The number can be digits or a URI. Some
                examples for number include: 1234, 2223334444, +12223334444, *73,
                user@company.domain'
              name: number
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The party's person ID. Only present when the person ID is available
                and privacy is not enabled.
              name: personId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The party's place ID. Only present when the place ID is available
                and privacy is not enabled.
              name: placeId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates whether privacy is enabled for the name, number and personId/placeId.
              name: privacyEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The call type for the party.
              name: callType
              param_attrs:
              - doc: ''
                name: location
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: organization
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: external
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: emergency
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: repair
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: other
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: Call Type Enum
              type_spec: null
            param_object: []
            type: Party Information
            type_spec: null
          param_object: []
          type: Recall Information
          type_spec: null
        - doc: The call's current recording state. Only present when the user's call
            recording has been invoked during the life of the call.
          name: recordingState
          param_attrs:
          - doc: ''
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: paused
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: stopped
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: failed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Recording State Enum
          type_spec: null
        URI Parameters:
        - doc: The call identifier of the call.
          name: callId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Get the list of call history records for the user. A maximum of 20 call
        history records per type (placed, missed, received) are returned.
      documentation:
        doc: List Call History
        doc_link: https://developer.webex.com/docs/api/v1/call-controls/list-call-history
        endpoint: https://webexapis.com/v1/telephony/calls/history
        http_method: GET
      header: List Call History
      parameters_and_response:
        Query Parameters:
        - doc: 'The type of call history records to retrieve. If not specified, then
            all call history records are retrieved.

            Possible values: placed, missed, received'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The type of call history record.
            name: type
            param_attrs:
            - doc: ''
              name: placed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: missed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: received
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Call History Record Type Enum
            type_spec: null
          - doc: The name of the called/calling party. Only present when the name
              is available and privacy is not enabled.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The number of the called/calling party. Only present when the number
              is available and privacy is not enabled. The number can be digits or
              a URI. Some examples for number include: 1234, 2223334444, +12223334444,
              *73, user@company.domain'
            name: number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates whether privacy is enabled for the name and number.
            name: privacyEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The date and time the call history record was created. For a placed
              call history record, this is when the call was placed. For a missed
              call history record, this is when the call was disconnected. For a received
              call history record, this is when the call was answered.
            name: time
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Call History Record]
          type_spec: null
  Device Configurations:
    doc: 'The Device Configurations functionality and API endpoints described here
      are currently pre-release features which are not available to all Webex users.
      If you have any questions, or if you need help, please contact the Webex Developer
      Support team at devsupport@webex.com.

      The Device Configurations API allows developers to view and modify configurations
      on Webex Rooms devices, as well as other devices that use the configuration
      service.

      Viewing the list of all device configurations in an organization requires an
      administrator auth token with the spark-admin:devices_read scope. Adding, updating,
      or deleting configurations for devices in an organization requires an administrator
      auth token with both the spark-admin:devices_write and the spark-admin:devices_read
      scope.'
    header: Device Configurations
    methods:
    - doc: Lists all device configurations associated with the given device ID. Administrators
        can list configurations for all devices within an organization.
      documentation:
        doc: List Device Configurations for device
        doc_link: https://developer.webex.com/docs/api/v1/device-configurations/list-device-configurations-for-device
        endpoint: https://webexapis.com/v1/deviceConfigurations
        http_method: GET
      header: List Device Configurations for device
      parameters_and_response:
        Query Parameters:
        - doc: List device configurations by device ID.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'This can optionally be used to filter configurations. Keys are composed
            of segments. It''s possible to use absolute paths, wildcards or ranges.

            * Absolute  gives only one configuration as a result.  Conference.MaxReceiveCallRate  for
            example gives the Conference  MaxReceiveCallRate  configuration.

            * Wildcards  (*) can specify multiple configurations with shared segments.  Audio.Ultrasound.*  for
            example will filter on all Audio Ultrasound configurations.

            * Range  ([ number ]) can be used to filter numbered segments.  FacilityService.Service[1].Name  for
            instance only shows the first  FacilityService  Service Name configuration,  FacilityService.Service[*].Name  shows
            all,  FacilityService.Service[1..3].Name  shows the first three and  FacilityService.Service[2..n].Name  shows
            all starting at 2. Note that  RFC 3986 3.2.2  does not allow square brackets
            in urls outside the host, so to specify range in a configuration key you
            will need to encode them to %5B for [ and %5D for ].'
          name: key
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the device that the configurations are for.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: items
          param_attrs:
          - doc: Key of the configuration.
            name: configuration_key
            param_attrs: []
            param_object:
            - doc: The source of the current value that is applied to the device.
              name: source
              param_attrs:
              - doc: Current value comes from the schema default.
                name: default
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Current value comes from configuredValue.
                name: configured
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: ''
              name: sources
              param_attrs: []
              param_object:
              - doc: ''
                name: default
                param_attrs: []
                param_object:
                - doc: ''
                  name: editability
                  param_attrs: []
                  param_object:
                  - doc: Whether or not the value is editable on this source (always
                      false for default).
                    name: isEditable
                    param_attrs: []
                    param_object: []
                    type: boolean
                    type_spec: null
                  - doc: The reason value is not editable on this source (always FACTORY_DEFAULT
                      for default).
                    name: reason
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  type: object
                  type_spec: null
                type: object
                type_spec: null
              - doc: ''
                name: configured
                param_attrs: []
                param_object:
                - doc: ''
                  name: editability
                  param_attrs: []
                  param_object:
                  - doc: Whether or not the value is editable on this source.
                    name: isEditable
                    param_attrs: []
                    param_object: []
                    type: boolean
                    type_spec: null
                  - doc: The reason the value is not editable on this source.
                    name: reason
                    param_attrs:
                    - doc: User is not authorized to edit any values.
                      name: NOT_AUTHORIZED
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: The configuration is managed by a different authority.
                        For example CUCM.
                      name: CONFIG_MANAGED_BY_DIFFERENT_AUTHORITY
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    param_object: []
                    type: enum
                    type_spec: null
                  type: object
                  type_spec: null
                type: object
                type_spec: null
              type: object
              type_spec: null
            - doc: JSON Schema describing the data format of the configuration as
                specified by the device.
              name: valueSpace
              param_attrs: []
              param_object: []
              type: object
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: Device Configuration
          type_spec: null
    - doc: 'Update requests use JSON Patch syntax.

        When using JSON Patch you are required to specify a Content-Type header with
        value application/json-patch+json.'
      documentation:
        doc: Update Device Configurations
        doc_link: https://developer.webex.com/docs/api/v1/device-configurations/update-device-configurations
        endpoint: https://webexapis.com/v1/deviceConfigurations
        http_method: PATCH
      header: Update Device Configurations
      parameters_and_response:
        Body Parameters:
        - doc: ''
          name: op
          param_attrs:
          - doc: Remove the configured value and revert back to the default from schema,
              if present.
            name: remove
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Set the configured value.
            name: replace
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Only paths ending in /sources/configured/value are supported.
          name: path
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: value
          param_attrs: []
          param_object: []
          type: One of string OR number OR boolean
          type_spec: null
        Query Parameters:
        - doc: Update device configurations by device ID.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ID of the device that the configurations are for.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: items
          param_attrs:
          - doc: Key of the configuration.
            name: configuration_key
            param_attrs: []
            param_object:
            - doc: The source of the current value that is applied to the device.
              name: source
              param_attrs:
              - doc: Current value comes from the schema default.
                name: default
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Current value comes from configuredValue.
                name: configured
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: ''
              name: sources
              param_attrs: []
              param_object:
              - doc: ''
                name: default
                param_attrs: []
                param_object:
                - doc: ''
                  name: editability
                  param_attrs: []
                  param_object:
                  - doc: Whether or not the value is editable on this source (always
                      false for default).
                    name: isEditable
                    param_attrs: []
                    param_object: []
                    type: boolean
                    type_spec: null
                  - doc: The reason value is not editable on this source (always FACTORY_DEFAULT
                      for default).
                    name: reason
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  type: object
                  type_spec: null
                type: object
                type_spec: null
              - doc: ''
                name: configured
                param_attrs: []
                param_object:
                - doc: ''
                  name: editability
                  param_attrs: []
                  param_object:
                  - doc: Whether or not the value is editable on this source.
                    name: isEditable
                    param_attrs: []
                    param_object: []
                    type: boolean
                    type_spec: null
                  - doc: The reason the value is not editable on this source.
                    name: reason
                    param_attrs:
                    - doc: User is not authorized to edit any values.
                      name: NOT_AUTHORIZED
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: The configuration is managed by a different authority.
                        For example CUCM.
                      name: CONFIG_MANAGED_BY_DIFFERENT_AUTHORITY
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    param_object: []
                    type: enum
                    type_spec: null
                  type: object
                  type_spec: null
                type: object
                type_spec: null
              type: object
              type_spec: null
            - doc: JSON Schema describing the data format of the configuration as
                specified by the device.
              name: valueSpace
              param_attrs: []
              param_object: []
              type: object
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: Device Configuration
          type_spec: null
  Devices:
    doc: 'Devices represent cloud-registered Webex RoomOS devices. Devices may be
      associated with Workspaces.

      The following scopes are required for performing the specified actions:

      Searching and viewing details for devices requires an auth token with the spark:devices_read
      scope.

      Updating or deleting your devices requires an auth token with the spark:devices_write
      scope.

      Viewing the list of all devices in an organization requires an administrator
      auth token with the spark-admin:devices_read scope.

      Adding, updating, or deleting all devices in an organization requires an administrator
      auth token with the spark-admin:devices_write scope.

      Generating an activation code requires an auth token with the identity:placeonetimepassword_create
      scope.'
    header: Devices
    methods:
    - doc: Lists all active Webex devices associated with the authenticated user,
        such as devices activated in personal mode. Administrators can list all devices
        within an organization.
      documentation:
        doc: List Devices
        doc_link: https://developer.webex.com/docs/api/v1/devices/list-devices
        endpoint: https://webexapis.com/v1/devices
        http_method: GET
      header: List Devices
      parameters_and_response:
        Query Parameters:
        - doc: List devices by person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List devices by workspace ID.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List devices in this organization. Only admin users of another organization
            (such as partners) may use this parameter.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List devices by workspace location ID.
          name: workspaceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List devices with this display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List devices with this product name.

            Possible values: DX-80, RoomKit, SX-80'
          name: product
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List devices with this type.

            Possible values: roomdesk, accessory, webexgo, unknown'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List devices which have a tag. Searching for multiple tags (logical
            AND) can be done by comma separating the tag values or adding several
            tag parameters.
          name: tag
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List devices with this connection status.
          name: connectionStatus
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List devices with this serial number.
          name: serial
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List devices with this software version.
          name: software
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List devices with this upgrade channel.
          name: upgradeChannel
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List devices with this error code.
          name: errorCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List devices with this capability.

            Possible values: xapi'
          name: capability
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List devices with this permission.
          name: permission
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Offset. Default is 0.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Limit the maximum number of devices in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the device.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A friendly name for the device.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The placeId field has been deprecated. Please use workspaceId instead.
            name: placeId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The workspace associated with the device.
            name: workspaceId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person associated with the device.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The organization associated with the device.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The capabilities of the device.
            name: capabilities
            param_attrs: []
            param_object: []
            type: array[xapi]
            type_spec: null
          - doc: The permissions the user has for this device. For example, xapi means
              this user is entitled to using the xapi against this device.
            name: permissions
            param_attrs: []
            param_object: []
            type: array[xapi]
            type_spec: null
          - doc: The connection status of the device.
            name: connectionStatus
            param_attrs:
            - doc: ''
              name: connected
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: disconnected
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Device Connection Status
            type_spec: null
          - doc: The product name.
            name: product
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The product type.
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Tags assigned to the device.
            name: tags
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: The current IP address of the device.
            name: ip
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The current network connectivty for the device.
            name: activeInterface
            param_attrs:
            - doc: ''
              name: wired
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Network Connectivty Type
            type_spec: null
          - doc: The unique address for the network adapter.
            name: mac
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The primary SIP address to dial this device.
            name: primarySipUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: All SIP addresses to dial this device.
            name: sipUrls
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Serial number for the device.
            name: serial
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The operating system name data and version tag.
            name: software
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The upgrade channel the device is assigned to.
            name: upgradeChannel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time that the device was registered, in ISO8601 format.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The workspace location associated with the device.
            name: workspaceLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Device]
          type_spec: null
    - doc: 'Shows details for a device, by ID.

        Specify the device ID in the deviceId parameter in the URI.'
      documentation:
        doc: Get Device Details
        doc_link: https://developer.webex.com/docs/api/v1/devices/get-device-details
        endpoint: https://webexapis.com/v1/devices/{deviceId}
        http_method: GET
      header: Get Device Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the device.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A friendly name for the device.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The placeId field has been deprecated. Please use workspaceId instead.
          name: placeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The workspace associated with the device.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person associated with the device.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization associated with the device.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The capabilities of the device.
          name: capabilities
          param_attrs: []
          param_object: []
          type: array[xapi]
          type_spec: null
        - doc: The permissions the user has for this device. For example, xapi means
            this user is entitled to using the xapi against this device.
          name: permissions
          param_attrs: []
          param_object: []
          type: array[xapi]
          type_spec: null
        - doc: The connection status of the device.
          name: connectionStatus
          param_attrs:
          - doc: ''
            name: connected
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: disconnected
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Device Connection Status
          type_spec: null
        - doc: The product name.
          name: product
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The product type.
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Tags assigned to the device.
          name: tags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The current IP address of the device.
          name: ip
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The current network connectivty for the device.
          name: activeInterface
          param_attrs:
          - doc: ''
            name: wired
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Network Connectivty Type
          type_spec: null
        - doc: The unique address for the network adapter.
          name: mac
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The primary SIP address to dial this device.
          name: primarySipUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: All SIP addresses to dial this device.
          name: sipUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Serial number for the device.
          name: serial
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The operating system name data and version tag.
          name: software
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The upgrade channel the device is assigned to.
          name: upgradeChannel
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time that the device was registered, in ISO8601 format.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The workspace location associated with the device.
          name: workspaceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a device, by ID.

        Specify the device ID in the deviceId parameter in the URI.'
      documentation:
        doc: Delete a Device
        doc_link: https://developer.webex.com/docs/api/v1/devices/delete-a-device
        endpoint: https://webexapis.com/v1/devices/{deviceId}
        http_method: DELETE
      header: Delete a Device
      parameters_and_response:
        URI Parameters:
        - doc: A unique identifier for the device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update requests use the JSON Patch syntax.

        The request must include a Content-Type header with the value application/json-patch+json.'
      documentation:
        doc: Modify Device Tags
        doc_link: https://developer.webex.com/docs/api/v1/devices/modify-device-tags
        endpoint: https://webexapis.com/v1/devices/{deviceId}
        http_method: PATCH
      header: Modify Device Tags
      parameters_and_response:
        Body Parameters:
        - doc: ''
          name: op
          param_attrs:
          - doc: Add a new tags list to the device.
            name: add
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Remove the tags list from the device.
            name: remove
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Replace the tags list on the device.
            name: replace
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Only the tags path is supported to patch.
          name: path
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: '

            Possible values: First Tag, Second Tag'
          name: value
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the device.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A friendly name for the device.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The placeId field has been deprecated. Please use workspaceId instead.
          name: placeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The workspace associated with the device.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person associated with the device.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization associated with the device.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The capabilities of the device.
          name: capabilities
          param_attrs: []
          param_object: []
          type: array[xapi]
          type_spec: null
        - doc: The permissions the user has for this device. For example, xapi means
            this user is entitled to using the xapi against this device.
          name: permissions
          param_attrs: []
          param_object: []
          type: array[xapi]
          type_spec: null
        - doc: The connection status of the device.
          name: connectionStatus
          param_attrs:
          - doc: ''
            name: connected
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: disconnected
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Device Connection Status
          type_spec: null
        - doc: The product name.
          name: product
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The product type.
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Tags assigned to the device.
          name: tags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The current IP address of the device.
          name: ip
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The current network connectivty for the device.
          name: activeInterface
          param_attrs:
          - doc: ''
            name: wired
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Network Connectivty Type
          type_spec: null
        - doc: The unique address for the network adapter.
          name: mac
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The primary SIP address to dial this device.
          name: primarySipUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: All SIP addresses to dial this device.
          name: sipUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Serial number for the device.
          name: serial
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The operating system name data and version tag.
          name: software
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The upgrade channel the device is assigned to.
          name: upgradeChannel
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time that the device was registered, in ISO8601 format.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The workspace location associated with the device.
          name: workspaceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Generate an activation code for a device in a specific workspace by workspaceId.
      documentation:
        doc: Create a Device Activation Code
        doc_link: https://developer.webex.com/docs/api/v1/devices/create-a-device-activation-code
        endpoint: https://webexapis.com/v1/devices/activationCode
        http_method: POST
      header: Create a Device Activation Code
      parameters_and_response:
        Body Parameters:
        - doc: The ID of the workspace where the device will be activated.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: The activation code.
          name: code
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the activation code expires.
          name: expiryTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
  Events:
    doc: 'Events are generated when actions take place within Webex, such as when
      someone creates or deletes a message.

      The Events API can only be used by a Compliance Officer with an API access token
      that contains the spark-compliance:events_read scope. See the Compliance Guide
      for more information.'
    header: Events
    methods:
    - doc: 'List events in your organization. Several query parameters are available
        to filter the events returned in the response.

        Long result sets will be split into pages.'
      documentation:
        doc: List Events
        doc_link: https://developer.webex.com/docs/api/v1/events/list-events
        endpoint: https://webexapis.com/v1/events
        http_method: GET
      header: List Events
      parameters_and_response:
        Query Parameters:
        - doc: 'List events with a specific resource type.

            Possible values: messages, memberships, meetings, meetingMessages, meetingTranscripts,
            tabs, rooms, attachmentActions, files, file_transcodings'
          name: resource
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List events with a specific event type.

            Possible values: created, updated, deleted, ended'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List events performed by this person, by person ID.
          name: actorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List events which occurred after a specific date and time.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List events which occurred before a specific date and time. If unspecified,
            or set to a time in the future, lists events up to the present.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of events in the response. Value must be between
            1 and 1000, inclusive.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique identifier for the event.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of resource in the event.
            name: resource
            param_attrs:
            - doc: State changed on a messages resource
              name: messages
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a memberships resource
              name: memberships
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State change on a meeting ( here combined with type = 'ended' )
              name: meetings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State change on a automatic transcript resource for Webex Assistant
              name: meetingTranscripts
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a meeting message, i.e. message exchanged as part
                of a meeting
              name: meetingMessages
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a room tabs in a space
              name: tabs
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a space classification
              name: rooms
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a card attachment
              name: attachmentActions
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a file download
              name: files
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State change on a file preview
              name: file_transcodings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Event Resource Enum
            type_spec: null
          - doc: The action which took place in the event.
            name: type
            param_attrs:
            - doc: The resource has been created
              name: created
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A property on the resource has been updated
              name: updated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The resource has been deleted
              name: deleted
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The meeting has ended
              name: ended
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Event Type Enum
            type_spec: null
          - doc: The ID of the application for the event.
            name: appId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the person who performed the action.
            name: actorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization for the event.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time of the event.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The event's data representation. This object will contain the event's
              resource, such as memberships, messages, meetings, tabs, rooms or attachmentActions
              at the time the event took place.
            name: data
            param_attrs: []
            param_object:
            - doc: ''
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: roomId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: roomType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: orgId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: text
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: personId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: personEmail
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: meetingId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: creatorId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The meeting's host data
              name: host
              param_attrs: []
              param_object: []
              type: object
              type_spec: null
            - doc: Common Identity (CI) authenticated meeting attendees
              name: attendees
              param_attrs: []
              param_object: []
              type: array
              type_spec: null
            - doc: indicates whether or not the Voice Assistant was enabled during
                the meeting. If true a transcript should be available a couple minutes
                after the meeting ended at the meetingTranscripts resource
              name: transcriptionEnabled
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: indicates if recording was enabled for all or parts of the meeting.
                If true a recording should be available shortly after the meeting
                ended at the recordings resource
              name: recordingEnabled
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: indicates i chat messages were exchanged during the meeting in
                the meetings client (not the unified client). If true these messages
                can be accessed by a compliance officer at the postMeetingsChat resource.
                Meetings chat collection must be custom enabled.
              name: hasPostMeetingsChat
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: created
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: array[Event]
          type_spec: null
    - doc: 'Shows details for an event, by event ID.

        Specify the event ID in the eventId parameter in the URI.'
      documentation:
        doc: Get Event Details
        doc_link: https://developer.webex.com/docs/api/v1/events/get-event-details
        endpoint: https://webexapis.com/v1/events/{eventId}
        http_method: GET
      header: Get Event Details
      parameters_and_response:
        Response Properties:
        - doc: The unique identifier for the event.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The type of resource in the event.
          name: resource
          param_attrs:
          - doc: State changed on a messages resource
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a memberships resource
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State change on a meeting ( here combined with type = 'ended' )
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State change on a automatic transcript resource for Webex Assistant
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a meeting message, i.e. message exchanged as part
              of a meeting
            name: meetingMessages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a room tabs in a space
            name: tabs
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a space classification
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a card attachment
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a file download
            name: files
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State change on a file preview
            name: file_transcodings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Event Resource Enum
          type_spec: null
        - doc: The action which took place in the event.
          name: type
          param_attrs:
          - doc: The resource has been created
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A property on the resource has been updated
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The resource has been deleted
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The meeting has ended
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Event Type Enum
          type_spec: null
        - doc: The ID of the application for the event.
          name: appId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who performed the action.
          name: actorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization for the event.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the event.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The event's data representation. This object will contain the event's
            resource, such as memberships, messages, meetings, tabs, rooms or attachmentActions
            at the time the event took place.
          name: data
          param_attrs: []
          param_object:
          - doc: ''
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: roomType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: creatorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The meeting's host data
            name: host
            param_attrs: []
            param_object: []
            type: object
            type_spec: null
          - doc: Common Identity (CI) authenticated meeting attendees
            name: attendees
            param_attrs: []
            param_object: []
            type: array
            type_spec: null
          - doc: indicates whether or not the Voice Assistant was enabled during the
              meeting. If true a transcript should be available a couple minutes after
              the meeting ended at the meetingTranscripts resource
            name: transcriptionEnabled
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: indicates if recording was enabled for all or parts of the meeting.
              If true a recording should be available shortly after the meeting ended
              at the recordings resource
            name: recordingEnabled
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: indicates i chat messages were exchanged during the meeting in the
              meetings client (not the unified client). If true these messages can
              be accessed by a compliance officer at the postMeetingsChat resource.
              Meetings chat collection must be custom enabled.
            name: hasPostMeetingsChat
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the event.
          name: eventId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Groups:
    doc: 'Groups contain a collection of members in Webex. A member represents a Webex
      user. A group is used to assign templates and settings to the set of members
      contained in a group.  To create and manage a group, including adding and removing
      members from a group, an auth token containing the identity:groups_rw is required.  Searching
      and viewing members of a group requires an auth token with a scope of identity:groups_read.

      To learn more about managing people to use as members in the /groups API please
      refer to the People API.'
    header: Groups
    methods:
    - doc: Create a new group for a given organization. The group may optionally be
        created with group members.
      documentation:
        doc: Create a Group
        doc_link: https://developer.webex.com/docs/api/v1/groups/create-a-group
        endpoint: https://webexapis.com/v1/groups
        http_method: POST
      header: Create a Group
      parameters_and_response:
        Body Parameters:
        - doc: The name of the group.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ID of the organization to which this group belongs. If not specified,
            the organization ID from the OAuth token is used.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Description of the group.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'An array of members. Maximum of 500 members can be provided. To add
            more members, use the Update a Group API to add additional members.

            Person ID.'
          name: members
          param_attrs: []
          param_object: []
          type: array[PostMember]
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The name of the group.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this group belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The timestamp indicating creation date/time of group
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The timestamp indicating lastModification time of group
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: memberSize
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: An array of members
          name: members
          param_attrs:
          - doc: Person ID of the group member.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Member type.
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Member]
          type_spec: null
    - doc: 'Update the group details, by ID.

        Specify the group ID in the groupId parameter in the URI.'
      documentation:
        doc: Update a Group
        doc_link: https://developer.webex.com/docs/api/v1/groups/update-a-group
        endpoint: https://webexapis.com/v1/groups/{groupId}
        http_method: PATCH
      header: Update a Group
      parameters_and_response:
        Body Parameters:
        - doc: The name of the group.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Description of the group.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of members operations.
          name: members
          param_attrs:
          - doc: Person ID.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Operation type. The default operation is add if no operation is specified.
            name: operation
            param_attrs:
            - doc: Remove member from group
              name: delete
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Add member into group
              name: add
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[PatchMemberWithOperation]
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The name of the group.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this group belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The timestamp indicating creation date/time of group
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The timestamp indicating lastModification time of group
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: memberSize
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: An array of members
          name: members
          param_attrs:
          - doc: Person ID of the group member.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Member type.
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Member]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the group.
          name: groupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get details for a group, by ID.

        Optionally, the members may be retrieved with this request. The maximum number
        of members returned is 500.'
      documentation:
        doc: Get Group Details
        doc_link: https://developer.webex.com/docs/api/v1/groups/get-group-details
        endpoint: https://webexapis.com/v1/groups/{groupId}
        http_method: GET
      header: Get Group Details
      parameters_and_response:
        Query Parameters:
        - doc: Include the members as part of the response.
          name: includeMembers
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The name of the group.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this group belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The timestamp indicating creation date/time of group
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The timestamp indicating lastModification time of group
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: memberSize
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: An array of members
          name: members
          param_attrs:
          - doc: Person ID of the group member.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Member type.
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Member]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the group.
          name: groupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: List groups in your organization.
      documentation:
        doc: List and Search Groups
        doc_link: https://developer.webex.com/docs/api/v1/groups/list-and-search-groups
        endpoint: https://webexapis.com/v1/groups
        http_method: GET
      header: List and Search Groups
      parameters_and_response:
        Query Parameters:
        - doc: List groups in this organization. Only admin users of another organization
            (such as partners) may use this parameter.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Searches the group by displayName with an operator and a value.  The
            available operators are eq (equal) and sw (starts with).  Only displayName
            can be used to filter results.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The attributes to return.
          name: attributes
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sort the results based by group displayName.
          name: sortBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sort results alphabetically by group display name, in ascending or
            descending order.
          name: sortOrder
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Optionally return group members in the response. The maximum number
            of members returned is 500.
          name: includeMembers
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The index to start for group pagination.
          name: startIndex
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies the desired number of search results per page.
          name: count
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: Total number of groups returned in the response.
          name: totalResults
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: ''
          name: startIndex
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: ''
          name: itemsPerPage
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: An array of group objects.
          name: groups
          param_attrs:
          - doc: A unique identifier for the group.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The name of the group.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization to which this group belongs.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The timestamp indicating creation date/time of group
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The timestamp indicating lastModification time of group
            name: lastModified
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: memberSize
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: An array of members
            name: members
            param_attrs:
            - doc: Person ID of the group member.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Member type.
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[Member]
            type_spec: null
          param_object: []
          type: array[Group Response]
          type_spec: null
    - doc: Gets the members of a group.
      documentation:
        doc: Get Group Members
        doc_link: https://developer.webex.com/docs/api/v1/groups/get-group-members
        endpoint: https://webexapis.com/v1/groups/{groupId}/members
        http_method: GET
      header: Get Group Members
      parameters_and_response:
        Query Parameters:
        - doc: The index to start for group pagination.
          name: startIndex
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Non-negative integer that specifies the desired number of search results
            per page. Maximum value for the count is 500.
          name: count
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The name of the group.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this group belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The timestamp indicating creation date/time of group
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The timestamp indicating lastModification time of group
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: memberSize
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: An array of members
          name: members
          param_attrs:
          - doc: Person ID of the group member.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Member type.
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Member]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the group.
          name: groupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Remove a group from the system.

        Specify the group ID in the groupId parameter in the URI.'
      documentation:
        doc: Delete a Group
        doc_link: https://developer.webex.com/docs/api/v1/groups/delete-a-group
        endpoint: https://webexapis.com/v1/groups/{groupId}
        http_method: DELETE
      header: Delete a Group
      parameters_and_response:
        URI Parameters:
        - doc: A unique identifier for the group.
          name: groupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Historical Analytics:
    doc: "Please be aware that the endpoint for these functions is analytics.webexapis.com,\
      \ which also means that the \u2018try-it\u2019 mode won\u2019t work. If you\
      \ have any questions, or if you need help, please contact the Webex Developer\
      \ Support team at devsupport@webex.com.\nThis interface allows an IT Admin to\
      \ pull analytics data from the data backend without having to interact with\
      \ the UI or perform any manual steps.\nTo access the API, the access token must\
      \ represent an admin with either read-only-admin or full-admin roles for the\
      \ given org. In addition, the access token must have the analytics:read_all\
      \ scope\nBy default, the calls to analytics.webexapis.com for historical data\
      \ are sent to closest region servers. If the region servers host the organization's\
      \ data, then the data is returned. Otherwise, a http 451 error code response\
      \ will be returned. The body of the response in this case contains the end point\
      \ information from where user can get historical data for the user's organization.\n\
      Following is an example of how the error message looks like:\n{ \"message\"\
      : \"This server cannot serve the data for this organization. Please use {another\
      \ region's VIP}\", \"errorCode\": 451, \"trackingId\": {trackingId} }\nTo use\
      \ this API the org needs to be licensed for pro pack."
    header: Historical API
    methods:
    - doc: Returns daily aggregates of various metrics related to Messaging
      documentation:
        doc: Historical Data related to Messaging
        doc_link: https://developer.webex.com/docs/api/v1/historical-analytics/historical-data-related-to-messaging
        endpoint: https://analytics.webexapis.com/v1/analytics/messagingMetrics/dailyTotals
        http_method: GET
      header: Historical Data related to Messaging
      parameters_and_response:
        Query Parameters:
        - doc: UTC Date starting from which the data needs to be returned
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: UTC Date till which the data needs to be returned
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Data is returned starting from this UTC date
          name: startDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Data is returned till this UTC date
          name: endDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: metrics
          param_attrs: []
          param_object:
          - doc: An Array containing the UTC dates for which the data is returned
            name: dates
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An array containing the aggregated values for each day for which
              the data is returned
            name: dailyActiveUsers
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: totalMessagesSent
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: deskTopMessagesSent
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: mobileMessagesSent
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: totalActiveSpaces
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: groupActiveSpaces
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: one2oneActiveSpaces
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: video
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: sharing
            param_attrs: []
            param_object:
            - doc: ''
              name: totalFilesShared
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: fileShareSize
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          - doc: ''
            name: recording
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: audio
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
    - doc: Returns daily aggregates of various metrics related to Room Devices
      documentation:
        doc: Historical Data related to Room Devices
        doc_link: https://developer.webex.com/docs/api/v1/historical-analytics/historical-data-related-to-room-devices
        endpoint: https://analytics.webexapis.com/v1/analytics/roomDeviceMetrics/dailyTotals
        http_method: GET
      header: Historical Data related to Room Devices
      parameters_and_response:
        Query Parameters:
        - doc: UTC Date starting from which the data needs to be returned
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: UTC Date till which the data needs to be returned
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Data is returned starting from this UTC date
          name: startDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Data is returned till this UTC date
          name: endDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: metrics
          param_attrs: []
          param_object:
          - doc: An Array containing the UTC dates for which the data is returned
            name: dates
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An array containing the aggregated values for each day for which
              the data is returned
            name: totalActiveDevices
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: totalAssistantCommands
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: totalUsageHours
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: incallUsageDuration
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: signageUsageDuration
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: usbpassthroughUsageDuration
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: whiteboardingUsageDuration
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: video
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: sharing
            param_attrs: []
            param_object:
            - doc: ''
              name: localsharingcableUsageDuration
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: localsharingwirelessUsageDuration
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          - doc: ''
            name: recording
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: audio
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
    - doc: Return aggregates of various metrics, related to meetings, for the siteUrl
        and over the time range specified by the user
      documentation:
        doc: Historical Data related to Meetings
        doc_link: https://developer.webex.com/docs/api/v1/historical-analytics/historical-data-related-to-meetings
        endpoint: https://analytics.webexapis.com/v1/analytics/meetingsMetrics/aggregates
        http_method: GET
      header: Historical Data related to Meetings
      parameters_and_response:
        Query Parameters:
        - doc: Site related to which the data is expected. This parameter is required
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: UTC Date starting from which the data needs to be returned
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: UTC Date till which the data needs to be returned
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Site related to which the data is returned
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Data is returned starting from this UTC date
          name: startDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Data is returned till this UTC date
          name: endDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: metrics
          param_attrs: []
          param_object:
          - doc: Total number of meetings held over the selected date range. includes
              Webex Meetings, Webex Events, Webex Support, and Webex Training sessions
            name: totalMeetings
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of joins by participant and devices from all Webex meetings
              over the selected date range
            name: totalParticipants
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of unique hosts who started atleast one webex meeting
              over the selected date range
            name: totalUniqueHosts
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of minutes for all meetings over selected date range
            name: totalMeetingMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of VoIP and telephony minutes used during meetings over
              the selected date range
            name: totalAudioMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: ''
            name: totalTelephoneMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: ''
            name: totalVoIPMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of meetings held where at least one participant enabled
              video for any amount of time
            name: videoMeetings
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of meetings held where atleast one participant enabled
              sharing for any amount of time
            name: sharingMeetings
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of meetings held where atleast one participant enable
              recording for any amount of time
            name: recordingMeetings
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Participant Count for each join/client type. This list is dynamic
              and can change
            name: participantsByJoinMethods
            param_attrs: []
            param_object:
            - doc: ''
              name: webApp
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: ''
              name: cloudVideoDevice
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: ''
              name: mobileMeetingsApp
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            type: object
            type_spec: null
          - doc: Participant Count for each Role
            name: participantsByRoles
            param_attrs: []
            param_object:
            - doc: ''
              name: host
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: ''
              name: attendee
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            type: object
            type_spec: null
          - doc: Participant Count for each Location. This is a json array of countries
            name: participantsByLocation
            param_attrs:
            - doc: '

                Possible values: United States'
              name: country
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: '

                Possible values: 123'
              name: totalParticipants
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          type: object
          type_spec: null
  Hybrid Clusters:
    doc: 'Hybrid Clusters are groups of hosts, and the connectors these hosts contain,
      that are managed as a unit.  All the connectors of a single type in a cluster
      share the same configuration.

      Listing and viewing Hybrid Clusters requires an administrator auth token with
      the spark-admin:hybrid_clusters_read scope.

      Hybrid Clusters are associated with Resource Groups. See the Resource Groups
      API for more information.'
    header: Hybrid Clusters
    methods:
    - doc: 'List hybrid clusters for an organization. If no orgId is specified, the
        default is the organization of the authenticated user.

        Only an admin auth token with the spark-admin:hybrid_clusters_read scope can
        list clusters.'
      documentation:
        doc: List Hybrid Clusters
        doc_link: https://developer.webex.com/docs/api/v1/hybrid-clusters/list-hybrid-clusters
        endpoint: https://webexapis.com/v1/hybrid/clusters
        http_method: GET
      header: List Hybrid Clusters
      parameters_and_response:
        Query Parameters:
        - doc: List hybrid clusters in this organization. If an organization is not
            specified, the organization of the caller will be used.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of hybrid cluster objects.
          name: items
          param_attrs:
          - doc: A unique identifier for the cluster.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization to which this hybrid cluster belongs.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The name of the cluster.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the resource group this cluster belongs to.
            name: resourceGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Cluster]
          type_spec: null
    - doc: 'Shows details for a hybrid cluster, by ID.

        Only an admin auth token with the spark-admin:hybrid_clusters_read scope can
        see cluster details.'
      documentation:
        doc: Get Hybrid Cluster Details
        doc_link: https://developer.webex.com/docs/api/v1/hybrid-clusters/get-hybrid-cluster-details
        endpoint: https://webexapis.com/v1/hybrid/clusters/{hybridClusterId}
        http_method: GET
      header: Get Hybrid Cluster Details
      parameters_and_response:
        Query Parameters:
        - doc: 'Find the cluster in this specific organization.

            If this is not specified, the organization of the caller

            will be used.'
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the cluster.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this hybrid cluster belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The name of the cluster.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the resource group this cluster belongs to.
          name: resourceGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The ID of the cluster.
          name: hybridClusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Hybrid Connectors:
    doc: 'Hybrid Connectors are pieces of software that run on-premise and provide
      a link between the Webex Cloud and on-premise resources.

      For example, the Calendar Connector enables the linking of information from
      an on-premise Exchange server with the Webex Cloud. It allows, among other things,
      for the cloud to set up a Webex meeting when a user specifies @webex as the
      Location of a meeting in Outlook.

      Listing and viewing Hybrid Connectors requires an administrator auth token with
      the spark-admin:hybrid_connectors_read scope.

      Use this API to list the connectors configured in an organization and to determine
      if any connectors have any unresolved alarms associated with them.'
    header: Hybrid Connectors
    methods:
    - doc: 'List hybrid connectors for an organization. If no orgId is specified,
        the default is the organization of the authenticated user.

        Only an admin auth token with the spark-admin:hybrid_connectors_read scope
        can list connectors.'
      documentation:
        doc: List Hybrid Connectors
        doc_link: https://developer.webex.com/docs/api/v1/hybrid-connectors/list-hybrid-connectors
        endpoint: https://webexapis.com/v1/hybrid/connectors
        http_method: GET
      header: List Hybrid Connectors
      parameters_and_response:
        Query Parameters:
        - doc: List hybrid connectors in this organization. If an organization is
            not specified, the organization of the caller will be used.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of hybrid connector objects.
          name: items
          param_attrs:
          - doc: A unique identifier for the connector.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization to which this hybrid connector belongs.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the cluster this connector belongs to.
            name: hybridClusterId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The hostname of the system the connector is running on.
            name: hostname
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The status of the connector:

              * operational  indicates that the connector is working as it should.

              * impaired  indicates that the connector has problems with one or more
              dependent components.

              * outage  indicates that the connector is completely non-functional.

              * maintenanceMode  reports the current maintenance mode state of the
              connector.'
            name: status
            param_attrs:
            - doc: ''
              name: operational
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: impaired
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: outage
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: maintenanceMode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Connector Status
            type_spec: null
          - doc: The date and time the connector was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of connector.
            name: type
            param_attrs:
            - doc: ''
              name: expresswayManagement
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: calendar
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: call
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: message
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: expresswayServiceability
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: ecpServiceability
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: videoMesh
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: dataSecurity
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: care
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: careManagement
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Connector Type
            type_spec: null
          - doc: The version of the software installed.
            name: version
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A list of alarms raised on the connector.
            name: alarms
            param_attrs:
            - doc: A unique identifier for the alarm.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The date and time the alarm was raised.
              name: created
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The severity level of the alarm:

                * critical

                * error

                * warning

                * alert'
              name: severity
              param_attrs:
              - doc: ''
                name: critical
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: warning
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: alert
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: error
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: Alarm Severity
              type_spec: null
            - doc: The title of the alarm.
              name: title
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A description of the alarm.
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The ID of the connector the alarm is raised on.
              name: hybridConnectorId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[Alarm]
            type_spec: null
          param_object: []
          type: array[Connector]
          type_spec: null
    - doc: 'Shows details for a hybrid connector, by ID.

        Only an admin auth token with the spark-admin:hybrid_connectors_read scope
        can see connector details.'
      documentation:
        doc: Get Hybrid Connector Details
        doc_link: https://developer.webex.com/docs/api/v1/hybrid-connectors/get-hybrid-connector-details
        endpoint: https://webexapis.com/v1/hybrid/connectors/{connectorId}
        http_method: GET
      header: Get Hybrid Connector Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the connector.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this hybrid connector belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the cluster this connector belongs to.
          name: hybridClusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The hostname of the system the connector is running on.
          name: hostname
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The status of the connector:

            * operational  indicates that the connector is working as it should.

            * impaired  indicates that the connector has problems with one or more
            dependent components.

            * outage  indicates that the connector is completely non-functional.

            * maintenanceMode  reports the current maintenance mode state of the connector.'
          name: status
          param_attrs:
          - doc: ''
            name: operational
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: impaired
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: outage
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: maintenanceMode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Connector Status
          type_spec: null
        - doc: The date and time the connector was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The type of connector.
          name: type
          param_attrs:
          - doc: ''
            name: expresswayManagement
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: calendar
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: call
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: message
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: expresswayServiceability
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: ecpServiceability
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: videoMesh
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: dataSecurity
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: care
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: careManagement
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Connector Type
          type_spec: null
        - doc: The version of the software installed.
          name: version
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A list of alarms raised on the connector.
          name: alarms
          param_attrs:
          - doc: A unique identifier for the alarm.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the alarm was raised.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The severity level of the alarm:

              * critical

              * error

              * warning

              * alert'
            name: severity
            param_attrs:
            - doc: ''
              name: critical
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: warning
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: alert
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: error
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Alarm Severity
            type_spec: null
          - doc: The title of the alarm.
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A description of the alarm.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the connector the alarm is raised on.
            name: hybridConnectorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Alarm]
          type_spec: null
        URI Parameters:
        - doc: The ID of the connector.
          name: connectorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Licenses:
    doc: 'An allowance for features and services that are provided to users on a Webex
      services subscription. Cisco and its partners manage the amount of licenses
      provided to administrators and users. This license resource can be accessed
      only by an admin.

      To learn about how to allocate Hybrid Services licenses, see the Managing Hybrid
      Services guide.'
    header: Licenses
    methods:
    - doc: 'List all licenses for a given organization.  If no orgId is specified,
        the default is the organization of the authenticated user.

        Response properties that are not applicable to the license will not be present
        in the response.'
      documentation:
        doc: List Licenses
        doc_link: https://developer.webex.com/docs/api/v1/licenses/list-licenses
        endpoint: https://webexapis.com/v1/licenses
        http_method: GET
      header: List Licenses
      parameters_and_response:
        Query Parameters:
        - doc: List licenses for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the license.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the licensed feature.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Total number of license units allocated.
            name: totalUnits
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of license units consumed.
            name: consumedUnits
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The subscription ID associated with this license. This ID is used
              in other systems, such as Webex Control Hub.
            name: subscriptionId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Webex Meetings site associated with this license.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of site associated with this license.
            name: siteType
            param_attrs:
            - doc: The site is managed by Webex Control Hub.
              name: Control Hub managed site
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The site is a linked site.
              name: Linked site
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The site is managed by Site Administration.
              name: Site Admin managed site
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[License]
          type_spec: null
    - doc: 'Shows details for a license, by ID.

        Specify the license ID in the licenseId parameter in the URI.

        Response properties that are not applicable to the license will not be present
        in the response.'
      documentation:
        doc: Get License Details
        doc_link: https://developer.webex.com/docs/api/v1/licenses/get-license-details
        endpoint: https://webexapis.com/v1/licenses/{licenseId}
        http_method: GET
      header: Get License Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the license.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the licensed feature.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Total number of license units allocated.
          name: totalUnits
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Total number of license units consumed.
          name: consumedUnits
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The subscription ID associated with this license. This ID is used in
            other systems, such as Webex Control Hub.
          name: subscriptionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex Meetings site associated with this license.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The type of site associated with this license.
          name: siteType
          param_attrs:
          - doc: The site is managed by Webex Control Hub.
            name: Control Hub managed site
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The site is a linked site.
            name: Linked site
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The site is managed by Site Administration.
            name: Site Admin managed site
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the license.
          name: licenseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Locations:
    doc: 'Locations allow you to organize users and workspaces based on a physical
      location. You can configure both calling and workspace management functions
      into the same location. To enable a location for Webex Calling, use the Enable
      a Location for Webex Calling API.

      You can also create and inspect locations in Webex Control Hub. See Locations
      on Control Hub for more information.'
    header: Locations
    methods:
    - doc: List locations for an organization.
      documentation:
        doc: List Locations
        doc_link: https://developer.webex.com/docs/api/v1/locations/list-locations
        endpoint: https://webexapis.com/v1/locations
        http_method: GET
      header: List Locations
      parameters_and_response:
        Query Parameters:
        - doc: List locations whose name contains this string (case-insensitive).
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List locations by ID.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List locations in this organization. Only admin users of another organization
            (such as partners) may use this parameter.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of location in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The name of the location.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization to which this location belongs.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Time zone associated with this location.
            name: timeZone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The address of the location.
            name: address
            param_attrs: []
            param_object:
            - doc: Address 1
              name: address1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Address 2
              name: address2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: City
              name: city
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State code
              name: state
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ZIP/Postal Code
              name: postalCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ISO-3166 2-Letter Country Code.
              name: country
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: array[Location]
          type_spec: null
    - doc: Shows details for a location, by ID.
      documentation:
        doc: Get Location Details
        doc_link: https://developer.webex.com/docs/api/v1/locations/get-location-details
        endpoint: https://webexapis.com/v1/locations/{locationId}
        http_method: GET
      header: Get Location Details
      parameters_and_response:
        Query Parameters:
        - doc: Get location common attributes for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The name of the location.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this location belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Time zone associated with this location.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The address of the location.
          name: address
          param_attrs: []
          param_object:
          - doc: Address 1
            name: address1
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Address 2
            name: address2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: City
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State code
            name: state
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ZIP/Postal Code
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ISO-3166 2-Letter Country Code.
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Create a new Location for a given organization. Only an admin in the organization
        can create a new Location.
      documentation:
        doc: Create a Location
        doc_link: https://developer.webex.com/docs/api/v1/locations/create-a-location
        endpoint: https://webexapis.com/v1/locations
        http_method: POST
      header: Create a Location
      parameters_and_response:
        Body Parameters:
        - doc: The name of the location.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Time zone associated with this location, refer to this link (https://developer.webex.com/docs/api/guides/webex-for-broadworks-developers-guide#webex-meetings-site-timezone)
            for format.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Default email language.
          name: preferredLanguage
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Location's phone announcement language.
          name: announcementLanguage
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The address of the location.
          name: address
          param_attrs:
          - doc: Address 1
            name: address1
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Address 2
            name: address2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: City
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: State code
            name: state
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Postal Code
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: ISO-3166 2-Letter Country Code.
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: object
          type_spec: required
        Query Parameters:
        - doc: Create a location common attribute for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Update details for a location, by ID.
      documentation:
        doc: Update a Location
        doc_link: https://developer.webex.com/docs/api/v1/locations/update-a-location
        endpoint: https://webexapis.com/v1/locations/{locationId}
        http_method: PUT
      header: Update a Location
      parameters_and_response:
        Body Parameters:
        - doc: The name of the location.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Time zone associated with this location, refer to this link (https://developer.webex.com/docs/api/guides/webex-for-broadworks-developers-guide#webex-meetings-site-timezone)
            for format.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Default email language.
          name: preferredLanguage
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The address of the location.
          name: address
          param_attrs:
          - doc: Address 1
            name: address1
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Address 2
            name: address2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: City
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State code
            name: state
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Postal Code
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ISO-3166 2-Letter Country Code.
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: Update location common attributes for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Update location common attributes for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List location floors.

        Requires an administrator auth token with the spark-admin:locations_read scope.'
      documentation:
        doc: List Location Floors
        doc_link: https://developer.webex.com/docs/api/v1/locations/list-location-floors
        endpoint: https://webexapis.com/v1/locations/{locationId}/floors
        http_method: GET
      header: List Location Floors
      parameters_and_response:
        Response Properties:
        - doc: An array of floor objects.
          name: items
          param_attrs:
          - doc: Unique identifier for the floor.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the location.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The floor number.
            name: floorNumber
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The floor display name.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Floor]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create a new floor in the given location. The displayName parameter is
        optional, and omitting it will result in the creation of a floor without that
        value set.

        Requires an administrator auth token with the spark-admin:locations_write
        scope.'
      documentation:
        doc: Create a Location Floor
        doc_link: https://developer.webex.com/docs/api/v1/locations/create-a-location-floor
        endpoint: https://webexapis.com/v1/locations/{locationId}/floors
        http_method: POST
      header: Create a Location Floor
      parameters_and_response:
        Body Parameters:
        - doc: The floor number.
          name: floorNumber
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: The floor display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for the floor.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The floor number.
          name: floorNumber
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The floor display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Shows details for a floor, by ID. Specify the floor ID in the floorId
        parameter in the URI.

        Requires an administrator auth token with the spark-admin:locations_read scope.'
      documentation:
        doc: Get Location Floor Details
        doc_link: https://developer.webex.com/docs/api/v1/locations/get-location-floor-details
        endpoint: https://webexapis.com/v1/locations/{locationId}/floors/{floorId}
        http_method: GET
      header: Get Location Floor Details
      parameters_and_response:
        Response Properties:
        - doc: Unique identifier for the floor.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The floor number.
          name: floorNumber
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The floor display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A unique identifier for the floor.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates details for a floor, by ID. Specify the floor ID in the floorId
        parameter in the URI. Include all details for the floor returned by a previous
        call to Get Location Floor Details. Omitting the optional displayName field
        will result in that field no longer being defined for the floor.

        Requires an administrator auth token with the spark-admin:locations_write
        scope.'
      documentation:
        doc: Update a Location Floor
        doc_link: https://developer.webex.com/docs/api/v1/locations/update-a-location-floor
        endpoint: https://webexapis.com/v1/locations/{locationId}/floors/{floorId}
        http_method: PUT
      header: Update a Location Floor
      parameters_and_response:
        Body Parameters:
        - doc: The floor number.
          name: floorNumber
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: The floor display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for the floor.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The floor number.
          name: floorNumber
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The floor display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A unique identifier for the floor.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a floor, by ID.

        Requires an administrator auth token with the spark-admin:locations_write
        scope.'
      documentation:
        doc: Delete a Location Floor
        doc_link: https://developer.webex.com/docs/api/v1/locations/delete-a-location-floor
        endpoint: https://webexapis.com/v1/locations/{locationId}/floors/{floorId}
        http_method: DELETE
      header: Delete a Location Floor
      parameters_and_response:
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A unique identifier for the floor.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Meeting Chats:
    doc: 'Chats are content captured in a meeting when chat messages are sent between
      the participants within a meeting. This feature allows a Compliance Officer
      to access the in-meeting chat content.

      The Compliance Officer can use the Meeting Chats API to retrieve the chats of
      a meeting and to delete all chats associated with a meeting. private chats are
      text messages between two people. group chats are for larger breakout spaces.
      Meeting chats are different from room messages in that there is no catch-up
      propagation. For example, if a user joins a meeting late only, chat messages
      that are created from then on, will be propagated to this user. To understand
      which user saw which message if they joined late, you have to query the meetingParticipants
      REST resource for the joined/left times and compare to the meetingsChat chatTime
      field.

      The Webex meetings chat functionality and API endpoint described here is "upon-request"
      and not enabled by default. If you need it enabled for your org, or if you need
      help, please contact the Webex Developer Support team at devsupport@webex.com.'
    header: Meeting Chats
    methods:
    - doc: 'Lists the meeting chats of a finished meeting instance specified by meetingId.
        You can set a maximum number of chats to return.

        Use this operation to list the chats of a finished meeting instance when they
        are ready. Please note that only meeting instances in state ended are supported
        for meetingId. Meeting series, scheduled meetings and in-progress meeting
        instances are not supported.'
      documentation:
        doc: List Meeting Chats
        doc_link: https://developer.webex.com/docs/api/v1/meeting-chats/list-meeting-chats
        endpoint: https://webexapis.com/v1/meetings/postMeetingChats
        http_method: GET
      header: List Meeting Chats
      parameters_and_response:
        Query Parameters:
        - doc: A unique identifier for the meeting instance to which the chats belong.
            The meeting ID of a scheduled personal room meeting is not supported.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Limit the maximum number of meeting chats in the response, up to 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Offset from the first result that you want to fetch.
          name: offset
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: Chat array
          name: items
          param_attrs:
          - doc: A unique identifier for the chat snippet.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Chat time for the chat snippet in ISO 8601 compliant format.
            name: chatTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The text of the chat snippet.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the meeting instance to which the chat belongs.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether the type of the chat is private, public or group. Private
              chat is for the 1:1 chat. Public chat is for the message which is sent
              to all the people in the meeting. Group chat is for the message which
              is sent to a small group of people, like a message to "host and presenter".
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Information of the sender of the chat snippet.
            name: sender
            param_attrs: []
            param_object:
            - doc: Email address of the sender of the meeting chat snippet.
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Display name for the sender.
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A unique identifier for the sender.
              name: personId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The ID of the organization to which the sender belongs.
              name: orgId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          - doc: Information of the receivers of the chat snippet.
            name: receivers
            param_attrs:
            - doc: 'Email address of the receiver of the meeting chat snippet.

                Possible values: catherine.sinu@example.com'
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Display name for the receiver.

                Possible values: Catherine Sinu'
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'A unique identifier for the receiver.

                Possible values: Y2lzY29zcGFyazovL3VzL1BFT1BMRS81YmVkZWUyMC1hNjI3LTQ4YTUtODg0Yi04NjVhODhlZmFhNzM'
              name: personId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The ID of the organization to which the receiver belongs.

                Possible values: Y2lzY29zcGFyazovL3VzL09SR0FOSVpBVElPTi81OWU2NzUyNy00NjUxLTRjOTAtYjJmMC00Zjg2YzNiYjY2MDg'
              name: orgId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          param_object: []
          type: array[ChatObject]
          type_spec: null
    - doc: 'Deletes the meeting chats of a finished meeting instance specified by
        meetingId.

        Use this operation to delete the chats of a finished meeting instance when
        they are ready. Please note that only meeting instances in state ended are
        supported for meetingId. Meeting series, scheduled meetings and in-progress
        meeting instances are not supported.'
      documentation:
        doc: Delete Meeting Chats
        doc_link: https://developer.webex.com/docs/api/v1/meeting-chats/delete-meeting-chats
        endpoint: https://webexapis.com/v1/meetings/postMeetingChats
        http_method: DELETE
      header: Delete Meeting Chats
      parameters_and_response:
        Query Parameters:
        - doc: A unique identifier for the meeting instance to which the chats belong.
            Meeting IDs of a scheduled personal room meeting are not supported.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Meeting Closed Captions:
    doc: 'Meeting Closed Captions APIs are enabled upon request, and are not available
      by default. Please contact the Webex Developer Support team at devsupport@webex.com
      if you would like to enable this feature for your organization.

      Meeting closed captions are the automatic transcriptions of what is being said
      during a meeting in real-time. Closed captions appear after being enabled during
      a meeting and can be translated to a participant''s language.

      A closed caption snippet is a short text snippet from a meeting closed caption
      which was spoken by a particular participant in the meeting. A meeting''s closed
      captions consists of many snippets.

      The Closed Captions API manages meeting closed captions and snippets. You can
      list meeting closed captions, as well as list and download snippets. Closed
      captions can  be retrieved in either Web Video Text Tracks (VTT) or plain text
      (TXT) format via the download links provided by the vttDownloadLink and txtDownloadlink
      response properties, respectively.

      Refer to the Meetings API Scopes section of Meetings Overview guide for the
      scopes required for each API.

      Notes:

      Currently, closed caption APIs are only supported for the Compliance Officer
      role.

      Closed captions will be available 15 minutes after the meeting is finished.'
    header: Meeting Closed Captions
    methods:
    - doc: Lists closed captions of a finished meeting instance specified by meetingId.
      documentation:
        doc: List Meeting Closed Captions
        doc_link: https://developer.webex.com/docs/api/v1/meeting-closed-captions/list-meeting-closed-captions
        endpoint: https://webexapis.com/v1/meetingClosedCaptions
        http_method: GET
      header: List Meeting Closed Captions
      parameters_and_response:
        Query Parameters:
        - doc: Unique identifier for the meeting instance which the closed captions
            belong to. This parameter only applies to ended meeting instnaces. It
            does not apply to meeting series, scheduled meetings or scheduled personal
            room meetings.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Closed caption array
          name: items
          param_attrs:
          - doc: A unique identifier for the closed caption.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the meeting instance which the closed captions
              belong to.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The download link for the closed caption vtt file.
            name: vttDownloadLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The download link for the closed caption txt file.
            name: txtDownloadLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start time for the meeting closed caption in ISO 8601 compliant format.
            name: start
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[ClosedCaptionObject]
          type_spec: null
    - doc: Lists snippets of a meeting closed caption specified by closedCaptionId.
      documentation:
        doc: List Meeting Closed Caption Snippets
        doc_link: https://developer.webex.com/docs/api/v1/meeting-closed-captions/list-meeting-closed-caption-snippets
        endpoint: https://webexapis.com/v1/meetingClosedCaptions/{closedCaptionId}/snippets
        http_method: GET
      header: List Meeting Closed Caption Snippets
      parameters_and_response:
        Query Parameters:
        - doc: Unique identifier for the meeting instance which the closed caption
            snippets belong to. This parameter only applies to ended meeting instances.
            It does not apply to meeting series, scheduled meetings or scheduled personal
            room meetings.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Closed caption snippet array
          name: items
          param_attrs:
          - doc: A unique identifier for the closed caption snippet.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the meeting instance which the closed captions
              belong to.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Text for the snippet.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the person who spoke.
            name: personName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address of the person who spoke.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The unique identifier for the person speaking.
            name: peopleId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start time for the snippet.
            name: start
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Offset from the beginning of the closed captions in milliseconds
              indicating the start time of the snippet.
            name: offsetMillisecond
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Duration of the snippet in milliseconds.
            name: durationMillisecond
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Original language of the snippet.
            name: language
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[SnippetObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting closed caption which the snippets
            belong to.
          name: closedCaptionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Download meeting closed caption snippets from the meeting closed caption
        specified by closedCaptionId formatted either as a Video Text Track (.vtt)
        file or plain text (.txt) file.
      documentation:
        doc: Download Meeting Closed Caption Snippets
        doc_link: https://developer.webex.com/docs/api/v1/meeting-closed-captions/download-meeting-closed-caption-snippets
        endpoint: https://webexapis.com/v1/meetingClosedCaptions/{closedCaptionId}/download
        http_method: GET
      header: Download Meeting Closed Caption Snippets
      parameters_and_response:
        Query Parameters:
        - doc: 'Format for the downloaded meeting closed caption snippets.

            Possible values: vtt, txt'
          name: format
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the meeting instance which the closed caption
            snippets belong to. This parameter only applies to meeting instances in
            the ended state. It does not apply to meeting series, scheduled meetings
            or scheduled personal room meetings.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        URI Parameters:
        - doc: Unique identifier for the meeting closed caption.
          name: closedCaptionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Meeting Invitees:
    doc: 'This API manages invitees'' relationships to a meeting.

      You can use the Meeting Invitees API to list, create, update, and delete invitees.

      Refer to the Meetings API Scopes section of Meetings Overview for scopes required
      for each API.'
    header: Meeting Invitees
    methods:
    - doc: 'Lists meeting invitees for a meeting with a specified meetingId. You can
        set a maximum number of invitees to return.

        This operation can be used for meeting series, scheduled meetings, and ended
        or ongoing meeting instance objects. If the specified meetingId is for a meeting
        series, the invitees for the series will be listed; if the meetingId is for
        a scheduled meeting, the invitees for the particular scheduled meeting will
        be listed; if the meetingId is for an ended or ongoing meeting instance, the
        invitees for the particular meeting instance will be listed. See the Webex
        Meetings guide for more information about the types of meetings.

        The list returned is sorted in ascending order by email address.

        Long result sets are split into pages.'
      documentation:
        doc: List Meeting Invitees
        doc_link: https://developer.webex.com/docs/api/v1/meeting-invitees/list-meeting-invitees
        endpoint: https://webexapis.com/v1/meetingInvitees
        http_method: GET
      header: List Meeting Invitees
      parameters_and_response:
        Query Parameters:
        - doc: Unique identifier for the meeting for which invitees are being requested.
            The meeting can be a meeting series, a scheduled meeting, or a meeting
            instance which has ended or is ongoing. The meeting ID of a scheduled
            personal room meeting is not supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Limit the maximum number of meeting invitees in the response, up to
            100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin on-behalf-of scopes.
            If set, the admin may specify the email of a user in a site they manage
            and the API will return meeting invitees that are hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Filter invitees or attendees for webinars only. If true, returns invitees.
            If false, returns attendees. If null, returns both invitees and attendees.
          name: panelist
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of meeting invitees.
          name: items
          param_attrs:
          - doc: Unique identifier for meeting invitee.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address for meeting invitee. This attribute can be modified
              by Update a Meeting Invitee API.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name for meeting invitee. This attribute can be modified
              by Update a Meeting Invitee API.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not invitee is a designated alternate host for the meeting.
              See Add Alternate Hosts for Cisco Webex Meetings for more details.
            name: coHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Unique identifier for the meeting for which invitees are being requested.
              The meeting can be a meeting series, a scheduled meeting, or a meeting
              instance which has ended or is ongoing.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If true, the invitee is a designated panelist for the event meeting.
            name: panelist
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[GetInviteeObject]
          type_spec: null
    - doc: 'Invite a person to attend a meeting.

        Identify the invitee in the request body, by email address.'
      documentation:
        doc: Create a Meeting Invitee
        doc_link: https://developer.webex.com/docs/api/v1/meeting-invitees/create-a-meeting-invitee
        endpoint: https://webexapis.com/v1/meetingInvitees
        http_method: POST
      header: Create a Meeting Invitee
      parameters_and_response:
        Body Parameters:
        - doc: Unique identifier for the meeting to which a person is being invited.
            This attribute only applies to meeting series and scheduled meeting. If
            it's a meeting series, the meeting invitee is invited to the entire meeting
            series; if it's a scheduled meeting, the meeting invitee is invited to
            this individual scheduled meeting. It doesn't apply to an ended or ongoing
            meeting instance. The meeting ID of a scheduled personal room meeting
            is not supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Email address for meeting invitee.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Display name for meeting invitee. The maximum length of displayName
            is 128 characters. In the Webex app, if the email has been associated
            with an existing Webex account, the display name associated with the Webex
            account will be used; otherwise, the email will be used as displayName.
            In a Webex site, if displayName is specified, it will show displayName.
            If displayName is not specified, and the email has been associated with
            an existing Webex account, the display name associated with the Webex
            account will be used; otherwise, the email will be used as displayName.

            If the invitee has an existing Webex account, the displayName shown in
            the meeting will be the displayName associated with the Webex account;
            otherwise, displayName shown in the meeting will be the displayName which
            is specified by the invitee who does not have a Webex account.'
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the invitee is a designated alternate host for the meeting.
            See Add Alternate Hosts for Cisco Webex Meetings for more details.
          name: coHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This attribute should only be set
            if the user or application calling the API has the admin on-behalf-of
            scopes. When used, the admin may specify the email of a user in a site
            they manage to be the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: If true, send an email to the invitee.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: If true, the invitee is a designated panelist for the event meeting.
          name: panelist
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: Unique identifier for meeting invitee.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for meeting invitee. This attribute can be modified by
            Update a Meeting Invitee API.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name for meeting invitee. This attribute can be modified by
            Update a Meeting Invitee API.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not invitee is a designated alternate host for the meeting.
            See Add Alternate Hosts for Cisco Webex Meetings for more details.
          name: coHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Unique identifier for the meeting for which invitees are being requested.
            The meeting can be a meeting series, a scheduled meeting, or a meeting
            instance which has ended or is ongoing.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: If true, the invitee is a designated panelist for the event meeting.
          name: panelist
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
    - doc: 'Invite people to attend a meeting in bulk.

        Identify each invitee by the email address of each item in the items of the
        request body.

        Each invitee should have a unique email.

        This API limits the maximum size of items in the request body to 100.'
      documentation:
        doc: Create Meeting Invitees
        doc_link: https://developer.webex.com/docs/api/v1/meeting-invitees/create-meeting-invitees
        endpoint: https://webexapis.com/v1/meetingInvitees/bulkInsert
        http_method: POST
      header: Create Meeting Invitees
      parameters_and_response:
        Body Parameters:
        - doc: Unique identifier for the meeting to which the people are being invited.
            This attribute only applies to meeting series and scheduled meetings.
            If it's a meeting series, the meeting invitees are invited to the entire
            meeting series; if it's a scheduled meeting, the meeting invitees are
            invited to this individual scheduled meeting. It doesn't apply to an ended
            or ongoing meeting instance. The meeting ID of a scheduled personal room
            meeting is not supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Email address for the meeting host. This attribute should only be set
            if the user or application calling the API has the admin on-behalf-of
            scopes. When used, the admin may specify the email of a user in a site
            they manage to be the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting invitees to be inserted.
          name: items
          param_attrs:
          - doc: Email address for meeting invitee.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: 'Display name for meeting invitee. The maximum length of displayName
              is 128 characters. In Webex App, if the email has been associated with
              an existing Webex account, the display name associated with the Webex
              account will be used; otherwise, the email will be used as displayName.
              In Webex site, if displayName is specified, it will show displayName.
              If displayName is not specified, and the email has been associated with
              an existing Webex account, the display name associated with the Webex
              account will be used; otherwise, the email will be used as displayName.

              Please note that if the invitee has an existing Webex account, the displayName
              shown in the meeting will be the displayName associated with the Webex
              account; otherwise, displayName shown in the meeting will be the displayName
              which is specified by the invitee who does not have a Webex account.'
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not invitee is a designated alternate host for the meeting.
              See Add Alternate Hosts for Cisco Webex Meetings for more details.
            name: coHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: If true, send an email to the invitee.
            name: sendEmail
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: If true, the invitee is a designated panelist for the event meeting.
            name: panelist
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[CreateInviteesItemObject]
          type_spec: null
        Response Properties:
        - doc: Meeting invitees inserted.
          name: items
          param_attrs:
          - doc: Unique identifier for meeting invitee.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the meeting to which a person is being invited.
              This attribute only applies to meeting series and scheduled meeting.
              If it's a meeting series, the meeting invitee is invited to the entire
              meeting series; if it's a scheduled meeting, the meeting invitee is
              invited to this individual scheduled meeting. It doesn't apply to an
              ended or ongoing meeting instance.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address for meeting invitee.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Display name for meeting invitee. The maximum length of displayName
              is 128 characters. In the Webex App, if the email has been associated
              with an existing Webex account, the display name associated with the
              Webex account will be used; otherwise, the email will be used as displayName.
              In Webex site, if displayName is specified, it will show displayName.
              If displayName is not specified, and the email has been associated with
              an existing Webex account, the display name associated with the Webex
              account will be used; otherwise, the email will be used as displayName.

              If the invitee has an existing Webex account, the displayName shown
              in the meeting will be the displayName associated with the Webex account;
              otherwise, displayName shown in the meeting will be the displayName
              which is specified by the invitee who does not have a Webex account.'
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the invitee is a designated alternate host for the
              meeting. See Add Alternate Hosts for Cisco Webex Meetings for more details.
            name: coHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: If true, the invitee is a designated panelist for the event meeting.
            name: panelist
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[CreateInviteesItemResponseObject]
          type_spec: null
    - doc: Retrieve details for a meeting invitee identified by a meetingInviteeId
        in the URI.
      documentation:
        doc: Get a Meeting Invitee
        doc_link: https://developer.webex.com/docs/api/v1/meeting-invitees/get-a-meeting-invitee
        endpoint: https://webexapis.com/v1/meetingInvitees/{meetingInviteeId}
        http_method: GET
      header: Get a Meeting Invitee
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin on-behalf-of scopes.
            If set, the admin may specify the email of a user in a site they manage
            and the API will return details for a meeting invitee that is hosted by
            that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for meeting invitee.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for meeting invitee. This attribute can be modified by
            Update a Meeting Invitee API.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name for meeting invitee. This attribute can be modified by
            Update a Meeting Invitee API.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not invitee is a designated alternate host for the meeting.
            See Add Alternate Hosts for Cisco Webex Meetings for more details.
          name: coHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Unique identifier for the meeting for which invitees are being requested.
            The meeting can be a meeting series, a scheduled meeting, or a meeting
            instance which has ended or is ongoing.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: If true, the invitee is a designated panelist for the event meeting.
          name: panelist
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the invitee whose details are being requested.
          name: meetingInviteeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Update details for a meeting invitee identified by a meetingInviteeId in
        the URI.
      documentation:
        doc: Update a Meeting Invitee
        doc_link: https://developer.webex.com/docs/api/v1/meeting-invitees/update-a-meeting-invitee
        endpoint: https://webexapis.com/v1/meetingInvitees/{meetingInviteeId}
        http_method: PUT
      header: Update a Meeting Invitee
      parameters_and_response:
        Body Parameters:
        - doc: Email address for meeting invitee.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Display name for meeting invitee. The maximum length of displayName
            is 128 characters. In the Webex app, if the email has been associated
            with an existing Webex account, the display name associated with the Webex
            account will be used; otherwise, the email will be used as displayName.
            In a Webex site, if displayName is specified, it will show displayName.
            If displayName is not specified, and the email has been associated with
            an existing Webex account, the display name associated with the Webex
            account will be used; otherwise, the email will be used as displayName.

            If the invitee has an existing Webex account, the displayName shown in
            the meeting will be the displayName associated with the Webex account;
            otherwise, displayName shown in the meeting will be the displayName which
            is specified by the invitee who does not have a Webex account.'
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the invitee is a designated alternate host for the meeting.
            See Add Alternate Hosts for Cisco Webex Meetings for more details.
          name: coHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This attribute should only be set
            if the user or application calling the API has the admin on-behalf-of
            scopes. When used, the admin may specify the email of a user in a site
            they manage to be the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: If true, send an email to the invitee.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: If true, the invitee is a designated panelist for the event meeting.
          name: panelist
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: Unique identifier for meeting invitee.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for meeting invitee. This attribute can be modified by
            Update a Meeting Invitee API.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name for meeting invitee. This attribute can be modified by
            Update a Meeting Invitee API.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not invitee is a designated alternate host for the meeting.
            See Add Alternate Hosts for Cisco Webex Meetings for more details.
          name: coHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Unique identifier for the meeting for which invitees are being requested.
            The meeting can be a meeting series, a scheduled meeting, or a meeting
            instance which has ended or is ongoing.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: If true, the invitee is a designated panelist for the event meeting.
          name: panelist
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the invitee to be updated. This parameter only
            applies to an invitee to a meeting series or a scheduled meeting. It doesn't
            apply to an invitee to an ended or ongoing meeting instance.
          name: meetingInviteeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Removes a meeting invitee identified by a meetingInviteeId specified in
        the URI. The deleted meeting invitee cannot be recovered.

        If the meeting invitee is associated with a meeting series, the invitee will
        be removed from the entire meeting series. If the invitee is associated with
        a scheduled meeting, the invitee will be removed from only that scheduled
        meeting.'
      documentation:
        doc: Delete a Meeting Invitee
        doc_link: https://developer.webex.com/docs/api/v1/meeting-invitees/delete-a-meeting-invitee
        endpoint: https://webexapis.com/v1/meetingInvitees/{meetingInviteeId}
        http_method: DELETE
      header: Delete a Meeting Invitee
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin on-behalf-of scopes.
            If set, the admin may specify the email of a user in a site they manage
            and the API will delete a meeting invitee that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: If true, send an email to the invitee.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the invitee to be removed. This parameter only
            applies to an invitee to a meeting series or a scheduled meeting. It doesn't
            apply to an invitee to an ended or ongoing meeting instance.
          name: meetingInviteeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Meeting Messages:
    doc: 'Meeting Messages are how we communicate through text within an active unified
      meeting

      Meeting Messages are also how we communicate through text within a space bound
      meeting.

      In a Webex meeting, each meeting message is displayed on its own line along
      with a timestamp and sender information.

      Message can contain plain text and rich text'
    header: Meeting Messages
    methods:
    - doc: 'Deletes a Meeting Message from the In Meeting Chat, using its ID.

        This ID can be retrieved by a Compliance Officer using the events API filtering
        on the meetingMessages resource type.

        Specify the meetingMessage ID in the meetingMessageId parameter in the URI.'
      documentation:
        doc: Delete a Meeting Message
        doc_link: https://developer.webex.com/docs/api/v1/meeting-messages/delete-a-meeting-message
        endpoint: https://webexapis.com/v1/meeting/messages/{meetingMessageId}
        http_method: DELETE
      header: Delete a Meeting Message
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the message.
          name: meetingMessageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Meeting Participants:
    doc: 'This API manages meeting participants.

      Refer to the Meetings API Scopes section of Meetings Overview for scopes required
      for each API.'
    header: Meeting Participants
    methods:
    - doc: 'List all participants in an in-progress meeting or an ended meeting. The
        meetingId parameter is required, which is the unique identifier for the meeting.

        The authenticated user calling this API must either have an Administrator
        role with the meeting:admin_participants_read scope, or be the meeting host.'
      documentation:
        doc: List Meeting Participants
        doc_link: https://developer.webex.com/docs/api/v1/meeting-participants/list-meeting-participants
        endpoint: https://webexapis.com/v1/meetingParticipants
        http_method: GET
      header: List Meeting Participants
      parameters_and_response:
        Query Parameters:
        - doc: Limit the maximum number of participants in the response, up to 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The unique identifier for the meeting. Please note that currently meeting
            ID of a scheduled personal room meeting is not supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Meetings start from the specified date and time(exclusive) in any ISO
            8601 compliant format. If meetingStartTimeFrom is not specified, it equals
            meetingStartTimeTo minus 1 month; if meetingStartTimeTo is also not specified,
            the default value for meetingStartTimeFrom is 1 month before current date
            and time.
          name: meetingStartTimeFrom
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meetings start before the specified date and time(exclusive) in any
            ISO 8601 compliant format. If meetingStartTimeTo is not specified, it
            equals the result of a comparison, meetingStartTimeFrom plus one month
            and the current time, and the result is the earlier of the two; if meetingStartTimeFrom
            is also not specified, the default value for meetingStartTimeTo is current
            date and time minus 1 month.
          name: meetingStartTimeTo
          param_attrs: []
          param_object: []
          type: String
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes, the
            admin may specify the email of a user in a site they manage and the API
            will return meeting participants of the meetings that are hosted by that
            user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time participants join a meeting starts from the specified date
            and time (inclusive) in any ISO 8601 compliant format. If joinTimeFrom
            is not specified, it equals joinTimeTo minus 7 days.
          name: joinTimeFrom
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time participants join a meeting before the specified date and
            time (exclusive) in any ISO 8601 compliant format. If joinTimeTo is not
            specified, it equals joinTimeFrom plus 7 days. The interval between joinTimeFrom
            and joinTimeTo must be within 90 days.
          name: joinTimeTo
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The ID that identifies the meeting and the participant.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID that identifies the organization. It only applies to participants
              of ongoing meetings.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the participant is the host of the meeting.
            name: host
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the participant has host privilege in the meeting.
            name: coHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the participant is the team space moderator. This
              field returns only if the meeting is associated with a Webex space.
            name: spaceModerator
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The email address of the participant.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The name of the participant.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the participant is invited to the meeting.
            name: invitee
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the participant's audio is muted.
            name: muted
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The time the meeting started.
            name: meetingStartTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The status of the participant's video.
            name: video
            param_attrs:
            - doc: The video is turned on.
              name: 'on'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The video is turned off.
              name: 'off'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The status of the participant in the meeting. The value of state
              is breakoutSession which is only returned when the meeting is in progress
              and the breakout session is enabled.
            name: state
            param_attrs:
            - doc: The participant is waiting in the meeting lobby.
              name: lobby
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The participant has left the meeting.
              name: end
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The participant has joined the meeting and is in the main session.
              name: joined
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The participant has joined a breakout session.
              name: breakoutSession
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The time the participant joined the meeting. If the field is non-existent
              or shows 1970-01-01T00:00:00.000Z the meeting may be still ongoing and
              the joinedTime will be filled in after the meeting ended. If you need
              real-time join events, please refer to the webhooks guide.
            name: joinedTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The time the participant left the meeting. If the field is non-existent
              or shows 1970-01-01T00:00:00.000Z the meeting may be still ongoing and
              the leftTime will be filled in after the meeting ended. If you need
              real-time left events, please refer to the webhooks guide.
            name: leftTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The site URL.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the meeting which the participant belongs
              to.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the host.
            name: hostEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: devices
            param_attrs:
            - doc: An internal ID that is associated with each join.
              name: correlationId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The type of the device.
              name: deviceType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The audio type that the participant is using.
              name: audioType
              param_attrs:
              - doc: PSTN
                name: pstn
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: VoIP
                name: voip
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The participant is not connected to audio.
                name: inactive
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The time the device joined the meeting. If the field is non-existent
                or shows 1970-01-    01T00:00:00.000Z the meeting may be still ongoing
                and the joinedTime will be filled in after the meeting ended. If you
                need real-time joined     events, please refer to the webhooks guide.
              name: joinedTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The time the device left the meeting, leftTime is the exact moment
                when a specific devi    ce left the meeting. If the field is non-existent
                or shows 1970-01-01T00:00:00.000Z the meeting may be still ongoing
                and the leftTime will     be filled in after the meeting ended. If
                you need real-time left events, please refer to the webhooks guide.
              name: leftTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The duration in seconds the device stayed in the meeting.
              name: durationSecond
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The PSTN call type in which the device joined the meeting.
              name: callType
              param_attrs:
              - doc: Connect audio by dialing a toll or toll-free phone number provided
                  by the meeting.
                name: callIn
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Connect audio by dialing out a phone number from the meeting.
                name: callBack
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: 'The PSTN phone number from which the device joined the meeting.
                Only compliance officer can retrieve the phoneNumber. The meeting
                host and admin users cannot retrieve it. NOTE: The phoneNumber will
                be returned after the meeting ends; it is not returned while the meeting
                is in progress.'
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[Device]
            type_spec: null
          - doc: The source ID of the participant. The sourceId is from the Create
              Invitation Sources API.
            name: sourceId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Participant]
          type_spec: null
    - doc: 'Query participants in a live meeting, or after the meeting, using participant''s
        email. The meetingId parameter is the unique identifier for the meeting and
        is required.

        The authenticated user calling this API must either have an Administrator
        role with the meeting:admin_participants_read scope, or be the meeting host.'
      documentation:
        doc: Query Meeting Participants with Email
        doc_link: https://developer.webex.com/docs/api/v1/meeting-participants/query-meeting-participants-with-email
        endpoint: https://webexapis.com/v1/meetingParticipants/query
        http_method: POST
      header: Query Meeting Participants with Email
      parameters_and_response:
        Body Parameters:
        - doc: 'Participants email list

            Possible values: john.andersen@example.com'
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The time participants join a meeting starts from the specified date
            and time (inclusive) in any ISO 8601 compliant format. If joinTimeFrom
            is not specified, it equals joinTimeTo minus 7 days.
          name: joinTimeFrom
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time participants join a meeting before the specified date and
            time (exclusive) in any ISO 8601 compliant format. If joinTimeTo is not
            specified, it equals joinTimeFrom plus 7 days. The interval between joinTimeFrom
            and joinTimeTo must be within 90 days.
          name: joinTimeTo
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: The unique identifier for the meeting.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Meetings start from the specified date and time(exclusive) in any ISO
            8601 compliant format. If meetingStartTimeFrom is not specified, it equals
            meetingStartTimeTo minus 1 month; if meetingStartTimeTo is also not specified,
            the default value for meetingStartTimeFrom is 1 month before current date
            and time.
          name: meetingStartTimeFrom
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meetings start before the specified date and time(exclusive) in any
            ISO 8601 compliant format. If meetingStartTimeTo is not specified, it
            equals the result of a comparison, meetingStartTimeFrom plus one month
            and the current time, and the result is the earlier of the two; if meetingStartTimeFrom
            is also not specified, the default value for meetingStartTimeTo is current
            date and time minus 1 month.
          name: meetingStartTimeTo
          param_attrs: []
          param_object: []
          type: String
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes, the
            admin may specify the email of a user in a site they manage and the API
            will return meeting participants of the meetings that are hosted by that
            user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The ID that identifies the meeting and the participant.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID that identifies the organization. It only applies to participants
              of ongoing meetings.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the participant is the host of the meeting.
            name: host
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the participant has host privilege in the meeting.
            name: coHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the participant is the team space moderator. This
              field returns only if the meeting is associated with a Webex space.
            name: spaceModerator
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The email address of the participant.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The name of the participant.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the participant is invited to the meeting.
            name: invitee
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the participant's audio is muted.
            name: muted
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The time the meeting started.
            name: meetingStartTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The status of the participant's video.
            name: video
            param_attrs:
            - doc: The video is turned on.
              name: 'on'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The video is turned off.
              name: 'off'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The status of the participant in the meeting. The value of state
              is breakoutSession which is only returned when the meeting is in progress
              and the breakout session is enabled.
            name: state
            param_attrs:
            - doc: The participant is waiting in the meeting lobby.
              name: lobby
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The participant has left the meeting.
              name: end
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The participant has joined the meeting and is in the main session.
              name: joined
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The participant has joined a breakout session.
              name: breakoutSession
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The time the participant joined the meeting. If the field is non-existent
              or shows 1970-01-01T00:00:00.000Z the meeting may be still ongoing and
              the joinedTime will be filled in after the meeting ended. If you need
              real-time join events, please refer to the webhooks guide.
            name: joinedTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The time the participant left the meeting. If the field is non-existent
              or shows 1970-01-01T00:00:00.000Z the meeting may be still ongoing and
              the leftTime will be filled in after the meeting ended. If you need
              real-time left events, please refer to the webhooks guide.
            name: leftTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The site URL.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the meeting which the participant belongs
              to.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the host.
            name: hostEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: devices
            param_attrs:
            - doc: An internal ID that is associated with each join.
              name: correlationId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The type of the device.
              name: deviceType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The audio type that the participant is using.
              name: audioType
              param_attrs:
              - doc: PSTN
                name: pstn
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: VoIP
                name: voip
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The participant is not connected to audio.
                name: inactive
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The time the device joined the meeting. If the field is non-existent
                or shows 1970-01-    01T00:00:00.000Z the meeting may be still ongoing
                and the joinedTime will be filled in after the meeting ended. If you
                need real-time joined     events, please refer to the webhooks guide.
              name: joinedTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The time the device left the meeting, leftTime is the exact moment
                when a specific devi    ce left the meeting. If the field is non-existent
                or shows 1970-01-01T00:00:00.000Z the meeting may be still ongoing
                and the leftTime will     be filled in after the meeting ended. If
                you need real-time left events, please refer to the webhooks guide.
              name: leftTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The duration in seconds the device stayed in the meeting.
              name: durationSecond
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The PSTN call type in which the device joined the meeting.
              name: callType
              param_attrs:
              - doc: Connect audio by dialing a toll or toll-free phone number provided
                  by the meeting.
                name: callIn
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Connect audio by dialing out a phone number from the meeting.
                name: callBack
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: 'The PSTN phone number from which the device joined the meeting.
                Only compliance officer can retrieve the phoneNumber. The meeting
                host and admin users cannot retrieve it. NOTE: The phoneNumber will
                be returned after the meeting ends; it is not returned while the meeting
                is in progress.'
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[Device]
            type_spec: null
          - doc: The source ID of the participant. The sourceId is from the Create
              Invitation Sources API.
            name: sourceId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Participant]
          type_spec: null
    - doc: 'Get a meeting participant details of a live or post meeting. The participantId
        is required to identify the meeting and the participant.

        The authenticated user calling this API must either have an Administrator
        role with the meeting:admin_participants_read scope, or be the meeting host.'
      documentation:
        doc: Get Meeting Participant Details
        doc_link: https://developer.webex.com/docs/api/v1/meeting-participants/get-meeting-participant-details
        endpoint: https://webexapis.com/v1/meetingParticipants/{participantId}
        http_method: GET
      header: Get Meeting Participant Details
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes, the
            admin may specify the email of a user in a site they manage and the API
            will return meeting participants of the meetings that are hosted by that
            user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: The ID that identifies the meeting and the participant.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID that identifies the organization. It only applies to participants
            of ongoing meetings.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is the host of the meeting.
          name: host
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the participant has host privilege in the meeting.
          name: coHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the participant is the team space moderator. This field
            returns only if the meeting is associated with a Webex space.
          name: spaceModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The email address of the participant.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The name of the participant.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is invited to the meeting.
          name: invitee
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the participant's audio is muted.
          name: muted
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The time the meeting started.
          name: meetingStartTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the participant's video.
          name: video
          param_attrs:
          - doc: The video is turned on.
            name: 'on'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The video is turned off.
            name: 'off'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The status of the participant in the meeting. The value of state is
            breakoutSession which is only returned when the meeting is in progress
            and the breakout session is enabled.
          name: state
          param_attrs:
          - doc: The participant is waiting in the meeting lobby.
            name: lobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The participant has left the meeting.
            name: end
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The participant has joined the meeting and is in the main session.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The participant has joined a breakout session.
            name: breakoutSession
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The time the participant joined the meeting. If the field is non-existent
            or shows 1970-01-01T00:00:00.000Z the meeting may be still ongoing and
            the joinedTime will be filled in after the meeting ended. If you need
            real-time join events, please refer to the webhooks guide.
          name: joinedTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time the participant left the meeting. If the field is non-existent
            or shows 1970-01-01T00:00:00.000Z the meeting may be still ongoing and
            the leftTime will be filled in after the meeting ended. If you need real-time
            left events, please refer to the webhooks guide.
          name: leftTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The site URL.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the meeting which the participant belongs to.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: devices
          param_attrs:
          - doc: An internal ID that is associated with each join.
            name: correlationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of the device.
            name: deviceType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The audio type that the participant is using.
            name: audioType
            param_attrs:
            - doc: PSTN
              name: pstn
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: VoIP
              name: voip
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The participant is not connected to audio.
              name: inactive
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The time the device joined the meeting. If the field is non-existent
              or shows 1970-01-    01T00:00:00.000Z the meeting may be still ongoing
              and the joinedTime will be filled in after the meeting ended. If you
              need real-time joined     events, please refer to the webhooks guide.
            name: joinedTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The time the device left the meeting, leftTime is the exact moment
              when a specific devi    ce left the meeting. If the field is non-existent
              or shows 1970-01-01T00:00:00.000Z the meeting may be still ongoing and
              the leftTime will     be filled in after the meeting ended. If you need
              real-time left events, please refer to the webhooks guide.
            name: leftTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The duration in seconds the device stayed in the meeting.
            name: durationSecond
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The PSTN call type in which the device joined the meeting.
            name: callType
            param_attrs:
            - doc: Connect audio by dialing a toll or toll-free phone number provided
                by the meeting.
              name: callIn
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Connect audio by dialing out a phone number from the meeting.
              name: callBack
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: 'The PSTN phone number from which the device joined the meeting.
              Only compliance officer can retrieve the phoneNumber. The meeting host
              and admin users cannot retrieve it. NOTE: The phoneNumber will be returned
              after the meeting ends; it is not returned while the meeting is in progress.'
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Device]
          type_spec: null
        - doc: The source ID of the participant. The sourceId is from the Create Invitation
            Sources API.
          name: sourceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the meeting and the participant.
          name: participantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'To mute, un-mute, expel, or admit a participant in a live meeting. The
        participantId is required to identify the meeting and the participant.

        Notes:'
      documentation:
        doc: Update a Participant
        doc_link: https://developer.webex.com/docs/api/v1/meeting-participants/update-a-participant
        endpoint: https://webexapis.com/v1/meetingParticipants/{participantId}
        http_method: PUT
      header: Update a Participant
      parameters_and_response:
        Body Parameters:
        - doc: The value is true or false, and means to mute or unmute the audio of
            a participant.
          name: muted
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The value can be true or false. The value of true is to admit a participant
            to the meeting if the participant is in the lobby, No-Op if the participant
            is not in the lobby or when the value is set to false.
          name: admit
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The attribute is exclusive and its value can be true or false. The
            value of true means that the participant will be expelled from the meeting,
            the value of false means No-Op.
          name: expel
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: The participant ID that identifies the meeting and the participant.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID that identifies the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is the host of the meeting.
          name: host
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the participant has host privilege in the meeting.
          name: coHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the participant is the team space moderator. This field
            returns only if the meeting is associated with a Webex space.
          name: spaceModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The email address of the participant.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The name of the participant.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is invited to the meeting.
          name: invitee
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The status of the participant's video.
          name: video
          param_attrs:
          - doc: The video is turned on.
            name: 'on'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The video is turned off.
            name: 'off'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the participant's audio is muted.
          name: muted
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The status of the participant in the meeting.
          name: state
          param_attrs:
          - doc: The participant is waiting in the meeting lobby.
            name: lobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The participant has joined the meeting.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The site URL.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the meeting which the participant belongs to.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: devices
          param_attrs:
          - doc: An internal ID that is associated with each join.
            name: correlationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of device.
            name: deviceType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The audio type that the participant is using.
            name: audioType
            param_attrs:
            - doc: PSTN
              name: pstn
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: VoIP
              name: voip
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The participant is not connected to audio.
              name: inactive
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The time the device joined the meeting. If the field is non-existent
              or shows 1970-01-01T00:00:00.000Z the meeting may be still ongoing and
              the joinedTime will be filled in after the meeting ended. If you need
              real-time joined events, please refer to the webhooks guide.
            name: joinedTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The time the device left the meeting, leftTime is the exact moment
              when a specific device left the meeting. If the field is non-existent
              or shows 1970-01-01T00:00:00.000Z the meeting may be still ongoing and
              the leftTime will be filled in after the meeting ended. If you need
              real-time left events, please refer to the webhooks guide.
            name: leftTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[InProgressDevice]
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the meeting and the participant.
          name: participantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'To admit participants into a live meeting in bulk.

        This API limits the maximum size of items in the request body to 100.

        Each participantId of items in the request body should have the same prefix
        of meetingId.'
      documentation:
        doc: Admit Participants
        doc_link: https://developer.webex.com/docs/api/v1/meeting-participants/admit-participants
        endpoint: https://webexapis.com/v1/meetingParticipants/admit
        http_method: POST
      header: Admit Participants
      parameters_and_response:
        Body Parameters:
        - doc: '

            The ID that identifies the meeting participant.'
          name: items
          param_attrs: []
          param_object: []
          type: array[ParticipantID]
          type_spec: null
  Meeting Polls:
    doc: 'As a presenter, you can use a poll to create and share questionnaires. Polls
      can be useful for gathering feedback, taking votes, or testing knowledge.

      You can use the Meeting Poll API to list meeting polls, the poll''s questions,
      and answers.

      Currently, these APIs are available to users with one of the meeting host, admin
      or Compliance Officer roles.

      The Webex meetings poll functionality and API endpoint described here is "upon-request"
      and not enabled by default. If you need it enabled for your org, or if you need
      help, please contact the Webex Developer Support team at devsupport@webex.com.'
    header: Meeting Polls
    methods:
    - doc: Lists all the polls and the poll questions in a meeting when ready.
      documentation:
        doc: List Meeting Polls
        doc_link: https://developer.webex.com/docs/api/v1/meeting-polls/list-meeting-polls
        endpoint: https://webexapis.com/v1/meetings/polls
        http_method: GET
      header: List Meeting Polls
      parameters_and_response:
        Query Parameters:
        - doc: A unique identifier for the meeting instance to which the polls belong.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the poll.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the meeting instance to which the poll belongs.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the poll started in ISO 8601 compliant format.
            name: startTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the poll ended in ISO 8601 compliant format.
            name: endTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The length of time in the alarm box, in seconds.
            name: timerDuration
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The name of the poll coordinator.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email of the poll coordinator.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the polling coordinator.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Poll's questions.
            name: questions
            param_attrs:
            - doc: A unique identifier for the question.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The order of the question.
              name: order
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The question.
              name: title
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The type of the question.
              name: type
              param_attrs:
              - doc: A single-answer question.
                name: single
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: A multiple-answer question.
                name: multiple
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: A text answer.
                name: short
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Question's options.
              name: options
              param_attrs:
              - doc: The order of the option.
                name: order
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The value of the option.
                name: value
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Whether or not the option is correct.
                name: isCorrect
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              param_object: []
              type: array[Option]
              type_spec: null
            param_object: []
            type: array[Question]
            type_spec: null
          param_object: []
          type: array[Poll]
          type_spec: null
    - doc: List the meeting polls, the poll's questions, and answers from the meeting
        when ready.
      documentation:
        doc: Get Meeting PollResults
        doc_link: https://developer.webex.com/docs/api/v1/meeting-polls/get-meeting-pollresults
        endpoint: https://webexapis.com/v1/meetings/pollResults
        http_method: GET
      header: Get Meeting PollResults
      parameters_and_response:
        Query Parameters:
        - doc: A unique identifier for the meeting instance to which the polls belong.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Limit the maximum number of respondents in a meeting in the response,
            up to 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the poll.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the meeting instance to which the poll belongs.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The total number of attendees in the meeting.
            name: totalAttendees
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The total number of respondents in the poll.
            name: totalRespondents
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The date and time the poll started in ISO 8601 compliant format.
            name: startTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the poll ended in ISO 8601 compliant format.
            name: endTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The duration of the poll, in seconds.
            name: timerDuration
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The name of the poll coordinator.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email of the poll coordinator.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the the poll coordinator.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An array of questions in this poll.
            name: questions
            param_attrs:
            - doc: A unique identifier of the question.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The order of the question in the poll.
              name: order
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The question.
              name: title
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The type of the question.
              name: type
              param_attrs:
              - doc: A single-answer question.
                name: single
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: A multiple-answer question.
                name: multiple
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: A text answer.
                name: short
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Summary of all answers.
              name: answerSummary
              param_attrs:
              - doc: The order of the answer in the question.
                name: order
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer.
                name: value
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The total number of people who selected this answer.
                name: totalRespondents
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Whether the answer is correct.
                name: isCorrect
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              param_object: []
              type: array[AnswerSummaryItem]
              type_spec: null
            - doc: Question's respondents.
              name: respondents
              param_attrs:
              - doc: The pagination links of this question's respondent.
                name: links
                param_attrs:
                - doc: Link to the previous question's respondents.
                  name: prev
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Link to the current question's respondents.
                  name: self
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Link to the next page question's respondents.
                  name: next
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: Link
                type_spec: null
              - doc: An array of answers.
                name: items
                param_attrs:
                - doc: The name of the person who answers the question.
                  name: displayName
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The email of the person who answers the question.
                  name: email
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: An array of answers. If it is a single-answer question or text
                    answer, there is at most one; if it is a multiple-answer question,
                    there may be more than one.
                  name: answers
                  param_attrs: []
                  param_object: []
                  type: array[string]
                  type_spec: null
                param_object: []
                type: array[Respondent]
                type_spec: null
              param_object: []
              type: RespondentsReferenceLinks
              type_spec: null
            param_object: []
            type: array[QuestionResult]
            type_spec: null
          param_object: []
          type: array[PollResult]
          type_spec: null
    - doc: Lists the respondents to a specific questions in a poll.
      documentation:
        doc: List Respondents of a Question
        doc_link: https://developer.webex.com/docs/api/v1/meeting-polls/list-respondents-of-a-question
        endpoint: https://webexapis.com/v1/meetings/polls/{pollId}/questions/{questionId}/respondents
        http_method: GET
      header: List Respondents of a Question
      parameters_and_response:
        Query Parameters:
        - doc: A unique identifier for the meeting instance to which the respondents
            belong.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Limit the maximum number of respondents in a specified question in
            the response, up to 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The name of the person who answers the question.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email of the person who answers the question.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An array of answers. If it is a single-answer question or text answer,
              there is at most one; if it is a multiple-answer question, there may
              be more than one.
            name: answers
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          param_object: []
          type: array[Respondent]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the poll to which the respondents belong.
          name: pollId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A unique identifier for the question to which the respondents belong.
          name: questionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Meeting Preferences:
    doc: 'This API manages a user''s meeting preferences, including Personal Meeting
      Room settings, video and audio settings, meeting scheduling options, and site
      settings.

      Refer to the Meetings API Scopes section of Meetings Overview for scopes required
      for each API.'
    header: Meeting Preferences
    methods:
    - doc: Retrieves meeting preferences for the authenticated user.
      documentation:
        doc: Get Meeting Preference Details
        doc_link: https://developer.webex.com/docs/api/v1/meeting-preferences/get-meeting-preference-details
        endpoint: https://webexapis.com/v1/meetingPreferences
        http_method: GET
      header: Get Meeting Preference Details
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the required admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details of the meeting preferences for that user.
          name: userEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: "URL of the Webex site to query. For individual use, if siteUrl is\
            \ not specified, the query will use the default site of the user. For\
            \ admin use, if siteUrl is not specified, the query will use the default\
            \ site for the admin's authorization token used to make the call. In the\
            \ case where the user belongs to a site different than the admin\u2019\
            s default site, the admin can set the site to query using the siteUrl\
            \ parameter. All available Webex sites and default site of a user can\
            \ be retrieved from /meetingPreferences/sites."
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Personal Meeting Room options.
          name: personalMeetingRoom
          param_attrs: []
          param_object:
          - doc: Personal Meeting Room topic. The length of topic must be between
              1 and 128 characters. This attribute can be modified with the Update
              Personal Meeting Room Options API.
            name: topic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: PIN for joining the room as host. The host PIN must be digits of
              a predefined length, e.g. 4 digits. It cannot contain sequential digits,
              such as 1234 or 4321, or repeated digits of the predefined length, such
              as 1111. The predefined length for host PIN can be viewed in user's
              My Personal Room page. This attribute can be modified with the Update
              Personal Meeting Room Options API.
            name: hostPin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: PIN for joining the room as host. The host PIN must be digits of
              a predefined length, e.g. 4 digits. It cannot contain sequential digits,
              such as 1234 or 4321, or repeated digits of the predefined length, such
              as 1111. The predefined length for host PIN can be viewed in user's
              My Personal Room page. This attribute can be modified with the Update
              Personal Meeting Room Options API.
            name: hostPin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Personal Meeting Room link. It cannot be empty. Note: This is a
              read-only attribute.'
            name: personalMeetingRoomLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Option to automatically lock the Personal Room a number of minutes
              after a meeting starts. When a room is locked, invitees cannot enter
              until the owner admits them. The period after which the meeting is locked
              is defined by autoLockMinutes. This attribute can be modified with the
              Update Personal Meeting Room Options API.
            name: enabledAutoLock
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of minutes after which the Personal Room is locked if enabledAutoLock
              is enabled. Valid options are 0, 5, 10, 15 and 20. This attribute can
              be modified with the Update Personal Meeting Room Options API.
            name: autoLockMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Flag to enable notifying the owner of a Personal Room when someone
              enters the Personal Room lobby while the owner is not in the room. This
              attribute can be modified with the Update Personal Meeting Room Options
              API.
            name: enabledNotifyHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Flag allowing other invitees to host a meeting in the Personal Room
              without the owner. This attribute can be modified with the Update Personal
              Meeting Room Options API.
            name: supportCoHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee with a host account on the target
              site to become a cohost when joining the Personal Room. The target site
              is user's preferred site. This attribute can be modified with the Update
              Personal Meeting Room Options API.
            name: supportAnyoneAsCoHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow the first attendee with a host account on
              the target site to become a cohost when joining the Personal Room. The
              target site is user's preferred site. This attribute can be modified
              with the Update Personal Meeting Room Options API.
            name: allowFirstUserToBeCoHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow authenticated video devices in the user's
              organization to start or join the meeting without a prompt. This attribute
              can be modified with the Update Personal Meeting Room Options API.
            name: allowAuthenticatedDevices
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Array defining cohosts for the room if both supportAnyoneAsCoHost
              and allowFirstUserToBeCoHost are false This attribute can be modified
              with the Update Personal Meeting Room Options API.
            name: coHosts
            param_attrs:
            - doc: 'Email address for cohost. This attribute can be modified with
                the Update Personal Meeting Room Options API.

                Possible values: john.andersen@example.com'
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Display name for cohost. This attribute can be modified with the
                Update Personal Meeting Room Options API.

                Possible values: John Andersen'
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: SIP address for callback from a video system.
            name: sipAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: IP address for callback from a video system.
            name: dialInIpAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Information for callbacks from meeting to phone or for joining a
              teleconference using a phone.
            name: telephony
            param_attrs: []
            param_object:
            - doc: Code for authenticating a user to join teleconference. Users join
                the teleconference using the call-in number or the global call-in
                number, followed by the value of the accessCode.
              name: accessCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Array of call-in numbers for joining teleconference from a phone.
              name: callInNumbers
              param_attrs:
              - doc: 'Label for call-in number.

                  Possible values: Call-in toll-free number (US/Canada)'
                name: label
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'Call-in number to join teleconference from a phone.

                  Possible values: 123456789'
                name: callInNumber
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'Type of toll for the call-in number.

                  Possible values: toll, tollFree'
                name: tollType
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: HATEOAS information of global call-in numbers for joining teleconference
                from a phone.
              name: links
              param_attrs: []
              param_object:
              - doc: Link relation describing how the target resource is related to
                  the current context (conforming with RFC5998).
                name: rel
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Target resource URI (conforming with RFC5998).
                name: href
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Target resource method (conforming with RFC5998).
                name: method
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              type: object
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: 'Audio Preferences. Note: These audio settings do not apply to Personal
            Room meetings'
          name: audio
          param_attrs: []
          param_object:
          - doc: Default audio type. This attribute can be modified with the with
              the Update Audio Options API.
            name: defaultAudioType
            param_attrs:
            - doc: Webex audio. This supports telephony and VoIP.
              name: webexAudio
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Support only VoIP.
              name: voipOnly
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Other teleconference service. Details are defined in the otherTeleconferenceDescription
                parameter.
              name: otherTeleconferenceService
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: No audio.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Phone number and other information for the teleconference provider
              to be used, along with instructions for invitees. This attribute can
              be modified with the with the Update Audio Options API.
            name: otherTeleconferenceDescription
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Flag to enable/disable global call ins. Note: If the site does not
              support global call-ins, you cannot set this option. This attribute
              can be modified with the with the Update Audio Options API.'
            name: enabledGlobalCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: 'Flag to enable/disable call-ins from toll-free numbers.  Note: If
              the site does not support calls from toll-free numbers, you cannot set
              this option. This attribute can be modified with the with the Update
              Audio Options API.'
            name: enabledTollFree
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Flag to enable/disable automatically connecting to audio using a
              computer. The meeting host can enable/disable this option. When this
              option is set to true, the user is automatically connected to audio
              via a computer when they start or join a Webex Meetings meeting on a
              desktop. `This attribute can be modified with the with the Update Audio
              Options API.
            name: enabledAutoConnection
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: PIN to provide a secondary level of authentication for calls where
              the host is using the phone and may need to invite additional invitees.
              It must be exactly 4 digits. It cannot contain sequential digits, such
              as 1234 or 4321, or repeat a digit 4 times, such as 1111. This attribute
              can be modified with the with the Update Audio Options API.
            name: audioPin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Office phone number. We recommend that phone numbers be specified
              to facilitate connecting via audio. This attribute can be modified with
              the with the Update Audio Options API.
            name: officeNumber
            param_attrs: []
            param_object:
            - doc: Country code for the phone number. This attribute can be modified
                with the with the Update Audio Options API.
              name: countryCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Phone number. It cannot be longer than 30 characters. This attribute
                can be modified with the with the Update Audio Options API.
              name: number
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Flag identifying the phone number as the one that will be used
                to dial into a teleconference. This attribute can be modified with
                the with the Update Audio Options API.
              name: enabledCallInAuthentication
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: 'Flag to enable/disable Call Me number display on the meeting client.
                This attribute can be modified with the with the Update Audio Options
                API. Note: This feature is only effective if the site supports the
                Call Me feature.'
              name: enabledCallMe
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Mobile phone number. We recommend that phone numbers be specified
              to facilitate connecting via audio. This attribute can be modified with
              the with the Update Audio Options API.
            name: mobileNumber
            param_attrs: []
            param_object:
            - doc: Country code for the phone number. This attribute can be modified
                with the with the Update Audio Options API.
              name: countryCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Phone number. It cannot be longer than 30 characters. This attribute
                can be modified with the with the Update Audio Options API.
              name: number
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Flag identifying the phone number as the one that will be used
                to dial into a teleconference. This attribute can be modified with
                the with the Update Audio Options API.
              name: enabledCallInAuthentication
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: 'Flag to enable/disable Call Me number display on the meeting client.
                This attribute can be modified with the with the Update Audio Options
                API. Note: This feature is only effective if the site supports the
                Call Me feature.'
              name: enabledCallMe
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: 'Information for video conferencing systems used to connect to Webex
            meetings. Note: The Call My Video System feature is available only if
            it has been purchased for your site and your administrator has enabled
            it.'
          name: video
          param_attrs: []
          param_object:
          - doc: Array of video devices. This attribute can be modified with the Update
              Video Options API.
            name: videoDevices
            param_attrs:
            - doc: 'Video system name. It cannot be empty. This attribute can be modified
                with the Update Video Options API.

                Possible values: device1'
              name: deviceName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Video address. It cannot be empty and must be in valid email format.
                This attribute can be modified with the Update Video Options API.

                Possible values: device1@example.com'
              name: deviceAddress
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Flag identifying the device as the default video device. If user''s
                video device list is not empty, one and only one device must be set
                as default. This attribute can be modified with the Update Video Options
                API.

                Possible values: '
              name: isDefault
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          type: object
          type_spec: null
        - doc: Meeting scheduling options.
          name: schedulingOptions
          param_attrs:
          - doc: 'Flag to enable/disable Join Before Host. The period during which
              invitees can join before the start time is defined by autoLockMinutes.
              This attribute can be modified with the Update Scheduling Options API.
              Note: This feature is only effective if the site supports the Join Before
              Host feature. This attribute can be modified with the Update Scheduling
              Options API.'
            name: enabledJoinBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of minutes before the start time that an invitee can join
              a meeting if enabledJoinBeforeHost is true. Valid options are 0, 5,
              10 and 15. This attribute can be modified with the Update Scheduling
              Options API.
            name: joinBeforeHostMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Flag to enable/disable the automatic sharing of the meeting recording
              with invitees when it is available. This attribute can be modified with
              the Update Scheduling Options API.
            name: enabledAutoShareRecording
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Flag to automatically enable Webex Assistant whenever you start a
              meeting. This attribute can be modified with the Update Scheduling Options
              API.
            name: enabledWebexAssistantByDefault
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: SchedulingOptionsObject
          type_spec: null
        - doc: List of user's Webex meeting sites including default site.
          name: sites
          param_attrs:
          - doc: 'Access URL for the site. Note: This is a read-only attribute. The
              value can be assigned as user''s default site with the Update Default
              Site API.

              Possible values: site1-example.webex.com'
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Flag identifying the site as the default site. Users can list meetings
              and recordings, and create meetings on the default site.

              Possible values: '
            name: default
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
    - doc: Retrieves the Personal Meeting Room options for the authenticated user.
      documentation:
        doc: Get Personal Meeting Room Options
        doc_link: https://developer.webex.com/docs/api/v1/meeting-preferences/get-personal-meeting-room-options
        endpoint: https://webexapis.com/v1/meetingPreferences/personalMeetingRoom
        http_method: GET
      header: Get Personal Meeting Room Options
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will return details of the Personal Meeting Room options for that user.
          name: userEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: "URL of the Webex site to query. For individual use, if siteUrl is\
            \ not specified, the query will use the default site of the user. For\
            \ admin use, if siteUrl is not specified, the query will use the default\
            \ site for the admin's authorization token used to make the call. In the\
            \ case where the user belongs to a site different than the admin\u2019\
            s default site, the admin can set the site to query using the siteUrl\
            \ parameter. All available Webex sites and default site of a user can\
            \ be retrieved from /meetingPreferences/sites."
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Personal Meeting Room topic. The length of topic is between 1 and 128.
            This attribute can be modified with the Update Personal Meeting Room Options
            API.
          name: topic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: PIN for joining the room as host. The host PIN must be digits of a
            predefined length, e.g. 4 digits. It cannot contain sequential digits,
            such as 1234 or 4321, or repeated digits of the predefined length, such
            as 1111. The predefined length for host PIN can be viewed in user's My
            Personal Room page and it can only be changed by site administrator. This
            attribute can be modified with the Update Personal Meeting Room Options
            API.
          name: hostPin
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Personal Meeting Room link. It cannot be empty. Note: This is a read-only
            attribute.'
          name: personalMeetingRoomLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Option to automatically lock the Personal Room a number of minutes
            after a meeting starts. When a room is locked, invitees cannot enter until
            the owner admits them. The period after which the meeting is locked is
            defined by autoLockMinutes. This attribute can be modified with the Update
            Personal Meeting Room Options API.
          name: enabledAutoLock
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of minutes after which the Personal Room is locked if enabledAutoLock
            is enabled. Valid options are 0, 5, 10, 15 and 20. This attribute can
            be modified with the Update Personal Meeting Room Options API.
          name: autoLockMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Flag to enable notifying the owner of a Personal Room when someone
            enters the Personal Room lobby while the owner is not in the room. This
            attribute can be modified with the Update Personal Meeting Room Options
            API.
          name: enabledNotifyHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Flag allowing other invitees to host a meeting in the Personal Room
            without the owner. This attribute can be modified with the Update Personal
            Meeting Room Options API.
          name: supportCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee with a host account on the target
            site to become a cohost when joining the Personal Room. The target site
            is user's preferred site. This attribute can be modified with the Update
            Personal Meeting Room Options API.
          name: supportAnyoneAsCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow the first attendee with a host account on the
            target site to become a cohost when joining the Personal Room. The target
            site is user's preferred site. This attribute can be modified with the
            Update Personal Meeting Room Options API.
          name: allowFirstUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow authenticated video devices in the user's organization
            to start or join the meeting without a prompt. This attribute can be modified
            with the Update Personal Meeting Room Options API.
          name: allowAuthenticatedDevices
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Array defining cohosts for the room if both supportAnyoneAsCoHost and
            allowFirstUserToBeCoHost are false. This attribute can be modified with
            the Update Personal Meeting Room Options API.
          name: coHosts
          param_attrs:
          - doc: 'Email address for cohost. This attribute can be modified with the
              Update Personal Meeting Room Options API.

              Possible values: john.andersen@example.com'
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Display name for cohost. This attribute can be modified with the
              Update Personal Meeting Room Options API.

              Possible values: John Andersen'
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: SIP address for callback from a video system.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: IP address for callback from a video system.
          name: dialInIpAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Information for callbacks from meeting to phone or for joining a teleconference
            using a phone.
          name: telephony
          param_attrs: []
          param_object:
          - doc: Code for authenticating a user to join teleconference. Users join
              the teleconference using the call-in number or the global call-in number,
              followed by the value of the accessCode.
            name: accessCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Array of call-in numbers for joining teleconference from a phone.
            name: callInNumbers
            param_attrs:
            - doc: 'Label for call-in number.

                Possible values: Call-in toll-free number (US/Canada)'
              name: label
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Call-in number to join teleconference from a phone.

                Possible values: 123456789'
              name: callInNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Type of toll for the call-in number.

                Possible values: toll, tollFree'
              name: tollType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: HATEOAS information of global call-in numbers for joining teleconference
              from a phone.
            name: links
            param_attrs: []
            param_object:
            - doc: Link relation describing how the target resource is related to
                the current context (conforming with RFC5998).
              name: rel
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource URI (conforming with RFC5998).
              name: href
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource method (conforming with RFC5998).
              name: method
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
    - doc: Update a single meeting
      documentation:
        doc: Update Personal Meeting Room Options
        doc_link: https://developer.webex.com/docs/api/v1/meeting-preferences/update-personal-meeting-room-options
        endpoint: https://webexapis.com/v1/meetingPreferences/personalMeetingRoom
        http_method: PUT
      header: Update Personal Meeting Room Options
      parameters_and_response:
        Body Parameters:
        - doc: Personal Meeting Room topic to be updated.
          name: topic
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Updated PIN for joining the room as host. The host PIN must be digits
            of a predefined length, e.g. 4 digits. It cannot contain sequential digits,
            such as 1234 or 4321, or repeated digits of the predefined length, such
            as 1111. The predefined length for host PIN can be viewed in user's My
            Personal Room page and it can only be changed by site administrator.
          name: hostPin
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update for option to automatically lock the Personal Room a number
            of minutes after a meeting starts. When a room is locked, invitees cannot
            enter until the owner admits them. The period after which the meeting
            is locked is defined by autoLockMinutes.
          name: enabledAutoLock
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Updated number of minutes after which the Personal Room is locked if
            enabledAutoLock is enabled. Valid options are 0, 5, 10, 15 and 20.
          name: autoLockMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: Update for flag to enable notifying the owner of a Personal Room when
            someone enters the Personal Room lobby while the owner is not in the room.
          name: enabledNotifyHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Update for flag allowing other invitees to host a meetingCoHost in
            the Personal Room without the owner.
          name: supportCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Whether or not to allow any attendee with a host account on the target
            site to become a cohost when joining the Personal Room. The target site
            is user's preferred site.
          name: supportAnyoneAsCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow the first attendee with a host account on the
            target site to become a cohost when joining the Personal Room. The target
            site is user's preferred site.
          name: allowFirstUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow authenticated video devices in the user's organization
            to start or join the meeting without a prompt.
          name: allowAuthenticatedDevices
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Updated array defining cohosts for the room if both supportAnyoneAsCoHost
            and allowFirstUserToBeCoHost are false
          name: coHosts
          param_attrs:
          - doc: 'Email address for cohost. This attribute can be modified with the
              Update Personal Meeting Room Options API.

              Possible values: john.andersen@example.com'
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Display name for cohost. This attribute can be modified with the
              Update Personal Meeting Room Options API.

              Possible values: John Andersen'
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: required
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will update Personal Meeting Room options for that user.
          name: userEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: "URL of the Webex site to query. For individual use, if siteUrl is\
            \ not specified, the query will use the default site of the user. For\
            \ admin use, if siteUrl is not specified, the query will use the default\
            \ site for the admin's authorization token used to make the call. In the\
            \ case where the user belongs to a site different than the admin\u2019\
            s default site, the admin can set the site to query using the siteUrl\
            \ parameter. All available Webex sites and default site of a user can\
            \ be retrieved from /meetingPreferences/sites."
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Personal Meeting Room topic. The length of topic is between 1 and 128.
            This attribute can be modified with the Update Personal Meeting Room Options
            API.
          name: topic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: PIN for joining the room as host. The host PIN must be digits of a
            predefined length, e.g. 4 digits. It cannot contain sequential digits,
            such as 1234 or 4321, or repeated digits of the predefined length, such
            as 1111. The predefined length for host PIN can be viewed in user's My
            Personal Room page and it can only be changed by site administrator. This
            attribute can be modified with the Update Personal Meeting Room Options
            API.
          name: hostPin
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Personal Meeting Room link. It cannot be empty. Note: This is a read-only
            attribute.'
          name: personalMeetingRoomLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Option to automatically lock the Personal Room a number of minutes
            after a meeting starts. When a room is locked, invitees cannot enter until
            the owner admits them. The period after which the meeting is locked is
            defined by autoLockMinutes. This attribute can be modified with the Update
            Personal Meeting Room Options API.
          name: enabledAutoLock
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of minutes after which the Personal Room is locked if enabledAutoLock
            is enabled. Valid options are 0, 5, 10, 15 and 20. This attribute can
            be modified with the Update Personal Meeting Room Options API.
          name: autoLockMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Flag to enable notifying the owner of a Personal Room when someone
            enters the Personal Room lobby while the owner is not in the room. This
            attribute can be modified with the Update Personal Meeting Room Options
            API.
          name: enabledNotifyHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Flag allowing other invitees to host a meeting in the Personal Room
            without the owner. This attribute can be modified with the Update Personal
            Meeting Room Options API.
          name: supportCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee with a host account on the target
            site to become a cohost when joining the Personal Room. The target site
            is user's preferred site. This attribute can be modified with the Update
            Personal Meeting Room Options API.
          name: supportAnyoneAsCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow the first attendee with a host account on the
            target site to become a cohost when joining the Personal Room. The target
            site is user's preferred site. This attribute can be modified with the
            Update Personal Meeting Room Options API.
          name: allowFirstUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow authenticated video devices in the user's organization
            to start or join the meeting without a prompt. This attribute can be modified
            with the Update Personal Meeting Room Options API.
          name: allowAuthenticatedDevices
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Array defining cohosts for the room if both supportAnyoneAsCoHost and
            allowFirstUserToBeCoHost are false. This attribute can be modified with
            the Update Personal Meeting Room Options API.
          name: coHosts
          param_attrs:
          - doc: 'Email address for cohost. This attribute can be modified with the
              Update Personal Meeting Room Options API.

              Possible values: john.andersen@example.com'
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Display name for cohost. This attribute can be modified with the
              Update Personal Meeting Room Options API.

              Possible values: John Andersen'
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: SIP address for callback from a video system.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: IP address for callback from a video system.
          name: dialInIpAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Information for callbacks from meeting to phone or for joining a teleconference
            using a phone.
          name: telephony
          param_attrs: []
          param_object:
          - doc: Code for authenticating a user to join teleconference. Users join
              the teleconference using the call-in number or the global call-in number,
              followed by the value of the accessCode.
            name: accessCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Array of call-in numbers for joining teleconference from a phone.
            name: callInNumbers
            param_attrs:
            - doc: 'Label for call-in number.

                Possible values: Call-in toll-free number (US/Canada)'
              name: label
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Call-in number to join teleconference from a phone.

                Possible values: 123456789'
              name: callInNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Type of toll for the call-in number.

                Possible values: toll, tollFree'
              name: tollType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: HATEOAS information of global call-in numbers for joining teleconference
              from a phone.
            name: links
            param_attrs: []
            param_object:
            - doc: Link relation describing how the target resource is related to
                the current context (conforming with RFC5998).
              name: rel
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource URI (conforming with RFC5998).
              name: href
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource method (conforming with RFC5998).
              name: method
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
    - doc: Retrieves audio options for the authenticated user.
      documentation:
        doc: Get Audio Options
        doc_link: https://developer.webex.com/docs/api/v1/meeting-preferences/get-audio-options
        endpoint: https://webexapis.com/v1/meetingPreferences/audio
        http_method: GET
      header: Get Audio Options
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will return details of the audio options for that user.
          name: userEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: "URL of the Webex site to query. For individual use, if siteUrl is\
            \ not specified, the query will use the default site of the user. For\
            \ admin use, if siteUrl is not specified, the query will use the default\
            \ site for the admin's authorization token used to make the call. In the\
            \ case where the user belongs to a site different than the admin\u2019\
            s default site, the admin can set the site to query using the siteUrl\
            \ parameter. All available Webex sites and default site of a user can\
            \ be retrieved from /meetingPreferences/sites."
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Default audio type. This attribute can be modified with the with the
            Update Audio Options API.
          name: defaultAudioType
          param_attrs:
          - doc: Webex audio. This supports telephony and VoIP.
            name: webexAudio
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Support only VoIP.
            name: voipOnly
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Other teleconference service. Details are defined in the otherTeleconferenceDescription
              parameter.
            name: otherTeleconferenceService
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: No audio.
            name: none
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Phone number and other information for the teleconference provider
            to be used, along with instructions for invitees. This attribute can be
            modified with the with the Update Audio Options API.
          name: otherTeleconferenceDescription
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Flag to enable/disable global call ins. Note: If the site does not
            support global call-ins, you cannot set this option. This attribute can
            be modified with the with the Update Audio Options API.'
          name: enabledGlobalCallIn
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: 'Flag to enable/disable call-ins from toll-free numbers.  Note: If
            the site does not support calls from toll-free numbers, you cannot set
            this option. This attribute can be modified with the with the Update Audio
            Options API.'
          name: enabledTollFree
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Flag to enable/disable automatically connecting to audio using a computer.
            The meeting host can enable/disable this option. When this option is set
            to true, the user is automatically connected to audio via a computer when
            they start or join a Webex Meetings meeting on a desktop. This attribute
            can be modified with the with the Update Audio Options API.
          name: enabledAutoConnection
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: PIN to provide a secondary level of authentication for calls where
            the host is using the phone and may need to invite additional invitees.
            It must be exactly 4 digits. It cannot contain sequential digits, such
            as 1234 or 4321, or repeat a digit 4 times, such as 1111. This attribute
            can be modified with the with the Update Audio Options API.
          name: audioPin
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Office phone number. We recommend that phone numbers be specified to
            facilitate connecting via audio. This attribute can be modified with the
            with the Update Audio Options API.
          name: officeNumber
          param_attrs: []
          param_object:
          - doc: Country code for the phone number. This attribute can be modified
              with the with the Update Audio Options API.
            name: countryCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number. It cannot be longer than 30 characters. This attribute
              can be modified with the with the Update Audio Options API.
            name: number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Flag identifying the phone number as the one that will be used to
              dial into a teleconference. This attribute can be modified with the
              with the Update Audio Options API.
            name: enabledCallInAuthentication
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: 'Flag to enable/disable Call Me number display on the meeting client.
              This attribute can be modified with the with the Update Audio Options
              API. Note: This feature is only effective if the site supports the Call
              Me feature.'
            name: enabledCallMe
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Mobile phone number. We recommend that phone numbers be specified to
            facilitate connecting via audio. This attribute can be modified with the
            with the Update Audio Options API.
          name: mobileNumber
          param_attrs: []
          param_object:
          - doc: Country code for the phone number. This attribute can be modified
              with the with the Update Audio Options API.
            name: countryCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number. It cannot be longer than 30 characters. This attribute
              can be modified with the with the Update Audio Options API.
            name: number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Flag identifying the phone number as the one that will be used to
              dial into a teleconference. This attribute can be modified with the
              with the Update Audio Options API.
            name: enabledCallInAuthentication
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: 'Flag to enable/disable Call Me number display on the meeting client.
              This attribute can be modified with the with the Update Audio Options
              API. Note: This feature is only effective if the site supports the Call
              Me feature.'
            name: enabledCallMe
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
    - doc: Updates audio options for the authenticated user.
      documentation:
        doc: Update Audio Options
        doc_link: https://developer.webex.com/docs/api/v1/meeting-preferences/update-audio-options
        endpoint: https://webexapis.com/v1/meetingPreferences/audio
        http_method: PUT
      header: Update Audio Options
      parameters_and_response:
        Body Parameters:
        - doc: Default audio type. This attribute can be modified with the with the
            Update Audio Options API.
          name: defaultAudioType
          param_attrs:
          - doc: Webex audio. This supports telephony and VoIP.
            name: webexAudio
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Support only VoIP.
            name: voipOnly
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Other teleconference service. Details are defined in the otherTeleconferenceDescription
              parameter.
            name: otherTeleconferenceService
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: No audio.
            name: none
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: Phone number and other information for the teleconference provider
            to be used, along with instructions for invitees. This attribute can be
            modified with the with the Update Audio Options API.
          name: otherTeleconferenceDescription
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Flag to enable/disable global call ins. Note: If the site does not
            support global call-ins, you cannot set this option. This attribute can
            be modified with the with the Update Audio Options API.'
          name: enabledGlobalCallIn
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: 'Flag to enable/disable call-ins from toll-free numbers.  Note: If
            the site does not support calls from toll-free numbers, you cannot set
            this option. This attribute can be modified with the with the Update Audio
            Options API.'
          name: enabledTollFree
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Flag to enable/disable automatically connecting to audio using a computer.
            The meeting host can enable/disable this option. When this option is set
            to true, the user is automatically connected to audio via a computer when
            they start or join a Webex Meetings meeting on a desktop. This attribute
            can be modified with the with the Update Audio Options API.
          name: enabledAutoConnection
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: PIN to provide a secondary level of authentication for calls where
            the host is using the phone and may need to invite additional invitees.
            It must be exactly 4 digits. It cannot contain sequential digits, such
            as 1234 or 4321, or repeat a digit 4 times, such as 1111. This attribute
            can be modified with the with the Update Audio Options API.
          name: audioPin
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Office phone number. We recommend that phone numbers be specified to
            facilitate connecting via audio. This attribute can be modified with the
            with the Update Audio Options API.
          name: officeNumber
          param_attrs:
          - doc: Country code for the phone number. This attribute can be modified
              with the with the Update Audio Options API.
            name: countryCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Phone number. It cannot be longer than 30 characters. This attribute
              can be modified with the with the Update Audio Options API.
            name: number
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Flag identifying the phone number as the one that will be used to
              dial into a teleconference. This attribute can be modified with the
              with the Update Audio Options API.
            name: enabledCallInAuthentication
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: 'Flag to enable/disable Call Me number display on the meeting client.
              This attribute can be modified with the with the Update Audio Options
              API. Note: This feature is only effective if the site supports the Call
              Me feature.'
            name: enabledCallMe
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          param_object: []
          type: object
          type_spec: required
        - doc: Mobile phone number. We recommend that phone numbers be specified to
            facilitate connecting via audio. This attribute can be modified with the
            with the Update Audio Options API.
          name: mobileNumber
          param_attrs:
          - doc: Country code for the phone number. This attribute can be modified
              with the with the Update Audio Options API.
            name: countryCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Phone number. It cannot be longer than 30 characters. This attribute
              can be modified with the with the Update Audio Options API.
            name: number
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Flag identifying the phone number as the one that will be used to
              dial into a teleconference. This attribute can be modified with the
              with the Update Audio Options API.
            name: enabledCallInAuthentication
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: 'Flag to enable/disable Call Me number display on the meeting client.
              This attribute can be modified with the with the Update Audio Options
              API. Note: This feature is only effective if the site supports the Call
              Me feature.'
            name: enabledCallMe
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          param_object: []
          type: object
          type_spec: required
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will update audio options for that user.
          name: userEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: "URL of the Webex site to query. For individual use, if siteUrl is\
            \ not specified, the query will use the default site of the user. For\
            \ admin use, if siteUrl is not specified, the query will use the default\
            \ site for the admin's authorization token used to make the call. In the\
            \ case where the user belongs to a site different than the admin\u2019\
            s default site, the admin can set the site to query using the siteUrl\
            \ parameter. All available Webex sites and default site of a user can\
            \ be retrieved from /meetingPreferences/sites."
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Default audio type. This attribute can be modified with the with the
            Update Audio Options API.
          name: defaultAudioType
          param_attrs:
          - doc: Webex audio. This supports telephony and VoIP.
            name: webexAudio
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Support only VoIP.
            name: voipOnly
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Other teleconference service. Details are defined in the otherTeleconferenceDescription
              parameter.
            name: otherTeleconferenceService
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: No audio.
            name: none
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Phone number and other information for the teleconference provider
            to be used, along with instructions for invitees. This attribute can be
            modified with the with the Update Audio Options API.
          name: otherTeleconferenceDescription
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Flag to enable/disable global call ins. Note: If the site does not
            support global call-ins, you cannot set this option. This attribute can
            be modified with the with the Update Audio Options API.'
          name: enabledGlobalCallIn
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: 'Flag to enable/disable call-ins from toll-free numbers.  Note: If
            the site does not support calls from toll-free numbers, you cannot set
            this option. This attribute can be modified with the with the Update Audio
            Options API.'
          name: enabledTollFree
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Flag to enable/disable automatically connecting to audio using a computer.
            The meeting host can enable/disable this option. When this option is set
            to true, the user is automatically connected to audio via a computer when
            they start or join a Webex Meetings meeting on a desktop. This attribute
            can be modified with the with the Update Audio Options API.
          name: enabledAutoConnection
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: PIN to provide a secondary level of authentication for calls where
            the host is using the phone and may need to invite additional invitees.
            It must be exactly 4 digits. It cannot contain sequential digits, such
            as 1234 or 4321, or repeat a digit 4 times, such as 1111. This attribute
            can be modified with the with the Update Audio Options API.
          name: audioPin
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Office phone number. We recommend that phone numbers be specified to
            facilitate connecting via audio. This attribute can be modified with the
            with the Update Audio Options API.
          name: officeNumber
          param_attrs: []
          param_object:
          - doc: Country code for the phone number. This attribute can be modified
              with the with the Update Audio Options API.
            name: countryCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number. It cannot be longer than 30 characters. This attribute
              can be modified with the with the Update Audio Options API.
            name: number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Flag identifying the phone number as the one that will be used to
              dial into a teleconference. This attribute can be modified with the
              with the Update Audio Options API.
            name: enabledCallInAuthentication
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: 'Flag to enable/disable Call Me number display on the meeting client.
              This attribute can be modified with the with the Update Audio Options
              API. Note: This feature is only effective if the site supports the Call
              Me feature.'
            name: enabledCallMe
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Mobile phone number. We recommend that phone numbers be specified to
            facilitate connecting via audio. This attribute can be modified with the
            with the Update Audio Options API.
          name: mobileNumber
          param_attrs: []
          param_object:
          - doc: Country code for the phone number. This attribute can be modified
              with the with the Update Audio Options API.
            name: countryCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number. It cannot be longer than 30 characters. This attribute
              can be modified with the with the Update Audio Options API.
            name: number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Flag identifying the phone number as the one that will be used to
              dial into a teleconference. This attribute can be modified with the
              with the Update Audio Options API.
            name: enabledCallInAuthentication
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: 'Flag to enable/disable Call Me number display on the meeting client.
              This attribute can be modified with the with the Update Audio Options
              API. Note: This feature is only effective if the site supports the Call
              Me feature.'
            name: enabledCallMe
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
    - doc: Retrieves video options for the authenticated user.
      documentation:
        doc: Get Video Options
        doc_link: https://developer.webex.com/docs/api/v1/meeting-preferences/get-video-options
        endpoint: https://webexapis.com/v1/meetingPreferences/video
        http_method: GET
      header: Get Video Options
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will return details of the video options for that user.
          name: userEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: "URL of the Webex site to query. For individual use, if siteUrl is\
            \ not specified, the query will use the default site of the user. For\
            \ admin use, if siteUrl is not specified, the query will use the default\
            \ site for the admin's authorization token used to make the call. In the\
            \ case where the user belongs to a site different than the admin\u2019\
            s default site, the admin can set the site to query using the siteUrl\
            \ parameter. All available Webex sites and default site of a user can\
            \ be retrieved using Get Site List."
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of video devices. This attribute can be modified with the Update
            Video Options API.
          name: videoDevices
          param_attrs:
          - doc: 'Video system name. It cannot be empty. This attribute can be modified
              with the Update Video Options API.

              Possible values: device1'
            name: deviceName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Video address. It cannot be empty and must be in valid email format.
              This attribute can be modified with the Update Video Options API.

              Possible values: device1@example.com'
            name: deviceAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Flag identifying the device as the default video device. If user''s
              video device list is not empty, one and only one device must be set
              as default. This attribute can be modified with the Update Video Options
              API.

              Possible values: '
            name: isDefault
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
    - doc: Updates video options for the authenticated user.
      documentation:
        doc: Update Video Options
        doc_link: https://developer.webex.com/docs/api/v1/meeting-preferences/update-video-options
        endpoint: https://webexapis.com/v1/meetingPreferences/video
        http_method: PUT
      header: Update Video Options
      parameters_and_response:
        Body Parameters:
        - doc: Array of video devices. If the array is not empty, one device and no
            more than one devices must be set as default device.
          name: videoDevices
          param_attrs:
          - doc: 'Video system name. It cannot be empty. This attribute can be modified
              with the Update Video Options API.

              Possible values: device1'
            name: deviceName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Video address. It cannot be empty and must be in valid email format.
              This attribute can be modified with the Update Video Options API.

              Possible values: device1@example.com'
            name: deviceAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Flag identifying the device as the default video device. If user''s
              video device list is not empty, one and only one device must be set
              as default. This attribute can be modified with the Update Video Options
              API.

              Possible values: '
            name: isDefault
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: required
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will update video options for that user.
          name: userEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: "URL of the Webex site to query. For individual use, if siteUrl is\
            \ not specified, the query will use the default site of the user. For\
            \ admin use, if siteUrl is not specified, the query will use the default\
            \ site for the admin's authorization token used to make the call. In the\
            \ case where the user belongs to a site different than the admin\u2019\
            s default site, the admin can set the site to query using the siteUrl\
            \ parameter. All available Webex sites and default site of a user can\
            \ be retrieved from /meetingPreferences/sites."
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of video devices. This attribute can be modified with the Update
            Video Options API.
          name: videoDevices
          param_attrs:
          - doc: 'Video system name. It cannot be empty. This attribute can be modified
              with the Update Video Options API.

              Possible values: device1'
            name: deviceName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Video address. It cannot be empty and must be in valid email format.
              This attribute can be modified with the Update Video Options API.

              Possible values: device1@example.com'
            name: deviceAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Flag identifying the device as the default video device. If user''s
              video device list is not empty, one and only one device must be set
              as default. This attribute can be modified with the Update Video Options
              API.

              Possible values: '
            name: isDefault
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
    - doc: Retrieves scheduling options for the authenticated user.
      documentation:
        doc: Get Scheduling Options
        doc_link: https://developer.webex.com/docs/api/v1/meeting-preferences/get-scheduling-options
        endpoint: https://webexapis.com/v1/meetingPreferences/schedulingOptions
        http_method: GET
      header: Get Scheduling Options
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will return details of the scheduling options for that user.
          name: userEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: "URL of the Webex site to query. For individual use, if siteUrl is\
            \ not specified, the query will use the default site of the user. For\
            \ admin use, if siteUrl is not specified, the query will use the default\
            \ site for the admin's authorization token used to make the call. In the\
            \ case where the user belongs to a site different than the admin\u2019\
            s default site, the admin can set the site to query using the siteUrl\
            \ parameter. All available Webex sites and default site of a user can\
            \ be retrieved from /meetingPreferences/sites."
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: 'Flag to enable/disable Join Before Host. The period during which invitees
            can join before the start time is defined by autoLockMinutes. This attribute
            can be modified with the Update Scheduling Options API. Note: This feature
            is only effective if the site supports the Join Before Host feature. This
            attribute can be modified with the Update Scheduling Options API.'
          name: enabledJoinBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of minutes before the start time that an invitee can join a
            meeting if enabledJoinBeforeHost is true. Valid options are 0, 5, 10 and
            15. This attribute can be modified with the Update Scheduling Options
            API.
          name: joinBeforeHostMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Flag to enable/disable the automatic sharing of the meeting recording
            with invitees when it is available. This attribute can be modified with
            the Update Scheduling Options API.
          name: enabledAutoShareRecording
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Flag to automatically enable Webex Assistant whenever you start a meeting.
            This attribute can be modified with the Update Scheduling Options API.
          name: enabledWebexAssistantByDefault
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
    - doc: Updates scheduling options for the authenticated user.
      documentation:
        doc: Update Scheduling Options
        doc_link: https://developer.webex.com/docs/api/v1/meeting-preferences/update-scheduling-options
        endpoint: https://webexapis.com/v1/meetingPreferences/schedulingOptions
        http_method: PUT
      header: Update Scheduling Options
      parameters_and_response:
        Body Parameters:
        - doc: 'Flag to enable/disable Join Before Host. The period during which invitees
            can join before the start time is defined by autoLockMinutes. This attribute
            can be modified with the Update Scheduling Options API. Note: This feature
            is only effective if the site supports the Join Before Host feature. This
            attribute can be modified with the Update Scheduling Options API.'
          name: enabledJoinBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Number of minutes before the start time that an invitee can join a
            meeting if enabledJoinBeforeHost is true. Valid options are 0, 5, 10 and
            15. This attribute can be modified with the Update Scheduling Options
            API.
          name: joinBeforeHostMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: Flag to enable/disable the automatic sharing of the meeting recording
            with invitees when it is available. This attribute can be modified with
            the Update Scheduling Options API.
          name: enabledAutoShareRecording
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Flag to automatically enable Webex Assistant whenever you start a meeting.
            This attribute can be modified with the Update Scheduling Options API.
          name: enabledWebexAssistantByDefault
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will update scheduling options for that user.
          name: userEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: "URL of the Webex site to query. For individual use, if siteUrl is\
            \ not specified, the query will use the default site of the user. For\
            \ admin use, if siteUrl is not specified, the query will use the default\
            \ site for the admin's authorization token used to make the call. In the\
            \ case where the user belongs to a site different than the admin\u2019\
            s default site, the admin can set the site to query using the siteUrl\
            \ parameter. All available Webex sites and default site of a user can\
            \ be retrieved from /meetingPreferences/sites."
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: 'Flag to enable/disable Join Before Host. The period during which invitees
            can join before the start time is defined by autoLockMinutes. This attribute
            can be modified with the Update Scheduling Options API. Note: This feature
            is only effective if the site supports the Join Before Host feature. This
            attribute can be modified with the Update Scheduling Options API.'
          name: enabledJoinBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of minutes before the start time that an invitee can join a
            meeting if enabledJoinBeforeHost is true. Valid options are 0, 5, 10 and
            15. This attribute can be modified with the Update Scheduling Options
            API.
          name: joinBeforeHostMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Flag to enable/disable the automatic sharing of the meeting recording
            with invitees when it is available. This attribute can be modified with
            the Update Scheduling Options API.
          name: enabledAutoShareRecording
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Flag to automatically enable Webex Assistant whenever you start a meeting.
            This attribute can be modified with the Update Scheduling Options API.
          name: enabledWebexAssistantByDefault
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
    - doc: Retrieves the list of Webex sites that the authenticated user is set up
        to use.
      documentation:
        doc: Get Site List
        doc_link: https://developer.webex.com/docs/api/v1/meeting-preferences/get-site-list
        endpoint: https://webexapis.com/v1/meetingPreferences/sites
        http_method: GET
      header: Get Site List
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user and the API will return the list
            of Webex sites for that user.
          name: userEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of sites for the user. Users can have one site or multiple sites.
            This concept is specific to Webex Meetings. Any siteUrl in the site list
            can be assigned as user's default site with the Update Default Site API.
          name: sites
          param_attrs:
          - doc: 'Access URL for the site. Note: This is a read-only attribute. The
              value can be assigned as user''s default site with the Update Default
              Site API.

              Possible values: site1-example.webex.com'
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Flag identifying the site as the default site. Users can list meetings
              and recordings, and create meetings on the default site.

              Possible values: '
            name: default
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
    - doc: Updates the default site for the authenticated user.
      documentation:
        doc: Update Default Site
        doc_link: https://developer.webex.com/docs/api/v1/meeting-preferences/update-default-site
        endpoint: https://webexapis.com/v1/meetingPreferences/sites
        http_method: PUT
      header: Update Default Site
      parameters_and_response:
        Body Parameters:
        - doc: Access URL for the site.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Query Parameters:
        - doc: 'Whether or not to change user''s default site. Note: defaultSite should
            be set to true for the user''s single default site'
          name: defaultSite
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will update default site for that user.
          name: userEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: 'Access URL for the site. Note: This is a read-only attribute. The
            value can be assigned as user''s default site with the Update Default
            Site API.'
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Flag identifying the site as the default site. Users can list meetings
            and recordings, and create meetings on the default site.
          name: default
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
  Meeting Q and A:
    doc: 'During a Question and Answer (Q&A) session, attendees can pose questions
      to hosts, co-hosts, and presenters, who can answer and moderate those questions.
      You use the Meeting Q&A API to retrieve the questions and the answers in a meeting.

      Currently, these APIs are available to users with one of the meeting host, admin
      or Compliance Officer roles.

      The features and APIs described here are available upon-request and is not enabled
      by default. If would like this feature enabled for your organization please
      contact the Webex Developer Support team at devsupport@webex.com.'
    header: Meeting Q and A
    methods:
    - doc: 'Lists questions and answers from a meeting, when ready.

        Notes:'
      documentation:
        doc: List Meeting Q and A
        doc_link: https://developer.webex.com/docs/api/v1/meeting-q-and-a/list-meeting-q-and-a
        endpoint: https://webexapis.com/v1/meetings/q_and_a
        http_method: GET
      header: List Meeting Q and A
      parameters_and_response:
        Query Parameters:
        - doc: A unique identifier for the meeting instance which the Q&A belongs
            to.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Limits the maximum number of answers in the response, up to 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: An array of Q&A objects.
          name: items
          param_attrs:
          - doc: A unique identifier for the question.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the meeting instance to which the Q&A belongs.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The total number of attendees in the meeting.
            name: totalAttendees
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The total number of respondents in the meeting.
            name: totalRespondents
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The name of the user who asked the question.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email of the user who asked the question.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The question that was asked.
            name: question
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Question's answers.
            name: answers
            param_attrs: []
            param_object:
            - doc: The pagination links of the question's answers.
              name: links
              param_attrs: []
              param_object:
              - doc: Link to the previous page of answers to this question.
                name: prev
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Link to the current page of this answers to this question.
                name: self
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Link to the next page of answers to this question.
                name: next
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              type: object
              type_spec: null
            - doc: An array of answer objects for this question.
              name: items
              param_attrs:
              - doc: The name of the person who answered the question.
                name: displayName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The email of the person who answered the question.
                name: email
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The ID of the person who answered the question. Only present
                  for authenticated users.
                name: personId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer.
                name: answer
                param_attrs: []
                param_object: []
                type: array[string]
                type_spec: null
              - doc: Whether or not the question was answered.
                name: answered
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              param_object: []
              type: array[AnswerObject]
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: array[QAObject]
          type_spec: null
    - doc: Lists the answers to a specific question asked in a meeting.
      documentation:
        doc: List Answers of a Question
        doc_link: https://developer.webex.com/docs/api/v1/meeting-q-and-a/list-answers-of-a-question
        endpoint: https://webexapis.com/v1/meetings/q_and_a/{questionId}/answers
        http_method: GET
      header: List Answers of a Question
      parameters_and_response:
        Query Parameters:
        - doc: A unique identifier for the meeting instance which the Q&A belongs
            to.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Limit the maximum number of Q&A's answers in the response, up to 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: An array of answers to a specific question.
          name: items
          param_attrs:
          - doc: The name of the person who answered the question.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email of the person who answered the question.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the person who answered the question. Only present for
              authenticated users.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The content of the answer.
            name: answer
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Whether or not the question was answered.
            name: answered
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[AnswerObject]
          type_spec: null
        URI Parameters:
        - doc: The ID of a question.
          name: questionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Meeting Qualities:
    doc: 'To retrieve quality information, you must use an administrator token with
      the analytics:read_all scope. The authenticated user must be a read-only or
      full administrator of the organization to which the meeting belongs and must
      not be an external administrator.

      To use this endpoint, the org needs to be licensed for the Webex Pro Pack.

      For CI-Native site, no additional settings are required.

      For CI-linked site, the admin must also be set as the Full/ReadOnly Site Admin
      of the site.

      A minimum Webex and Teams client version is required. For details, see Troubleshooting
      Help Doc.

      Quality information is available 10 minutes after a meeting has started and
      may be retrieved for up to 7 days.

      A rate limit of 1 API call every 5 minutes for the same meeting instance ID
      applies.'
    header: Meeting Qualities
    methods:
    - doc: Get quality data for a meeting, by meetingId. Only organization administrators
        can retrieve meeting quality data.
      documentation:
        doc: Get Meeting Qualities
        doc_link: https://developer.webex.com/docs/api/v1/meeting-qualities/get-meeting-qualities
        endpoint: https://analytics.webexapis.com/v1/meeting/qualities
        http_method: GET
      header: Get Meeting Qualities
      parameters_and_response:
        Query Parameters:
        - doc: 'Unique identifier for the specific meeting instance. Note: The meetingId
            can be obtained via the Meeting List API when meetingType=meeting. The
            id attribute in the Meeting List Response is what is needed, for example,
            e5dba9613a9d455aa49f6ffdafb6e7db_I_191395283063545470.'
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Limit the maximum number of media sessions in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Offset from the first result that you want to fetch.
          name: offset
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The meeting identifier for the specific meeting instance.
            name: meetingInstanceId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The display name of the participant of this media session.
            name: webexUserName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the participant of this media session.
            name: webexUserEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time when this participant joined the meeting.
            name: joinTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time when this participant left the meeting.
            name: leaveTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The join meeting time of the participant. '
            name: joinMeetingTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of the client (and OS) used by this media session.
            name: clientType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The version of the client used by this media session.
            name: clientVersion
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The operating system used for the client.
            name: osType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The version of the operating system used for the client.
            name: osVersion
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of hardware used to attend the meeting
            name: hardwareType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A description of the speaker used in the meeting.
            name: speakerName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of network.
            name: networkType
            param_attrs:
            - doc: ''
              name: wifi
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: cellular
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: ethernet
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: unknown
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The local IP address of the client.
            name: localIP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The public IP address of the client.
            name: publicIP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The masked local IP address of the client.
            name: maskedLocalIP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The masked public IP address of the client.
            name: maskedPublicIP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A description of the camera used in the meeting.
            name: camera
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A description of the microphone used in the meeting.
            name: microphone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The server region.
            name: serverRegion
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The video mesh cluster name.
            name: videoMeshCluster
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The video mesh server name.
            name: videoMeshServer
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Identifies the participant.
            name: participantId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Identifies a specific session the participant has in a given meeting.
            name: participantSessionId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The collection of downstream (sent to the client) video quality data.
            name: videoIn
            param_attrs:
            - doc: The sampling interval, in seconds, of the downstream video quality
                data.
              name: samplingInterval
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The date and time when this video session started.
              name: startTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The date and time when this video session ended.
              name: endTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The percentage of video packet loss, as a float between 0.0 and
                100.0, during each sampling interval.
              name: packetLoss
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The average latency, in milliseconds, during each sampling interval.
              name: latency
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The pixel height of the incoming video.
              name: resolutionHeight
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The frames per second of the incoming video.
              name: frameRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The bit rate of the incoming video.
              name: mediaBitRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The incoming video codec.
              name: codec
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The incoming video jitter.
              name: jitter
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The network protocol used for video transmission.
              name: transportType
              param_attrs:
              - doc: ''
                name: UDP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TCP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[VideoIn]
            type_spec: null
          - doc: The collection of upstream (sent from the client) video quality data.
            name: videoOut
            param_attrs:
            - doc: The sampling interval, in seconds, of the upstream video quality
                data.
              name: samplingInterval
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The date and time when this video session started.
              name: startTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The date and time when this video session ended.
              name: endTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The percentage of video packet loss, in float between 0.0 and 100.0,
                during each sampling interval.
              name: packetLoss
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The average latency, in milliseconds, during each sampling interval.
              name: latency
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The pixel height of the outgoing video.
              name: resolutionHeight
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The frames per second of the outgoing video.
              name: frameRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The bit rate of the outgoing video.
              name: mediaBitRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The outgoing video codec.
              name: codec
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The outgoing video jitter.
              name: jitter
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The network protocol used for video transmission.
              name: transportType
              param_attrs:
              - doc: ''
                name: UDP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TCP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[VideoOut]
            type_spec: null
          - doc: The collection of downstream (sent to the client) audio quality data.
            name: audioIn
            param_attrs:
            - doc: The sampling interval, in seconds, of the downstream audio quality
                data.
              name: samplingInterval
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The date and time when this audio session started.
              name: startTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The date and time when this audio session ended.
              name: endTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The percentage of audio packet loss, as a float between 0.0 and
                100.0, during each sampling interval.
              name: packetLoss
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The average latency, in milliseconds, during each sampling interval.
              name: latency
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: Not applicable to audio.
              name: resolutionHeight
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: Not applicable to audio.
              name: frameRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The bitrate of the incoming audio.
              name: mediaBitRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The codec of the incoming audio.
              name: codec
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The incoming audio jitter.
              name: jitter
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The network protocol used for video transmission.
              name: transportType
              param_attrs:
              - doc: ''
                name: UDP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TCP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[AudioIn]
            type_spec: null
          - doc: The collection of upstream (sent from the client) audio quality data.
            name: audioOut
            param_attrs:
            - doc: The sampling interval, in seconds, of the upstream audio quality
                data.
              name: samplingInterval
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The date and time when this audio session started.
              name: startTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The date and time when this audio session ended.
              name: endTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The percentage of audio packet loss, as a float between 0.0 and
                100.0, during each sampling interval.
              name: packetLoss
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The average latency, in milliseconds, during each sampling interval.
              name: latency
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: Not applicable to audio out.
              name: resolutionHeight
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: Not applicable to audio out.
              name: frameRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The bit rate of the outgoing audio.
              name: mediaBitRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The audio codec.
              name: codec
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The outgoing audio jitter.
              name: jitter
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The network protocol used for video transmission.
              name: transportType
              param_attrs:
              - doc: ''
                name: UDP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TCP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[AudioOut]
            type_spec: null
          - doc: The collection of downstream (sent to the client) share quality data.
            name: shareIn
            param_attrs:
            - doc: The sampling interval, in seconds, of the downstream content sharing
                data.
              name: samplingInterval
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The date and time when this content sharing session started.
              name: startTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The date and time when this content sharing session ended.
              name: endTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The percentage of content sharing packet loss, as a float between
                0.0 and 100.0, during each sampling interval.
              name: packetLoss
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The average latency, in milliseconds, during each sampling interval.
              name: latency
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The height in pixels of the incoming share video.
              name: resolutionHeight
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The frame rate of the incoming share video.
              name: frameRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The bit rate for the incoming share video.
              name: mediaBitRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The codec for the incoming share video.
              name: codec
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The jitter for the incoming share video.
              name: jitter
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The network protocol used for video transmission.
              name: transportType
              param_attrs:
              - doc: ''
                name: UDP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TCP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[ShareIn]
            type_spec: null
          - doc: The collection of upstream (sent from the client) share quality data.
            name: shareOut
            param_attrs:
            - doc: The sampling interval, in seconds, of the upstream content sharing
                data.
              name: samplingInterval
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The date and time when this content sharing session started.
              name: startTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The date and time when this content sharing session ended.
              name: endTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The percentage of content sharing packet loss, in float between
                0.0 and 100.0, during each sampling interval.
              name: packetLoss
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The average latency, in milliseconds, during each sampling interval.
              name: latency
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The height in pixels of the outgoing share video.
              name: resolutionHeight
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The frame rate of the outgoing share video.
              name: frameRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The bit rate of the outgoing share video.
              name: mediaBitRate
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The codec of the outgoing share video.
              name: codec
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The jitter for the outgoing share video.
              name: jitter
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The network protocol used for video transmission.
              name: transportType
              param_attrs:
              - doc: ''
                name: UDP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TCP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[ShareOut]
            type_spec: null
          - doc: Device resources such as CPU and memory.
            name: resources
            param_attrs:
            - doc: The average percent CPU for the process.
              name: processAverageCPU
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The max percent CPU for the process.
              name: processMaxCPU
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The average percent CPU for the system.
              name: systemAverageCPU
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            - doc: The max percent CPU for the system.
              name: systemMaxCPU
              param_attrs: []
              param_object: []
              type: array[number]
              type_spec: null
            param_object: []
            type: array[Resources]
            type_spec: null
          param_object: []
          type: array[Media Session Quality]
          type_spec: null
  Meeting Transcripts:
    doc: 'Not supported for Webex for Government (FedRAMP)

      A meeting transcript is the automatic transcription of a meeting''s recordings
      by our industry-leading speech-to-text engine to capture of what was discussed
      and decided during the meeting, in text form.

      A transcript snippet is a short text snippet from a meeting transcript which
      was spoken by a particular participant in the meeting. A meeting transcript
      consists of many snippets.

      This API manages meeting transcripts and snippets. You can use the Transcript
      API to list meeting transcripts, list, get and update transcript snippets. Transcripts
      may be retrieved via download link defined by vttDownloadLink or txtDownloadlink
      in the response body.

      Refer to the Meetings API Scopes section of Meetings Overview for scopes required
      for each API.

      NOTE:'
    header: Meeting Transcripts
    methods:
    - doc: 'Lists available transcripts of an ended meeting instance.

        Use this operation to list transcripts of an ended meeting instance when they
        are ready. Please note that only meeting instances in state ended are supported
        for meetingId. Meeting series, scheduled meetings and in-progress meeting
        instances are not supported.'
      documentation:
        doc: List Meeting Transcripts
        doc_link: https://developer.webex.com/docs/api/v1/meeting-transcripts/list-meeting-transcripts
        endpoint: https://webexapis.com/v1/meetingTranscripts
        http_method: GET
      header: List Meeting Transcripts
      parameters_and_response:
        Query Parameters:
        - doc: Unique identifier for the meeting instance to which the transcript
            belongs. Please note that currently the meeting ID of a scheduled personal
            room meeting is not supported for this API. If meetingId is not specified,
            the operation returns an array of transcripts for all meetings of the
            current user.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
            If meetingId is not specified, it can not support hostEmail.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: URL of the Webex site from which the API lists transcripts. If not
            specified, the API lists transcripts from user's preferred site. All available
            Webex sites and the preferred site of the user can be retrieved by the
            Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Starting date and time (inclusive) for transcripts to return, in any
            ISO 8601 compliant format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Ending date and time (exclusive) for List transcripts to return, in
            any ISO 8601 compliant format. to cannot be before from.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Maximum number of transcripts to return in a single page. max must
            be equal to or greater than 1 and equal to or less than 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: Transcript array.
          name: items
          param_attrs:
          - doc: A unique identifier for the transcript.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: URL of the Webex site from which the API lists meeting transcripts.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start time for the meeting transcript in ISO 8601 compliant format.
            name: startTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The meeting's topic.
            name: meetingTopic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the meeting instance to which the transcripts
              belong.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for scheduled meeting with which the current meeting
              is associated. Only apples to a meeting instance which is happening
              or has happened. This is the id of the scheduled meeting with which
              the instance is associated.
            name: scheduledMeetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the parent meeting series to which the recording
              belongs.
            name: meetingSeriesId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the meeting host.
            name: hostUserId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The download link for the transcript vtt file.
            name: vttDownloadLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The download link for the transcript txt file.
            name: txtDownloadLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: status
            param_attrs:
            - doc: Transcript is available.
              name: available
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Transcript has been deleted.
              name: deleted
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[TranscriptObject]
          type_spec: null
    - doc: 'Lists available or deleted transcripts of an ended meeting instance for
        a specific site.

        The returned list is sorted in descending order by the date and time that
        the transcript was created.'
      documentation:
        doc: List Meeting Transcripts For Compliance Officer
        doc_link: https://developer.webex.com/docs/api/v1/meeting-transcripts/list-meeting-transcripts-for-compliance-officer
        endpoint: https://webexapis.com/v1/admin/meetingTranscripts
        http_method: GET
      header: List Meeting Transcripts For Compliance Officer
      parameters_and_response:
        Query Parameters:
        - doc: URL of the Webex site from which the API lists transcripts.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Starting date and time (inclusive) for transcripts to return, in any
            ISO 8601 compliant format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Ending date and time (exclusive) for List transcripts to return, in
            any ISO 8601 compliant format. to cannot be before from.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Maximum number of transcripts to return in a single page. max must
            be equal to or greater than 1 and equal to or less than 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: Transcript array
          name: items
          param_attrs:
          - doc: A unique identifier for the transcript.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: URL of the Webex site from which the API lists meeting transcripts.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start time for the meeting transcript in ISO 8601 compliant format.
            name: startTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The meeting's topic.
            name: meetingTopic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the meeting instance to which the transcripts
              belong.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for scheduled meeting with which the current meeting
              is associated. Only apples to a meeting instance which is happening
              or has happened. This is the id of the scheduled meeting with which
              the instance is associated.
            name: scheduledMeetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the parent meeting series to which the recording
              belongs.
            name: meetingSeriesId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the meeting host.
            name: hostUserId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The download link for the transcript vtt file.
            name: vttDownloadLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The download link for the transcript txt file.
            name: txtDownloadLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: status
            param_attrs:
            - doc: Transcript is available.
              name: available
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Transcript has been deleted.
              name: deleted
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[TranscriptObject]
          type_spec: null
    - doc: Download a meeting transcript from the meeting transcript specified by
        transcriptId.
      documentation:
        doc: Download a Meeting Transcript
        doc_link: https://developer.webex.com/docs/api/v1/meeting-transcripts/download-a-meeting-transcript
        endpoint: https://webexapis.com/v1/meetingTranscripts/{transcriptId}/download
        http_method: GET
      header: Download a Meeting Transcript
      parameters_and_response:
        Query Parameters:
        - doc: 'Format for the downloaded meeting transcript.

            Possible values: vtt, txt'
          name: format
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting transcript.
          name: transcriptId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Lists snippets of a meeting transcript specified by transcriptId.

        Use this operation to list snippets of a meeting transcript when they are
        ready.'
      documentation:
        doc: List Snippets of a Meeting Transcript
        doc_link: https://developer.webex.com/docs/api/v1/meeting-transcripts/list-snippets-of-a-meeting-transcript
        endpoint: https://webexapis.com/v1/meetingTranscripts/{transcriptId}/snippets
        http_method: GET
      header: List Snippets of a Meeting Transcript
      parameters_and_response:
        Query Parameters:
        - doc: Maximum snippet items to be returned for this query, to support pagination.
          name: max
          param_attrs: []
          param_object: []
          type: int
          type_spec: null
        Response Properties:
        - doc: Transcript snippet array
          name: items
          param_attrs:
          - doc: A unique identifier for the snippet.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Text for the snippet.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the person generating the speech for the snippet.
            name: personName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address of the person generating the speech for the snippet.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Offset from the beginning of the parent transcript in milliseconds
              indicating the start time of the snippet.
            name: offsetMillisecond
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Duration of the snippet in milliseconds.
            name: durationMillisecond
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: array[SnippetObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting transcript to which the snippets
            belong.
          name: transcriptId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Retrieves details for a transcript snippet specified by snippetId from
        the meeting transcript specified by transcriptId.
      documentation:
        doc: Get a Transcript Snippet
        doc_link: https://developer.webex.com/docs/api/v1/meeting-transcripts/get-a-transcript-snippet
        endpoint: https://webexapis.com/v1/meetingTranscripts/{transcriptId}/snippets/{snippetId}
        http_method: GET
      header: Get a Transcript Snippet
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the snippet.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Text for the snippet.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the person generating the speech for the snippet.
          name: personName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address of the person generating the speech for the snippet.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Offset from the beginning of the parent transcript in milliseconds
            indicating the start time of the snippet.
          name: offsetMillisecond
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Duration of the snippet in milliseconds.
          name: durationMillisecond
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting transcript to which the requested
            snippet belongs.
          name: transcriptId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique identifier for the snippet being requested.
          name: snippetId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Updates details for a transcript snippet specified by snippetId from the
        meeting transcript specified by transcriptId.
      documentation:
        doc: Update a Transcript Snippet
        doc_link: https://developer.webex.com/docs/api/v1/meeting-transcripts/update-a-transcript-snippet
        endpoint: https://webexapis.com/v1/meetingTranscripts/{transcriptId}/snippets/{snippetId}
        http_method: PUT
      header: Update a Transcript Snippet
      parameters_and_response:
        Body Parameters:
        - doc: Reason for snippet update; only required for Compliance Officers.
          name: reason
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Text for the snippet.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the snippet.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Text for the snippet.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the person generating the speech for the snippet.
          name: personName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address of the person generating the speech for the snippet.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Offset from the beginning of the parent transcript in milliseconds
            indicating the start time of the snippet.
          name: offsetMillisecond
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Duration of the snippet in milliseconds.
          name: durationMillisecond
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting transcript to which the snippet to
            be updated belongs.
          name: transcriptId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique identifier for the snippet being updated.
          name: snippetId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Removes a transcript with a specified transcript ID. The deleted transcript
        cannot be recovered. If a Compliance Officer deletes another user's transcript,
        the transcript will be inaccessible to regular users (host, attendees), but
        will be still available to the Compliance Officer.
      documentation:
        doc: Delete a Transcript
        doc_link: https://developer.webex.com/docs/api/v1/meeting-transcripts/delete-a-transcript
        endpoint: https://webexapis.com/v1/meetingTranscripts/{transcriptId}
        http_method: DELETE
      header: Delete a Transcript
      parameters_and_response:
        Body Parameters:
        - doc: Reason for deleting a transcript. Only required when a Compliance Officer
            is operating on another user's transcript.
          name: reason
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Explanation for deleting a transcript. The comment can be a maximum
            of 255 characters long.
          name: comment
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting transcript.
          name: transcriptId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Meetings:
    doc: 'Meetings are virtual conferences where users can collaborate in real time
      using audio, video, content sharing, chat, online whiteboards, and to collaborate.

      This API focuses primarily on the scheduling and management of meetings. You
      can use the Meetings API to list, create, get, update, and delete meetings.

      Several types of meeting objects are supported by this API, such as meeting
      series, scheduled meeting, and ended or in-progress meeting instances. See the
      Meetings Overview for more information about the types of meetings.

      Refer to the Meetings API Scopes section of Meetings Overview for scopes required
      for each API.'
    header: Meetings
    methods:
    - doc: Creates a new meeting. Regular users can schedule up to 100 meetings in
        24 hours and admin users up to 3000.
      documentation:
        doc: Create a Meeting
        doc_link: https://developer.webex.com/docs/api/v1/meetings/create-a-meeting
        endpoint: https://webexapis.com/v1/meetings
        http_method: POST
      header: Create a Meeting
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not to create an ad-hoc meeting for the room specified by
            roomId. When true, roomId is required.
          name: adhoc
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Unique identifier for the Webex space which the meeting is to be associated
            with. It can be retrieved by List Rooms. roomId is required when adhoc
            is true. When roomId is specified, the parameter hostEmail will be ignored.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for meeting template. Please note that start and
            end are optional when templateId is specified. The list of meeting templates
            that is available for the authenticated user can be retrieved from List
            Meeting Templates. This parameter is ignored for an ad-hoc meeting.
          name: templateId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting title. The title can be a maximum of 128 characters long. The
            default value for an ad-hoc meeting is the user's name if not specified.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Meeting agenda. The agenda can be a maximum of 1300 characters long.
          name: agenda
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting password. Must conform to the site's password complexity settings.
            Read password management for details. If not specified, a random password
            conforming to the site's password rules will be generated automatically.
          name: password
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Date and time for the start of meeting in any ISO 8601 compliant format.
            start cannot be before current date and time or after end. Duration between
            start and end cannot be shorter than 10 minutes or longer than 24 hours.
            Please note that when a meeting is being scheduled, start of the meeting
            will be accurate to minutes, not seconds or milliseconds. Therefore, if
            start is within the same minute as the current time, start will be adjusted
            to the upcoming minute; otherwise, start will be adjusted with seconds
            and milliseconds stripped off. For instance, if the current time is 2022-03-01T10:32:16.657+08:00,
            start of 2022-03-01T10:32:28.076+08:00 or 2022-03-01T10:32:41+08:00 will
            be adjusted to 2022-03-01T10:33:00+08:00, and start of 2022-03-01T11:32:28.076+08:00
            or 2022-03-01T11:32:41+08:00 will be adjusted to 2022-03-01T11:32:00+08:00.
            The default value for an ad-hoc meeting is 5 minutes after the current
            time and the user's input value will be ignored. An ad-hoc meeting can
            be started immediately even if the start is 5 minutes after the current
            time.
          name: start
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Date and time for the end of meeting in any ISO 8601 compliant format.
            end cannot be before current date and time or before start. Duration between
            start and end cannot be shorter than 10 minutes or longer than 24 hours.
            Please note that when a meeting is being scheduled, end of the meeting
            will be accurate to minutes, not seconds or milliseconds. Therefore, end
            will be adjusted with seconds and milliseconds stripped off. For instance,
            end of 2022-03-01T11:52:28.076+08:00 or 2022-03-01T11:52:41+08:00 will
            be adjusted to 2022-03-01T11:52:00+08:00. The default value for an ad-hoc
            meeting is 20 minutes after the current time and the user's input value
            will be ignored.
          name: end
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Time zone in which the meeting was originally scheduled (conforming
            with the IANA time zone database). The default value for an ad-hoc meeting
            is UTC and the user's input value will be ignored.
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting series recurrence rule (conforming with RFC 2445), applying
            only to meeting series. It doesn't apply to a scheduled meeting or an
            ended or ongoing meeting instance. This parameter is ignored for an ad-hoc
            meeting. Multiple days or dates for monthly or yearly recurrence rule
            are not supported, only the first day or date specified is taken. For
            example, "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10,11,12" is not
            supported and it will be partially supported as "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10".
          name: recurrence
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not meeting is recorded automatically.
          name: enabledAutoRecordMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee with a host account on the target
            site to become a cohost when joining the meeting. The target site is specified
            by siteUrl parameter when creating the meeting; if not specified, it's
            the user's preferred site. The default value for an ad-hoc meeting is
            true and the user's input value will be ignored.
          name: allowAnyUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to join the meeting before the
            host joins the meeting. The default value for an ad-hoc meeting is true
            and the user's input value will be ignored.
          name: enabledJoinBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to connect audio in the meeting
            before the host joins the meeting. This attribute is only applicable if
            the enabledJoinBeforeHost attribute is set to true. The default value
            for an ad-hoc meeting is true and the user's input value will be ignored.
          name: enableConnectAudioBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: the number of minutes an attendee can join the meeting before the meeting
            start time and the host joins. This attribute is only applicable if the
            enabledJoinBeforeHost attribute is set to true. Valid options are 0, 5,
            10 and 15. Default is 0 if not specified. The default value for an ad-hoc
            meeting is 0 and the user's input value will be ignored.
          name: joinBeforeHostMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to exclude the meeting password from the email invitation.
            This parameter is ignored for an ad-hoc meeting.
          name: excludePassword
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow the meeting to be listed on the public calendar.
            The default value for an ad-hoc meeting is false and the user's input
            value will be ignored.
          name: publicMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes before the meeting begins, that an email reminder
            is sent to the host. This parameter is ignored for an ad-hoc meeting.
          name: reminderTime
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies how the people who aren't on the invite can join the unlocked
            meeting. The default value for an ad-hoc meeting is allowJoinWithLobby
            and the user's input value will be ignored.
          name: unlockedMeetingJoinSecurity
          param_attrs:
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoin,
              people can join the unlocked meeting directly.
            name: allowJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoinWithLobby,
              people will wait in the lobby until the host admits them.
            name: allowJoinWithLobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is blockFromJoin,
              people can't join the unlocked meeting.
            name: blockFromJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Unique identifier for a meeting session type for the user. This attribute
            is required when scheduling a webinar meeting. All available meeting session
            types enabled for the user can be retrieved using the List Meeting Session
            Types API.
          name: sessionTypeId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: When set as an attribute in a POST request body, specifies whether
            it's a regular meeting, a webinar, or a meeting scheduled in the user's
            personal room. If not specified, it's a regular meeting by default. The
            default value for an ad-hoc meeting is meeting and the user's input value
            will be ignored.
          name: scheduledType
          param_attrs:
          - doc: Set the value of scheduledType attribute to meeting for creating
              a regular meeting.
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Set the value of scheduledType attribute to webinar for creating
              a webinar meeting.
            name: webinar
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Set the value of scheduledType attribute to personalRoomMeeting for
              creating a meeting in the user's personal room. Please note that templateId,
              roomId, integrationTags, enabledWebcastView, enabledAutoRecordMeeting
              and registration are not supported when creating a personal room meeting.
            name: personalRoomMeeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not webcast view is enabled. This parameter is ignored for
            an ad-hoc meeting.
          name: enabledWebcastView
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Password for panelists of a webinar meeting. Must conform to the site's
            password complexity settings. Read password management for details. If
            not specified, a random password conforming to the site's password rules
            will be generated automatically. This parameter is ignored for an ad-hoc
            meeting.
          name: panelistPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not to automatically lock the meeting after it starts. The
            default value for an ad-hoc meeting is false and the user's input value
            will be ignored.
          name: enableAutomaticLock
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes after the meeting begins, for automatically locking
            it. The default value for an ad-hoc meeting is null and the user's input
            value will be ignored.
          name: automaticLockMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to allow the first attendee of the meeting with a host
            account on the target site to become a cohost. The target site is specified
            by siteUrl parameter when creating the meeting; if not specified, it's
            user's preferred site. The default value for an ad-hoc meeting is false
            and the user's input value will be ignored.
          name: allowFirstUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow authenticated video devices in the meeting's
            organization to start or join the meeting without a prompt. The default
            value for an ad-hoc meeting is true and the user's input value will be
            ignored.
          name: allowAuthenticatedDevices
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Invitees for meeting. The maximum size of invitees is 1000. If roomId
            is specified and invitees is missing, all the members in the space are
            invited implicitly. If both roomId and invitees are specified, only those
            in the invitees list are invited. coHost for each invitee is true by default
            if roomId is specified when creating a meeting, and anyone in the invitee
            list that is not qualified to be a cohost will be invited as a non-cohost
            invitee. The user's input value will be ignored for an ad-hoc meeting
            and the the members of the room specified by roomId except "me" will be
            used by default.
          name: invitees
          param_attrs:
          - doc: Email address of meeting invitee.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Display name of meeting invitee. The maximum length of displayName
              is 128 characters. If not specified but the email has been registered,
              user's registered name for the email will be taken as displayName. If
              not specified and the email hasn't been registered, the email will be
              taken as displayName.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not invitee is allowed to be a cohost for the meeting.
              coHost for each invitee is true by default if roomId is specified when
              creating a meeting, and anyone in the invitee list that is not qualified
              to be a cohost will be invited as a non-cohost invitee.
            name: coHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not an invitee is allowed to be a panelist. Only applies
              to webinars.
            name: panelist
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[InviteeObjectForCreateMeeting]
          type_spec: null
        - doc: Whether or not to send emails to host and invitees. It is an optional
            field and default value is true. The default value for an ad-hoc meeting
            is false and the user's input value will be ignored.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This attribute should only be set
            if the user or application calling the API has the admin-level scopes.
            When used, the admin may specify the email of a user in a site they manage
            to be the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: URL of the Webex site which the meeting is created on. If not specified,
            the meeting is created on user's preferred site. All available Webex sites
            and preferred site of the user can be retrieved by Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting Options.
          name: meetingOptions
          param_attrs:
          - doc: Whether or not to allow any attendee to chat in the meeting. Also
              depends on the session type.
            name: enabledChat
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to have video in the meeting.
              Also depends on the session type.
            name: enabledVideo
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to poll in the meeting. Can
              only be set true for a webinar. The value of this attribute depends
              on the session type for a meeting. Please contact your site admin if
              this attribute is not available.
            name: enabledPolling
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to take notes in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledNote
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether note taking is enabled. If the value of enabledNote is false,
              users can not set this attribute and get default value allowAll.
            name: noteType
            param_attrs:
            - doc: If the value of noteType attribute is allowAll, all participants
                can take notes.
              name: allowAll
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of noteType attribute is allowOne, only a single note
                taker is allowed.
              name: allowOne
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow any attendee to have closed captions in the
              meeting. The value of this attribute also depends on the session type.
            name: enabledClosedCaptions
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to transfer files in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledFileTransfer
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to share Universal Communications
              Format media files in the meeting. The value of this attribute also
              depends on the sessionType.
            name: enabledUCFRichMedia
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Attendee Privileges.
          name: attendeePrivileges
          param_attrs:
          - doc: Whether or not to allow any attendee to share content in the meeting.
            name: enabledShareContent
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to save shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledSaveDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to print shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledPrintDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to annotate shared documents,
              slides, or whiteboards when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledAnnotate
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view participants.
            name: enabledViewParticipantList
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to see a small preview image
              of any page of shared documents or slides when they are shared as files
              in the content viewer instead of in a window or application.
            name: enabledViewThumbnails
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to control applications, web
              browsers, or desktops remotely.
            name: enabledRemoteControl
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view any shared documents
              or slides when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledViewAnyDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to scroll through any page of
              shared documents or slides when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledViewAnyPage
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to contact the operator privately.
            name: enabledContactOperatorPrivately
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the host in private.
            name: enabledChatHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the presenter in
              private.
            name: enabledChatPresenter
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with other participants
              in private.
            name: enabledChatOtherParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Meeting registration. When this option is enabled, meeting invitees
            must register personal information to join the meeting. Meeting invitees
            will receive an email with a registration link for the registration. When
            the registration form has been submitted and approved, an email with a
            real meeting link will be received. By clicking that link the meeting
            invitee can join the meeting. Please note that meeting registration does
            not apply to a meeting when it's a recurring meeting with a recurrence
            field or no password, or the Join Before Host option is enabled for the
            meeting. See Register for a Meeting in Cisco Webex Meetings for details.
            This parameter is ignored for an ad-hoc meeting.
          name: registration
          param_attrs:
          - doc: Whether or not meeting registration request is accepted automatically.
            name: autoAcceptRequest
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's first name is required for meeting
              registration. This option must always be true.
            name: requireFirstName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's last name is required for meeting registration.
              This option must always be true.
            name: requireLastName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's email is required for meeting registration.
              This option must always be true.
            name: requireEmail
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's job title is shown or required for
              meeting registration.
            name: requireJobTitle
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's company name is shown or required for
              meeting registration.
            name: requireCompanyName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's first address field is shown or required
              for meeting registration.
            name: requireAddress1
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's second address field is shown or required
              for meeting registration.
            name: requireAddress2
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's city is shown or required for meeting
              registration.
            name: requireCity
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's state is shown or required for meeting
              registration.
            name: requireState
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's postal code is shown or required for
              meeting registration.
            name: requireZipCode
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's country or region is shown or required
              for meeting registration.
            name: requireCountryRegion
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's work phone number is shown or required
              for meeting registration.
            name: requireWorkPhone
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's fax number is shown or required for
              meeting registration.
            name: requireFax
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Maximum number of meeting registrations. This only applies to meetings.
              The maximum number of participants for meetings and webinars, with the
              limit based on the user capacity and controlled by a toggle at the site
              level. The default maximum number of participants for webinars is 10000,
              but the actual maximum number of participants is limited by the user
              capacity.
            name: maxRegisterNum
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Customized questions for meeting registration.
            name: customizedQuestions
            param_attrs:
            - doc: Title of the customized question.
              name: question
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Whether or not the customized question is required to be answered
                by participants.
              name: required
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Type of the question being asked.
              name: type
              param_attrs:
              - doc: Single line text box.
                name: singleLineTextBox
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Multiple line text box.
                name: multiLineTextBox
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Check box which requires options.
                name: checkbox
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Drop down list box which requires options.
                name: dropdownList
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Single radio button which requires options.
                name: radioButtons
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: The maximum length of a string that can be entered by the user,
                ranging from 0 to 999. Only required by singleLineTextBox and multiLineTextBox.
              name: maxLength
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: 'The content of options. Required if the question type is one of
                checkbox, dropdownList, or radioButtons.

                The content of the option.'
              name: options
              param_attrs: []
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The automatic approval rules for customized questions.
              name: rules
              param_attrs:
              - doc: Judgment expression for approval rules.
                name: condition
                param_attrs:
                - doc: The content of the answer contains the value.
                  name: contains
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The content of the answer does not contain the value
                  name: notContains
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The content of the answer begins with the value.
                  name: beginsWith
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The content of the answer ends with the value.
                  name: endsWith
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The content of the answer is the same as the value.
                  name: equals
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The content of the answer is not the same as the value.
                  name: notEquals
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: The keyword for the approval rule. If the rule matches the keyword,
                  the corresponding action will be executed.
                name: value
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: The automatic approval result for the approval rule.
                name: result
                param_attrs:
                - doc: If the user's registration value meets the criteria, the registration
                    form will be automatically approved.
                  name: approve
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the user's registration value meets the criteria, the registration
                    form will be automatically rejected.
                  name: reject
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: Whether to check the case of values.
                name: matchCase
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            param_object: []
            type: array[CustomizedQuestionForCreateMeeting]
            type_spec: null
          - doc: The approval rules for standard questions.
            name: rules
            param_attrs:
            - doc: Name for standard question.
              name: question
              param_attrs:
              - doc: If the value is lastName, this approval rule applies to the standard
                  question of "Last Name".
                name: lastName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is email, this approval rule applies to the standard
                  question of "Email".
                name: email
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is jobTitle, this approval rule applies to the standard
                  question of "Job Title".
                name: jobTitle
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is companyName, this approval rule applies to the
                  standard question of "Company Name".
                name: companyName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is address1, this approval rule applies to the standard
                  question of "Address 1".
                name: address1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is address2, this approval rule applies to the standard
                  question of "Address 2".
                name: address2
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is city, this approval rule applies to the standard
                  question of "City".
                name: city
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is state, this approval rule applies to the standard
                  question of "State".
                name: state
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is zipCode, this approval rule applies to the standard
                  question of "Zip/Post Code".
                name: zipCode
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is countryRegion, this approval rule applies to
                  the standard question of "Country Region".
                name: countryRegion
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is workPhone, this approval rule applies to the
                  standard question of "Work Phone".
                name: workPhone
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is fax, this approval rule applies to the standard
                  question of "Fax".
                name: fax
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Judgment expression for approval rules.
              name: condition
              param_attrs:
              - doc: The content of the answer contains the value.
                name: contains
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer does not contain the value
                name: notContains
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer begins with the value.
                name: beginsWith
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer ends with the value.
                name: endsWith
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer is the same as the value.
                name: equals
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer is not the same as the value.
                name: notEquals
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: The keyword for the approval rule. If the rule matches the keyword,
                the corresponding action will be executed.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: The automatic approval result for the approval rule.
              name: result
              param_attrs:
              - doc: If the user's registration value meets the criteria, the registration
                  form will be automatically approved.
                name: approve
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the user's registration value meets the criteria, the registration
                  form will be automatically rejected.
                name: reject
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Whether to check the case of values.
              name: matchCase
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The priority number of the approval rule. Approval rules for standard
                questions and custom questions need to be ordered together.
              name: order
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            param_object: []
            type: array[StandardRegistrationApproveRule]
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: External keys created by an integration application in its own domain,
            for example Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
            etc. The integration application queries meetings by a key in its own
            domain. The maximum size of integrationTags is 3 and each item of integrationTags
            can be a maximum of 64 characters long. This parameter is ignored for
            an ad-hoc meeting.
          name: integrationTags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Simultaneous interpretation information for a meeting.
          name: simultaneousInterpretation
          param_attrs:
          - doc: Whether or not simultaneous interpretation is enabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Interpreters for meeting.
            name: interpreters
            param_attrs:
            - doc: Forms a set of simultaneous interpretation channels together with
                languageCode2. Standard language format from ISO 639-1 code. Read
                ISO 639-1 for details.
              name: languageCode1
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Forms a set of simultaneous interpretation channels together with
                languageCode1. Standard language format from ISO 639-1 code. Read
                ISO 639-1 for details.
              name: languageCode2
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Email address of meeting interpreter.
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Display name of meeting interpreter.
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[InterpreterObjectForSimultaneousInterpretationOfCreateOrUpdateMeeting]
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Whether or not breakout sessions are enabled.
          name: enabledBreakoutSessions
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Breakout sessions are smaller groups that are split off from the main
            meeting or webinar. They allow a subset of participants to collaborate
            and share ideas over audio and video. Use breakout sessions for workshops,
            classrooms, or for when you need a moment to talk privately with a few
            participants outside of the main session. Please note that maximum number
            of breakout sessions in a meeting or webinar is 100. In webinars, if hosts
            preassign attendees to breakout sessions, the role of attendee will be
            changed to panelist. Breakout session is not supported for a meeting with
            simultaneous interpretation.
          name: breakoutSessions
          param_attrs:
          - doc: Name for breakout session.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Invitees for breakout session. Please note that one invitee cannot
              be assigned to more than one breakout session.
            name: invitees
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          param_object: []
          type: array[BreakoutSessionObject]
          type_spec: null
        - doc: Tracking codes information. All available tracking codes and their
            options for the specified site can be retrieved by List Meeting Tracking
            Codes API. If an optional tracking code is missing from the trackingCodes
            array and there's a default option for this tracking code, the default
            option is assigned automatically. If the inputMode of a tracking code
            is select, its value must be one of the site-level options or the user-level
            value. Tracking code is not supported for a personal room meeting or an
            ad-hoc space meeting.
          name: trackingCodes
          param_attrs:
          - doc: Name of the tracking code. The name cannot be empty and the maximum
              size is 120 characters.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Value for the tracking code. value cannot be empty and the maximum
              size is 120 characters.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: array[TrackingCodeItemForCreateMeetingObject]
          type_spec: null
        - doc: Audio connection options.
          name: audioConnectionOptions
          param_attrs:
          - doc: Choose how meeting attendees join the audio portion of the meeting.
            name: audioConnectionType
            param_attrs:
            - doc: Provide a hybrid audio option, allowing attendees to join using
                their computer audio or a phone.
              name: webexAudio
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only restricts attendees to join the audio portion of the meeting
                using their computer instead of a telephone option.
              name: VoIP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Other teleconference services.
              name: other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The way of attendees join the audio portion of the meeting is the
                default value.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to show toll-free call-in numbers.
            name: enabledTollFreeCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to show global call-in numbers to attendees.
            name: enabledGlobalCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to receive a call-back and call-in
              is available. Can only be set true for a webinar.
            name: enabledAudienceCallBack
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Select the sound you want users who have a phone audio connection
              to hear when someone enters or exits the meeting.
            name: entryAndExitTone
            param_attrs:
            - doc: All call-in users joining the meeting will hear the beep.
              name: beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: All call-in users joining the meeting will hear their names.
              name: announceName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Turn off beeps and name announcements.
              name: noTone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow the host to unmute participants.
            name: allowHostToUnmuteParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to unmute themselves.
            name: allowAttendeeToUnmuteSelf
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to auto-mute attendees when attendees enter meetings.
            name: muteAttendeeUponEntry
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Response Properties:
        - doc: Unique identifier for meeting. For a meeting series, the id is used
            to identify the entire series. For scheduled meetings from a series, the
            id is used to identify that scheduled meeting. For a meeting instance
            that is in progress or has concluded, the id is used to identify that
            instance.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting number. Applies to meeting series, scheduled meeting, and meeting
            instances, but not to meeting instances which have ended.
          name: meetingNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting title. Can be modified for a meeting series or a scheduled
            meeting using the Update a Meeting API.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting agenda. The agenda can be a maximum of 1300 characters long.
            This attribute can be modified for a meeting series or a scheduled meeting
            using the  Update a Meeting API.
          name: agenda
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting password. Applies to meeting series, scheduled meetings, and
            in-progress meeting instances, but not to meeting instances which have
            ended. Can be modified for a meeting series or a scheduled meeting using
            the Update a Meeting API.
          name: password
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 8-digit numeric password used to join a meeting from audio and video
            devices. This attribute applies to meeting series, scheduled meetings,
            and in-progress meeting instances, but not to meeting instances which
            have ended.
          name: phoneAndVideoSystemPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting type.
          name: meetingType
          param_attrs:
          - doc: Primary instance of a scheduled series of meetings which consists
              of one or more scheduled meetings based on a recurrence rule. When a
              non-recurring meeting is scheduled with no recurrence, its meetingType
              is also meetingSeries which is a meeting series with only one occurrence
              in Webex meeting modeling.
            name: meetingSeries
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Instance from a primary meeting series.
            name: scheduledMeeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting instance that is in progress or has completed.
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Meeting state.
          name: state
          param_attrs:
          - doc: Only applies to a meeting series. Indicates that one or more future
              scheduled meetings exist for this meeting series.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to scheduled meeting. Indicates that the meeting is
              scheduled in the future.
            name: scheduled
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to scheduled meeting. Indicates that this scheduled
              meeting is ready to start or join immediately.
            name: ready
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to meeting instances. Indicates that a locked meeting
              has been joined by participants, but no hosts have joined.
            name: lobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Applies to meeting series and meeting instances. For a meeting series,
              indicates that an instance of this series is happening now. For a meeting
              instance, indicates that the meeting has been joined and unlocked.
            name: inProgress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Applies to scheduled meetings and meeting instances. For scheduled
              meetings, indicates that the meeting was started and is now over. For
              meeting instances, indicates that the meeting instance has concluded.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: This state only applies to scheduled meetings. Indicates that the
              meeting was scheduled in the past but never happened.
            name: missed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: This state only applies to a meeting series. Indicates that all scheduled
              meetings of this series have passed.
            name: expired
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: If true, the meeting is ad-hoc.
          name: adhoc
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Time zone of start and end, conforming with the IANA time zone database.
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start time for meeting in ISO 8601 compliant format. If the meetingType
            of this meeting is meetingSeries, and current is not specified or is false,
            start is the scheduled start time of the first occurrence of this series.
            If the meetingType of this meeting is meetingSeries, and current is not
            specified or is false, start is the scheduled start time of the first
            occurrence of this series. If the meetingType of this meeting is meetingSeries,
            and current is true, start is the scheduled start time of the ongoing
            or upcoming occurrence in this series. If the meetingType of this meeting
            is scheduledMeeting, start is the scheduled start time of this occurrence.
            If the meetingType of this meeting is meeting, start is the actual start
            time of this meeting instance. Can be modified for a meeting series or
            a scheduled meeting using the  Update a Meeting API.
          name: start
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End time for a meeting in ISO 8601 compliant format. If the meeting
            is a meeting series, end is the date and time the first meeting of the
            series ends. If the meetingType of this meeting is meetingSeries, and
            current is not specified or is false, end is the scheduled end time of
            the first occurrence of this series. If the meetingType of this meeting
            is meetingSeries, and current is true, end is the scheduled end time of
            the ongoing or upcoming occurrence in this series. If the meetingType
            of this meeting is scheduledMeeting, end is the scheduled end time of
            this occurrence. If the meetingType of this meeting is meeting, end is
            the actual end time of this meeting instance. Can be modified for a meeting
            series or a scheduled meeting using the  Update a Meeting API.
          name: end
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting series recurrence rule (conforming with RFC 2445). Applies
            only to a recurring meeting series, not to a meeting series with only
            one scheduled meeting. Can be modified for a meeting series using the  Update
            a Meeting API. Multiple days or dates for monthly or yearly recurrence
            rule are not supported, only the first day or date specified is taken.
            For example, "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10,11,12" is
            not supported and it will be partially supported as "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10".
          name: recurrence
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the meeting host.
          name: hostUserId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name for the meeting host.
          name: hostDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Key for joining the meeting as host.
          name: hostKey
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Site URL for the meeting.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Link to a meeting information page where the meeting client is launched
            if the meeting is ready to start or join.
          name: webLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: SIP address for callback from a video system.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: IP address for callback from a video system.
          name: dialInIpAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room ID of the associated Webex space. Only applies to ad-hoc meetings
            and space meetings.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not meeting is recorded automatically. Can be modified for
            a meeting series or a scheduled meeting using the  Update a Meeting API.
          name: enabledAutoRecordMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee with a host account on the target
            site to become a cohost when joining the meeting. The target site is specified
            by a siteUrl parameter when creating the meeting. If not specified, it's
            a user's preferred site. The allowAnyUserToBeCoHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: allowAnyUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to join the meeting before the
            host joins the meeting. The enabledJoinBeforeHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: enabledJoinBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to connect to audio before the
            host joins the meeting. Only applicable if the enabledJoinBeforeHost attribute
            is set to true. The enableConnectAudioBeforeHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: enableConnectAudioBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of minutes an attendee can join the meeting before the meeting
            start time and the host joins. Only applicable if the enabledJoinBeforeHost
            attribute is set to true. The joinBeforeHostMinutes attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API. Valid options are 0, 5, 10 and 15. Default is 0 if not specified.
          name: joinBeforeHostMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to exclude the meeting password from the email invitation.
          name: excludePassword
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow the meeting to be listed on the public calendar.
          name: publicMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes before the meeting begins, that an email reminder
            is sent to the host.
          name: reminderTime
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies how the people who aren't on the invite can join the unlocked
            meeting.
          name: unlockedMeetingJoinSecurity
          param_attrs:
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoin,
              people can join the unlocked meeting directly.
            name: allowJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoinWithLobby,
              people will wait in the lobby until the host admits them.
            name: allowJoinWithLobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is blockFromJoin,
              people can't join the unlocked meeting.
            name: blockFromJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Unique identifier for a meeting session type for the user. This attribute
            is required when scheduling a webinar meeting. All available meeting session
            types enabled for the user can be retrieved using the List Meeting Session
            Types API.
          name: sessionTypeId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies whether the meeting is a regular meeting, a webinar, or a
            meeting scheduled in the user's personal room.
          name: scheduledType
          param_attrs:
          - doc: If the value of scheduledType attribute is meeting, it is a regular
              meeting.
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of scheduledType attribute is webinar, it is a webinar
              meeting.
            name: webinar
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of scheduledType attribute is personalRoomMeeting, it
              is a meeting scheduled in the user's personal room.
            name: personalRoomMeeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not webcast view is enabled.
          name: enabledWebcastView
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Password for panelists of a webinar meeting. Must conform to the site's
            password complexity settings. Read password management for details. If
            not specified, a random password conforming to the site's password rules
            will be generated automatically.
          name: panelistPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 8-digit numeric panelist password to join a webinar meeting from audio
            and video devices.
          name: phoneAndVideoSystemPanelistPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not to automatically lock the meeting after it starts.
          name: enableAutomaticLock
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes after the meeting begins, for automatically locking
            it.
          name: automaticLockMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to allow the first attendee of the meeting with a host
            account on the target site to become a cohost. The target site is specified
            by the siteUrl parameter when creating the meeting. If not specified,
            it's a user's preferred site. The allowFirstUserToBeCoHost attribute can
            be modified for a meeting series or a scheduled meeting uisng the  Update
            a Meeting API.
          name: allowFirstUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow authenticated video devices in the meeting's
            organization to start or join the meeting without a prompt. This attribute
            can be modified for a meeting series or a scheduled meeting using the  Update
            a Meeting API.
          name: allowAuthenticatedDevices
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Information for callbacks from a meeting to phone or for joining a
            teleconference using a phone.
          name: telephony
          param_attrs: []
          param_object:
          - doc: Code for authenticating a user to join teleconference. Users join
              the teleconference using the call-in number or the global call-in number,
              followed by the value of the accessCode.
            name: accessCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Array of call-in numbers for joining a teleconference from a phone.
            name: callInNumbers
            param_attrs:
            - doc: 'Label for the call-in number.

                Possible values: Call-in toll-free number (US/Canada)'
              name: label
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Call-in number to join the teleconference from a phone.

                Possible values: 123456789'
              name: callInNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Type of toll for the call-in number.

                Possible values: toll, tollFree'
              name: tollType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: HATEOAS information of global call-in numbers for joining a teleconference
              from a phone.
            name: links
            param_attrs: []
            param_object:
            - doc: Link relation describing how the target resource is related to
                the current context (conforming with RFC5998).
              name: rel
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource URI (conforming with RFC5998).
              name: href
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource method (conforming with RFC5998).
              name: method
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: Meeting options.
          name: meetingOptions
          param_attrs: []
          param_object:
          - doc: Whether or not to allow any attendee to chat in the meeting. Also
              depends on the session type.
            name: enabledChat
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to have video in the meeting.
              Also depends on the session type.
            name: enabledVideo
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to poll in the meeting. Can
              only be set true for a webinar. The value of this attribute depends
              on the session type for a meeting. Please contact your site admin if
              this attribute is not available.
            name: enabledPolling
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to take notes in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledNote
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether note taking is enabled. If the value of enabledNote is false,
              users can not set this attribute and get default value allowAll.
            name: noteType
            param_attrs:
            - doc: If the value of noteType attribute is allowAll, all participants
                can take notes.
              name: allowAll
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of noteType attribute is allowOne, only a single note
                taker is allowed.
              name: allowOne
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow any attendee to have closed captions in the
              meeting. The value of this attribute also depends on the session type.
            name: enabledClosedCaptions
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to transfer files in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledFileTransfer
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to share Universal Communications
              Format media files in the meeting. The value of this attribute also
              depends on the sessionType.
            name: enabledUCFRichMedia
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Attendee Privileges.
          name: attendeePrivileges
          param_attrs: []
          param_object:
          - doc: Whether or not to allow any attendee to share content in the meeting.
            name: enabledShareContent
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to save shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledSaveDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to print shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledPrintDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to annotate shared documents,
              slides, or whiteboards when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledAnnotate
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view participants.
            name: enabledViewParticipantList
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to see a small preview image
              of any page of shared documents or slides when they are shared as files
              in the content viewer instead of in a window or application.
            name: enabledViewThumbnails
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to control applications, web
              browsers, or desktops remotely.
            name: enabledRemoteControl
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view any shared documents
              or slides when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledViewAnyDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to scroll through any page of
              shared documents or slides when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledViewAnyPage
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to contact the operator privately.
            name: enabledContactOperatorPrivately
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the host in private.
            name: enabledChatHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the presenter in
              private.
            name: enabledChatPresenter
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with other participants
              in private.
            name: enabledChatOtherParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Meeting registration. When this option is enabled, meeting invitees
            must register personal information in order to join the meeting. Meeting
            invitees will receive an email with a registration link for the registration.
            When the registration form has been submitted and approved, an email with
            a real meeting link will be received. By clicking that link the meeting
            invitee can join the meeting. Please note that meeting registration does
            not apply to a meeting when it's a recurring meeting with a recurrence
            field or no password, or the Join Before Host option is enabled for the
            meeting. See Register for a Meeting in Cisco Webex Meetings for details.
          name: registration
          param_attrs: []
          param_object:
          - doc: Whether or not meeting registration requests are accepted automatically.
            name: autoAcceptRequest
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's first name is required for meeting
              registration.
            name: requireFirstName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's last name is required for meeting registration.
            name: requireLastName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's email is required for meeting registration.
            name: requireEmail
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's job title is required for meeting registration.
            name: requireJobTitle
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's company name is required for meeting
              registration.
            name: requireCompanyName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's first address field is required for
              meeting registration.
            name: requireAddress1
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's second address field is required for
              meeting registration.
            name: requireAddress2
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's city is required for meeting registration.
            name: requireCity
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's state is required for meeting registration.
            name: requireState
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's postal code is required for meeting
              registration.
            name: requireZipCode
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's country or region is required for meeting
              registration.
            name: requireCountryRegion
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's work phone number is required for meeting
              registration.
            name: requireWorkPhone
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's fax number is required for meeting
              registration.
            name: requireFax
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Maximum number of meeting registrations. This only applies to meetings.
              The maximum number of participants for meetings and webinars, with the
              limit based on the user capacity and controlled by a toggle at the site
              level. The default maximum number of participants for webinars is 10000,
              but the actual maximum number of participants is limited by the user
              capacity.
            name: maxRegisterNum
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        - doc: External keys created by an integration application in its own domain,
            for example Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
            etc.
          name: integrationTags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Simultaneous interpretation information for the meeting.
          name: simultaneousInterpretation
          param_attrs: []
          param_object:
          - doc: Whether or not simultaneous interpretation is enabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Interpreters for meeting.
            name: interpreters
            param_attrs:
            - doc: Unique identifier for meeting interpreter.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Forms a set of simultaneous interpretation channels together with
                languageCode2. Standard language format from ISO 639-1 code. Read
                ISO 639-1 for details.
              name: languageCode1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Forms a set of simultaneous interpretation channels together with
                languageCode1. Standard language format from ISO 639-1 code. Read
                ISO 639-1 for details.
              name: languageCode2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Email address of meeting interpreter.
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Display name of meeting interpreter.
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[InterpreterObjectForSimultaneousInterpretationOfGetOrListMeeting]
            type_spec: null
          type: object
          type_spec: null
        - doc: Tracking codes information.
          name: trackingCodes
          param_attrs:
          - doc: Name for the tracking code.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Value for the tracking code.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[TrackingCodeItemForGetMeetingObject]
          type_spec: null
        - doc: Audio connection options.
          name: audioConnectionOptions
          param_attrs: []
          param_object:
          - doc: Choose how meeting attendees join the audio portion of the meeting.
            name: audioConnectionType
            param_attrs:
            - doc: Provide a hybrid audio option, allowing attendees to join using
                their computer audio or a phone.
              name: webexAudio
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only restricts attendees to join the audio portion of the meeting
                using their computer instead of a telephone option.
              name: VoIP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Other teleconference services.
              name: other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The way of attendees join the audio portion of the meeting is the
                default value.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to show toll-free call-in numbers.
            name: enabledTollFreeCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to show global call-in numbers to attendees.
            name: enabledGlobalCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to receive a call-back and call-in
              is available. Can only be set true for a webinar.
            name: enabledAudienceCallBack
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Select the sound you want users who have a phone audio connection
              to hear when someone enters or exits the meeting.
            name: entryAndExitTone
            param_attrs:
            - doc: All call-in users joining the meeting will hear the beep.
              name: beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: All call-in users joining the meeting will hear their names.
              name: announceName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Turn off beeps and name announcements.
              name: noTone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow the host to unmute participants.
            name: allowHostToUnmuteParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to unmute themselves.
            name: allowAttendeeToUnmuteSelf
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to auto-mute attendees when attendees enter meetings.
            name: muteAttendeeUponEntry
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
    - doc: Retrieves details for a meeting with a specified meeting ID.
      documentation:
        doc: Get a Meeting
        doc_link: https://developer.webex.com/docs/api/v1/meetings/get-a-meeting
        endpoint: https://webexapis.com/v1/meetings/{meetingId}
        http_method: GET
      header: Get a Meeting
      parameters_and_response:
        Query Parameters:
        - doc: Whether or not to retrieve only the current scheduled meeting of the
            meeting series, i.e. the meeting ready to join or start or the upcoming
            meeting of the meeting series. If it's true, return details for the current
            scheduled meeting of the series, i.e. the scheduled meeting ready to join
            or start or the upcoming scheduled meeting of the meeting series. If it's
            false or not specified, return details for the entire meeting series.
            This parameter only applies to meeting series.
          name: current
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for meeting. For a meeting series, the id is used
            to identify the entire series. For scheduled meetings from a series, the
            id is used to identify that scheduled meeting. For a meeting instance
            that is in progress or has concluded, the id is used to identify that
            instance.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting number. Applies to meeting series, scheduled meeting, and meeting
            instances, but not to meeting instances which have ended.
          name: meetingNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting title. Can be modified for a meeting series or a scheduled
            meeting using the Update a Meeting API.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting agenda. The agenda can be a maximum of 1300 characters long.
            This attribute can be modified for a meeting series or a scheduled meeting
            using the  Update a Meeting API.
          name: agenda
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting password. Applies to meeting series, scheduled meetings, and
            in-progress meeting instances, but not to meeting instances which have
            ended. Can be modified for a meeting series or a scheduled meeting using
            the Update a Meeting API.
          name: password
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 8-digit numeric password used to join a meeting from audio and video
            devices. This attribute applies to meeting series, scheduled meetings,
            and in-progress meeting instances, but not to meeting instances which
            have ended.
          name: phoneAndVideoSystemPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting type.
          name: meetingType
          param_attrs:
          - doc: Primary instance of a scheduled series of meetings which consists
              of one or more scheduled meetings based on a recurrence rule. When a
              non-recurring meeting is scheduled with no recurrence, its meetingType
              is also meetingSeries which is a meeting series with only one occurrence
              in Webex meeting modeling.
            name: meetingSeries
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Instance from a primary meeting series.
            name: scheduledMeeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting instance that is in progress or has completed.
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Meeting state.
          name: state
          param_attrs:
          - doc: Only applies to a meeting series. Indicates that one or more future
              scheduled meetings exist for this meeting series.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to scheduled meeting. Indicates that the meeting is
              scheduled in the future.
            name: scheduled
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to scheduled meeting. Indicates that this scheduled
              meeting is ready to start or join immediately.
            name: ready
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to meeting instances. Indicates that a locked meeting
              has been joined by participants, but no hosts have joined.
            name: lobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Applies to meeting series and meeting instances. For a meeting series,
              indicates that an instance of this series is happening now. For a meeting
              instance, indicates that the meeting has been joined and unlocked.
            name: inProgress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Applies to scheduled meetings and meeting instances. For scheduled
              meetings, indicates that the meeting was started and is now over. For
              meeting instances, indicates that the meeting instance has concluded.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: This state only applies to scheduled meetings. Indicates that the
              meeting was scheduled in the past but never happened.
            name: missed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: This state only applies to a meeting series. Indicates that all scheduled
              meetings of this series have passed.
            name: expired
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: If true, the meeting is ad-hoc.
          name: adhoc
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Time zone of start and end, conforming with the IANA time zone database.
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start time for meeting in ISO 8601 compliant format. If the meetingType
            of this meeting is meetingSeries, and current is not specified or is false,
            start is the scheduled start time of the first occurrence of this series.
            If the meetingType of this meeting is meetingSeries, and current is not
            specified or is false, start is the scheduled start time of the first
            occurrence of this series. If the meetingType of this meeting is meetingSeries,
            and current is true, start is the scheduled start time of the ongoing
            or upcoming occurrence in this series. If the meetingType of this meeting
            is scheduledMeeting, start is the scheduled start time of this occurrence.
            If the meetingType of this meeting is meeting, start is the actual start
            time of this meeting instance. Can be modified for a meeting series or
            a scheduled meeting using the  Update a Meeting API.
          name: start
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End time for a meeting in ISO 8601 compliant format. If the meeting
            is a meeting series, end is the date and time the first meeting of the
            series ends. If the meetingType of this meeting is meetingSeries, and
            current is not specified or is false, end is the scheduled end time of
            the first occurrence of this series. If the meetingType of this meeting
            is meetingSeries, and current is true, end is the scheduled end time of
            the ongoing or upcoming occurrence in this series. If the meetingType
            of this meeting is scheduledMeeting, end is the scheduled end time of
            this occurrence. If the meetingType of this meeting is meeting, end is
            the actual end time of this meeting instance. Can be modified for a meeting
            series or a scheduled meeting using the  Update a Meeting API.
          name: end
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting series recurrence rule (conforming with RFC 2445). Applies
            only to a recurring meeting series, not to a meeting series with only
            one scheduled meeting. Can be modified for a meeting series using the  Update
            a Meeting API. Multiple days or dates for monthly or yearly recurrence
            rule are not supported, only the first day or date specified is taken.
            For example, "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10,11,12" is
            not supported and it will be partially supported as "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10".
          name: recurrence
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the meeting host.
          name: hostUserId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name for the meeting host.
          name: hostDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Key for joining the meeting as host.
          name: hostKey
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Site URL for the meeting.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Link to a meeting information page where the meeting client is launched
            if the meeting is ready to start or join.
          name: webLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: SIP address for callback from a video system.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: IP address for callback from a video system.
          name: dialInIpAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room ID of the associated Webex space. Only applies to ad-hoc meetings
            and space meetings.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not meeting is recorded automatically. Can be modified for
            a meeting series or a scheduled meeting using the  Update a Meeting API.
          name: enabledAutoRecordMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee with a host account on the target
            site to become a cohost when joining the meeting. The target site is specified
            by a siteUrl parameter when creating the meeting. If not specified, it's
            a user's preferred site. The allowAnyUserToBeCoHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: allowAnyUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to join the meeting before the
            host joins the meeting. The enabledJoinBeforeHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: enabledJoinBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to connect to audio before the
            host joins the meeting. Only applicable if the enabledJoinBeforeHost attribute
            is set to true. The enableConnectAudioBeforeHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: enableConnectAudioBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of minutes an attendee can join the meeting before the meeting
            start time and the host joins. Only applicable if the enabledJoinBeforeHost
            attribute is set to true. The joinBeforeHostMinutes attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API. Valid options are 0, 5, 10 and 15. Default is 0 if not specified.
          name: joinBeforeHostMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to exclude the meeting password from the email invitation.
          name: excludePassword
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow the meeting to be listed on the public calendar.
          name: publicMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes before the meeting begins, that an email reminder
            is sent to the host.
          name: reminderTime
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies how the people who aren't on the invite can join the unlocked
            meeting.
          name: unlockedMeetingJoinSecurity
          param_attrs:
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoin,
              people can join the unlocked meeting directly.
            name: allowJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoinWithLobby,
              people will wait in the lobby until the host admits them.
            name: allowJoinWithLobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is blockFromJoin,
              people can't join the unlocked meeting.
            name: blockFromJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Unique identifier for a meeting session type for the user. This attribute
            is required when scheduling a webinar meeting. All available meeting session
            types enabled for the user can be retrieved using the List Meeting Session
            Types API.
          name: sessionTypeId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies whether the meeting is a regular meeting, a webinar, or a
            meeting scheduled in the user's personal room.
          name: scheduledType
          param_attrs:
          - doc: If the value of scheduledType attribute is meeting, it is a regular
              meeting.
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of scheduledType attribute is webinar, it is a webinar
              meeting.
            name: webinar
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of scheduledType attribute is personalRoomMeeting, it
              is a meeting scheduled in the user's personal room.
            name: personalRoomMeeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not webcast view is enabled.
          name: enabledWebcastView
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Password for panelists of a webinar meeting. Must conform to the site's
            password complexity settings. Read password management for details. If
            not specified, a random password conforming to the site's password rules
            will be generated automatically.
          name: panelistPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 8-digit numeric panelist password to join a webinar meeting from audio
            and video devices.
          name: phoneAndVideoSystemPanelistPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not to automatically lock the meeting after it starts.
          name: enableAutomaticLock
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes after the meeting begins, for automatically locking
            it.
          name: automaticLockMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to allow the first attendee of the meeting with a host
            account on the target site to become a cohost. The target site is specified
            by the siteUrl parameter when creating the meeting. If not specified,
            it's a user's preferred site. The allowFirstUserToBeCoHost attribute can
            be modified for a meeting series or a scheduled meeting uisng the  Update
            a Meeting API.
          name: allowFirstUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow authenticated video devices in the meeting's
            organization to start or join the meeting without a prompt. This attribute
            can be modified for a meeting series or a scheduled meeting using the  Update
            a Meeting API.
          name: allowAuthenticatedDevices
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Information for callbacks from a meeting to phone or for joining a
            teleconference using a phone.
          name: telephony
          param_attrs: []
          param_object:
          - doc: Code for authenticating a user to join teleconference. Users join
              the teleconference using the call-in number or the global call-in number,
              followed by the value of the accessCode.
            name: accessCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Array of call-in numbers for joining a teleconference from a phone.
            name: callInNumbers
            param_attrs:
            - doc: 'Label for the call-in number.

                Possible values: Call-in toll-free number (US/Canada)'
              name: label
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Call-in number to join the teleconference from a phone.

                Possible values: 123456789'
              name: callInNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Type of toll for the call-in number.

                Possible values: toll, tollFree'
              name: tollType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: HATEOAS information of global call-in numbers for joining a teleconference
              from a phone.
            name: links
            param_attrs: []
            param_object:
            - doc: Link relation describing how the target resource is related to
                the current context (conforming with RFC5998).
              name: rel
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource URI (conforming with RFC5998).
              name: href
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource method (conforming with RFC5998).
              name: method
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: Meeting options.
          name: meetingOptions
          param_attrs: []
          param_object:
          - doc: Whether or not to allow any attendee to chat in the meeting. Also
              depends on the session type.
            name: enabledChat
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to have video in the meeting.
              Also depends on the session type.
            name: enabledVideo
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to poll in the meeting. Can
              only be set true for a webinar. The value of this attribute depends
              on the session type for a meeting. Please contact your site admin if
              this attribute is not available.
            name: enabledPolling
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to take notes in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledNote
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether note taking is enabled. If the value of enabledNote is false,
              users can not set this attribute and get default value allowAll.
            name: noteType
            param_attrs:
            - doc: If the value of noteType attribute is allowAll, all participants
                can take notes.
              name: allowAll
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of noteType attribute is allowOne, only a single note
                taker is allowed.
              name: allowOne
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow any attendee to have closed captions in the
              meeting. The value of this attribute also depends on the session type.
            name: enabledClosedCaptions
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to transfer files in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledFileTransfer
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to share Universal Communications
              Format media files in the meeting. The value of this attribute also
              depends on the sessionType.
            name: enabledUCFRichMedia
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Attendee Privileges.
          name: attendeePrivileges
          param_attrs: []
          param_object:
          - doc: Whether or not to allow any attendee to share content in the meeting.
            name: enabledShareContent
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to save shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledSaveDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to print shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledPrintDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to annotate shared documents,
              slides, or whiteboards when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledAnnotate
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view participants.
            name: enabledViewParticipantList
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to see a small preview image
              of any page of shared documents or slides when they are shared as files
              in the content viewer instead of in a window or application.
            name: enabledViewThumbnails
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to control applications, web
              browsers, or desktops remotely.
            name: enabledRemoteControl
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view any shared documents
              or slides when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledViewAnyDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to scroll through any page of
              shared documents or slides when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledViewAnyPage
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to contact the operator privately.
            name: enabledContactOperatorPrivately
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the host in private.
            name: enabledChatHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the presenter in
              private.
            name: enabledChatPresenter
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with other participants
              in private.
            name: enabledChatOtherParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Meeting registration. When this option is enabled, meeting invitees
            must register personal information in order to join the meeting. Meeting
            invitees will receive an email with a registration link for the registration.
            When the registration form has been submitted and approved, an email with
            a real meeting link will be received. By clicking that link the meeting
            invitee can join the meeting. Please note that meeting registration does
            not apply to a meeting when it's a recurring meeting with a recurrence
            field or no password, or the Join Before Host option is enabled for the
            meeting. See Register for a Meeting in Cisco Webex Meetings for details.
          name: registration
          param_attrs: []
          param_object:
          - doc: Whether or not meeting registration requests are accepted automatically.
            name: autoAcceptRequest
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's first name is required for meeting
              registration.
            name: requireFirstName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's last name is required for meeting registration.
            name: requireLastName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's email is required for meeting registration.
            name: requireEmail
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's job title is required for meeting registration.
            name: requireJobTitle
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's company name is required for meeting
              registration.
            name: requireCompanyName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's first address field is required for
              meeting registration.
            name: requireAddress1
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's second address field is required for
              meeting registration.
            name: requireAddress2
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's city is required for meeting registration.
            name: requireCity
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's state is required for meeting registration.
            name: requireState
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's postal code is required for meeting
              registration.
            name: requireZipCode
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's country or region is required for meeting
              registration.
            name: requireCountryRegion
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's work phone number is required for meeting
              registration.
            name: requireWorkPhone
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's fax number is required for meeting
              registration.
            name: requireFax
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Maximum number of meeting registrations. This only applies to meetings.
              The maximum number of participants for meetings and webinars, with the
              limit based on the user capacity and controlled by a toggle at the site
              level. The default maximum number of participants for webinars is 10000,
              but the actual maximum number of participants is limited by the user
              capacity.
            name: maxRegisterNum
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        - doc: External keys created by an integration application in its own domain,
            for example Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
            etc.
          name: integrationTags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Simultaneous interpretation information for the meeting.
          name: simultaneousInterpretation
          param_attrs: []
          param_object:
          - doc: Whether or not simultaneous interpretation is enabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Interpreters for meeting.
            name: interpreters
            param_attrs:
            - doc: Unique identifier for meeting interpreter.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Forms a set of simultaneous interpretation channels together with
                languageCode2. Standard language format from ISO 639-1 code. Read
                ISO 639-1 for details.
              name: languageCode1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Forms a set of simultaneous interpretation channels together with
                languageCode1. Standard language format from ISO 639-1 code. Read
                ISO 639-1 for details.
              name: languageCode2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Email address of meeting interpreter.
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Display name of meeting interpreter.
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[InterpreterObjectForSimultaneousInterpretationOfGetOrListMeeting]
            type_spec: null
          type: object
          type_spec: null
        - doc: Tracking codes information.
          name: trackingCodes
          param_attrs:
          - doc: Name for the tracking code.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Value for the tracking code.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[TrackingCodeItemForGetMeetingObject]
          type_spec: null
        - doc: Audio connection options.
          name: audioConnectionOptions
          param_attrs: []
          param_object:
          - doc: Choose how meeting attendees join the audio portion of the meeting.
            name: audioConnectionType
            param_attrs:
            - doc: Provide a hybrid audio option, allowing attendees to join using
                their computer audio or a phone.
              name: webexAudio
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only restricts attendees to join the audio portion of the meeting
                using their computer instead of a telephone option.
              name: VoIP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Other teleconference services.
              name: other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The way of attendees join the audio portion of the meeting is the
                default value.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to show toll-free call-in numbers.
            name: enabledTollFreeCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to show global call-in numbers to attendees.
            name: enabledGlobalCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to receive a call-back and call-in
              is available. Can only be set true for a webinar.
            name: enabledAudienceCallBack
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Select the sound you want users who have a phone audio connection
              to hear when someone enters or exits the meeting.
            name: entryAndExitTone
            param_attrs:
            - doc: All call-in users joining the meeting will hear the beep.
              name: beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: All call-in users joining the meeting will hear their names.
              name: announceName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Turn off beeps and name announcements.
              name: noTone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow the host to unmute participants.
            name: allowHostToUnmuteParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to unmute themselves.
            name: allowAttendeeToUnmuteSelf
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to auto-mute attendees when attendees enter meetings.
            name: muteAttendeeUponEntry
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting being requested.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Retrieves details for meetings with a specified meeting number, web link,
        meeting type, etc. Please note that there are various products in the Webex
        Suite such as Meetings and Events. Currently, only meetings of the Meetings
        product are supported by this API, meetings of others in the suite are not
        supported. Ad-hoc meetings created by Create a Meeting with adhoc of true
        and a roomId will not be listed, but the ended and ongoing ad-hoc meeting
        instances will be listed.
      documentation:
        doc: List Meetings
        doc_link: https://developer.webex.com/docs/api/v1/meetings/list-meetings
        endpoint: https://webexapis.com/v1/meetings
        http_method: GET
      header: List Meetings
      parameters_and_response:
        Query Parameters:
        - doc: Meeting number for the meeting objects being requested. meetingNumber,
            webLink and roomId are mutually exclusive. If it's an exceptional meeting
            from a meeting series, the exceptional meeting instead of the primary
            meeting series is returned.
          name: meetingNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: URL encoded link to information page for the meeting objects being
            requested. meetingNumber, webLink and roomId are mutually exclusive.
          name: webLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Associated Webex space ID for the meeting objects being requested.
            meetingNumber, webLink and roomId are mutually exclusive.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Meeting type for the meeting objects being requested. This parameter
            will be ignored if meetingNumber, webLink or roomId is specified.

            Possible values: meetingSeries, scheduledMeeting, meeting'
          name: meetingType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Meeting state for the meeting objects being requested. If not specified,
            return meetings of all states. This parameter will be ignored if meetingNumber,
            webLink or roomId is specified. Details of an ended meeting will only
            be available 15 minutes after the meeting has ended. inProgress meetings
            are not fully supported. The API will try to return details of an inProgress
            meeting 15 minutes after the meeting starts. However, it may take longer
            depending on the traffic. See the Webex Meetings guide for more information
            about the states of meetings.

            Possible values: active, scheduled, ready, lobby, inProgress, ended, missed,
            expired'
          name: state
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Scheduled type for the meeting objects being requested.

            Possible values: meeting, webinar, personalRoomMeeting'
          name: scheduledType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Flag identifying to retrieve the current scheduled meeting of the meeting
            series or the entire meeting series. This parameter only applies to scenarios
            where meetingNumber is specified and the meeting is not an exceptional
            meeting from a meeting series. If it's true, return the scheduled meeting
            of the meeting series which is ready to join or start or the upcoming
            scheduled meeting of the meeting series; if it's false, return the entire
            meeting series.
          name: current
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Start date and time (inclusive) in any ISO 8601 compliant format for
            the meeting objects being requested. from cannot be after to. This parameter
            will be ignored if meetingNumber, webLink or roomId is specified.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date and time (exclusive) in any ISO 8601 compliant format for
            the meeting objects being requested. to cannot be before from. This parameter
            will be ignored if meetingNumber, webLink or roomId is specified.
          name: to
          param_attrs: []
          param_object: []
          type: String
          type_spec: null
        - doc: Limit the maximum number of meetings in the response, up to 100.  This
            parameter will be ignored if meetingNumber, webLink or roomId is specified.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for meetings that are hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: URL of the Webex site which the API lists meetings from. If not specified,
            the API lists meetings from user's all sites. All available Webex sites
            of the user can be retrieved by Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: External key created by an integration application. This parameter
            is used by the integration application to query meetings by a key in its
            own domain such as a Zendesk ticket ID, a Jira ID, a Salesforce Opportunity
            ID, etc.
          name: integrationTag
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Meetings array.
          name: items
          param_attrs:
          - doc: Unique identifier for meeting. For a meeting series, the id is used
              to identify the entire series. For scheduled meetings from a series,
              the id is used to identify that scheduled meeting. For a meeting instance
              that is in progress or has concluded, the id is used to identify that
              instance.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting number. Applies to meeting series, scheduled meeting, and
              meeting instances, but not to meeting instances which have ended.
            name: meetingNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting title. Can be modified for a meeting series or a scheduled
              meeting using the Update a Meeting API.
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting agenda. The agenda can be a maximum of 1300 characters long.
              This attribute can be modified for a meeting series or a scheduled meeting
              using the  Update a Meeting API.
            name: agenda
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting password. Applies to meeting series, scheduled meetings,
              and in-progress meeting instances, but not to meeting instances which
              have ended. Can be modified for a meeting series or a scheduled meeting
              using the Update a Meeting API.
            name: password
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 8-digit numeric password used to join a meeting from audio and video
              devices. This attribute applies to meeting series, scheduled meetings,
              and in-progress meeting instances, but not to meeting instances which
              have ended.
            name: phoneAndVideoSystemPassword
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting type.
            name: meetingType
            param_attrs:
            - doc: Primary instance of a scheduled series of meetings which consists
                of one or more scheduled meetings based on a recurrence rule. When
                a non-recurring meeting is scheduled with no recurrence, its meetingType
                is also meetingSeries which is a meeting series with only one occurrence
                in Webex meeting modeling.
              name: meetingSeries
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Instance from a primary meeting series.
              name: scheduledMeeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Meeting instance that is in progress or has completed.
              name: meeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Meeting state.
            name: state
            param_attrs:
            - doc: Only applies to a meeting series. Indicates that one or more future
                scheduled meetings exist for this meeting series.
              name: active
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only applies to scheduled meeting. Indicates that the meeting is
                scheduled in the future.
              name: scheduled
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only applies to scheduled meeting. Indicates that this scheduled
                meeting is ready to start or join immediately.
              name: ready
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only applies to meeting instances. Indicates that a locked meeting
                has been joined by participants, but no hosts have joined.
              name: lobby
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Applies to meeting series and meeting instances. For a meeting
                series, indicates that an instance of this series is happening now.
                For a meeting instance, indicates that the meeting has been joined
                and unlocked.
              name: inProgress
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Applies to scheduled meetings and meeting instances. For scheduled
                meetings, indicates that the meeting was started and is now over.
                For meeting instances, indicates that the meeting instance has concluded.
              name: ended
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This state only applies to scheduled meetings. Indicates that the
                meeting was scheduled in the past but never happened.
              name: missed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This state only applies to a meeting series. Indicates that all
                scheduled meetings of this series have passed.
              name: expired
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Time zone of start and end, conforming with the IANA time zone database.
            name: timezone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start time for meeting in ISO 8601 compliant format. If the meetingType
              of a meeting is meetingSeries, start is the scheduled start time of
              the first occurrence of this series. If the meeting is a meeting series
              and the current filter is true, start is the date and time the upcoming
              or ongoing meeting of the series starts. If the meetingType of a meeting
              is scheduledMeeting, start is the scheduled start time of this occurrence.
              If the meetingType of a meeting is meeting, start is the actual start
              time of the meeting instance. Can be modified for a meeting series or
              a scheduled meeting using the Update a Meeting API.
            name: start
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End time for a meeting in ISO 8601 compliant format. If the meetingType
              of a meeting is meetingSeries, end is the scheduled end time of the
              first occurrence of this series. If the meeting is a meeting series
              and the current filter is true, end is the date and time the upcoming
              or ongoing meeting of the series ends. If the meetingType of a meeting
              is scheduledMeeting, end is the scheduled end time of this occurrence.
              If the meetingType of a meeting is meeting, end is the actual end time
              of the meeting instance. If a meeting instance is in progress, end is
              not available. Can be modified for a meeting series or a scheduled meeting
              using the Update a Meeting API.
            name: end
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting series recurrence rule (conforming with RFC 2445). Applies
              only to a recurring meeting series, not to a meeting series with only
              one scheduled meeting. Can be modified for a meeting series using the  Update
              a Meeting API. Multiple days or dates for monthly or yearly recurrence
              rule are not supported, only the first day or date specified is taken.
              For example, "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10,11,12"
              is not supported and it will be partially supported as "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10".
            name: recurrence
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the meeting host.
            name: hostUserId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name for the meeting host.
            name: hostDisplayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address for the meeting host.
            name: hostEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Key for joining the meeting as host.
            name: hostKey
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Site URL for the meeting.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Link to a meeting information page where the meeting client is launched
              if the meeting is ready to start or join.
            name: webLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: SIP address for callback from a video system.
            name: sipAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: IP address for callback from a video system.
            name: dialInIpAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Room ID of the associated Webex space. Only applies to ad-hoc meetings
              and space meetings.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not meeting is recorded automatically. Can be modified
              for a meeting series or a scheduled meeting using the  Update a Meeting
              API.
            name: enabledAutoRecordMeeting
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee with a host account on the target
              site to become a cohost when joining the meeting. The target site is
              specified by a siteUrl parameter when creating the meeting. If not specified,
              it's a user's preferred site. The allowAnyUserToBeCoHost attribute can
              be modified for a meeting series or a scheduled meeting using the  Update
              a Meeting API.
            name: allowAnyUserToBeCoHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to join the meeting before the
              host joins the meeting. The enabledJoinBeforeHost attribute can be modified
              for a meeting series or a scheduled meeting using the  Update a Meeting
              API.
            name: enabledJoinBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to connect to audio before the
              host joins the meeting. Only applicable if the enabledJoinBeforeHost
              attribute is set to true. The enableConnectAudioBeforeHost attribute
              can be modified for a meeting series or a scheduled meeting using the  Update
              a Meeting API.
            name: enableConnectAudioBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of minutes an attendee can join the meeting before the meeting
              start time and the host joins. Only applicable if the enabledJoinBeforeHost
              attribute is set to true. The joinBeforeHostMinutes attribute can be
              modified for a meeting series or a scheduled meeting using the  Update
              a Meeting API. Valid options are 0, 5, 10 and 15. Default is 0 if not
              specified.
            name: joinBeforeHostMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Whether or not to exclude the meeting password from the email invitation.
            name: excludePassword
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow the meeting to be listed on the public calendar.
            name: publicMeeting
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The number of minutes before the meeting begins, that an email reminder
              is sent to the host.
            name: reminderTime
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Specifies how the people who aren't on the invite can join the unlocked
              meeting.
            name: unlockedMeetingJoinSecurity
            param_attrs:
            - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoin,
                people can join the unlocked meeting directly.
              name: allowJoin
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoinWithLobby,
                people will wait in the lobby until the host admits them.
              name: allowJoinWithLobby
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of unlockedMeetingJoinSecurity attribute is blockFromJoin,
                people can't join the unlocked meeting.
              name: blockFromJoin
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Unique identifier for a meeting session type for the user. This attribute
              is required when scheduling a webinar meeting. All available meeting
              session types enabled for the user can be retrieved using the List Meeting
              Session Types API.
            name: sessionTypeId
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Specifies whether the meeting is a regular meeting, a webinar, or
              a meeting scheduled in the user's personal room.
            name: scheduledType
            param_attrs:
            - doc: If the value of scheduledType attribute is meeting, it is a regular
                meeting.
              name: meeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of scheduledType attribute is webinar, it is a webinar
                meeting.
              name: webinar
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of scheduledType attribute is personalRoomMeeting,
                it is a meeting scheduled in the user's personal room.
              name: personalRoomMeeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not webcast view is enabled.
            name: enabledWebcastView
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Password for panelists of a webinar meeting. Must conform to the
              site's password complexity settings. Read password management for details.
              If not specified, a random password conforming to the site's password
              rules will be generated automatically.
            name: panelistPassword
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 8-digit numeric panelist password to join a webinar meeting from
              audio and video devices.
            name: phoneAndVideoSystemPanelistPassword
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not to automatically lock the meeting after it starts.
            name: enableAutomaticLock
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The number of minutes after the meeting begins, for automatically
              locking it.
            name: automaticLockMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Whether or not to allow the first attendee of the meeting with a
              host account on the target site to become a cohost. The target site
              is specified by the siteUrl parameter when creating the meeting. If
              not specified, it's a user's preferred site. The allowFirstUserToBeCoHost
              attribute can be modified for a meeting series or a scheduled meeting
              uisng the  Update a Meeting API.
            name: allowFirstUserToBeCoHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow authenticated video devices in the meeting's
              organization to start or join the meeting without a prompt. This attribute
              can be modified for a meeting series or a scheduled meeting using the  Update
              a Meeting API.
            name: allowAuthenticatedDevices
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Information for callbacks from a meeting to phone or for joining
              a teleconference using a phone.
            name: telephony
            param_attrs: []
            param_object:
            - doc: Code for authenticating a user to join teleconference. Users join
                the teleconference using the call-in number or the global call-in
                number, followed by the value of the accessCode.
              name: accessCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Array of call-in numbers for joining a teleconference from a phone.
              name: callInNumbers
              param_attrs:
              - doc: 'Label for the call-in number.

                  Possible values: Call-in toll-free number (US/Canada)'
                name: label
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'Call-in number to join the teleconference from a phone.

                  Possible values: 123456789'
                name: callInNumber
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'Type of toll for the call-in number.

                  Possible values: toll, tollFree'
                name: tollType
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: HATEOAS information of global call-in numbers for joining a teleconference
                from a phone.
              name: links
              param_attrs: []
              param_object:
              - doc: Link relation describing how the target resource is related to
                  the current context (conforming with RFC5998).
                name: rel
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Target resource URI (conforming with RFC5998).
                name: href
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Target resource method (conforming with RFC5998).
                name: method
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              type: object
              type_spec: null
            type: object
            type_spec: null
          - doc: Meeting options.
            name: meetingOptions
            param_attrs: []
            param_object:
            - doc: Whether or not to allow any attendee to chat in the meeting. Also
                depends on the session type.
              name: enabledChat
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to have video in the meeting.
                Also depends on the session type.
              name: enabledVideo
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to poll in the meeting. Can
                only be set true for a webinar. The value of this attribute depends
                on the session type for a meeting. Please contact your site admin
                if this attribute is not available.
              name: enabledPolling
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to take notes in the meeting.
                The value of this attribute also depends on the session type.
              name: enabledNote
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether note taking is enabled. If the value of enabledNote is
                false, users can not set this attribute and get default value allowAll.
              name: noteType
              param_attrs:
              - doc: If the value of noteType attribute is allowAll, all participants
                  can take notes.
                name: allowAll
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value of noteType attribute is allowOne, only a single
                  note taker is allowed.
                name: allowOne
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Whether or not to allow any attendee to have closed captions in
                the meeting. The value of this attribute also depends on the session
                type.
              name: enabledClosedCaptions
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to transfer files in the meeting.
                The value of this attribute also depends on the session type.
              name: enabledFileTransfer
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to share Universal Communications
                Format media files in the meeting. The value of this attribute also
                depends on the sessionType.
              name: enabledUCFRichMedia
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Attendee Privileges.
            name: attendeePrivileges
            param_attrs: []
            param_object:
            - doc: Whether or not to allow any attendee to share content in the meeting.
              name: enabledShareContent
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to save shared documents,
                slides, or whiteboards when they are shared as files in the content
                viewer instead of in a window or application.
              name: enabledSaveDocument
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to print shared documents,
                slides, or whiteboards when they are shared as files in the content
                viewer instead of in a window or application.
              name: enabledPrintDocument
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to annotate shared documents,
                slides, or whiteboards when they are shared as files in the content
                viewer instead of in a window or application.
              name: enabledAnnotate
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to view participants.
              name: enabledViewParticipantList
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to see a small preview image
                of any page of shared documents or slides when they are shared as
                files in the content viewer instead of in a window or application.
              name: enabledViewThumbnails
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to control applications, web
                browsers, or desktops remotely.
              name: enabledRemoteControl
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to view any shared documents
                or slides when they are shared as files in the content viewer instead
                of in a window or application.
              name: enabledViewAnyDocument
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to scroll through any page
                of shared documents or slides when they are shared as files in the
                content viewer instead of in a window or application.
              name: enabledViewAnyPage
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to contact the operator privately.
              name: enabledContactOperatorPrivately
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to chat with the host in private.
              name: enabledChatHost
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to chat with the presenter
                in private.
              name: enabledChatPresenter
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to chat with other participants
                in private.
              name: enabledChatOtherParticipants
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Meeting registration. When this option is enabled, meeting invitees
              must register personal information in order to join the meeting. Meeting
              invitees will receive an email with a registration link for the registration.
              When the registration form has been submitted and approved, an email
              with a real meeting link will be received. By clicking that link the
              meeting invitee can join the meeting. Please note that meeting registration
              does not apply to a meeting when it's a recurring meeting with a recurrence
              field or no password, or the Join Before Host option is enabled for
              the meeting. See Register for a Meeting in Cisco Webex Meetings for
              details.
            name: registration
            param_attrs: []
            param_object:
            - doc: Whether or not meeting registration requests are accepted automatically.
              name: autoAcceptRequest
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's first name is required for meeting
                registration.
              name: requireFirstName
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's last name is required for meeting
                registration.
              name: requireLastName
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's email is required for meeting registration.
              name: requireEmail
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's job title is shown or required for
                meeting registration.
              name: requireJobTitle
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's company name is shown or required
                for meeting registration.
              name: requireCompanyName
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's first address field is shown or required
                for meeting registration.
              name: requireAddress1
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's second address field is shown or
                required for meeting registration.
              name: requireAddress2
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's city is shown or required for meeting
                registration.
              name: requireCity
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's state is shown or required for meeting
                registration.
              name: requireState
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's postal code is shown or required
                for meeting registration.
              name: requireZipCode
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's country or region is shown or required
                for meeting registration.
              name: requireCountryRegion
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's work phone number is shown or required
                for meeting registration.
              name: requireWorkPhone
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's fax number is shown or required for
                meeting registration.
              name: requireFax
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Maximum number of meeting registrations. This only applies to meetings.
                The maximum number of participants for meetings and webinars, with
                the limit based on the user capacity and controlled by a toggle at
                the site level. The default maximum number of participants for webinars
                is 10000, but the actual maximum number of participants is limited
                by the user capacity.
              name: maxRegisterNum
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            type: object
            type_spec: null
          - doc: External keys created by an integration application in its own domain,
              for example Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
              etc.
            name: integrationTags
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Simultaneous interpretation information for the meeting.
            name: simultaneousInterpretation
            param_attrs: []
            param_object:
            - doc: Whether or not simultaneous interpretation is enabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Interpreters for meeting.
              name: interpreters
              param_attrs:
              - doc: Unique identifier for meeting interpreter.
                name: id
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Forms a set of simultaneous interpretation channels together
                  with languageCode2. Standard language format from ISO 639-1 code.
                  Read ISO 639-1 for details.
                name: languageCode1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Forms a set of simultaneous interpretation channels together
                  with languageCode1. Standard language format from ISO 639-1 code.
                  Read ISO 639-1 for details.
                name: languageCode2
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Email address of meeting interpreter.
                name: email
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Display name of meeting interpreter.
                name: displayName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[InterpreterObjectForSimultaneousInterpretationOfGetOrListMeeting]
              type_spec: null
            type: object
            type_spec: null
          - doc: Tracking codes information.
            name: trackingCodes
            param_attrs:
            - doc: Name for the tracking code.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Value for the tracking code.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[TrackingCodeItemForGetMeetingObject]
            type_spec: null
          - doc: Audio connection options.
            name: audioConnectionOptions
            param_attrs: []
            param_object:
            - doc: Choose how meeting attendees join the audio portion of the meeting.
              name: audioConnectionType
              param_attrs:
              - doc: Provide a hybrid audio option, allowing attendees to join using
                  their computer audio or a phone.
                name: webexAudio
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Only restricts attendees to join the audio portion of the meeting
                  using their computer instead of a telephone option.
                name: VoIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Other teleconference services.
                name: other
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The way of attendees join the audio portion of the meeting is
                  the default value.
                name: none
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Whether or not to show toll-free call-in numbers.
              name: enabledTollFreeCallIn
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to show global call-in numbers to attendees.
              name: enabledGlobalCallIn
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow attendees to receive a call-back and call-in
                is available. Can only be set true for a webinar.
              name: enabledAudienceCallBack
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Select the sound you want users who have a phone audio connection
                to hear when someone enters or exits the meeting.
              name: entryAndExitTone
              param_attrs:
              - doc: All call-in users joining the meeting will hear the beep.
                name: beep
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: All call-in users joining the meeting will hear their names.
                name: announceName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Turn off beeps and name announcements.
                name: noTone
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Whether or not to allow the host to unmute participants.
              name: allowHostToUnmuteParticipants
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow attendees to unmute themselves.
              name: allowAttendeeToUnmuteSelf
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to auto-mute attendees when attendees enter meetings.
              name: muteAttendeeUponEntry
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: array[MeetingSeriesObjectForListMeeting]
          type_spec: null
    - doc: 'Lists scheduled meeting and meeting instances of a meeting series identified
        by meetingSeriesId. Scheduled meetings of an ad-hoc meeting created by Create
        a Meeting with adhoc of true and a roomId will not be listed, but the ended
        and ongoing meeting instances of it will be listed.

        Each scheduled meeting or meeting instance of a meeting series has its own
        start, end, etc. Thus, for example, when a daily meeting has been scheduled
        from 2019-04-01 to 2019-04-10, there are 10 scheduled meeting instances in
        this series, one instance for each day, and each one has its own attributes.
        When a scheduled meeting has been started and ended or is happening, there
        are even more ended or in-progress meeting instances.

        Use this operation to list scheduled meeting and meeting instances of a meeting
        series within a specific date range.

        Long result sets are split into pages.

        trackingCodes is not supported for ended meeting instances.'
      documentation:
        doc: List Meetings of a Meeting Series
        doc_link: https://developer.webex.com/docs/api/v1/meetings/list-meetings-of-a-meeting-series
        endpoint: https://webexapis.com/v1/meetings
        http_method: GET
      header: List Meetings of a Meeting Series
      parameters_and_response:
        Query Parameters:
        - doc: Unique identifier for the meeting series. Please note that currently
            meeting ID of a scheduled personal room meeting is not supported for this
            API.
          name: meetingSeriesId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Limit the maximum number of meetings in the response, up to 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start date and time (inclusive) for the range for which meetings are
            to be returned in any ISO 8601 compliant format. from cannot be after
            to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date and time (exclusive) for the range for which meetings are
            to be returned in any ISO 8601 compliant format. to cannot be before from.
          name: to
          param_attrs: []
          param_object: []
          type: String
          type_spec: null
        - doc: 'Meeting type for the meeting objects being requested. If not specified,
            return meetings of all types.

            Possible values: scheduledMeeting, meeting'
          name: meetingType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Meeting state for the meetings being requested. If not specified,
            return meetings of all states. Details of an ended meeting will only be
            available 15 minutes after the meeting has ended. inProgress meetings
            are not fully supported. The API will try to return details of an inProgress
            meeting 15 minutes after the meeting starts. However, it may take longer
            depending on the traffic. See the Webex Meetings guide for more information
            about the states of meetings.

            Possible values: scheduled, ready, lobby, inProgress, ended, missed'
          name: state
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Flag identifying whether or not only to retrieve scheduled meeting
            instances which have been modified. This parameter only applies to scheduled
            meetings. If it's true, only return modified scheduled meetings; if it's
            false, only return unmodified scheduled meetings; if not specified, all
            scheduled meetings will be returned.
          name: isModified
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return meetings that are hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Meetings array.
          name: items
          param_attrs:
          - doc: Unique identifier for meeting. For a meeting series, the id is used
              to identify the entire series. For scheduled meetings from a series,
              the id is used to identify that scheduled meeting. For a meeting instance
              that is in progress or has concluded, the id is used to identify that
              instance.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for meeting series. It only apples to scheduled
              meeting and meeting instance. If it's a scheduled meeting from a series
              or a meeting instance that is happening or has happened, the meetingSeriesId
              is the id of the primary series.
            name: meetingSeriesId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for scheduled meeting which current meeting is
              associated with. It only apples to meeting instance which is happening
              or has happened. It's the id of the scheduled meeting this instance
              is associated with.
            name: scheduledMeetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting number. Applies to meeting series, scheduled meeting, and
              meeting instances, but not to meeting instances which have ended.
            name: meetingNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting title. Can be modified for a meeting series or a scheduled
              meeting using the Update a Meeting API.
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting agenda. The agenda can be a maximum of 1300 characters long.
              This attribute can be modified for a meeting series or a scheduled meeting
              using the  Update a Meeting API.
            name: agenda
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting password. Applies to meeting series, scheduled meetings,
              and in-progress meeting instances, but not to meeting instances which
              have ended. Can be modified for a meeting series or a scheduled meeting
              using the Update a Meeting API.
            name: password
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 8-digit numeric password used to join a meeting from audio and video
              devices. This attribute applies to meeting series, scheduled meetings,
              and in-progress meeting instances, but not to meeting instances which
              have ended.
            name: phoneAndVideoSystemPassword
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting type.
            name: meetingType
            param_attrs:
            - doc: Primary instance of a scheduled series of meetings which consists
                of one or more scheduled meetings based on a recurrence rule. When
                a non-recurring meeting is scheduled with no recurrence, its meetingType
                is also meetingSeries which is a meeting series with only one occurrence
                in Webex meeting modeling.
              name: meetingSeries
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Instance from a primary meeting series.
              name: scheduledMeeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Meeting instance that is in progress or has completed.
              name: meeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Meeting state.
            name: state
            param_attrs:
            - doc: Only applies to a meeting series. Indicates that one or more future
                scheduled meetings exist for this meeting series.
              name: active
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only applies to scheduled meeting. Indicates that the meeting is
                scheduled in the future.
              name: scheduled
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only applies to scheduled meeting. Indicates that this scheduled
                meeting is ready to start or join immediately.
              name: ready
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only applies to meeting instances. Indicates that a locked meeting
                has been joined by participants, but no hosts have joined.
              name: lobby
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This state applies to meeting series and meeting instance. For
                meeting series, this state indicates that an instance of this series
                is happening now; for meeting instance, it indicates that the meeting
                has been joined and unlocked.
              name: inProgress
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Applies to scheduled meetings and meeting instances. For scheduled
                meetings, indicates that the meeting was started and is now over.
                For meeting instances, indicates that the meeting instance has concluded.
              name: ended
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This state only applies to scheduled meetings. Indicates that the
                meeting was scheduled in the past but never happened.
              name: missed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This state only applies to a meeting series. Indicates that all
                scheduled meetings of this series have passed.
              name: expired
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: This state only applies to scheduled meeting. Flag identifying whether
              or not the scheduled meeting has been modified.
            name: isModified
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Time zone of start and end, conforming with the IANA time zone database.
            name: timezone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start time for meeting in ISO 8601 compliant format. If the meetingType
              of a meeting is meetingSeries, start is the scheduled start time of
              the first occurrence of this series. If the meeting is a meeting series
              and the current filter is true, start is the date and time the upcoming
              or ongoing meeting of the series starts. If the meetingType of a meeting
              is scheduledMeeting, start is the scheduled start time of this occurrence.
              If the meetingType of a meeting is meeting, start is the actual start
              time of the meeting instance. Can be modified for a meeting series or
              a scheduled meeting using the Update a Meeting API.
            name: start
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End time for a meeting in ISO 8601 compliant format. If the meetingType
              of a meeting is meetingSeries, end is the scheduled end time of the
              first occurrence of this series. If the meeting is a meeting series
              and the current filter is true, end is the date and time the upcoming
              or ongoing meeting of the series ends. If the meetingType of a meeting
              is scheduledMeeting, end is the scheduled end time of this occurrence.
              If the meetingType of a meeting is meeting, end is the actual end time
              of the meeting instance. If a meeting instance is in progress, end is
              not available. Can be modified for a meeting series or a scheduled meeting
              using the Update a Meeting API.
            name: end
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the meeting host.
            name: hostUserId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name for the meeting host.
            name: hostDisplayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address for the meeting host.
            name: hostEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Key for joining the meeting as host.
            name: hostKey
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Site URL for the meeting.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Link to a meeting information page where the meeting client is launched
              if the meeting is ready to start or join.
            name: webLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: SIP address for callback from a video system.
            name: sipAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: IP address for callback from a video system.
            name: dialInIpAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Room ID of the associated Webex space. Only applies to ad-hoc meetings
              and space meetings.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not meeting is recorded automatically. Can be modified
              for a meeting series or a scheduled meeting using the  Update a Meeting
              API.
            name: enabledAutoRecordMeeting
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee with a host account on the target
              site to become a cohost when joining the meeting. The target site is
              specified by a siteUrl parameter when creating the meeting. If not specified,
              it's a user's preferred site. The allowAnyUserToBeCoHost attribute can
              be modified for a meeting series or a scheduled meeting using the  Update
              a Meeting API.
            name: allowAnyUserToBeCoHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to join the meeting before the
              host joins the meeting. The enabledJoinBeforeHost attribute can be modified
              for a meeting series or a scheduled meeting using the  Update a Meeting
              API.
            name: enabledJoinBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to connect to audio before the
              host joins the meeting. Only applicable if the enabledJoinBeforeHost
              attribute is set to true. The enableConnectAudioBeforeHost attribute
              can be modified for a meeting series or a scheduled meeting using the  Update
              a Meeting API.
            name: enableConnectAudioBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The number of minutes an attendee can join the meeting before the
              meeting start time and the host joins. This attribute is only applicable
              if the enabledJoinBeforeHost attribute is set to true. The joinBeforeHostMinutes
              attribute can be modified for meeting series or scheduled meeting by  Update
              a Meeting API. Valid options are 0, 5, 10 and 15.  Default is 0 if not
              specified.
            name: joinBeforeHostMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Whether or not to exclude the meeting password from the email invitation.
            name: excludePassword
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow the meeting to be listed on the public calendar.
            name: publicMeeting
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The number of minutes before the meeting begins, that an email reminder
              is sent to the host.
            name: reminderTime
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Specifies how the people who aren't on the invite can join the unlocked
              meeting.
            name: unlockedMeetingJoinSecurity
            param_attrs:
            - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoin,
                people can join the unlocked meeting directly.
              name: allowJoin
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoinWithLobby,
                people will wait in the lobby until the host admits them.
              name: allowJoinWithLobby
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of unlockedMeetingJoinSecurity attribute is blockFromJoin,
                people can't join the unlocked meeting.
              name: blockFromJoin
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Unique identifier for a meeting session type for the user. This attribute
              is required when scheduling a webinar meeting. All available meeting
              session types enabled for the user can be retrieved using the List Meeting
              Session Types API.
            name: sessionTypeId
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Specifies whether the meeting is a regular meeting, a webinar, or
              a meeting scheduled in the user's personal room.
            name: scheduledType
            param_attrs:
            - doc: If the value of scheduledType attribute is meeting, it is a regular
                meeting.
              name: meeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of scheduledType attribute is webinar, it is a creating
                a webinar meeting.
              name: webinar
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of scheduledType attribute is personalRoomMeeting,
                it is a meeting scheduled in the user's personal room.
              name: personalRoomMeeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not webcast view is enabled.
            name: enabledWebcastView
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Password for panelists of webinar meeting. Must conform to the site's
              password complexity settings. Read password management for details.
              If not specified, a random password conforming to the site's password
              rules will be generated automatically.
            name: panelistPassword
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 8-digit numeric panelist password to join webinar meeting from audio
              and video devices.
            name: phoneAndVideoSystemPanelistPassword
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not to automatically lock the meeting after it starts.
            name: enableAutomaticLock
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The number of minutes after the meeting begins, for automatically
              locking it.
            name: automaticLockMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Whether or not to allow the first attendee of the meeting with a
              host account on the target site to become a cohost. The target site
              is specified by the siteUrl parameter when creating the meeting. If
              not specified, it's a user's preferred site. The allowFirstUserToBeCoHost
              attribute can be modified for a meeting series or a scheduled meeting
              uisng the  Update a Meeting API.
            name: allowFirstUserToBeCoHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow authenticated video devices in the meeting's
              organization to start or join the meeting without a prompt. This attribute
              can be modified for a meeting series or a scheduled meeting using the  Update
              a Meeting API.
            name: allowAuthenticatedDevices
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Information for callbacks from a meeting to phone or for joining
              a teleconference using a phone.
            name: telephony
            param_attrs: []
            param_object:
            - doc: Code for authenticating a user to join teleconference. Users join
                the teleconference using the call-in number or the global call-in
                number, followed by the value of the accessCode.
              name: accessCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Array of call-in numbers for joining a teleconference from a phone.
              name: callInNumbers
              param_attrs:
              - doc: 'Label for the call-in number.

                  Possible values: Call-in toll-free number (US/Canada)'
                name: label
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'Call-in number to join the teleconference from a phone.

                  Possible values: 123456789'
                name: callInNumber
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'Type of toll for the call-in number.

                  Possible values: toll, tollFree'
                name: tollType
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: HATEOAS information of global call-in numbers for joining a teleconference
                from a phone.
              name: links
              param_attrs:
              - doc: Link relation describing how the target resource is related to
                  the current context (conforming with RFC5998).
                name: rel
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Target resource URI (conforming with RFC5998).
                name: href
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Target resource method (conforming with RFC5998).
                name: method
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[LinksObjectForTelephony]
              type_spec: null
            type: object
            type_spec: null
          - doc: Meeting Options.
            name: meetingOptions
            param_attrs: []
            param_object:
            - doc: Whether or not to allow any attendee to chat in the meeting. Also
                depends on the session type.
              name: enabledChat
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to have video in the meeting.
                Also depends on the session type.
              name: enabledVideo
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to poll in the meeting. Can
                only be set true for a webinar. The value of this attribute depends
                on the session type for a meeting. Please contact your site admin
                if this attribute is not available.
              name: enabledPolling
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to take notes in the meeting.
                The value of this attribute also depends on the session type.
              name: enabledNote
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether note taking is enabled. If the value of enabledNote is
                false, users can not set this attribute and get default value allowAll.
              name: noteType
              param_attrs:
              - doc: If the value of noteType attribute is allowAll, all participants
                  can take notes.
                name: allowAll
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value of noteType attribute is allowOne, only a single
                  note taker is allowed.
                name: allowOne
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Whether or not to allow any attendee to have closed captions in
                the meeting. The value of this attribute also depends on the session
                type.
              name: enabledClosedCaptions
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to transfer files in the meeting.
                The value of this attribute also depends on the session type.
              name: enabledFileTransfer
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to share Universal Communications
                Format media files in the meeting. The value of this attribute also
                depends on the sessionType.
              name: enabledUCFRichMedia
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Attendee Privileges.
            name: attendeePrivileges
            param_attrs: []
            param_object:
            - doc: Whether or not to allow any attendee to share content in the meeting.
              name: enabledShareContent
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to save shared documents,
                slides, or whiteboards when they are shared as files in the content
                viewer instead of in a window or application.
              name: enabledSaveDocument
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to print shared documents,
                slides, or whiteboards when they are shared as files in the content
                viewer instead of in a window or application.
              name: enabledPrintDocument
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to annotate shared documents,
                slides, or whiteboards when they are shared as files in the content
                viewer instead of in a window or application.
              name: enabledAnnotate
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to view participants.
              name: enabledViewParticipantList
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to see a small preview image
                of any page of shared documents or slides when they are shared as
                files in the content viewer instead of in a window or application.
              name: enabledViewThumbnails
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to control applications, web
                browsers, or desktops remotely.
              name: enabledRemoteControl
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to view any shared documents
                or slides when they are shared as files in the content viewer instead
                of in a window or application.
              name: enabledViewAnyDocument
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to scroll through any page
                of shared documents or slides when they are shared as files in the
                content viewer instead of in a window or application.
              name: enabledViewAnyPage
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to contact the operator privately.
              name: enabledContactOperatorPrivately
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to chat with the host in private.
              name: enabledChatHost
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to chat with the presenter
                in private.
              name: enabledChatPresenter
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to chat with other participants
                in private.
              name: enabledChatOtherParticipants
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: 'Meeting registration. When this option is enabled, meeting invitees
              must register personal information to join the meeting. Meeting invitees
              will receive an email with a registration link for the registration.
              When the registration form has been submitted and approved, an email
              with a real meeting link will be received. By clicking that link the
              meeting invitee can join the meeting. Please note that meeting registration
              does not apply to a meeting when it''s a recurring meeting with a recurrence
              field or no password, or the Join Before Host option is enabled for
              the meeting. See Register for a Meeting in Cisco Webex Meetings for
              details.    + autoAcceptRequest: false (boolean,optional) - Whether
              or not meeting registration requests are accepted automatically.'
            name: registration
            param_attrs: []
            param_object:
            - doc: Whether or not meeting registration requests are accepted automatically.
              name: autoAcceptRequest
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's first name is shown or required for
                meeting registration.
              name: requireFirstName
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's last name is shown or required for
                meeting registration.
              name: requireLastName
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's email is shown or required for meeting
                registration.
              name: requireEmail
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's job title is shown or required for
                meeting registration.
              name: requireJobTitle
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's company name is shown or required
                for meeting registration.
              name: requireCompanyName
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's first address field is shown or required
                for meeting registration.
              name: requireAddress1
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's second address field is shown or
                required for meeting registration.
              name: requireAddress2
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's city is shown or required for meeting
                registration.
              name: requireCity
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's state is shown or required for meeting
                registration.
              name: requireState
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's postal code is shown or required
                for meeting registration.
              name: requireZipCode
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's country or region is shown or required
                for meeting registration.
              name: requireCountryRegion
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's work phone number is shown or required
                for meeting registration.
              name: requireWorkPhone
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's fax number is shown or required for
                meeting registration.
              name: requireFax
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Maximum number of meeting registrations. This only applies to meetings.
                The maximum number of participants for meetings and webinars, with
                the limit based on the user capacity and controlled by a toggle at
                the site level. The default maximum number of participants for webinars
                is 10000, but the actual maximum number of participants is limited
                by the user capacity.
              name: maxRegisterNum
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            type: object
            type_spec: null
          - doc: External keys created by an integration application in its domain,
              for example, Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
              etc.
            name: integrationTags
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Whether or not breakout sessions are enabled.
            name: enabledBreakoutSessions
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: HATEOAS Breakout Sessions information for meeting.
            name: links
            param_attrs:
            - doc: Link relation describing how the target resource is related to
                the current context (conforming with RFC5998).
              name: rel
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource URI (conforming with RFC5998).
              name: href
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource method (conforming with RFC5998).
              name: method
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[LinksObjectForBreakoutSessions]
            type_spec: null
          - doc: Tracking codes information.
            name: trackingCodes
            param_attrs:
            - doc: Name for the tracking code.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Value for the tracking code.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[TrackingCodeItemForGetMeetingObject]
            type_spec: null
          - doc: Audio connection options.
            name: audioConnectionOptions
            param_attrs: []
            param_object:
            - doc: Choose how meeting attendees join the audio portion of the meeting.
              name: audioConnectionType
              param_attrs:
              - doc: Provide a hybrid audio option, allowing attendees to join using
                  their computer audio or a phone.
                name: webexAudio
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Only restricts attendees to join the audio portion of the meeting
                  using their computer instead of a telephone option.
                name: VoIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Other teleconference services.
                name: other
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The way of attendees join the audio portion of the meeting is
                  the default value.
                name: none
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Whether or not to show toll-free call-in numbers.
              name: enabledTollFreeCallIn
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to show global call-in numbers to attendees.
              name: enabledGlobalCallIn
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow attendees to receive a call-back and call-in
                is available. Can only be set true for a webinar.
              name: enabledAudienceCallBack
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Select the sound you want users who have a phone audio connection
                to hear when someone enters or exits the meeting.
              name: entryAndExitTone
              param_attrs:
              - doc: All call-in users joining the meeting will hear the beep.
                name: beep
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: All call-in users joining the meeting will hear their names.
                name: announceName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Turn off beeps and name announcements.
                name: noTone
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Whether or not to allow the host to unmute participants.
              name: allowHostToUnmuteParticipants
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow attendees to unmute themselves.
              name: allowAttendeeToUnmuteSelf
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to auto-mute attendees when attendees enter meetings.
              name: muteAttendeeUponEntry
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: array[ScheduledMeetingObject]
          type_spec: null
    - doc: Updates details for a meeting with a specified meeting ID. This operation
        applies to meeting series and scheduled meetings. It doesn't apply to ended
        or in-progress meeting instances. Ad-hoc meetings created by Create a Meeting
        with adhoc of true and a roomId cannot be updated.
      documentation:
        doc: Patch a Meeting
        doc_link: https://developer.webex.com/docs/api/v1/meetings/patch-a-meeting
        endpoint: https://webexapis.com/v1/meetings/{meetingId}
        http_method: PATCH
      header: Patch a Meeting
      parameters_and_response:
        Body Parameters:
        - doc: Meeting title. The title can be a maximum of 128 characters long.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting agenda. The agenda can be a maximum of 1300 characters long.
          name: agenda
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting password. Must conform to the site's password complexity settings.
            Read password management for details.
          name: password
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Date and time for the start of meeting in any ISO 8601 compliant format.
            start cannot be before current date and time or after end. Duration between
            start and end cannot be shorter than 10 minutes or longer than 24 hours.
            Refer to the Webex Meetings guide for more information about restrictions
            on updating date and time for a meeting. Please note that when a meeting
            is being updated, start of the meeting will be accurate to minutes, not
            seconds or milliseconds. Therefore, if start is within the same minute
            as the current time, start will be adjusted to the upcoming minute; otherwise,
            start will be adjusted with seconds and milliseconds stripped off. For
            instance, if the current time is 2022-03-01T10:32:16.657+08:00, start
            of 2022-03-01T10:32:28.076+08:00 or 2022-03-01T10:32:41+08:00 will be
            adjusted to 2022-03-01T10:33:00+08:00, and start of 2022-03-01T11:32:28.076+08:00
            or 2022-03-01T11:32:41+08:00 will be adjusted to 2022-03-01T11:32:00+08:00.
          name: start
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Date and time for the end of meeting in any ISO 8601 compliant format.
            end cannot be before current date and time or before start. Duration between
            start and end cannot be shorter than 10 minutes or longer than 24 hours.
            Refer to the Webex Meetings guide for more information about restrictions
            on updating date and time for a meeting. Please note that when a meeting
            is being updated, end of the meeting will be accurate to minutes, not
            seconds or milliseconds. Therefore, end will be adjusted with seconds
            and milliseconds stripped off. For instance, end of 2022-03-01T11:52:28.076+08:00
            or 2022-03-01T11:52:41+08:00 will be adjusted to 2022-03-01T11:52:00+08:00.
          name: end
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Time zone in which the meeting was originally scheduled (conforming
            with the IANA time zone database).
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting series recurrence rule (conforming with RFC 2445). Applies
            only to a recurring meeting series, not to a meeting series with only
            one scheduled meeting. Multiple days or dates for monthly or yearly recurrence
            rule are not supported, only the first day or date specified is taken.
            For example, "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10,11,12" is
            not supported and it will be partially supported as "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10".
          name: recurrence
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not meeting is recorded automatically.
          name: enabledAutoRecordMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee with a host account on the target
            site to become a cohost when joining the meeting. The target site is specified
            by siteUrl parameter when creating the meeting; if not specified, it's
            user's preferred site.
          name: allowAnyUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to join the meeting before the
            host joins the meeting.
          name: enabledJoinBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to connect audio in the meeting
            before the host joins the meeting. This attribute is only applicable if
            the enabledJoinBeforeHost attribute is set to true.
          name: enableConnectAudioBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes an attendee can join the meeting before the meeting
            start time and the host joins. This attribute is only applicable if the
            enabledJoinBeforeHost attribute is set to true. Valid options are 0, 5,
            10 and 15. Default is 0 if not specified.
          name: joinBeforeHostMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to exclude the meeting password from the email invitation.
          name: excludePassword
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow the meeting to be listed on the public calendar.
          name: publicMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes before the meeting begins, that an email reminder
            is sent to the host.
          name: reminderTime
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies how the people who aren't on the invite can join the unlocked
            meeting.
          name: unlockedMeetingJoinSecurity
          param_attrs:
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoin,
              people can join the unlocked meeting directly.
            name: allowJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoinWithLobby,
              people will wait in the lobby until the host admits them.
            name: allowJoinWithLobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is blockFromJoin,
              people can't join the unlocked meeting.
            name: blockFromJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Unique identifier for a meeting session type for the user. This attribute
            is required while scheduling webinar meeting. All available meeting session
            types enabled for the user can be retrieved by List Meeting Session Types
            API.
          name: sessionTypeId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not webcast view is enabled.
          name: enabledWebcastView
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Password for panelists of a webinar meeting. Must conform to the site's
            password complexity settings. Read password management for details. If
            not specified, a random password conforming to the site's password rules
            will be generated automatically.
          name: panelistPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not to automatically lock the meeting after it starts.
          name: enableAutomaticLock
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes after the meeting begins, for automatically locking
            it.
          name: automaticLockMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to allow the first attendee of the meeting with a host
            account on the target site to become a cohost. The target site is specified
            by siteUrl parameter when creating the meeting; if not specified, it's
            user's preferred site.
          name: allowFirstUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow authenticated video devices in the meeting's
            organization to start or join the meeting without a prompt.
          name: allowAuthenticatedDevices
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to send emails to host and invitees. It is an optional
            field and default value is true.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This attribute should only be set
            if the user or application calling the API has the admin-level scopes.
            When used, the admin may specify the email of a user in a site they manage
            to be the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: URL of the Webex site which the meeting is updated on. If not specified,
            the meeting is created on user's preferred site. All available Webex sites
            and preferred site of the user can be retrieved by Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting Options.
          name: meetingOptions
          param_attrs:
          - doc: Whether or not to allow any attendee to chat in the meeting. Also
              depends on the session type.
            name: enabledChat
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to have video in the meeting.
              Also depends on the session type.
            name: enabledVideo
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to poll in the meeting. Can
              only be set true for a webinar. The value of this attribute depends
              on the session type for a meeting. Please contact your site admin if
              this attribute is not available.
            name: enabledPolling
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to take notes in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledNote
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether note taking is enabled. If the value of enabledNote is false,
              users can not set this attribute and get default value allowAll.
            name: noteType
            param_attrs:
            - doc: If the value of noteType attribute is allowAll, all participants
                can take notes.
              name: allowAll
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of noteType attribute is allowOne, only a single note
                taker is allowed.
              name: allowOne
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow any attendee to have closed captions in the
              meeting. The value of this attribute also depends on the session type.
            name: enabledClosedCaptions
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to transfer files in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledFileTransfer
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to share Universal Communications
              Format media files in the meeting. The value of this attribute also
              depends on the sessionType.
            name: enabledUCFRichMedia
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Attendee Privileges.
          name: attendeePrivileges
          param_attrs:
          - doc: Whether or not to allow any attendee to share content in the meeting.
            name: enabledShareContent
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to save shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledSaveDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to print shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledPrintDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to annotate shared documents,
              slides, or whiteboards when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledAnnotate
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view participants.
            name: enabledViewParticipantList
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to see a small preview image
              of any page of shared documents or slides when they are shared as files
              in the content viewer instead of in a window or application.
            name: enabledViewThumbnails
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to control applications, web
              browsers, or desktops remotely.
            name: enabledRemoteControl
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view any shared documents
              or slides when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledViewAnyDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to scroll through any page of
              shared documents or slides when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledViewAnyPage
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to contact the operator privately.
            name: enabledContactOperatorPrivately
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the host in private.
            name: enabledChatHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the presenter in
              private.
            name: enabledChatPresenter
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with other participants
              in private.
            name: enabledChatOtherParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: External keys created by an integration application in its own domain,
            for example Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
            etc. The integration application queries meetings by a key in its own
            domain. The maximum size of integrationTags is 3 and each item of integrationTags
            can be a maximum of 64 characters long. Please note that an empty or null
            integrationTags will delete all existing integration tags for the meeting
            implicitly. Developer can update integration tags for a meetingSeries
            but he cannot update it for a scheduledMeeting or a meeting instance.
          name: integrationTags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Whether or not breakout sessions are enabled. If the value of enabledBreakoutSessions
            is false, users can not set breakout sessions. If the value of enabledBreakoutSessions
            is true, users can update breakout sessions using the Update Breakout
            Sessions API. Updating breakout sessions are not supported by this API.
          name: enabledBreakoutSessions
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Tracking codes information. All available tracking codes and their
            options for the specified site can be retrieved by List Meeting Tracking
            Codes API. If an optional tracking code is missing from the trackingCodes
            array and there's a default option for this tracking code, the default
            option is assigned automatically. If the inputMode of a tracking code
            is select, its value must be one of the site-level options or the user-level
            value. Tracking code is not supported for a personal room meeting or an
            ad-hoc space meeting.
          name: trackingCodes
          param_attrs:
          - doc: Name of the tracking code. The name cannot be empty and the maximum
              size is 120 characters.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Value for the tracking code. value cannot be empty and the maximum
              size is 120 characters.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: array[TrackingCodeItemForCreateMeetingObject]
          type_spec: null
        - doc: Audio connection options.
          name: audioConnectionOptions
          param_attrs:
          - doc: Choose how meeting attendees join the audio portion of the meeting.
            name: audioConnectionType
            param_attrs:
            - doc: Provide a hybrid audio option, allowing attendees to join using
                their computer audio or a phone.
              name: webexAudio
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only restricts attendees to join the audio portion of the meeting
                using their computer instead of a telephone option.
              name: VoIP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Other teleconference services.
              name: other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The way of attendees join the audio portion of the meeting is the
                default value.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to show toll-free call-in numbers.
            name: enabledTollFreeCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to show global call-in numbers to attendees.
            name: enabledGlobalCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to receive a call-back and call-in
              is available. Can only be set true for a webinar.
            name: enabledAudienceCallBack
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Select the sound you want users who have a phone audio connection
              to hear when someone enters or exits the meeting.
            name: entryAndExitTone
            param_attrs:
            - doc: All call-in users joining the meeting will hear the beep.
              name: beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: All call-in users joining the meeting will hear their names.
              name: announceName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Turn off beeps and name announcements.
              name: noTone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow the host to unmute participants.
            name: allowHostToUnmuteParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to unmute themselves.
            name: allowAttendeeToUnmuteSelf
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to auto-mute attendees when attendees enter meetings.
            name: muteAttendeeUponEntry
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Response Properties:
        - doc: Unique identifier for meeting. For a meeting series, the id is used
            to identify the entire series. For scheduled meetings from a series, the
            id is used to identify that scheduled meeting. For a meeting instance
            that is in progress or has concluded, the id is used to identify that
            instance.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting number. Applies to meeting series, scheduled meeting, and meeting
            instances, but not to meeting instances which have ended.
          name: meetingNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting title. Can be modified for a meeting series or a scheduled
            meeting using the Update a Meeting API.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting agenda. The agenda can be a maximum of 1300 characters long.
            This attribute can be modified for a meeting series or a scheduled meeting
            using the  Update a Meeting API.
          name: agenda
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting password. Applies to meeting series, scheduled meetings, and
            in-progress meeting instances, but not to meeting instances which have
            ended. Can be modified for a meeting series or a scheduled meeting using
            the Update a Meeting API.
          name: password
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 8-digit numeric password used to join a meeting from audio and video
            devices. This attribute applies to meeting series, scheduled meetings,
            and in-progress meeting instances, but not to meeting instances which
            have ended.
          name: phoneAndVideoSystemPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting type.
          name: meetingType
          param_attrs:
          - doc: Primary instance of a scheduled series of meetings which consists
              of one or more scheduled meetings based on a recurrence rule. When a
              non-recurring meeting is scheduled with no recurrence, its meetingType
              is also meetingSeries which is a meeting series with only one occurrence
              in Webex meeting modeling.
            name: meetingSeries
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Instance from a primary meeting series.
            name: scheduledMeeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting instance that is in progress or has completed.
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Meeting state.
          name: state
          param_attrs:
          - doc: Only applies to a meeting series. Indicates that one or more future
              scheduled meetings exist for this meeting series.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to scheduled meeting. Indicates that the meeting is
              scheduled in the future.
            name: scheduled
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to scheduled meeting. Indicates that this scheduled
              meeting is ready to start or join immediately.
            name: ready
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to meeting instances. Indicates that a locked meeting
              has been joined by participants, but no hosts have joined.
            name: lobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Applies to meeting series and meeting instances. For a meeting series,
              indicates that an instance of this series is happening now. For a meeting
              instance, indicates that the meeting has been joined and unlocked.
            name: inProgress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Applies to scheduled meetings and meeting instances. For scheduled
              meetings, indicates that the meeting was started and is now over. For
              meeting instances, indicates that the meeting instance has concluded.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: This state only applies to scheduled meetings. Indicates that the
              meeting was scheduled in the past but never happened.
            name: missed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: This state only applies to a meeting series. Indicates that all scheduled
              meetings of this series have passed.
            name: expired
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Time zone of start and end, conforming with the IANA time zone database.
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start time for meeting in ISO 8601 compliant format. If the meeting
            is a meeting series, start is the date and time the first meeting of the
            series starts. If the meeting is a meeting series and the current filter
            is true, start is the date and time the upcoming or ongoing meeting of
            the series starts. If the meeting is a scheduled meeting from a meeting
            series, start is the date and time when that scheduled meeting starts.
            If the meeting is a meeting instance that has happened or is happening,
            start is the date and time that the instance actually starts. Can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: start
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End time for a meeting in ISO 8601 compliant format. If the meeting
            is a meeting series, end is the date and time the first meeting of the
            series ends. If the meeting is a meeting series and the current filter
            is true, end is the date and time the upcoming or ongoing meeting of the
            series ends. If the meeting is a scheduled meeting from a meeting series,
            end is the date and time when that scheduled meeting ends. If the meeting
            is a meeting instance that has happened, end is the date and time that
            instance actually ends. If a meeting instance is in progress, end is not
            available. Can be modified for a meeting series or a scheduled meeting
            using the  Update a Meeting API.
          name: end
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting series recurrence rule (conforming with RFC 2445). Applies
            only to a recurring meeting series, not to a meeting series with only
            one scheduled meeting. Can be modified for a meeting series using the  Update
            a Meeting API. Multiple days or dates for monthly or yearly recurrence
            rule are not supported, only the first day or date specified is taken.
            For example, "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10,11,12" is
            not supported and it will be partially supported as "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10".
            For a non-recurring meeting which has no recurrence, its meetingType is
            also meetingSeries which is a meeting series with only one occurrence
            in Webex meeting modeling.
          name: recurrence
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the meeting host.
          name: hostUserId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name for the meeting host.
          name: hostDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Key for joining the meeting as host.
          name: hostKey
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Site URL for the meeting.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Link to a meeting information page where the meeting client is launched
            if the meeting is ready to start or join.
          name: webLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: SIP address for callback from a video system.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: IP address for callback from a video system.
          name: dialInIpAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room ID of the associated Webex space. Only applies to ad-hoc meetings
            and space meetings.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not meeting is recorded automatically. Can be modified for
            a meeting series or a scheduled meeting using the  Update a Meeting API.
          name: enabledAutoRecordMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee with a host account on the target
            site to become a cohost when joining the meeting. The target site is specified
            by a siteUrl parameter when creating the meeting. If not specified, it's
            a user's preferred site. The allowAnyUserToBeCoHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: allowAnyUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to join the meeting before the
            host joins the meeting. The enabledJoinBeforeHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: enabledJoinBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to connect to audio before the
            host joins the meeting. Only applicable if the enabledJoinBeforeHost attribute
            is set to true. The enableConnectAudioBeforeHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: enableConnectAudioBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of minutes an attendee can join the meeting before the meeting
            start time and the host joins. Only applicable if the enabledJoinBeforeHost
            attribute is set to true. The joinBeforeHostMinutes attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API. Valid options are 0, 5, 10 and 15. Default is 0 if not specified.
          name: joinBeforeHostMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to exclude the meeting password from the email invitation.
          name: excludePassword
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow the meeting to be listed on the public calendar.
          name: publicMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes before the meeting begins, that an email reminder
            is sent to the host.
          name: reminderTime
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies how the people who aren't on the invite can join the unlocked
            meeting.
          name: unlockedMeetingJoinSecurity
          param_attrs:
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoin,
              people can join the unlocked meeting directly.
            name: allowJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoinWithLobby,
              people will wait in the lobby until the host admits them.
            name: allowJoinWithLobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is blockFromJoin,
              people can't join the unlocked meeting.
            name: blockFromJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Unique identifier for a meeting session type for the user. This attribute
            is required when scheduling a webinar meeting. All available meeting session
            types enabled for the user can be retrieved using the List Meeting Session
            Types API.
          name: sessionTypeId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies whether the meeting is a regular meeting, a webinar, or a
            meeting scheduled in the user's personal room.
          name: scheduledType
          param_attrs:
          - doc: If the value of scheduledType attribute is meeting, it is a regular
              meeting.
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of scheduledType attribute is webinar, it is a webinar
              meeting.
            name: webinar
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of scheduledType attribute is personalRoomMeeting, it
              is a meeting scheduled in the user's personal room.
            name: personalRoomMeeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not webcast view is enabled.
          name: enabledWebcastView
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Password for panelists of a webinar meeting. Must conform to the site's
            password complexity settings. Read password management for details. If
            not specified, a random password conforming to the site's password rules
            will be generated automatically.
          name: panelistPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 8-digit numeric panelist password to join a webinar meeting from audio
            and video devices.
          name: phoneAndVideoSystemPanelistPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not to automatically lock the meeting after it starts.
          name: enableAutomaticLock
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes after the meeting begins, for automatically locking
            it.
          name: automaticLockMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to allow the first attendee of the meeting with a host
            account on the target site to become a cohost. The target site is specified
            by the siteUrl parameter when creating the meeting. If not specified,
            it's a user's preferred site. The allowFirstUserToBeCoHost attribute can
            be modified for a meeting series or a scheduled meeting uisng the  Update
            a Meeting API.
          name: allowFirstUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow authenticated video devices in the meeting's
            organization to start or join the meeting without a prompt. This attribute
            can be modified for a meeting series or a scheduled meeting using the  Update
            a Meeting API.
          name: allowAuthenticatedDevices
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Information for callbacks from a meeting to phone or for joining a
            teleconference using a phone.
          name: telephony
          param_attrs: []
          param_object:
          - doc: Code for authenticating a user to join teleconference. Users join
              the teleconference using the call-in number or the global call-in number,
              followed by the value of the accessCode.
            name: accessCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Array of call-in numbers for joining a teleconference from a phone.
            name: callInNumbers
            param_attrs:
            - doc: 'Label for the call-in number.

                Possible values: Call-in toll-free number (US/Canada)'
              name: label
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Call-in number to join the teleconference from a phone.

                Possible values: 123456789'
              name: callInNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Type of toll for the call-in number.

                Possible values: toll, tollFree'
              name: tollType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: HATEOAS information of global call-in numbers for joining a teleconference
              from a phone.
            name: links
            param_attrs:
            - doc: Link relation describing how the target resource is related to
                the current context (conforming with RFC5998).
              name: rel
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource URI (conforming with RFC5998).
              name: href
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource method (conforming with RFC5998).
              name: method
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[LinksObjectForTelephony]
            type_spec: null
          type: object
          type_spec: null
        - doc: Meeting Options.
          name: meetingOptions
          param_attrs: []
          param_object:
          - doc: Whether or not to allow any attendee to chat in the meeting. Also
              depends on the session type.
            name: enabledChat
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to have video in the meeting.
              Also depends on the session type.
            name: enabledVideo
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to poll in the meeting. Can
              only be set true for a webinar. The value of this attribute depends
              on the session type for a meeting. Please contact your site admin if
              this attribute is not available.
            name: enabledPolling
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to take notes in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledNote
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether note taking is enabled. If the value of enabledNote is false,
              users can not set this attribute and get default value allowAll.
            name: noteType
            param_attrs:
            - doc: If the value of noteType attribute is allowAll, all participants
                can take notes.
              name: allowAll
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of noteType attribute is allowOne, only a single note
                taker is allowed.
              name: allowOne
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow any attendee to have closed captions in the
              meeting. The value of this attribute also depends on the session type.
            name: enabledClosedCaptions
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to transfer files in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledFileTransfer
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to share Universal Communications
              Format media files in the meeting. The value of this attribute also
              depends on the sessionType.
            name: enabledUCFRichMedia
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Attendee Privileges.
          name: attendeePrivileges
          param_attrs: []
          param_object:
          - doc: Whether or not to allow any attendee to share content in the meeting.
            name: enabledShareContent
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to save shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledSaveDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to print shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledPrintDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to annotate shared documents,
              slides, or whiteboards when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledAnnotate
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view participants.
            name: enabledViewParticipantList
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to see a small preview image
              of any page of shared documents or slides when they are shared as files
              in the content viewer instead of in a window or application.
            name: enabledViewThumbnails
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to control applications, web
              browsers, or desktops remotely.
            name: enabledRemoteControl
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view any shared documents
              or slides when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledViewAnyDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to scroll through any page of
              shared documents or slides when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledViewAnyPage
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to contact the operator privately.
            name: enabledContactOperatorPrivately
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the host in private.
            name: enabledChatHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the presenter in
              private.
            name: enabledChatPresenter
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with other participants
              in private.
            name: enabledChatOtherParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Meeting registration. When this option is enabled, meeting invitees
            must register personal information in order to join the meeting. Meeting
            invitees will receive an email with a registration link for the registration.
            When the registration form has been submitted and approved, an email with
            a real meeting link will be received. By clicking that link the meeting
            invitee can join the meeting. Please note that meeting registration does
            not apply to a meeting when it's a recurring meeting with a recurrence
            field or no password, or the Join Before Host option is enabled for the
            meeting. See Register for a Meeting in Cisco Webex Meetings for details.
          name: registration
          param_attrs: []
          param_object:
          - doc: Whether or not meeting registration requests are accepted automatically.
            name: autoAcceptRequest
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's first name is required for meeting
              registration.
            name: requireFirstName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's last name is required for meeting registration.
            name: requireLastName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's email is required for meeting registration.
            name: requireEmail
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's job title is shown or required for
              meeting registration.
            name: requireJobTitle
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's company name is shown or required for
              meeting registration.
            name: requireCompanyName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's first address field is shown or required
              for meeting registration.
            name: requireAddress1
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's second address field is shown or required
              for meeting registration.
            name: requireAddress2
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's city is shown or required for meeting
              registration.
            name: requireCity
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's state is shown or required for meeting
              registration.
            name: requireState
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's postal code is shown or required for
              meeting registration.
            name: requireZipCode
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's country or region is shown or required
              for meeting registration.
            name: requireCountryRegion
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's work phone number is shown or required
              for meeting registration.
            name: requireWorkPhone
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's fax number is shown or required for
              meeting registration.
            name: requireFax
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Maximum number of meeting registrations. This only applies to meetings.
              The maximum number of participants for meetings and webinars, with the
              limit based on the user capacity and controlled by a toggle at the site
              level. The default maximum number of participants for webinars is 10000,
              but the actual maximum number of participants is limited by the user
              capacity.
            name: maxRegisterNum
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Customized questions for meeting registration.
            name: customizedQuestions
            param_attrs:
            - doc: Unique identifier for the question.
              name: id
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Title of the customized question.
              name: question
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Whether or not the customized question is required to be answered
                by participants.
              name: required
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Type of the question being asked.
              name: type
              param_attrs:
              - doc: Single line text box.
                name: singleLineTextBox
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Multiple line text box.
                name: multiLineTextBox
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Check box which requires options.
                name: checkbox
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Drop down list box which requires options.
                name: dropdownList
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Single radio button which requires options.
                name: radioButtons
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The maximum length of a string that can be entered by the user,
                ranging from 0 to 999. Only required by singleLineTextBox and multiLineTextBox.
              name: maxLength
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: TThe content of options. Required if the question type is one of
                checkbox, dropdownList, or radioButtons.
              name: options
              param_attrs:
              - doc: 'The unique id of options.

                  Possible values: 1'
                name: id
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: 'The content of the option.

                  Possible values: green'
                name: value
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The automatic approval rules for customized questions.
              name: rules
              param_attrs:
              - doc: 'Judgment expression for approval rules.

                  Possible values: contains, notContains, beginsWith, endsWith, equals,
                  notEquals'
                name: condition
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'The keyword for the approval rule. If the rule matches the keyword,
                  the corresponding action will be executed.

                  Possible values: tom'
                name: value
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'The automatic approval result for the approval rule.

                  Possible values: approve, reject'
                name: result
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'Whether to check the case of values.

                  Possible values: '
                name: matchCase
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: 'The priority number of the approval rule. Approval rules for
                  standard questions and custom questions need to be ordered together.

                  Possible values: 1'
                name: order
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            param_object: []
            type: array[CustomizedQuestionForGetMeeting]
            type_spec: null
          - doc: The approval rules for standard questions.
            name: rules
            param_attrs:
            - doc: Name for standard question.
              name: question
              param_attrs:
              - doc: If the value is lastName, this approval rule applies to the standard
                  question of "Last Name".
                name: lastName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is email, this approval rule applies to the standard
                  question of "Email".
                name: email
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is jobTitle, this approval rule applies to the standard
                  question of "Job Title".
                name: jobTitle
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is companyName, this approval rule applies to the
                  standard question of "Company Name".
                name: companyName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is address1, this approval rule applies to the standard
                  question of "Address 1".
                name: address1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is address2, this approval rule applies to the standard
                  question of "Address 2".
                name: address2
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is city, this approval rule applies to the standard
                  question of "City".
                name: city
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is state, this approval rule applies to the standard
                  question of "State".
                name: state
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is zipCode, this approval rule applies to the standard
                  question of "Zip/Post Code".
                name: zipCode
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is countryRegion, this approval rule applies to
                  the standard question of "Country Region".
                name: countryRegion
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is workPhone, this approval rule applies to the
                  standard question of "Work Phone".
                name: workPhone
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is fax, this approval rule applies to the standard
                  question of "Fax".
                name: fax
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Judgment expression for approval rules.
              name: condition
              param_attrs:
              - doc: The content of the answer contains the value.
                name: contains
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer does not contain the value
                name: notContains
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer begins with the value.
                name: beginsWith
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer ends with the value.
                name: endsWith
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer is the same as the value.
                name: equals
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer is not the same as the value.
                name: notEquals
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The keyword for the approval rule. If the rule matches the keyword,
                the corresponding action will be executed.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The automatic approval result for the approval rule.
              name: result
              param_attrs:
              - doc: If the user's registration value meets the criteria, the registration
                  form will be automatically approved.
                name: approve
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the user's registration value meets the criteria, the registration
                  form will be automatically rejected.
                name: reject
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Whether to check the case of values.
              name: matchCase
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The priority number of the approval rule. Approval rules for standard
                questions and custom questions need to be ordered together.
              name: order
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            param_object: []
            type: array[StandardRegistrationApproveRule]
            type_spec: null
          type: object
          type_spec: null
        - doc: External keys created by an integration application in its own domain,
            for example Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
            etc.
          name: integrationTags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Simultaneous interpretation information for a meeting.
          name: simultaneousInterpretation
          param_attrs: []
          param_object:
          - doc: Whether or not simultaneous interpretation is enabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Interpreters for meeting.
            name: interpreters
            param_attrs:
            - doc: Unique identifier for meeting interpreter.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Forms a set of simultaneous interpretation channels together with
                languageCode2. Standard language format from ISO 639-1 code. Read
                ISO 639-1 for details.
              name: languageCode1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Forms a set of simultaneous interpretation channels together with
                languageCode1. Standard language format from ISO 639-1 code. Read
                ISO 639-1 for details.
              name: languageCode2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Email address of meeting interpreter.
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Display name of meeting interpreter.
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[InterpreterObjectForSimultaneousInterpretationOfGetOrListMeeting]
            type_spec: null
          type: object
          type_spec: null
        - doc: Whether or not breakout sessions are enabled.
          name: enabledBreakoutSessions
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: HATEOAS Breakout Sessions information for meeting.
          name: links
          param_attrs:
          - doc: Link relation describing how the target resource is related to the
              current context (conforming with RFC5998).
            name: rel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Target resource URI (conforming with RFC5998).
            name: href
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Target resource method (conforming with RFC5998).
            name: method
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[LinksObjectForBreakoutSessions]
          type_spec: null
        - doc: Tracking codes information.
          name: trackingCodes
          param_attrs:
          - doc: Name for the tracking code.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Value for the tracking code.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[TrackingCodeItemForGetMeetingObject]
          type_spec: null
        - doc: Audio connection options.
          name: audioConnectionOptions
          param_attrs: []
          param_object:
          - doc: Choose how meeting attendees join the audio portion of the meeting.
            name: audioConnectionType
            param_attrs:
            - doc: Provide a hybrid audio option, allowing attendees to join using
                their computer audio or a phone.
              name: webexAudio
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only restricts attendees to join the audio portion of the meeting
                using their computer instead of a telephone option.
              name: VoIP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Other teleconference services.
              name: other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The way of attendees join the audio portion of the meeting is the
                default value.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to show toll-free call-in numbers.
            name: enabledTollFreeCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to show global call-in numbers to attendees.
            name: enabledGlobalCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to receive a call-back and call-in
              is available. Can only be set true for a webinar.
            name: enabledAudienceCallBack
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Select the sound you want users who have a phone audio connection
              to hear when someone enters or exits the meeting.
            name: entryAndExitTone
            param_attrs:
            - doc: All call-in users joining the meeting will hear the beep.
              name: beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: All call-in users joining the meeting will hear their names.
              name: announceName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Turn off beeps and name announcements.
              name: noTone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow the host to unmute participants.
            name: allowHostToUnmuteParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to unmute themselves.
            name: allowAttendeeToUnmuteSelf
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to auto-mute attendees when attendees enter meetings.
            name: muteAttendeeUponEntry
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting to be updated. This parameter applies
            to meeting series and scheduled meetings. It doesn't apply to ended or
            in-progress meeting instances. Please note that currently meeting ID of
            a scheduled personal room meeting is not supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Updates details for a meeting with a specified meeting ID. This operation
        applies to meeting series and scheduled meetings. It doesn't apply to ended
        or in-progress meeting instances. Ad-hoc meetings created by Create a Meeting
        with adhoc of true and a roomId cannot be updated.
      documentation:
        doc: Update a Meeting
        doc_link: https://developer.webex.com/docs/api/v1/meetings/update-a-meeting
        endpoint: https://webexapis.com/v1/meetings/{meetingId}
        http_method: PUT
      header: Update a Meeting
      parameters_and_response:
        Body Parameters:
        - doc: Meeting title. The title can be a maximum of 128 characters long.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting agenda. The agenda can be a maximum of 1300 characters long.
          name: agenda
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting password. Must conform to the site's password complexity settings.
            Read password management for details.
          name: password
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Date and time for the start of meeting in any ISO 8601 compliant format.
            start cannot be before current date and time or after end. Duration between
            start and end cannot be shorter than 10 minutes or longer than 24 hours.
            Refer to the Webex Meetings guide for more information about restrictions
            on updating date and time for a meeting. Please note that when a meeting
            is being updated, start of the meeting will be accurate to minutes, not
            seconds or milliseconds. Therefore, if start is within the same minute
            as the current time, start will be adjusted to the upcoming minute; otherwise,
            start will be adjusted with seconds and milliseconds stripped off. For
            instance, if the current time is 2022-03-01T10:32:16.657+08:00, start
            of 2022-03-01T10:32:28.076+08:00 or 2022-03-01T10:32:41+08:00 will be
            adjusted to 2022-03-01T10:33:00+08:00, and start of 2022-03-01T11:32:28.076+08:00
            or 2022-03-01T11:32:41+08:00 will be adjusted to 2022-03-01T11:32:00+08:00.
          name: start
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Date and time for the end of meeting in any ISO 8601 compliant format.
            end cannot be before current date and time or before start. Duration between
            start and end cannot be shorter than 10 minutes or longer than 24 hours.
            Refer to the Webex Meetings guide for more information about restrictions
            on updating date and time for a meeting. Please note that when a meeting
            is being updated, end of the meeting will be accurate to minutes, not
            seconds or milliseconds. Therefore, end will be adjusted with seconds
            and milliseconds stripped off. For instance, end of 2022-03-01T11:52:28.076+08:00
            or 2022-03-01T11:52:41+08:00 will be adjusted to 2022-03-01T11:52:00+08:00.
          name: end
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Time zone in which the meeting was originally scheduled (conforming
            with the IANA time zone database).
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting series recurrence rule (conforming with RFC 2445). Applies
            only to a recurring meeting series, not to a meeting series with only
            one scheduled meeting. Multiple days or dates for monthly or yearly recurrence
            rule are not supported, only the first day or date specified is taken.
            For example, "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10,11,12" is
            not supported and it will be partially supported as "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10".
          name: recurrence
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not meeting is recorded automatically.
          name: enabledAutoRecordMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee with a host account on the target
            site to become a cohost when joining the meeting. The target site is specified
            by siteUrl parameter when creating the meeting; if not specified, it's
            user's preferred site.
          name: allowAnyUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to join the meeting before the
            host joins the meeting.
          name: enabledJoinBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to connect audio in the meeting
            before the host joins the meeting. This attribute is only applicable if
            the enabledJoinBeforeHost attribute is set to true.
          name: enableConnectAudioBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes an attendee can join the meeting before the meeting
            start time and the host joins. This attribute is only applicable if the
            enabledJoinBeforeHost attribute is set to true. Valid options are 0, 5,
            10 and 15. Default is 0 if not specified.
          name: joinBeforeHostMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to exclude the meeting password from the email invitation.
          name: excludePassword
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow the meeting to be listed on the public calendar.
          name: publicMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes before the meeting begins, that an email reminder
            is sent to the host.
          name: reminderTime
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies how the people who aren't on the invite can join the unlocked
            meeting.
          name: unlockedMeetingJoinSecurity
          param_attrs:
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoin,
              people can join the unlocked meeting directly.
            name: allowJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoinWithLobby,
              people will wait in the lobby until the host admits them.
            name: allowJoinWithLobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is blockFromJoin,
              people can't join the unlocked meeting.
            name: blockFromJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Unique identifier for a meeting session type for the user. This attribute
            is required while scheduling webinar meeting. All available meeting session
            types enabled for the user can be retrieved by List Meeting Session Types
            API.
          name: sessionTypeId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not webcast view is enabled.
          name: enabledWebcastView
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Password for panelists of a webinar meeting. Must conform to the site's
            password complexity settings. Read password management for details. If
            not specified, a random password conforming to the site's password rules
            will be generated automatically.
          name: panelistPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not to automatically lock the meeting after it starts.
          name: enableAutomaticLock
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes after the meeting begins, for automatically locking
            it.
          name: automaticLockMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to allow the first attendee of the meeting with a host
            account on the target site to become a cohost. The target site is specified
            by siteUrl parameter when creating the meeting; if not specified, it's
            user's preferred site.
          name: allowFirstUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow authenticated video devices in the meeting's
            organization to start or join the meeting without a prompt.
          name: allowAuthenticatedDevices
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to send emails to host and invitees. It is an optional
            field and default value is true.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This attribute should only be set
            if the user or application calling the API has the admin-level scopes.
            When used, the admin may specify the email of a user in a site they manage
            to be the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: URL of the Webex site which the meeting is updated on. If not specified,
            the meeting is created on user's preferred site. All available Webex sites
            and preferred site of the user can be retrieved by Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting Options.
          name: meetingOptions
          param_attrs:
          - doc: Whether or not to allow any attendee to chat in the meeting. Also
              depends on the session type.
            name: enabledChat
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to have video in the meeting.
              Also depends on the session type.
            name: enabledVideo
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to poll in the meeting. Can
              only be set true for a webinar. The value of this attribute depends
              on the session type for a meeting. Please contact your site admin if
              this attribute is not available.
            name: enabledPolling
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to take notes in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledNote
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether note taking is enabled. If the value of enabledNote is false,
              users can not set this attribute and get default value allowAll.
            name: noteType
            param_attrs:
            - doc: If the value of noteType attribute is allowAll, all participants
                can take notes.
              name: allowAll
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of noteType attribute is allowOne, only a single note
                taker is allowed.
              name: allowOne
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow any attendee to have closed captions in the
              meeting. The value of this attribute also depends on the session type.
            name: enabledClosedCaptions
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to transfer files in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledFileTransfer
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to share Universal Communications
              Format media files in the meeting. The value of this attribute also
              depends on the sessionType.
            name: enabledUCFRichMedia
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Attendee Privileges.
          name: attendeePrivileges
          param_attrs:
          - doc: Whether or not to allow any attendee to share content in the meeting.
            name: enabledShareContent
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to save shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledSaveDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to print shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledPrintDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to annotate shared documents,
              slides, or whiteboards when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledAnnotate
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view participants.
            name: enabledViewParticipantList
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to see a small preview image
              of any page of shared documents or slides when they are shared as files
              in the content viewer instead of in a window or application.
            name: enabledViewThumbnails
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to control applications, web
              browsers, or desktops remotely.
            name: enabledRemoteControl
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view any shared documents
              or slides when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledViewAnyDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to scroll through any page of
              shared documents or slides when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledViewAnyPage
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to contact the operator privately.
            name: enabledContactOperatorPrivately
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the host in private.
            name: enabledChatHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the presenter in
              private.
            name: enabledChatPresenter
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with other participants
              in private.
            name: enabledChatOtherParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: External keys created by an integration application in its own domain,
            for example Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
            etc. The integration application queries meetings by a key in its own
            domain. The maximum size of integrationTags is 3 and each item of integrationTags
            can be a maximum of 64 characters long. Please note that an empty or null
            integrationTags will delete all existing integration tags for the meeting
            implicitly. Developer can update integration tags for a meetingSeries
            but he cannot update it for a scheduledMeeting or a meeting instance.
          name: integrationTags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Whether or not breakout sessions are enabled. If the value of enabledBreakoutSessions
            is false, users can not set breakout sessions. If the value of enabledBreakoutSessions
            is true, users can update breakout sessions using the Update Breakout
            Sessions API. Updating breakout sessions are not supported by this API.
          name: enabledBreakoutSessions
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Tracking codes information. All available tracking codes and their
            options for the specified site can be retrieved by List Meeting Tracking
            Codes API. If an optional tracking code is missing from the trackingCodes
            array and there's a default option for this tracking code, the default
            option is assigned automatically. If the inputMode of a tracking code
            is select, its value must be one of the site-level options or the user-level
            value. Tracking code is not supported for a personal room meeting or an
            ad-hoc space meeting.
          name: trackingCodes
          param_attrs:
          - doc: Name of the tracking code. The name cannot be empty and the maximum
              size is 120 characters.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Value for the tracking code. value cannot be empty and the maximum
              size is 120 characters.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: array[TrackingCodeItemForCreateMeetingObject]
          type_spec: null
        - doc: Audio connection options.
          name: audioConnectionOptions
          param_attrs:
          - doc: Choose how meeting attendees join the audio portion of the meeting.
            name: audioConnectionType
            param_attrs:
            - doc: Provide a hybrid audio option, allowing attendees to join using
                their computer audio or a phone.
              name: webexAudio
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only restricts attendees to join the audio portion of the meeting
                using their computer instead of a telephone option.
              name: VoIP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Other teleconference services.
              name: other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The way of attendees join the audio portion of the meeting is the
                default value.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to show toll-free call-in numbers.
            name: enabledTollFreeCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to show global call-in numbers to attendees.
            name: enabledGlobalCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to receive a call-back and call-in
              is available. Can only be set true for a webinar.
            name: enabledAudienceCallBack
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Select the sound you want users who have a phone audio connection
              to hear when someone enters or exits the meeting.
            name: entryAndExitTone
            param_attrs:
            - doc: All call-in users joining the meeting will hear the beep.
              name: beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: All call-in users joining the meeting will hear their names.
              name: announceName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Turn off beeps and name announcements.
              name: noTone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow the host to unmute participants.
            name: allowHostToUnmuteParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to unmute themselves.
            name: allowAttendeeToUnmuteSelf
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to auto-mute attendees when attendees enter meetings.
            name: muteAttendeeUponEntry
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Response Properties:
        - doc: Unique identifier for meeting. For a meeting series, the id is used
            to identify the entire series. For scheduled meetings from a series, the
            id is used to identify that scheduled meeting. For a meeting instance
            that is in progress or has concluded, the id is used to identify that
            instance.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting number. Applies to meeting series, scheduled meeting, and meeting
            instances, but not to meeting instances which have ended.
          name: meetingNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting title. Can be modified for a meeting series or a scheduled
            meeting using the Update a Meeting API.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting agenda. The agenda can be a maximum of 1300 characters long.
            This attribute can be modified for a meeting series or a scheduled meeting
            using the  Update a Meeting API.
          name: agenda
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting password. Applies to meeting series, scheduled meetings, and
            in-progress meeting instances, but not to meeting instances which have
            ended. Can be modified for a meeting series or a scheduled meeting using
            the Update a Meeting API.
          name: password
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 8-digit numeric password used to join a meeting from audio and video
            devices. This attribute applies to meeting series, scheduled meetings,
            and in-progress meeting instances, but not to meeting instances which
            have ended.
          name: phoneAndVideoSystemPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting type.
          name: meetingType
          param_attrs:
          - doc: Primary instance of a scheduled series of meetings which consists
              of one or more scheduled meetings based on a recurrence rule. When a
              non-recurring meeting is scheduled with no recurrence, its meetingType
              is also meetingSeries which is a meeting series with only one occurrence
              in Webex meeting modeling.
            name: meetingSeries
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Instance from a primary meeting series.
            name: scheduledMeeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting instance that is in progress or has completed.
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Meeting state.
          name: state
          param_attrs:
          - doc: Only applies to a meeting series. Indicates that one or more future
              scheduled meetings exist for this meeting series.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to scheduled meeting. Indicates that the meeting is
              scheduled in the future.
            name: scheduled
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to scheduled meeting. Indicates that this scheduled
              meeting is ready to start or join immediately.
            name: ready
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only applies to meeting instances. Indicates that a locked meeting
              has been joined by participants, but no hosts have joined.
            name: lobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Applies to meeting series and meeting instances. For a meeting series,
              indicates that an instance of this series is happening now. For a meeting
              instance, indicates that the meeting has been joined and unlocked.
            name: inProgress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Applies to scheduled meetings and meeting instances. For scheduled
              meetings, indicates that the meeting was started and is now over. For
              meeting instances, indicates that the meeting instance has concluded.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: This state only applies to scheduled meetings. Indicates that the
              meeting was scheduled in the past but never happened.
            name: missed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: This state only applies to a meeting series. Indicates that all scheduled
              meetings of this series have passed.
            name: expired
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Time zone of start and end, conforming with the IANA time zone database.
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start time for meeting in ISO 8601 compliant format. If the meeting
            is a meeting series, start is the date and time the first meeting of the
            series starts. If the meeting is a meeting series and the current filter
            is true, start is the date and time the upcoming or ongoing meeting of
            the series starts. If the meeting is a scheduled meeting from a meeting
            series, start is the date and time when that scheduled meeting starts.
            If the meeting is a meeting instance that has happened or is happening,
            start is the date and time that the instance actually starts. Can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: start
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End time for a meeting in ISO 8601 compliant format. If the meeting
            is a meeting series, end is the date and time the first meeting of the
            series ends. If the meeting is a meeting series and the current filter
            is true, end is the date and time the upcoming or ongoing meeting of the
            series ends. If the meeting is a scheduled meeting from a meeting series,
            end is the date and time when that scheduled meeting ends. If the meeting
            is a meeting instance that has happened, end is the date and time that
            instance actually ends. If a meeting instance is in progress, end is not
            available. Can be modified for a meeting series or a scheduled meeting
            using the  Update a Meeting API.
          name: end
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting series recurrence rule (conforming with RFC 2445). Applies
            only to a recurring meeting series, not to a meeting series with only
            one scheduled meeting. Can be modified for a meeting series using the  Update
            a Meeting API. Multiple days or dates for monthly or yearly recurrence
            rule are not supported, only the first day or date specified is taken.
            For example, "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10,11,12" is
            not supported and it will be partially supported as "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10".
            For a non-recurring meeting which has no recurrence, its meetingType is
            also meetingSeries which is a meeting series with only one occurrence
            in Webex meeting modeling.
          name: recurrence
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the meeting host.
          name: hostUserId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name for the meeting host.
          name: hostDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Key for joining the meeting as host.
          name: hostKey
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Site URL for the meeting.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Link to a meeting information page where the meeting client is launched
            if the meeting is ready to start or join.
          name: webLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: SIP address for callback from a video system.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: IP address for callback from a video system.
          name: dialInIpAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room ID of the associated Webex space. Only applies to ad-hoc meetings
            and space meetings.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not meeting is recorded automatically. Can be modified for
            a meeting series or a scheduled meeting using the  Update a Meeting API.
          name: enabledAutoRecordMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee with a host account on the target
            site to become a cohost when joining the meeting. The target site is specified
            by a siteUrl parameter when creating the meeting. If not specified, it's
            a user's preferred site. The allowAnyUserToBeCoHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: allowAnyUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to join the meeting before the
            host joins the meeting. The enabledJoinBeforeHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: enabledJoinBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow any attendee to connect to audio before the
            host joins the meeting. Only applicable if the enabledJoinBeforeHost attribute
            is set to true. The enableConnectAudioBeforeHost attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API.
          name: enableConnectAudioBeforeHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of minutes an attendee can join the meeting before the meeting
            start time and the host joins. Only applicable if the enabledJoinBeforeHost
            attribute is set to true. The joinBeforeHostMinutes attribute can be modified
            for a meeting series or a scheduled meeting using the  Update a Meeting
            API. Valid options are 0, 5, 10 and 15. Default is 0 if not specified.
          name: joinBeforeHostMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to exclude the meeting password from the email invitation.
          name: excludePassword
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow the meeting to be listed on the public calendar.
          name: publicMeeting
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes before the meeting begins, that an email reminder
            is sent to the host.
          name: reminderTime
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies how the people who aren't on the invite can join the unlocked
            meeting.
          name: unlockedMeetingJoinSecurity
          param_attrs:
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoin,
              people can join the unlocked meeting directly.
            name: allowJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoinWithLobby,
              people will wait in the lobby until the host admits them.
            name: allowJoinWithLobby
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of unlockedMeetingJoinSecurity attribute is blockFromJoin,
              people can't join the unlocked meeting.
            name: blockFromJoin
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Unique identifier for a meeting session type for the user. This attribute
            is required when scheduling a webinar meeting. All available meeting session
            types enabled for the user can be retrieved using the List Meeting Session
            Types API.
          name: sessionTypeId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies whether the meeting is a regular meeting, a webinar, or a
            meeting scheduled in the user's personal room.
          name: scheduledType
          param_attrs:
          - doc: If the value of scheduledType attribute is meeting, it is a regular
              meeting.
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of scheduledType attribute is webinar, it is a webinar
              meeting.
            name: webinar
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the value of scheduledType attribute is personalRoomMeeting, it
              is a meeting scheduled in the user's personal room.
            name: personalRoomMeeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not webcast view is enabled.
          name: enabledWebcastView
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Password for panelists of a webinar meeting. Must conform to the site's
            password complexity settings. Read password management for details. If
            not specified, a random password conforming to the site's password rules
            will be generated automatically.
          name: panelistPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 8-digit numeric panelist password to join a webinar meeting from audio
            and video devices.
          name: phoneAndVideoSystemPanelistPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not to automatically lock the meeting after it starts.
          name: enableAutomaticLock
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The number of minutes after the meeting begins, for automatically locking
            it.
          name: automaticLockMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to allow the first attendee of the meeting with a host
            account on the target site to become a cohost. The target site is specified
            by the siteUrl parameter when creating the meeting. If not specified,
            it's a user's preferred site. The allowFirstUserToBeCoHost attribute can
            be modified for a meeting series or a scheduled meeting uisng the  Update
            a Meeting API.
          name: allowFirstUserToBeCoHost
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not to allow authenticated video devices in the meeting's
            organization to start or join the meeting without a prompt. This attribute
            can be modified for a meeting series or a scheduled meeting using the  Update
            a Meeting API.
          name: allowAuthenticatedDevices
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Information for callbacks from a meeting to phone or for joining a
            teleconference using a phone.
          name: telephony
          param_attrs: []
          param_object:
          - doc: Code for authenticating a user to join teleconference. Users join
              the teleconference using the call-in number or the global call-in number,
              followed by the value of the accessCode.
            name: accessCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Array of call-in numbers for joining a teleconference from a phone.
            name: callInNumbers
            param_attrs:
            - doc: 'Label for the call-in number.

                Possible values: Call-in toll-free number (US/Canada)'
              name: label
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Call-in number to join the teleconference from a phone.

                Possible values: 123456789'
              name: callInNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Type of toll for the call-in number.

                Possible values: toll, tollFree'
              name: tollType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: HATEOAS information of global call-in numbers for joining a teleconference
              from a phone.
            name: links
            param_attrs:
            - doc: Link relation describing how the target resource is related to
                the current context (conforming with RFC5998).
              name: rel
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource URI (conforming with RFC5998).
              name: href
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Target resource method (conforming with RFC5998).
              name: method
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[LinksObjectForTelephony]
            type_spec: null
          type: object
          type_spec: null
        - doc: Meeting Options.
          name: meetingOptions
          param_attrs: []
          param_object:
          - doc: Whether or not to allow any attendee to chat in the meeting. Also
              depends on the session type.
            name: enabledChat
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to have video in the meeting.
              Also depends on the session type.
            name: enabledVideo
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to poll in the meeting. Can
              only be set true for a webinar. The value of this attribute depends
              on the session type for a meeting. Please contact your site admin if
              this attribute is not available.
            name: enabledPolling
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to take notes in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledNote
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether note taking is enabled. If the value of enabledNote is false,
              users can not set this attribute and get default value allowAll.
            name: noteType
            param_attrs:
            - doc: If the value of noteType attribute is allowAll, all participants
                can take notes.
              name: allowAll
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of noteType attribute is allowOne, only a single note
                taker is allowed.
              name: allowOne
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow any attendee to have closed captions in the
              meeting. The value of this attribute also depends on the session type.
            name: enabledClosedCaptions
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to transfer files in the meeting.
              The value of this attribute also depends on the session type.
            name: enabledFileTransfer
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to share Universal Communications
              Format media files in the meeting. The value of this attribute also
              depends on the sessionType.
            name: enabledUCFRichMedia
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Attendee Privileges.
          name: attendeePrivileges
          param_attrs: []
          param_object:
          - doc: Whether or not to allow any attendee to share content in the meeting.
            name: enabledShareContent
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to save shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledSaveDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to print shared documents, slides,
              or whiteboards when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledPrintDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to annotate shared documents,
              slides, or whiteboards when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledAnnotate
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view participants.
            name: enabledViewParticipantList
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to see a small preview image
              of any page of shared documents or slides when they are shared as files
              in the content viewer instead of in a window or application.
            name: enabledViewThumbnails
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to control applications, web
              browsers, or desktops remotely.
            name: enabledRemoteControl
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to view any shared documents
              or slides when they are shared as files in the content viewer instead
              of in a window or application.
            name: enabledViewAnyDocument
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to scroll through any page of
              shared documents or slides when they are shared as files in the content
              viewer instead of in a window or application.
            name: enabledViewAnyPage
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to contact the operator privately.
            name: enabledContactOperatorPrivately
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the host in private.
            name: enabledChatHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with the presenter in
              private.
            name: enabledChatPresenter
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to chat with other participants
              in private.
            name: enabledChatOtherParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Meeting registration. When this option is enabled, meeting invitees
            must register personal information in order to join the meeting. Meeting
            invitees will receive an email with a registration link for the registration.
            When the registration form has been submitted and approved, an email with
            a real meeting link will be received. By clicking that link the meeting
            invitee can join the meeting. Please note that meeting registration does
            not apply to a meeting when it's a recurring meeting with a recurrence
            field or no password, or the Join Before Host option is enabled for the
            meeting. See Register for a Meeting in Cisco Webex Meetings for details.
          name: registration
          param_attrs: []
          param_object:
          - doc: Whether or not meeting registration requests are accepted automatically.
            name: autoAcceptRequest
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's first name is required for meeting
              registration.
            name: requireFirstName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's last name is required for meeting registration.
            name: requireLastName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's email is required for meeting registration.
            name: requireEmail
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's job title is shown or required for
              meeting registration.
            name: requireJobTitle
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's company name is shown or required for
              meeting registration.
            name: requireCompanyName
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's first address field is shown or required
              for meeting registration.
            name: requireAddress1
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's second address field is shown or required
              for meeting registration.
            name: requireAddress2
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's city is shown or required for meeting
              registration.
            name: requireCity
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's state is shown or required for meeting
              registration.
            name: requireState
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's postal code is shown or required for
              meeting registration.
            name: requireZipCode
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's country or region is shown or required
              for meeting registration.
            name: requireCountryRegion
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's work phone number is shown or required
              for meeting registration.
            name: requireWorkPhone
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not a registrant's fax number is shown or required for
              meeting registration.
            name: requireFax
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Maximum number of meeting registrations. This only applies to meetings.
              The maximum number of participants for meetings and webinars, with the
              limit based on the user capacity and controlled by a toggle at the site
              level. The default maximum number of participants for webinars is 10000,
              but the actual maximum number of participants is limited by the user
              capacity.
            name: maxRegisterNum
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Customized questions for meeting registration.
            name: customizedQuestions
            param_attrs:
            - doc: Unique identifier for the question.
              name: id
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Title of the customized question.
              name: question
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Whether or not the customized question is required to be answered
                by participants.
              name: required
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Type of the question being asked.
              name: type
              param_attrs:
              - doc: Single line text box.
                name: singleLineTextBox
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Multiple line text box.
                name: multiLineTextBox
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Check box which requires options.
                name: checkbox
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Drop down list box which requires options.
                name: dropdownList
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Single radio button which requires options.
                name: radioButtons
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The maximum length of a string that can be entered by the user,
                ranging from 0 to 999. Only required by singleLineTextBox and multiLineTextBox.
              name: maxLength
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: TThe content of options. Required if the question type is one of
                checkbox, dropdownList, or radioButtons.
              name: options
              param_attrs:
              - doc: 'The unique id of options.

                  Possible values: 1'
                name: id
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: 'The content of the option.

                  Possible values: green'
                name: value
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The automatic approval rules for customized questions.
              name: rules
              param_attrs:
              - doc: 'Judgment expression for approval rules.

                  Possible values: contains, notContains, beginsWith, endsWith, equals,
                  notEquals'
                name: condition
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'The keyword for the approval rule. If the rule matches the keyword,
                  the corresponding action will be executed.

                  Possible values: tom'
                name: value
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'The automatic approval result for the approval rule.

                  Possible values: approve, reject'
                name: result
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 'Whether to check the case of values.

                  Possible values: '
                name: matchCase
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: 'The priority number of the approval rule. Approval rules for
                  standard questions and custom questions need to be ordered together.

                  Possible values: 1'
                name: order
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            param_object: []
            type: array[CustomizedQuestionForGetMeeting]
            type_spec: null
          - doc: The approval rules for standard questions.
            name: rules
            param_attrs:
            - doc: Name for standard question.
              name: question
              param_attrs:
              - doc: If the value is lastName, this approval rule applies to the standard
                  question of "Last Name".
                name: lastName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is email, this approval rule applies to the standard
                  question of "Email".
                name: email
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is jobTitle, this approval rule applies to the standard
                  question of "Job Title".
                name: jobTitle
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is companyName, this approval rule applies to the
                  standard question of "Company Name".
                name: companyName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is address1, this approval rule applies to the standard
                  question of "Address 1".
                name: address1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is address2, this approval rule applies to the standard
                  question of "Address 2".
                name: address2
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is city, this approval rule applies to the standard
                  question of "City".
                name: city
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is state, this approval rule applies to the standard
                  question of "State".
                name: state
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is zipCode, this approval rule applies to the standard
                  question of "Zip/Post Code".
                name: zipCode
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is countryRegion, this approval rule applies to
                  the standard question of "Country Region".
                name: countryRegion
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is workPhone, this approval rule applies to the
                  standard question of "Work Phone".
                name: workPhone
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value is fax, this approval rule applies to the standard
                  question of "Fax".
                name: fax
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Judgment expression for approval rules.
              name: condition
              param_attrs:
              - doc: The content of the answer contains the value.
                name: contains
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer does not contain the value
                name: notContains
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer begins with the value.
                name: beginsWith
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer ends with the value.
                name: endsWith
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer is the same as the value.
                name: equals
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer is not the same as the value.
                name: notEquals
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The keyword for the approval rule. If the rule matches the keyword,
                the corresponding action will be executed.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The automatic approval result for the approval rule.
              name: result
              param_attrs:
              - doc: If the user's registration value meets the criteria, the registration
                  form will be automatically approved.
                name: approve
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the user's registration value meets the criteria, the registration
                  form will be automatically rejected.
                name: reject
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Whether to check the case of values.
              name: matchCase
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The priority number of the approval rule. Approval rules for standard
                questions and custom questions need to be ordered together.
              name: order
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            param_object: []
            type: array[StandardRegistrationApproveRule]
            type_spec: null
          type: object
          type_spec: null
        - doc: External keys created by an integration application in its own domain,
            for example Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
            etc.
          name: integrationTags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Simultaneous interpretation information for a meeting.
          name: simultaneousInterpretation
          param_attrs: []
          param_object:
          - doc: Whether or not simultaneous interpretation is enabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Interpreters for meeting.
            name: interpreters
            param_attrs:
            - doc: Unique identifier for meeting interpreter.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Forms a set of simultaneous interpretation channels together with
                languageCode2. Standard language format from ISO 639-1 code. Read
                ISO 639-1 for details.
              name: languageCode1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Forms a set of simultaneous interpretation channels together with
                languageCode1. Standard language format from ISO 639-1 code. Read
                ISO 639-1 for details.
              name: languageCode2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Email address of meeting interpreter.
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Display name of meeting interpreter.
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[InterpreterObjectForSimultaneousInterpretationOfGetOrListMeeting]
            type_spec: null
          type: object
          type_spec: null
        - doc: Whether or not breakout sessions are enabled.
          name: enabledBreakoutSessions
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: HATEOAS Breakout Sessions information for meeting.
          name: links
          param_attrs:
          - doc: Link relation describing how the target resource is related to the
              current context (conforming with RFC5998).
            name: rel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Target resource URI (conforming with RFC5998).
            name: href
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Target resource method (conforming with RFC5998).
            name: method
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[LinksObjectForBreakoutSessions]
          type_spec: null
        - doc: Tracking codes information.
          name: trackingCodes
          param_attrs:
          - doc: Name for the tracking code.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Value for the tracking code.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[TrackingCodeItemForGetMeetingObject]
          type_spec: null
        - doc: Audio connection options.
          name: audioConnectionOptions
          param_attrs: []
          param_object:
          - doc: Choose how meeting attendees join the audio portion of the meeting.
            name: audioConnectionType
            param_attrs:
            - doc: Provide a hybrid audio option, allowing attendees to join using
                their computer audio or a phone.
              name: webexAudio
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only restricts attendees to join the audio portion of the meeting
                using their computer instead of a telephone option.
              name: VoIP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Other teleconference services.
              name: other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The way of attendees join the audio portion of the meeting is the
                default value.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to show toll-free call-in numbers.
            name: enabledTollFreeCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to show global call-in numbers to attendees.
            name: enabledGlobalCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to receive a call-back and call-in
              is available. Can only be set true for a webinar.
            name: enabledAudienceCallBack
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Select the sound you want users who have a phone audio connection
              to hear when someone enters or exits the meeting.
            name: entryAndExitTone
            param_attrs:
            - doc: All call-in users joining the meeting will hear the beep.
              name: beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: All call-in users joining the meeting will hear their names.
              name: announceName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Turn off beeps and name announcements.
              name: noTone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not to allow the host to unmute participants.
            name: allowHostToUnmuteParticipants
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow attendees to unmute themselves.
            name: allowAttendeeToUnmuteSelf
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to auto-mute attendees when attendees enter meetings.
            name: muteAttendeeUponEntry
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting to be updated. This parameter applies
            to meeting series and scheduled meetings. It doesn't apply to ended or
            in-progress meeting instances. Please note that currently meeting ID of
            a scheduled personal room meeting is not supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Deletes a meeting with a specified meeting ID. The deleted meeting cannot
        be recovered. This operation applies to meeting series and scheduled meetings.
        It doesn't apply to ended or in-progress meeting instances. Ad-hoc meetings
        created by Create a Meeting with adhoc of true and a roomId cannot be deleted.
      documentation:
        doc: Delete a Meeting
        doc_link: https://developer.webex.com/docs/api/v1/meetings/delete-a-meeting
        endpoint: https://webexapis.com/v1/meetings/{meetingId}
        http_method: DELETE
      header: Delete a Meeting
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will delete a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not to send emails to host and invitees. It is an optional
            field and default value is true.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting to be deleted. This parameter applies
            to meeting series and scheduled meetings. It doesn't apply to ended or
            in-progress meeting instances.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Retrieves links for a meeting with a specified meetingId, meetingNumber,
        or webLink that allow users to start or join the meeting directly without
        logging in and entering a password.
      documentation:
        doc: Join a Meeting
        doc_link: https://developer.webex.com/docs/api/v1/meetings/join-a-meeting
        endpoint: https://webexapis.com/v1/meetings/join
        http_method: POST
      header: Join a Meeting
      parameters_and_response:
        Body Parameters:
        - doc: Unique identifier for the meeting. This parameter applies to meeting
            series and scheduled meetings. It doesn't apply to ended or in-progress
            meeting instances. Please note that currently meeting ID of a scheduled
            personal room meeting is also supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting number. Applies to meeting series, scheduled meeting, and meeting
            instances, but not to meeting instances which have ended.
          name: meetingNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Link to a meeting information page where the meeting client is launched
            if the meeting is ready to start or join.
          name: webLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not to redirect to joinLink. It is an optional field and
            default value is true.
          name: joinDirectly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address of meeting participant. If email is specified, the link
            is generated for the user of email; otherwise, it's generated for the
            user calling the API. email is required for a guest issuer.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name of meeting participant. If email is specified and displayName
            is empty, the display name is the same as email. The maximum length of
            displayName is 128 characters. displayName is required for a guest issuer.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: It's required when the meeting is protected by a password and the current
            user is not privileged to view it if they are not a host, cohost or invitee
            of the meeting.
          name: password
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Expiration duration of joinLink in minutes. Must be between 1 and 60.
          name: expirationMinutes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: The link is used to start a meeting as the meeting host. Only the meeting
            host or cohost can generate the startLink.
          name: startLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The link is used to join the meeting.
          name: joinLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Expiration time of joinLink.
          name: expiration
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Retrieves the list of meeting templates that is available for the authenticated
        user.

        There are separate lists of meeting templates for different templateType,
        locale and siteUrl.'
      documentation:
        doc: List Meeting Templates
        doc_link: https://developer.webex.com/docs/api/v1/meetings/list-meeting-templates
        endpoint: https://webexapis.com/v1/meetings/templates
        http_method: GET
      header: List Meeting Templates
      parameters_and_response:
        Query Parameters:
        - doc: 'Meeting template type for the meeting template objects being requested.
            If not specified, return meeting templates of all types.

            Possible values: meeting, webinar'
          name: templateType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Locale for the meeting template objects being requested. If not specified,
            return meeting templates of the default en_US locale. Refer to Meeting
            Template Locales for all the locales supported by Webex.
          name: locale
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The value is true or false. If it's true, return the default meeting
            templates; if it's false, return the non-default meeting templates. If
            it's not specified, return both default and non-default meeting templates.
          name: isDefault
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The value is true or false. If it's true, return the standard meeting
            templates; if it's false, return the non-standard meeting templates. If
            it's not specified, return both standard and non-standard meeting templates.
          name: isStandard
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return meeting templates that are available for that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: URL of the Webex site which the API lists meeting templates from. If
            not specified, the API lists meeting templates from user's preferred site.
            All available Webex sites and preferred site of the user can be retrieved
            by Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Meeting templates array.
          name: items
          param_attrs:
          - doc: Unique identifier for meeting template.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting template name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting template locale.
            name: locale
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Site URL for the meeting template.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting template type.
            name: templateType
            param_attrs:
            - doc: Webex meeting.
              name: meeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webex webinar.
              name: webinar
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not the meeting template is a default template.
            name: isDefault
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the meeting template is a standard template.
            name: isStandard
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[TemplateObject]
          type_spec: null
    - doc: Retrieves details for a meeting template with a specified meeting template
        ID.
      documentation:
        doc: Get a Meeting Template
        doc_link: https://developer.webex.com/docs/api/v1/meetings/get-a-meeting-template
        endpoint: https://webexapis.com/v1/meetings/templates/{templateId}
        http_method: GET
      header: Get a Meeting Template
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return the meeting template that is available for that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for meeting template.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting template name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting template locale.
          name: locale
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Site URL for the meeting template.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting template type.
          name: templateType
          param_attrs:
          - doc: Webex meeting.
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Webex webinar.
            name: webinar
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the meeting template is a default template.
          name: isDefault
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the meeting template is a standard template.
          name: isStandard
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Meeting object which is used to create a meeting by the meeting template.
            Please note that the meeting object should be used to create a meeting
            immediately after retrieval since the start and end may be invalid quickly
            after generation.
          name: meeting
          param_attrs:
          - doc: Whether or not to create an ad-hoc meeting for the room specified
              by roomId. When true, roomId is required.
            name: adhoc
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Unique identifier for the Webex space which the meeting is to be
              associated with. It can be retrieved by List Rooms. roomId is required
              when adhoc is true. When roomId is specified, the parameter hostEmail
              will be ignored.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for meeting template. Please note that start and
              end are optional when templateId is specified. The list of meeting templates
              that is available for the authenticated user can be retrieved from List
              Meeting Templates. This parameter is ignored for an ad-hoc meeting.
            name: templateId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting title. The title can be a maximum of 128 characters long.
              The default value for an ad-hoc meeting is the user's name if not specified.
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting agenda. The agenda can be a maximum of 1300 characters long.
            name: agenda
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting password. Must conform to the site's password complexity
              settings. Read password management for details. If not specified, a
              random password conforming to the site's password rules will be generated
              automatically.
            name: password
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Date and time for the start of meeting in any ISO 8601 compliant
              format. start cannot be before current date and time or after end. Duration
              between start and end cannot be shorter than 10 minutes or longer than
              24 hours. Please note that when a meeting is being scheduled, start
              of the meeting will be accurate to minutes, not seconds or milliseconds.
              Therefore, if start is within the same minute as the current time, start
              will be adjusted to the upcoming minute; otherwise, start will be adjusted
              with seconds and milliseconds stripped off. For instance, if the current
              time is 2022-03-01T10:32:16.657+08:00, start of 2022-03-01T10:32:28.076+08:00
              or 2022-03-01T10:32:41+08:00 will be adjusted to 2022-03-01T10:33:00+08:00,
              and start of 2022-03-01T11:32:28.076+08:00 or 2022-03-01T11:32:41+08:00
              will be adjusted to 2022-03-01T11:32:00+08:00. The default value for
              an ad-hoc meeting is 5 minutes after the current time and the user's
              input value will be ignored. An ad-hoc meeting can be started immediately
              even if the start is 5 minutes after the current time.
            name: start
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Date and time for the end of meeting in any ISO 8601 compliant format.
              end cannot be before current date and time or before start. Duration
              between start and end cannot be shorter than 10 minutes or longer than
              24 hours. Please note that when a meeting is being scheduled, end of
              the meeting will be accurate to minutes, not seconds or milliseconds.
              Therefore, end will be adjusted with seconds and milliseconds stripped
              off. For instance, end of 2022-03-01T11:52:28.076+08:00 or 2022-03-01T11:52:41+08:00
              will be adjusted to 2022-03-01T11:52:00+08:00. The default value for
              an ad-hoc meeting is 20 minutes after the current time and the user's
              input value will be ignored.
            name: end
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Time zone in which the meeting was originally scheduled (conforming
              with the IANA time zone database). The default value for an ad-hoc meeting
              is UTC and the user's input value will be ignored.
            name: timezone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting series recurrence rule (conforming with RFC 2445), applying
              only to meeting series. It doesn't apply to a scheduled meeting or an
              ended or ongoing meeting instance. This parameter is ignored for an
              ad-hoc meeting. Multiple days or dates for monthly or yearly recurrence
              rule are not supported, only the first day or date specified is taken.
              For example, "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10,11,12"
              is not supported and it will be partially supported as "FREQ=MONTHLY;INTERVAL=1;COUNT=10;BYMONTHDAY=10".
            name: recurrence
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not meeting is recorded automatically.
            name: enabledAutoRecordMeeting
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee with a host account on the target
              site to become a cohost when joining the meeting. The target site is
              specified by siteUrl parameter when creating the meeting; if not specified,
              it's the user's preferred site. The default value for an ad-hoc meeting
              is true and the user's input value will be ignored.
            name: allowAnyUserToBeCoHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to join the meeting before the
              host joins the meeting. The default value for an ad-hoc meeting is true
              and the user's input value will be ignored.
            name: enabledJoinBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow any attendee to connect audio in the meeting
              before the host joins the meeting. This attribute is only applicable
              if the enabledJoinBeforeHost attribute is set to true. The default value
              for an ad-hoc meeting is true and the user's input value will be ignored.
            name: enableConnectAudioBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: the number of minutes an attendee can join the meeting before the
              meeting start time and the host joins. This attribute is only applicable
              if the enabledJoinBeforeHost attribute is set to true. Valid options
              are 0, 5, 10 and 15. Default is 0 if not specified. The default value
              for an ad-hoc meeting is 0 and the user's input value will be ignored.
            name: joinBeforeHostMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Whether or not to exclude the meeting password from the email invitation.
              This parameter is ignored for an ad-hoc meeting.
            name: excludePassword
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow the meeting to be listed on the public calendar.
              The default value for an ad-hoc meeting is false and the user's input
              value will be ignored.
            name: publicMeeting
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The number of minutes before the meeting begins, that an email reminder
              is sent to the host. This parameter is ignored for an ad-hoc meeting.
            name: reminderTime
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Specifies how the people who aren't on the invite can join the unlocked
              meeting. The default value for an ad-hoc meeting is allowJoinWithLobby
              and the user's input value will be ignored.
            name: unlockedMeetingJoinSecurity
            param_attrs:
            - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoin,
                people can join the unlocked meeting directly.
              name: allowJoin
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of unlockedMeetingJoinSecurity attribute is allowJoinWithLobby,
                people will wait in the lobby until the host admits them.
              name: allowJoinWithLobby
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value of unlockedMeetingJoinSecurity attribute is blockFromJoin,
                people can't join the unlocked meeting.
              name: blockFromJoin
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Unique identifier for a meeting session type for the user. This attribute
              is required when scheduling a webinar meeting. All available meeting
              session types enabled for the user can be retrieved using the List Meeting
              Session Types API.
            name: sessionTypeId
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: When set as an attribute in a POST request body, specifies whether
              it's a regular meeting, a webinar, or a meeting scheduled in the user's
              personal room. If not specified, it's a regular meeting by default.
              The default value for an ad-hoc meeting is meeting and the user's input
              value will be ignored.
            name: scheduledType
            param_attrs:
            - doc: Set the value of scheduledType attribute to meeting for creating
                a regular meeting.
              name: meeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Set the value of scheduledType attribute to webinar for creating
                a webinar meeting.
              name: webinar
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Set the value of scheduledType attribute to personalRoomMeeting
                for creating a meeting in the user's personal room. Please note that
                templateId, roomId, integrationTags, enabledWebcastView, enabledAutoRecordMeeting
                and registration are not supported when creating a personal room meeting.
              name: personalRoomMeeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not webcast view is enabled. This parameter is ignored
              for an ad-hoc meeting.
            name: enabledWebcastView
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Password for panelists of a webinar meeting. Must conform to the
              site's password complexity settings. Read password management for details.
              If not specified, a random password conforming to the site's password
              rules will be generated automatically. This parameter is ignored for
              an ad-hoc meeting.
            name: panelistPassword
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not to automatically lock the meeting after it starts.
              The default value for an ad-hoc meeting is false and the user's input
              value will be ignored.
            name: enableAutomaticLock
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The number of minutes after the meeting begins, for automatically
              locking it. The default value for an ad-hoc meeting is null and the
              user's input value will be ignored.
            name: automaticLockMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Whether or not to allow the first attendee of the meeting with a
              host account on the target site to become a cohost. The target site
              is specified by siteUrl parameter when creating the meeting; if not
              specified, it's user's preferred site. The default value for an ad-hoc
              meeting is false and the user's input value will be ignored.
            name: allowFirstUserToBeCoHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not to allow authenticated video devices in the meeting's
              organization to start or join the meeting without a prompt. The default
              value for an ad-hoc meeting is true and the user's input value will
              be ignored.
            name: allowAuthenticatedDevices
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Invitees for meeting. The maximum size of invitees is 1000. If roomId
              is specified and invitees is missing, all the members in the space are
              invited implicitly. If both roomId and invitees are specified, only
              those in the invitees list are invited. coHost for each invitee is true
              by default if roomId is specified when creating a meeting, and anyone
              in the invitee list that is not qualified to be a cohost will be invited
              as a non-cohost invitee. The user's input value will be ignored for
              an ad-hoc meeting and the the members of the room specified by roomId
              except "me" will be used by default.
            name: invitees
            param_attrs:
            - doc: Email address of meeting invitee.
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Display name of meeting invitee. The maximum length of displayName
                is 128 characters. If not specified but the email has been registered,
                user's registered name for the email will be taken as displayName.
                If not specified and the email hasn't been registered, the email will
                be taken as displayName.
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Whether or not invitee is allowed to be a cohost for the meeting.
                coHost for each invitee is true by default if roomId is specified
                when creating a meeting, and anyone in the invitee list that is not
                qualified to be a cohost will be invited as a non-cohost invitee.
              name: coHost
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not an invitee is allowed to be a panelist. Only applies
                to webinars.
              name: panelist
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[InviteeObjectForCreateMeeting]
            type_spec: null
          - doc: Whether or not to send emails to host and invitees. It is an optional
              field and default value is true. The default value for an ad-hoc meeting
              is false and the user's input value will be ignored.
            name: sendEmail
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Email address for the meeting host. This attribute should only be
              set if the user or application calling the API has the admin-level scopes.
              When used, the admin may specify the email of a user in a site they
              manage to be the meeting host.
            name: hostEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: URL of the Webex site which the meeting is created on. If not specified,
              the meeting is created on user's preferred site. All available Webex
              sites and preferred site of the user can be retrieved by Get Site List
              API.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting Options.
            name: meetingOptions
            param_attrs: []
            param_object:
            - doc: Whether or not to allow any attendee to chat in the meeting. Also
                depends on the session type.
              name: enabledChat
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to have video in the meeting.
                Also depends on the session type.
              name: enabledVideo
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to poll in the meeting. Can
                only be set true for a webinar. The value of this attribute depends
                on the session type for a meeting. Please contact your site admin
                if this attribute is not available.
              name: enabledPolling
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to take notes in the meeting.
                The value of this attribute also depends on the session type.
              name: enabledNote
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether note taking is enabled. If the value of enabledNote is
                false, users can not set this attribute and get default value allowAll.
              name: noteType
              param_attrs:
              - doc: If the value of noteType attribute is allowAll, all participants
                  can take notes.
                name: allowAll
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the value of noteType attribute is allowOne, only a single
                  note taker is allowed.
                name: allowOne
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Whether or not to allow any attendee to have closed captions in
                the meeting. The value of this attribute also depends on the session
                type.
              name: enabledClosedCaptions
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to transfer files in the meeting.
                The value of this attribute also depends on the session type.
              name: enabledFileTransfer
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to share Universal Communications
                Format media files in the meeting. The value of this attribute also
                depends on the sessionType.
              name: enabledUCFRichMedia
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Attendee Privileges.
            name: attendeePrivileges
            param_attrs: []
            param_object:
            - doc: Whether or not to allow any attendee to share content in the meeting.
              name: enabledShareContent
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to save shared documents,
                slides, or whiteboards when they are shared as files in the content
                viewer instead of in a window or application.
              name: enabledSaveDocument
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to print shared documents,
                slides, or whiteboards when they are shared as files in the content
                viewer instead of in a window or application.
              name: enabledPrintDocument
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to annotate shared documents,
                slides, or whiteboards when they are shared as files in the content
                viewer instead of in a window or application.
              name: enabledAnnotate
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to view participants.
              name: enabledViewParticipantList
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to see a small preview image
                of any page of shared documents or slides when they are shared as
                files in the content viewer instead of in a window or application.
              name: enabledViewThumbnails
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to control applications, web
                browsers, or desktops remotely.
              name: enabledRemoteControl
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to view any shared documents
                or slides when they are shared as files in the content viewer instead
                of in a window or application.
              name: enabledViewAnyDocument
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to scroll through any page
                of shared documents or slides when they are shared as files in the
                content viewer instead of in a window or application.
              name: enabledViewAnyPage
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to contact the operator privately.
              name: enabledContactOperatorPrivately
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to chat with the host in private.
              name: enabledChatHost
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to chat with the presenter
                in private.
              name: enabledChatPresenter
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow any attendee to chat with other participants
                in private.
              name: enabledChatOtherParticipants
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Meeting registration. When this option is enabled, meeting invitees
              must register personal information to join the meeting. Meeting invitees
              will receive an email with a registration link for the registration.
              When the registration form has been submitted and approved, an email
              with a real meeting link will be received. By clicking that link the
              meeting invitee can join the meeting. Please note that meeting registration
              does not apply to a meeting when it's a recurring meeting with a recurrence
              field or no password, or the Join Before Host option is enabled for
              the meeting. See Register for a Meeting in Cisco Webex Meetings for
              details. This parameter is ignored for an ad-hoc meeting.
            name: registration
            param_attrs: []
            param_object:
            - doc: Whether or not meeting registration request is accepted automatically.
              name: autoAcceptRequest
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's first name is required for meeting
                registration. This option must always be true.
              name: requireFirstName
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's last name is required for meeting
                registration. This option must always be true.
              name: requireLastName
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's email is required for meeting registration.
                This option must always be true.
              name: requireEmail
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's job title is shown or required for
                meeting registration.
              name: requireJobTitle
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's company name is shown or required
                for meeting registration.
              name: requireCompanyName
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's first address field is shown or required
                for meeting registration.
              name: requireAddress1
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's second address field is shown or
                required for meeting registration.
              name: requireAddress2
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's city is shown or required for meeting
                registration.
              name: requireCity
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's state is shown or required for meeting
                registration.
              name: requireState
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's postal code is shown or required
                for meeting registration.
              name: requireZipCode
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's country or region is shown or required
                for meeting registration.
              name: requireCountryRegion
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's work phone number is shown or required
                for meeting registration.
              name: requireWorkPhone
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not a registrant's fax number is shown or required for
                meeting registration.
              name: requireFax
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Maximum number of meeting registrations. This only applies to meetings.
                The maximum number of participants for meetings and webinars, with
                the limit based on the user capacity and controlled by a toggle at
                the site level. The default maximum number of participants for webinars
                is 10000, but the actual maximum number of participants is limited
                by the user capacity.
              name: maxRegisterNum
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Customized questions for meeting registration.
              name: customizedQuestions
              param_attrs:
              - doc: Title of the customized question.
                name: question
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Whether or not the customized question is required to be answered
                  by participants.
                name: required
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Type of the question being asked.
                name: type
                param_attrs:
                - doc: Single line text box.
                  name: singleLineTextBox
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Multiple line text box.
                  name: multiLineTextBox
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Check box which requires options.
                  name: checkbox
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Drop down list box which requires options.
                  name: dropdownList
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Single radio button which requires options.
                  name: radioButtons
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              - doc: The maximum length of a string that can be entered by the user,
                  ranging from 0 to 999. Only required by singleLineTextBox and multiLineTextBox.
                name: maxLength
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: 'The content of options. Required if the question type is one
                  of checkbox, dropdownList, or radioButtons.

                  The content of the option.

                  Possible values: green'
                name: options
                param_attrs: []
                param_object: []
                type: array[object]
                type_spec: null
              - doc: The automatic approval rules for customized questions.
                name: rules
                param_attrs:
                - doc: 'Judgment expression for approval rules.

                    Possible values: contains, notContains, beginsWith, endsWith,
                    equals, notEquals'
                  name: condition
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: 'The keyword for the approval rule. If the rule matches the
                    keyword, the corresponding action will be executed.

                    Possible values: tom'
                  name: value
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: 'The automatic approval result for the approval rule.

                    Possible values: approve, reject'
                  name: result
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: 'Whether to check the case of values.

                    Possible values: '
                  name: matchCase
                  param_attrs: []
                  param_object: []
                  type: boolean
                  type_spec: null
                param_object: []
                type: array[object]
                type_spec: null
              param_object: []
              type: array[CustomizedQuestionForCreateMeeting]
              type_spec: null
            - doc: The approval rules for standard questions.
              name: rules
              param_attrs:
              - doc: Name for standard question.
                name: question
                param_attrs:
                - doc: If the value is lastName, this approval rule applies to the
                    standard question of "Last Name".
                  name: lastName
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the value is email, this approval rule applies to the standard
                    question of "Email".
                  name: email
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the value is jobTitle, this approval rule applies to the
                    standard question of "Job Title".
                  name: jobTitle
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the value is companyName, this approval rule applies to
                    the standard question of "Company Name".
                  name: companyName
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the value is address1, this approval rule applies to the
                    standard question of "Address 1".
                  name: address1
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the value is address2, this approval rule applies to the
                    standard question of "Address 2".
                  name: address2
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the value is city, this approval rule applies to the standard
                    question of "City".
                  name: city
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the value is state, this approval rule applies to the standard
                    question of "State".
                  name: state
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the value is zipCode, this approval rule applies to the
                    standard question of "Zip/Post Code".
                  name: zipCode
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the value is countryRegion, this approval rule applies to
                    the standard question of "Country Region".
                  name: countryRegion
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the value is workPhone, this approval rule applies to the
                    standard question of "Work Phone".
                  name: workPhone
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the value is fax, this approval rule applies to the standard
                    question of "Fax".
                  name: fax
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              - doc: Judgment expression for approval rules.
                name: condition
                param_attrs:
                - doc: The content of the answer contains the value.
                  name: contains
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The content of the answer does not contain the value
                  name: notContains
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The content of the answer begins with the value.
                  name: beginsWith
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The content of the answer ends with the value.
                  name: endsWith
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The content of the answer is the same as the value.
                  name: equals
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The content of the answer is not the same as the value.
                  name: notEquals
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              - doc: The keyword for the approval rule. If the rule matches the keyword,
                  the corresponding action will be executed.
                name: value
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The automatic approval result for the approval rule.
                name: result
                param_attrs:
                - doc: If the user's registration value meets the criteria, the registration
                    form will be automatically approved.
                  name: approve
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: If the user's registration value meets the criteria, the registration
                    form will be automatically rejected.
                  name: reject
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              - doc: Whether to check the case of values.
                name: matchCase
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: The priority number of the approval rule. Approval rules for
                  standard questions and custom questions need to be ordered together.
                name: order
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: array[StandardRegistrationApproveRule]
              type_spec: null
            type: object
            type_spec: null
          - doc: External keys created by an integration application in its own domain,
              for example Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
              etc. The integration application queries meetings by a key in its own
              domain. The maximum size of integrationTags is 3 and each item of integrationTags
              can be a maximum of 64 characters long. This parameter is ignored for
              an ad-hoc meeting.
            name: integrationTags
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Simultaneous interpretation information for a meeting.
            name: simultaneousInterpretation
            param_attrs: []
            param_object:
            - doc: Whether or not simultaneous interpretation is enabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Interpreters for meeting.
              name: interpreters
              param_attrs:
              - doc: Forms a set of simultaneous interpretation channels together
                  with languageCode2. Standard language format from ISO 639-1 code.
                  Read ISO 639-1 for details.
                name: languageCode1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Forms a set of simultaneous interpretation channels together
                  with languageCode1. Standard language format from ISO 639-1 code.
                  Read ISO 639-1 for details.
                name: languageCode2
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Email address of meeting interpreter.
                name: email
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Display name of meeting interpreter.
                name: displayName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[InterpreterObjectForSimultaneousInterpretationOfCreateOrUpdateMeeting]
              type_spec: null
            type: object
            type_spec: null
          - doc: Whether or not breakout sessions are enabled.
            name: enabledBreakoutSessions
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Breakout sessions are smaller groups that are split off from the
              main meeting or webinar. They allow a subset of participants to collaborate
              and share ideas over audio and video. Use breakout sessions for workshops,
              classrooms, or for when you need a moment to talk privately with a few
              participants outside of the main session. Please note that maximum number
              of breakout sessions in a meeting or webinar is 100. In webinars, if
              hosts preassign attendees to breakout sessions, the role of attendee
              will be changed to panelist. Breakout session is not supported for a
              meeting with simultaneous interpretation.
            name: breakoutSessions
            param_attrs:
            - doc: Name for breakout session.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Invitees for breakout session. Please note that one invitee cannot
                be assigned to more than one breakout session.
              name: invitees
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: array[BreakoutSessionObject]
            type_spec: null
          - doc: Tracking codes information. All available tracking codes and their
              options for the specified site can be retrieved by List Meeting Tracking
              Codes API. If an optional tracking code is missing from the trackingCodes
              array and there's a default option for this tracking code, the default
              option is assigned automatically. If the inputMode of a tracking code
              is select, its value must be one of the site-level options or the user-level
              value. Tracking code is not supported for a personal room meeting or
              an ad-hoc space meeting.
            name: trackingCodes
            param_attrs:
            - doc: Name of the tracking code. The name cannot be empty and the maximum
                size is 120 characters.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Value for the tracking code. value cannot be empty and the maximum
                size is 120 characters.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[TrackingCodeItemForCreateMeetingObject]
            type_spec: null
          - doc: Audio connection options.
            name: audioConnectionOptions
            param_attrs: []
            param_object:
            - doc: Choose how meeting attendees join the audio portion of the meeting.
              name: audioConnectionType
              param_attrs:
              - doc: Provide a hybrid audio option, allowing attendees to join using
                  their computer audio or a phone.
                name: webexAudio
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Only restricts attendees to join the audio portion of the meeting
                  using their computer instead of a telephone option.
                name: VoIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Other teleconference services.
                name: other
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The way of attendees join the audio portion of the meeting is
                  the default value.
                name: none
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Whether or not to show toll-free call-in numbers.
              name: enabledTollFreeCallIn
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to show global call-in numbers to attendees.
              name: enabledGlobalCallIn
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow attendees to receive a call-back and call-in
                is available. Can only be set true for a webinar.
              name: enabledAudienceCallBack
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Select the sound you want users who have a phone audio connection
                to hear when someone enters or exits the meeting.
              name: entryAndExitTone
              param_attrs:
              - doc: All call-in users joining the meeting will hear the beep.
                name: beep
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: All call-in users joining the meeting will hear their names.
                name: announceName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Turn off beeps and name announcements.
                name: noTone
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Whether or not to allow the host to unmute participants.
              name: allowHostToUnmuteParticipants
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to allow attendees to unmute themselves.
              name: allowAttendeeToUnmuteSelf
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Whether or not to auto-mute attendees when attendees enter meetings.
              name: muteAttendeeUponEntry
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: CreateMeetingObject
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting template being requested.
          name: templateId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Get the meeting control of a live meeting, which is consisted of meeting
        control status on "locked" and "recording" to reflect whether the meeting
        is currently locked and there is recording in progress.
      documentation:
        doc: Get Meeting Control Status
        doc_link: https://developer.webex.com/docs/api/v1/meetings/get-meeting-control-status
        endpoint: https://webexapis.com/v1/meetings/controls
        http_method: GET
      header: Get Meeting Control Status
      parameters_and_response:
        Query Parameters:
        - doc: Unique identifier for the meeting. Does not support meeting IDs for
            a scheduled personal room meeting.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Whether the meeting is locked or not.
          name: locked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The value can be true or false, it indicates the meeting recording
            started or not.
          name: recordingStarted
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The value can be true or false, it indicates the meeting recording
            paused or not.
          name: recordingPaused
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
    - doc: To start, pause, resume, or stop a meeting recording; To lock or unlock
        an on-going meeting.
      documentation:
        doc: Update Meeting Control Status
        doc_link: https://developer.webex.com/docs/api/v1/meetings/update-meeting-control-status
        endpoint: https://webexapis.com/v1/meetings/controls
        http_method: PUT
      header: Update Meeting Control Status
      parameters_and_response:
        Body Parameters:
        - doc: The value can be true or false. true means to start the recording,
            false to end the recording.
          name: recordingStarted
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The value can be true or false, will be ignored if 'recordingStarted'
            sets to false, and true to resume the recording only if the recording
            is paused vise versa.
          name: recordingPaused
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The value is true or false.
          name: locked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: Unique identifier for the meeting. Does not support meeting IDs for
            a scheduled personal room meeting.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Whether the meeting is locked or not.
          name: locked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The value can be true or false, it indicates the meeting recording
            started or not.
          name: recordingStarted
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The value can be true or false, it indicates the meeting recording
            paused or not.
          name: recordingPaused
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
    - doc: List all the meeting session types enabled for a given user.
      documentation:
        doc: List Meeting Session Types
        doc_link: https://developer.webex.com/docs/api/v1/meetings/list-meeting-session-types
        endpoint: https://webexapis.com/v1/meetings/sessionTypes
        http_method: GET
      header: List Meeting Session Types
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will list all the meeting session types enabled for the user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Webex site URL to query. If siteUrl is not specified, the users' preferred
            site will be used. If the authorization token has the admin-level scopes,
            the admin can set the Webex site URL on behalf of the user specified in
            the hostEmail parameter.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Meeting session type array
          name: items
          param_attrs:
          - doc: Unique identifier for the meeting session type.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the meeting session type.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting session type.
            name: type
            param_attrs:
            - doc: Meeting session type for a meeting.
              name: meeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Meeting session type for a webinar.
              name: webinar
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Meeting session type for a private meeting.
              name: privateMeeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The maximum number of attendees for the meeting session type.
            name: attendeesCapacity
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: array[MeetingSessionTypeObject]
          type_spec: null
    - doc: Retrieves details for a meeting session type with a specified session type
        ID.
      documentation:
        doc: Get a Meeting Session Type
        doc_link: https://developer.webex.com/docs/api/v1/meetings/get-a-meeting-session-type
        endpoint: https://webexapis.com/v1/meetings/sessionTypes/{sessionTypeId}
        http_method: GET
      header: Get a Meeting Session Type
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the user. This parameter is only used if the user
            or application calling the API has the admin-level scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will get a meeting session type with the specified session type ID enabled
            for the user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Webex site URL to query. If siteUrl is not specified, the users' preferred
            site will be used. If the authorization token has the admin-level scopes,
            the admin can set the Webex site URL on behalf of the user specified in
            the hostEmail parameter.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for the meeting session type.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the meeting session type.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting session type.
          name: type
          param_attrs:
          - doc: Meeting session type for a meeting.
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting session type for a webinar.
            name: webinar
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting session type for a private meeting.
            name: privateMeeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The maximum number of attendees for the meeting session type.
          name: attendeesCapacity
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the sessionType.
          name: sessionTypeId
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
    - doc: Get a meeting's registration form to understand which fields are required.
      documentation:
        doc: Get registration form for a meeting
        doc_link: https://developer.webex.com/docs/api/v1/meetings/get-registration-form-for-a-meeting
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/registration
        http_method: GET
      header: Get registration form for a meeting
      parameters_and_response:
        Query Parameters:
        - doc: Whether or not to retrieve only the current scheduled meeting of the
            meeting series, i.e. the meeting ready to join or start or the upcoming
            meeting of the meeting series. If it's true, return details for the current
            scheduled meeting of the series, i.e. the scheduled meeting ready to join
            or start or the upcoming scheduled meeting of the meeting series. If it's
            false or not specified, return details for the entire meeting series.
            This parameter only applies to meeting series.
          name: current
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Whether or not a registrant's first name is required for meeting registration.
            This option must always be true.
          name: requireFirstName
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's last name is required for meeting registration.
            This option must always be true.
          name: requireLastName
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's email is required for meeting registration.
            This option must always be true.
          name: requireEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's job title is shown or required for meeting
            registration.
          name: requireJobTitle
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's company name is shown or required for
            meeting registration.
          name: requireCompanyName
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's first address field is shown or required
            for meeting registration.
          name: requireAddress1
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's second address field is shown or required
            for meeting registration.
          name: requireAddress2
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's city is shown or required for meeting
            registration.
          name: requireCity
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's state is shown or required for meeting
            registration.
          name: requireState
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's postal code is shown or required for
            meeting registration.
          name: requireZipCode
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's country or region is shown or required
            for meeting registration.
          name: requireCountryRegion
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's work phone number is shown or required
            for meeting registration.
          name: requireWorkPhone
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's fax number is shown or required for meeting
            registration.
          name: requireFax
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Customized questions for meeting registration.
          name: customizedQuestions
          param_attrs:
          - doc: Unique identifier for the question.
            name: id
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Title of the customized question.
            name: question
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the customized question is required to be answered
              by participants.
            name: required
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Type of the question being asked.
            name: type
            param_attrs:
            - doc: Single line text box.
              name: singleLineTextBox
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Multiple line text box.
              name: multiLineTextBox
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Check box which requires options.
              name: checkbox
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Drop down list box which requires options.
              name: dropdownList
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Single radio button which requires options.
              name: radioButtons
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The maximum length of a string that can be entered by the user, ranging
              from 0 to 999. Only required by singleLineTextBox and multiLineTextBox.
            name: maxLength
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: TThe content of options. Required if the question type is one of
              checkbox, dropdownList, or radioButtons.
            name: options
            param_attrs:
            - doc: 'The unique id of options.

                Possible values: 1'
              name: id
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: 'The content of the option.

                Possible values: green'
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: The automatic approval rules for customized questions.
            name: rules
            param_attrs:
            - doc: 'Judgment expression for approval rules.

                Possible values: contains, notContains, beginsWith, endsWith, equals,
                notEquals'
              name: condition
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The keyword for the approval rule. If the rule matches the keyword,
                the corresponding action will be executed.

                Possible values: tom'
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The automatic approval result for the approval rule.

                Possible values: approve, reject'
              name: result
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Whether to check the case of values.

                Possible values: '
              name: matchCase
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: 'The priority number of the approval rule. Approval rules for standard
                questions and custom questions need to be ordered together.

                Possible values: 1'
              name: order
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          param_object: []
          type: array[CustomizedQuestionForGetMeeting]
          type_spec: null
        - doc: The approval rules for standard questions.
          name: rules
          param_attrs:
          - doc: Name for standard question.
            name: question
            param_attrs:
            - doc: If the value is lastName, this approval rule applies to the standard
                question of "Last Name".
              name: lastName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is email, this approval rule applies to the standard
                question of "Email".
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is jobTitle, this approval rule applies to the standard
                question of "Job Title".
              name: jobTitle
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is companyName, this approval rule applies to the
                standard question of "Company Name".
              name: companyName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is address1, this approval rule applies to the standard
                question of "Address 1".
              name: address1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is address2, this approval rule applies to the standard
                question of "Address 2".
              name: address2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is city, this approval rule applies to the standard
                question of "City".
              name: city
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is state, this approval rule applies to the standard
                question of "State".
              name: state
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is zipCode, this approval rule applies to the standard
                question of "Zip/Post Code".
              name: zipCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is countryRegion, this approval rule applies to the
                standard question of "Country Region".
              name: countryRegion
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is workPhone, this approval rule applies to the standard
                question of "Work Phone".
              name: workPhone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is fax, this approval rule applies to the standard
                question of "Fax".
              name: fax
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Judgment expression for approval rules.
            name: condition
            param_attrs:
            - doc: The content of the answer contains the value.
              name: contains
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer does not contain the value
              name: notContains
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer begins with the value.
              name: beginsWith
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer ends with the value.
              name: endsWith
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer is the same as the value.
              name: equals
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer is not the same as the value.
              name: notEquals
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The keyword for the approval rule. If the rule matches the keyword,
              the corresponding action will be executed.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The automatic approval result for the approval rule.
            name: result
            param_attrs:
            - doc: If the user's registration value meets the criteria, the registration
                form will be automatically approved.
              name: approve
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the user's registration value meets the criteria, the registration
                form will be automatically rejected.
              name: reject
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether to check the case of values.
            name: matchCase
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The priority number of the approval rule. Approval rules for standard
              questions and custom questions need to be ordered together.
            name: order
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: array[StandardRegistrationApproveRule]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the ID of the meeting series
            is supported for meetingId. IDs of scheduled meetings, meeting instances,
            or scheduled personal room meetings are not supported. See the Meetings
            Overview for more information about meeting types.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Enable or update a registration form for a meeting.
      documentation:
        doc: Update Meeting Registration Form
        doc_link: https://developer.webex.com/docs/api/v1/meetings/update-meeting-registration-form
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/registration
        http_method: PUT
      header: Update Meeting Registration Form
      parameters_and_response:
        Body Parameters:
        - doc: '* Email address for the meeting host. This parameter is only used
            if the user or application calling the API has the admin-level scopes.
            If set, the admin may specify the email of a user in a site they manage
            and the API will return an update for a meeting that is hosted by that
            user.'
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not a registrant's first name is required for meeting registration.
            This option must always be true.
          name: requireFirstName
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's last name is required for meeting registration.
            This option must always be true.
          name: requireLastName
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's email is required for meeting registration.
            This option must always be true.
          name: requireEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's job title is shown or required for meeting
            registration.
          name: requireJobTitle
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's company name is shown or required for
            meeting registration.
          name: requireCompanyName
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's first address field is shown or required
            for meeting registration.
          name: requireAddress1
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's second address field is shown or required
            for meeting registration.
          name: requireAddress2
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's city is shown or required for meeting
            registration.
          name: requireCity
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's state is shown or required for meeting
            registration.
          name: requireState
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's postal code is shown or required for
            meeting registration.
          name: requireZipCode
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's country or region is shown or required
            for meeting registration.
          name: requireCountryRegion
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's work phone number is shown or required
            for meeting registration.
          name: requireWorkPhone
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's fax number is shown or required for meeting
            registration.
          name: requireFax
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Maximum number of meeting registrations. This only applies to meetings.
            The maximum number of participants for meetings and webinars, with the
            limit based on the user capacity and controlled by a toggle at the site
            level. The default maximum number of participants for webinars is 10000,
            but the actual maximum number of participants is limited by the user capacity.
          name: maxRegisterNum
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Customized questions for meeting registration.
          name: customizedQuestions
          param_attrs:
          - doc: Title of the customized question.
            name: question
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Whether or not the customized question is required to be answered
              by participants.
            name: required
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Type of the question being asked.
            name: type
            param_attrs:
            - doc: Single line text box.
              name: singleLineTextBox
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Multiple line text box.
              name: multiLineTextBox
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Check box which requires options.
              name: checkbox
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Drop down list box which requires options.
              name: dropdownList
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Single radio button which requires options.
              name: radioButtons
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: The maximum length of a string that can be entered by the user, ranging
              from 0 to 999. Only required by singleLineTextBox and multiLineTextBox.
            name: maxLength
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: 'The content of options. Required if the question type is one of
              checkbox, dropdownList, or radioButtons.

              The content of the option.'
            name: options
            param_attrs: []
            param_object: []
            type: array[object]
            type_spec: null
          - doc: The automatic approval rules for customized questions.
            name: rules
            param_attrs:
            - doc: Judgment expression for approval rules.
              name: condition
              param_attrs:
              - doc: The content of the answer contains the value.
                name: contains
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer does not contain the value
                name: notContains
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer begins with the value.
                name: beginsWith
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer ends with the value.
                name: endsWith
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer is the same as the value.
                name: equals
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The content of the answer is not the same as the value.
                name: notEquals
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: The keyword for the approval rule. If the rule matches the keyword,
                the corresponding action will be executed.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: The automatic approval result for the approval rule.
              name: result
              param_attrs:
              - doc: If the user's registration value meets the criteria, the registration
                  form will be automatically approved.
                name: approve
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: If the user's registration value meets the criteria, the registration
                  form will be automatically rejected.
                name: reject
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Whether to check the case of values.
              name: matchCase
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          param_object: []
          type: array[CustomizedQuestionForCreateMeeting]
          type_spec: null
        - doc: The approval rule for standard questions.
          name: rules
          param_attrs:
          - doc: Name for standard question.
            name: question
            param_attrs:
            - doc: If the value is lastName, this approval rule applies to the standard
                question of "Last Name".
              name: lastName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is email, this approval rule applies to the standard
                question of "Email".
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is jobTitle, this approval rule applies to the standard
                question of "Job Title".
              name: jobTitle
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is companyName, this approval rule applies to the
                standard question of "Company Name".
              name: companyName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is address1, this approval rule applies to the standard
                question of "Address 1".
              name: address1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is address2, this approval rule applies to the standard
                question of "Address 2".
              name: address2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is city, this approval rule applies to the standard
                question of "City".
              name: city
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is state, this approval rule applies to the standard
                question of "State".
              name: state
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is zipCode, this approval rule applies to the standard
                question of "Zip/Post Code".
              name: zipCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is countryRegion, this approval rule applies to the
                standard question of "Country Region".
              name: countryRegion
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is workPhone, this approval rule applies to the standard
                question of "Work Phone".
              name: workPhone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is fax, this approval rule applies to the standard
                question of "Fax".
              name: fax
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Judgment expression for approval rules.
            name: condition
            param_attrs:
            - doc: The content of the answer contains the value.
              name: contains
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer does not contain the value
              name: notContains
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer begins with the value.
              name: beginsWith
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer ends with the value.
              name: endsWith
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer is the same as the value.
              name: equals
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer is not the same as the value.
              name: notEquals
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: The keyword for the approval rule. If the rule matches the keyword,
              the corresponding action will be executed.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: The automatic approval result for the approval rule.
            name: result
            param_attrs:
            - doc: If the user's registration value meets the criteria, the registration
                form will be automatically approved.
              name: approve
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the user's registration value meets the criteria, the registration
                form will be automatically rejected.
              name: reject
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Whether to check the case of values.
            name: matchCase
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The priority number of the approval rule. Approval rules for standard
              questions and custom questions need to be ordered together.
            name: order
            param_attrs: []
            param_object: []
            type: number
            type_spec: required
          param_object: []
          type: array[StandardRegistrationApproveRule]
          type_spec: null
        Response Properties:
        - doc: Whether or not a registrant's first name is required for meeting registration.
            This option must always be true.
          name: requireFirstName
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's last name is required for meeting registration.
            This option must always be true.
          name: requireLastName
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's email is required for meeting registration.
            This option must always be true.
          name: requireEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's job title is shown or required for meeting
            registration.
          name: requireJobTitle
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's company name is shown or required for
            meeting registration.
          name: requireCompanyName
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's first address field is shown or required
            for meeting registration.
          name: requireAddress1
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's second address field is shown or required
            for meeting registration.
          name: requireAddress2
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's city is shown or required for meeting
            registration.
          name: requireCity
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's state is shown or required for meeting
            registration.
          name: requireState
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's postal code is shown or required for
            meeting registration.
          name: requireZipCode
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's country or region is shown or required
            for meeting registration.
          name: requireCountryRegion
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's work phone number is shown or required
            for meeting registration.
          name: requireWorkPhone
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not a registrant's fax number is shown or required for meeting
            registration.
          name: requireFax
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Customized questions for meeting registration.
          name: customizedQuestions
          param_attrs:
          - doc: Unique identifier for the question.
            name: id
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Title of the customized question.
            name: question
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the customized question is required to be answered
              by participants.
            name: required
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Type of the question being asked.
            name: type
            param_attrs:
            - doc: Single line text box.
              name: singleLineTextBox
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Multiple line text box.
              name: multiLineTextBox
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Check box which requires options.
              name: checkbox
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Drop down list box which requires options.
              name: dropdownList
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Single radio button which requires options.
              name: radioButtons
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The maximum length of a string that can be entered by the user, ranging
              from 0 to 999. Only required by singleLineTextBox and multiLineTextBox.
            name: maxLength
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: TThe content of options. Required if the question type is one of
              checkbox, dropdownList, or radioButtons.
            name: options
            param_attrs:
            - doc: 'The unique id of options.

                Possible values: 1'
              name: id
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: 'The content of the option.

                Possible values: green'
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: The automatic approval rules for customized questions.
            name: rules
            param_attrs:
            - doc: 'Judgment expression for approval rules.

                Possible values: contains, notContains, beginsWith, endsWith, equals,
                notEquals'
              name: condition
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The keyword for the approval rule. If the rule matches the keyword,
                the corresponding action will be executed.

                Possible values: tom'
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The automatic approval result for the approval rule.

                Possible values: approve, reject'
              name: result
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'Whether to check the case of values.

                Possible values: '
              name: matchCase
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: 'The priority number of the approval rule. Approval rules for standard
                questions and custom questions need to be ordered together.

                Possible values: 1'
              name: order
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          param_object: []
          type: array[CustomizedQuestionForGetMeeting]
          type_spec: null
        - doc: The approval rules for standard questions.
          name: rules
          param_attrs:
          - doc: Name for standard question.
            name: question
            param_attrs:
            - doc: If the value is lastName, this approval rule applies to the standard
                question of "Last Name".
              name: lastName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is email, this approval rule applies to the standard
                question of "Email".
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is jobTitle, this approval rule applies to the standard
                question of "Job Title".
              name: jobTitle
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is companyName, this approval rule applies to the
                standard question of "Company Name".
              name: companyName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is address1, this approval rule applies to the standard
                question of "Address 1".
              name: address1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is address2, this approval rule applies to the standard
                question of "Address 2".
              name: address2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is city, this approval rule applies to the standard
                question of "City".
              name: city
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is state, this approval rule applies to the standard
                question of "State".
              name: state
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is zipCode, this approval rule applies to the standard
                question of "Zip/Post Code".
              name: zipCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is countryRegion, this approval rule applies to the
                standard question of "Country Region".
              name: countryRegion
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is workPhone, this approval rule applies to the standard
                question of "Work Phone".
              name: workPhone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the value is fax, this approval rule applies to the standard
                question of "Fax".
              name: fax
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Judgment expression for approval rules.
            name: condition
            param_attrs:
            - doc: The content of the answer contains the value.
              name: contains
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer does not contain the value
              name: notContains
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer begins with the value.
              name: beginsWith
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer ends with the value.
              name: endsWith
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer is the same as the value.
              name: equals
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The content of the answer is not the same as the value.
              name: notEquals
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The keyword for the approval rule. If the rule matches the keyword,
              the corresponding action will be executed.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The automatic approval result for the approval rule.
            name: result
            param_attrs:
            - doc: If the user's registration value meets the criteria, the registration
                form will be automatically approved.
              name: approve
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If the user's registration value meets the criteria, the registration
                form will be automatically rejected.
              name: reject
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether to check the case of values.
            name: matchCase
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The priority number of the approval rule. Approval rules for standard
              questions and custom questions need to be ordered together.
            name: order
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: array[StandardRegistrationApproveRule]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the ID of the meeting series
            is supported for meetingId. IDs of scheduled meetings, meeting instances,
            or scheduled personal room meetings are not supported. See the Meetings
            Overview for more information about meeting types.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Disable the registration form for a meeting.
      documentation:
        doc: Delete Meeting Registration Form
        doc_link: https://developer.webex.com/docs/api/v1/meetings/delete-meeting-registration-form
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/registration
        http_method: DELETE
      header: Delete Meeting Registration Form
      parameters_and_response:
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the ID of the meeting series
            is supported for meetingId. IDs of scheduled meetings, meeting instances,
            or scheduled personal room meetings are not supported. See the Meetings
            Overview for more information about meeting types.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Register a new registrant for a meeting.
      documentation:
        doc: Register a Meeting Registrant
        doc_link: https://developer.webex.com/docs/api/v1/meetings/register-a-meeting-registrant
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/registrants
        http_method: POST
      header: Register a Meeting Registrant
      parameters_and_response:
        Body Parameters:
        - doc: The registrant's first name.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The registrant's last name. (Required)
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The registrant's email.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'If true send email to the registrant. Default: true.'
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The registrant's job title. Registration options define whether or
            not this is required.
          name: jobTitle
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The registrant's company. Registration options define whether or not
            this is required.
          name: companyName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The registrant's first address line. Registration options define whether
            or not this is required.
          name: address1
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The registrant's second address line. Registration options define whether
            or not this is required.
          name: address2
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The registrant's city name. Registration options define whether or
            not this is required.
          name: city
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The registrant's state. Registration options define whether or not
            this is required.
          name: state
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The registrant's postal code. Registration options define whether or
            not this is required.
          name: zipCode
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The America is not a country or a specific region. Registration options
            define whether or not this is required.
          name: countryRegion
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The registrant's work phone number. Registration options define whether
            or not this is required.
          name: workPhone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The registrant's FAX number. Registration options define whether or
            not this is required.
          name: fax
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The registrant's answers for customized questions. Registration options
            define whether or not this is required.
          name: customizedQuestions
          param_attrs:
          - doc: Unique identifier for the customized questions retrieved from the
              registration form.
            name: questionId
            param_attrs: []
            param_object: []
            type: number
            type_spec: required
          - doc: The answers for customized questions. If the question type is checkbox,
              more than one answer can be set.
            name: answers
            param_attrs:
            - doc: Unique identifier for the option.
              name: optionId
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The content of the answer or the option for this question.
              name: answer
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            param_object: []
            type: array[AnswerForCustomizedQuestion]
            type_spec: required
          param_object: []
          type: array[CustomizedRegistrant]
          type_spec: null
        Query Parameters:
        - doc: Whether or not to retrieve only the current scheduled meeting of the
            meeting series, i.e. the meeting ready to join or start or the upcoming
            meeting of the meeting series. If it's true, return details for the current
            scheduled meeting of the series, i.e. the scheduled meeting ready to join
            or start or the upcoming scheduled meeting of the meeting series. If it's
            false or not specified, return details for the entire meeting series.
            This parameter only applies to meeting series.
          name: current
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: New registrant's ID.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: New registrant's status.
          name: status
          param_attrs:
          - doc: Registrant has been approved.
            name: approved
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant is in a pending list waiting for host or cohost approval.
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant has been rejected by the host or cohost.
            name: rejected
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Registrant's first name.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's last name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's email.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's job title.
          name: jobTitle
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's company.
          name: companyName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's first address line.
          name: address1
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's second address line.
          name: address2
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's city name.
          name: city
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's state.
          name: state
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's postal code.
          name: zipCode
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Registrant's country or region.
          name: countryRegion
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's work phone number.
          name: workPhone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's FAX number.
          name: fax
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's registration time.
          name: registrationTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's answers for customized questions, Registration options
            define whether or not this is required.
          name: customizedQuestions
          param_attrs:
          - doc: Unique identifier for the customized questions retrieved from the
              registration form.
            name: questionId
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The answers for customized questions. If the question type is checkbox,
              more than one answer can be set.
            name: answers
            param_attrs:
            - doc: Unique identifier for the option.
              name: optionId
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The content of the answer or the option for this question.
              name: answer
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[AnswerForCustomizedQuestion]
            type_spec: null
          param_object: []
          type: array[CustomizedRegistrant]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the ID of the meeting series
            is supported for meetingId. IDs of scheduled meetings, meeting instances,
            or scheduled personal room meetings are not supported. See the Meetings
            Overview for more information about meeting types.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Bulk register new registrants for a meeting.
      documentation:
        doc: Batch register Meeting Registrants
        doc_link: https://developer.webex.com/docs/api/v1/meetings/batch-register-meeting-registrants
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/registrants/bulkInsert
        http_method: POST
      header: Batch register Meeting Registrants
      parameters_and_response:
        Body Parameters:
        - doc: Registrants array.
          name: items
          param_attrs:
          - doc: The registrant's first name.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: The registrant's last name. (Required)
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: The registrant's email.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: 'If true send email to the registrant. Default: true.'
            name: sendEmail
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The registrant's job title. Registration options define whether or
              not this is required.
            name: jobTitle
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The registrant's company. Registration options define whether or
              not this is required.
            name: companyName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The registrant's first address line. Registration options define
              whether or not this is required.
            name: address1
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The registrant's second address line. Registration options define
              whether or not this is required.
            name: address2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The registrant's city name. Registration options define whether or
              not this is required.
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The registrant's state. Registration options define whether or not
              this is required.
            name: state
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The registrant's postal code. Registration options define whether
              or not this is required.
            name: zipCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The America is not a country or a specific region. Registration options
              define whether or not this is required.
            name: countryRegion
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The registrant's work phone number. Registration options define whether
              or not this is required.
            name: workPhone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The registrant's FAX number. Registration options define whether
              or not this is required.
            name: fax
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The registrant's answers for customized questions. Registration options
              define whether or not this is required.
            name: customizedQuestions
            param_attrs:
            - doc: Unique identifier for the customized questions retrieved from the
                registration form.
              name: questionId
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: The answers for customized questions. If the question type is checkbox,
                more than one answer can be set.
              name: answers
              param_attrs: []
              param_object: []
              type: array[AnswerForCustomizedQuestion]
              type_spec: required
            param_object: []
            type: array[CustomizedRegistrant]
            type_spec: null
          param_object: []
          type: array[RegistrantFormObject]
          type_spec: null
        Query Parameters:
        - doc: Whether or not to retrieve only the current scheduled meeting of the
            meeting series, i.e. the meeting ready to join or start or the upcoming
            meeting of the meeting series. If it's true, return details for the current
            scheduled meeting of the series, i.e. the scheduled meeting ready to join
            or start or the upcoming scheduled meeting of the meeting series. If it's
            false or not specified, return details for the entire meeting series.
            This parameter only applies to meeting series.
          name: current
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: New registrant's ID.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: New registrant's status.
            name: status
            param_attrs:
            - doc: Registrant has been approved.
              name: approved
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Registrant is in a pending list waiting for host or cohost approval.
              name: pending
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Registrant has been rejected by the host or cohost.
              name: rejected
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Registrant's first name.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's last name.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's email.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's job title.
            name: jobTitle
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's company.
            name: companyName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's first address line.
            name: address1
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's second address line.
            name: address2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's city name.
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's state.
            name: state
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's postal code.
            name: zipCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Registrant's country or region.
            name: countryRegion
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's work phone number.
            name: workPhone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's FAX number.
            name: fax
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's registration time.
            name: registrationTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's answers for customized questions, Registration options
              define whether or not this is required.
            name: customizedQuestions
            param_attrs:
            - doc: Unique identifier for the customized questions retrieved from the
                registration form.
              name: questionId
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The answers for customized questions. If the question type is checkbox,
                more than one answer can be set.
              name: answers
              param_attrs:
              - doc: Unique identifier for the option.
                name: optionId
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: The content of the answer or the option for this question.
                name: answer
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[AnswerForCustomizedQuestion]
              type_spec: null
            param_object: []
            type: array[CustomizedRegistrant]
            type_spec: null
          param_object: []
          type: array[RegistrantCreateResponse]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the ID of the meeting series
            is supported for meetingId. IDs of scheduled meetings, meeting instances,
            or scheduled personal room meetings are not supported. See the Meetings
            Overview for more information about meeting types.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Retrieves details for a meeting registrant with a specified registrant
        Id.
      documentation:
        doc: Get Detailed Information for a Meeting Registrant
        doc_link: https://developer.webex.com/docs/api/v1/meetings/get-detailed-information-for-a-meeting-registrant
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/registrants/{registrantId}
        http_method: GET
      header: Get Detailed Information for a Meeting Registrant
      parameters_and_response:
        Query Parameters:
        - doc: Whether or not to retrieve only the current scheduled meeting of the
            meeting series, i.e. the meeting ready to join or start or the upcoming
            meeting of the meeting series. If it's true, return details for the current
            scheduled meeting of the series, i.e. the scheduled meeting ready to join
            or start or the upcoming scheduled meeting of the meeting series. If it's
            false or not specified, return details for the entire meeting series.
            This parameter only applies to meeting series.
          name: current
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: New registrant's ID.
          name: registrantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: New registrant's status.
          name: status
          param_attrs:
          - doc: Registrant has been approved.
            name: approved
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant is in a pending list waiting for host or cohost approval.
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant has been rejected by the host or cohost.
            name: rejected
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Registrant's first name.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's last name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's email.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's job title.
          name: jobTitle
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's company.
          name: companyName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's first address line.
          name: address1
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's second address line.
          name: address2
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's city name.
          name: city
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's state.
          name: state
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's postal code.
          name: zipCode
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Registrant's country or region.
          name: countryRegion
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's work phone number.
          name: workPhone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's FAX number.
          name: fax
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's registration time.
          name: registrationTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Registrant's answers for customized questions, Registration options
            define whether or not this is required.
          name: customizedQuestions
          param_attrs:
          - doc: Unique identifier for the customized questions retrieved from the
              registration form.
            name: questionId
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The answers for customized questions. If the question type is checkbox,
              more than one answer can be set.
            name: answers
            param_attrs:
            - doc: Unique identifier for the option.
              name: optionId
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The content of the answer or the option for this question.
              name: answer
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[AnswerForCustomizedQuestion]
            type_spec: null
          param_object: []
          type: array[CustomizedRegistrant]
          type_spec: null
        - doc: Registrant's source id.The sourceId is from Create Invitation Sources
            API.
          name: sourceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the ID of the meeting series
            is supported for meetingId. IDs of scheduled meetings, meeting instances,
            or scheduled personal room meetings are not supported. See the Meetings
            Overview for more information about meeting types.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique identifier for the registrant
          name: registrantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Meeting's host and cohost can retrieve the list of registrants for a meeting
        with a specified meeting Id.
      documentation:
        doc: List Meeting Registrants
        doc_link: https://developer.webex.com/docs/api/v1/meetings/list-meeting-registrants
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/registrants
        http_method: GET
      header: List Meeting Registrants
      parameters_and_response:
        Query Parameters:
        - doc: Limit the maximum number of registrants in the response, up to 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not to retrieve only the current scheduled meeting of the
            meeting series, i.e. the meeting ready to join or start or the upcoming
            meeting of the meeting series. If it's true, return details for the current
            scheduled meeting of the series, i.e. the scheduled meeting ready to join
            or start or the upcoming scheduled meeting of the meeting series. If it's
            false or not specified, return details for the entire meeting series.
            This parameter only applies to meeting series.
          name: current
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Registrant's email to filter registrants.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time registrants register a meeting starts from the specified date
            and time (inclusive) in any ISO 8601 compliant format. If registrationTimeFrom
            is not specified, it equals registrationTimeTo minus 7 days.
          name: registrationTimeFrom
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time registrants register a meeting before the specified date and
            time (exclusive) in any ISO 8601 compliant format. If registrationTimeTo
            is not specified, it equals registrationTimeFrom plus 7 days. The interval
            between registrationTimeFrom and registrationTimeTo must be within 90
            days.
          name: registrationTimeTo
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Registrants array.
          name: items
          param_attrs:
          - doc: New registrant's ID.
            name: registrantId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: New registrant's status.
            name: status
            param_attrs:
            - doc: Registrant has been approved.
              name: approved
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Registrant is in a pending list waiting for host or cohost approval.
              name: pending
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Registrant has been rejected by the host or cohost.
              name: rejected
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Registrant's first name.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's last name.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's email.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's job title.
            name: jobTitle
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's company.
            name: companyName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's first address line.
            name: address1
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's second address line.
            name: address2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's city name.
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's state.
            name: state
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's postal code.
            name: zipCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Registrant's country or region.
            name: countryRegion
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's work phone number.
            name: workPhone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's FAX number.
            name: fax
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's registration time.
            name: registrationTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's answers for customized questions, Registration options
              define whether or not this is required.
            name: customizedQuestions
            param_attrs:
            - doc: Unique identifier for the customized questions retrieved from the
                registration form.
              name: questionId
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The answers for customized questions. If the question type is checkbox,
                more than one answer can be set.
              name: answers
              param_attrs:
              - doc: Unique identifier for the option.
                name: optionId
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: The content of the answer or the option for this question.
                name: answer
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[AnswerForCustomizedQuestion]
              type_spec: null
            param_object: []
            type: array[CustomizedRegistrant]
            type_spec: null
          - doc: Registrant's source id.The sourceId is from Create Invitation Sources
              API.
            name: sourceId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Registrant]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the ID of the meeting series
            is supported for meetingId. IDs of scheduled meetings, meeting instances,
            or scheduled personal room meetings are not supported. See the Meetings
            Overview for more information about meeting types.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Meeting's host and cohost can query the list of registrants for a meeting
        with a specified meeting ID and registrants email.
      documentation:
        doc: Query Meeting Registrants
        doc_link: https://developer.webex.com/docs/api/v1/meetings/query-meeting-registrants
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/registrants/query
        http_method: POST
      header: Query Meeting Registrants
      parameters_and_response:
        Body Parameters:
        - doc: Registrant's status.
          name: status
          param_attrs:
          - doc: Registrant has been approved.
            name: approved
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant is in a pending list waiting for host or cohost approval.
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant has been rejected by the host or cohost.
            name: rejected
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Sort order for the registrants.
          name: orderType
          param_attrs:
          - doc: ''
            name: DESC
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: ASC
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Registrant ordering field. Ordered by registrationTime by default.
          name: orderBy
          param_attrs:
          - doc: Registrant's first name.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's last name.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's status.
            name: status
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: registrant's email.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: 'List of registrant email addresses.

            Possible values: bob@example.com'
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        Query Parameters:
        - doc: Limit the maximum number of registrants in the response, up to 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not to retrieve only the current scheduled meeting of the
            meeting series, i.e. the meeting ready to join or start or the upcoming
            meeting of the meeting series. If it's true, return details for the current
            scheduled meeting of the series, i.e. the scheduled meeting ready to join
            or start or the upcoming scheduled meeting of the meeting series. If it's
            false or not specified, return details for the entire meeting series.
            This parameter only applies to meeting series.
          name: current
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Registrants array.
          name: items
          param_attrs:
          - doc: New registrant's ID.
            name: registrantId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: New registrant's status.
            name: status
            param_attrs:
            - doc: Registrant has been approved.
              name: approved
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Registrant is in a pending list waiting for host or cohost approval.
              name: pending
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Registrant has been rejected by the host or cohost.
              name: rejected
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Registrant's first name.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's last name.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's email.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's job title.
            name: jobTitle
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's company.
            name: companyName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's first address line.
            name: address1
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's second address line.
            name: address2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's city name.
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's state.
            name: state
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's postal code.
            name: zipCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Registrant's country or region.
            name: countryRegion
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's work phone number.
            name: workPhone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's FAX number.
            name: fax
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's registration time.
            name: registrationTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registrant's answers for customized questions, Registration options
              define whether or not this is required.
            name: customizedQuestions
            param_attrs:
            - doc: Unique identifier for the customized questions retrieved from the
                registration form.
              name: questionId
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The answers for customized questions. If the question type is checkbox,
                more than one answer can be set.
              name: answers
              param_attrs:
              - doc: Unique identifier for the option.
                name: optionId
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: The content of the answer or the option for this question.
                name: answer
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[AnswerForCustomizedQuestion]
              type_spec: null
            param_object: []
            type: array[CustomizedRegistrant]
            type_spec: null
          - doc: Registrant's source id.The sourceId is from Create Invitation Sources
              API.
            name: sourceId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Registrant]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the ID of the meeting series
            is supported for meetingId. IDs of scheduled meetings, meeting instances,
            or scheduled personal room meetings are not supported. See the Meetings
            Overview for more information about meeting types.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Meeting's host or cohost can update the set of registrants for a meeting.
        cancel means the registrant(s) will be moved back to the registration list.
        bulkDelete means the registrant(s) will be deleted.
      documentation:
        doc: Batch Update Meeting Registrants status
        doc_link: https://developer.webex.com/docs/api/v1/meetings/batch-update-meeting-registrants-status
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/registrants/{statusOpType}
        http_method: POST
      header: Batch Update Meeting Registrants status
      parameters_and_response:
        Body Parameters:
        - doc: 'If true send email to registrants. Default: true.'
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: 'Registrants array.

            Registrant ID.'
          name: registrants
          param_attrs: []
          param_object: []
          type: array[Registrants]
          type_spec: null
        Query Parameters:
        - doc: "Whether or not to retrieve only the current scheduled meeting of the\
            \ meeting series, i.e. the meeting ready to join or start or the upcoming\
            \ meeting of the meeting series. If it's true, return details for the\
            \ current scheduled meeting of the series, i.e. the scheduled meeting\
            \ ready to join or start or the upcoming scheduled meeting of the meeting\
            \ series. If it's false or not specified, return details for the entire\
            \ meeting series. This parameter only applies to meeting series.\n   \
            \ + Default: false"
          name: current
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the ID of the meeting series
            is supported for meetingId. IDs of scheduled meetings, meeting instances,
            or scheduled personal room meetings are not supported. See the Meetings
            Overview for more information about meeting types.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Update registrant''s status.

            Possible values: approve, reject, cancel, bulkDelete'
          name: statusOpType
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Meeting's host or cohost can delete a registrant with a specified registrant
        ID.
      documentation:
        doc: Delete a Meeting Registrant
        doc_link: https://developer.webex.com/docs/api/v1/meetings/delete-a-meeting-registrant
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/registrants/{registrantId}
        http_method: DELETE
      header: Delete a Meeting Registrant
      parameters_and_response:
        Query Parameters:
        - doc: Whether or not to retrieve only the current scheduled meeting of the
            meeting series, i.e. the meeting ready to join or start or the upcoming
            meeting of the meeting series. If it's true, return details for the current
            scheduled meeting of the series, i.e. the scheduled meeting ready to join
            or start or the upcoming scheduled meeting of the meeting series. If it's
            false or not specified, return details for the entire meeting series.
            This parameter only applies to meeting series.
          name: current
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the ID of the meeting series
            is supported for meetingId. IDs of scheduled meetings, meeting instances,
            or scheduled personal room meetings are not supported. See the Meetings
            Overview for more information about meeting types.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique identifier for the registrant.
          name: registrantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Updates simultaneous interpretation options of a meeting with a specified
        meeting ID. This operation applies to meeting series and scheduled meetings.
        It doesn't apply to ended or in-progress meeting instances.
      documentation:
        doc: Update Meeting Simultaneous interpretation
        doc_link: https://developer.webex.com/docs/api/v1/meetings/update-meeting-simultaneous-interpretation
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/simultaneousInterpretation
        http_method: PUT
      header: Update Meeting Simultaneous interpretation
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not simultaneous interpretation is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Interpreters for meeting.
          name: interpreters
          param_attrs:
          - doc: Forms a set of simultaneous interpretation channels together with
              languageCode2. Standard language format from ISO 639-1 code. Read ISO
              639-1 for details.
            name: languageCode1
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Forms a set of simultaneous interpretation channels together with
              languageCode1. Standard language format from ISO 639-1 code. Read ISO
              639-1 for details.
            name: languageCode2
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Email address of meeting interpreter.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of meeting interpreter.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[InterpreterObjectForSimultaneousInterpretationOfCreateOrUpdateMeeting]
          type_spec: null
        Response Properties:
        - doc: Whether or not simultaneous interpretation is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Interpreters for meeting.
          name: interpreters
          param_attrs:
          - doc: Unique identifier for meeting interpreter.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Forms a set of simultaneous interpretation channels together with
              languageCode2. Standard language format from ISO 639-1 code. Read ISO
              639-1 for details.
            name: languageCode1
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Forms a set of simultaneous interpretation channels together with
              languageCode1. Standard language format from ISO 639-1 code. Read ISO
              639-1 for details.
            name: languageCode2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address of meeting interpreter.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of meeting interpreter.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[InterpreterObjectForSimultaneousInterpretationOfGetOrListMeeting]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Does not support meeting IDs for
            a scheduled personal room meeting.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Assign an interpreter to a bi-directional simultaneous interpretation language
        channel for a meeting.
      documentation:
        doc: Create a Meeting Interpreter
        doc_link: https://developer.webex.com/docs/api/v1/meetings/create-a-meeting-interpreter
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/interpreters
        http_method: POST
      header: Create a Meeting Interpreter
      parameters_and_response:
        Body Parameters:
        - doc: The pair of languageCode1 and languageCode2 form a bi-directional simultaneous
            interpretation language channel. The language codes conform with ISO 639-1.
          name: languageCode1
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The pair of languageCode1 and languageCode2 form a bi-directional simultaneous
            interpretation language channel. The language codes conform with ISO 639-1.
          name: languageCode2
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Email address of meeting interpreter. If not specified, an empty interpreter
            will be created for this bi-directional language channel, and a specific
            email can be assigned to this empty interpreter by Update a Meeting Interpreter
            API later. Please note that multiple interpreters with different emails
            can be assigned to the same bi-directional language channel, but the same
            email cannot be assigned to more than one interpreter.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name of meeting interpreter. If the interpreter is already
            an invitee of the meeting and it has a different display name, that invitee's
            display name will be overwritten by this attribute.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the meeting host. This attribute should only be set
            if the user or application calling the API has the admin on-behalf-of
            scopes. When used, the admin may specify the email of a user in a site
            they manage to be the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: If true, send email to the interpreter.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: Unique identifier for meeting interpreter.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The pair of languageCode1 and languageCode2 form a bi-directional simultaneous
            interpretation language channel. The language codes conform with ISO 639-1.
          name: languageCode1
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The pair of languageCode1 and languageCode2 form a bi-directional simultaneous
            interpretation language channel. The language codes conform with ISO 639-1.
          name: languageCode2
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address of meeting interpreter.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name of meeting interpreter.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting to which the interpreter is to be
            assigned.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Retrieves details for a meeting interpreter identified by meetingId and
        interpreterId in the URI.
      documentation:
        doc: Get a Meeting Interpreter
        doc_link: https://developer.webex.com/docs/api/v1/meetings/get-a-meeting-interpreter
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/interpreters/{interpreterId}
        http_method: GET
      header: Get a Meeting Interpreter
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin on-behalf-of scopes.
            If set, the admin may specify the email of a user in a site they manage
            and the API will return details for an interpreter of the meeting that
            is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for meeting interpreter.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The pair of languageCode1 and languageCode2 form a bi-directional simultaneous
            interpretation language channel. The language codes conform with ISO 639-1.
          name: languageCode1
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The pair of languageCode1 and languageCode2 form a bi-directional simultaneous
            interpretation language channel. The language codes conform with ISO 639-1.
          name: languageCode2
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address of meeting interpreter.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name of meeting interpreter.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting to which the interpreter has been
            assigned.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique identifier for the interpreter whose details are being requested.
          name: interpreterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Lists meeting interpreters for a meeting with a specified meetingId.

        This operation can be used for meeting series, scheduled meeting and ended
        or ongoing meeting instance objects. If the specified meetingId is for a meeting
        series, the interpreters for the series will be listed; if the meetingId is
        for a scheduled meeting, the interpreters for the particular scheduled meeting
        will be listed; if the meetingId is for an ended or ongoing meeting instance,
        the interpreters for the particular meeting instance will be listed. See the
        Webex Meetings guide for more information about the types of meetings.

        The list returned is sorted in descending order by when interpreters were
        created.'
      documentation:
        doc: List Meeting Interpreters
        doc_link: https://developer.webex.com/docs/api/v1/meetings/list-meeting-interpreters
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/interpreters
        http_method: GET
      header: List Meeting Interpreters
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin on-behalf-of scopes.
            If set, the admin may specify the email of a user in a site they manage
            and the API will return interpreters of the meeting that is hosted by
            that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of meeting interpreters.
          name: items
          param_attrs:
          - doc: Unique identifier for meeting interpreter.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The pair of languageCode1 and languageCode2 form a bi-directional
              simultaneous interpretation language channel. The language codes conform
              with ISO 639-1.
            name: languageCode1
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The pair of languageCode1 and languageCode2 form a bi-directional
              simultaneous interpretation language channel. The language codes conform
              with ISO 639-1.
            name: languageCode2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address of meeting interpreter.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of meeting interpreter.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[GetInterpreterObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting for which interpreters are being
            requested. The meeting can be meeting series, scheduled meeting or meeting
            instance which has ended or is ongoing. Please note that currently meeting
            ID of a scheduled personal room meeting is not supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Updates details for a meeting interpreter identified by meetingId and interpreterId
        in the URI.
      documentation:
        doc: Update a Meeting Interpreter
        doc_link: https://developer.webex.com/docs/api/v1/meetings/update-a-meeting-interpreter
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/interpreters/{interpreterId}
        http_method: PUT
      header: Update a Meeting Interpreter
      parameters_and_response:
        Body Parameters:
        - doc: The pair of languageCode1 and languageCode2 form a bi-directional simultaneous
            interpretation language channel. The language codes conform with ISO 639-1.
          name: languageCode1
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The pair of languageCode1 and languageCode2 form a bi-directional simultaneous
            interpretation language channel. The language codes conform with ISO 639-1.
          name: languageCode2
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Email address of meeting interpreter. If not specified, it'll be an
            empty interpreter for the bi-directional language channel. Please note
            that multiple interpreters with different emails can be assigned to the
            same bi-directional language channel, but the same email cannot be assigned
            to more than one interpreter.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name of meeting interpreter. If the interpreter is already
            an invitee of the meeting and it has a different display name, that invitee's
            display name will be overwritten by this attribute.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the meeting host. This attribute should only be set
            if the user or application calling the API has the admin on-behalf-of
            scopes. When used, the admin may specify the email of a user in a site
            they manage to be the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: If true, send email to the interpreter.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: Unique identifier for meeting interpreter.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The pair of languageCode1 and languageCode2 form a bi-directional simultaneous
            interpretation language channel. The language codes conform with ISO 639-1.
          name: languageCode1
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The pair of languageCode1 and languageCode2 form a bi-directional simultaneous
            interpretation language channel. The language codes conform with ISO 639-1.
          name: languageCode2
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address of meeting interpreter.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name of meeting interpreter.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting whose interpreters were belong to.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique identifier for the interpreter whose details are being requested.
          name: interpreterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Removes a meeting interpreter identified by meetingId and interpreterId
        in the URI. The deleted meeting interpreter cannot be recovered.
      documentation:
        doc: Delete a Meeting Interpreter
        doc_link: https://developer.webex.com/docs/api/v1/meetings/delete-a-meeting-interpreter
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/interpreters/{interpreterId}
        http_method: DELETE
      header: Delete a Meeting Interpreter
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin on-behalf-of scopes.
            If set, the admin may specify the email of a user in a site they manage
            and the API will delete an interpreter of the meeting that is hosted by
            that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: If true, send email to the interpreter.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting whose interpreters were belong to.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique identifier for the interpreter to be removed.
          name: interpreterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Updates breakout sessions of a meeting with a specified meeting ID in the
        pre-meeting state. This operation applies to meeting series and scheduled
        meetings.
      documentation:
        doc: Update Meeting Breakout Sessions
        doc_link: https://developer.webex.com/docs/api/v1/meetings/update-meeting-breakout-sessions
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/breakoutSessions
        http_method: PUT
      header: Update Meeting Breakout Sessions
      parameters_and_response:
        Body Parameters:
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin-level scopes. If
            set, the admin may specify the email of a user in a site they manage and
            the API will return details for a meeting that is hosted by that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not to send emails to host and invitees. It is an optional
            field and default value is true.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Breakout sessions are smaller groups that are split off from the main
            meeting or webinar. They allow a subset of participants to collaborate
            and share ideas over audio and video. Use breakout sessions for workshops,
            classrooms, or for when you need a moment to talk privately with a few
            participants outside of the main session. Please note that maximum number
            of breakout sessions in a meeting or webinar is 100. In webinars, if hosts
            preassign attendees to breakout sessions, the role of attendee will be
            changed to panelist. Breakout session is not supported for a meeting with
            simultaneous interpretation.
          name: items
          param_attrs:
          - doc: Name for breakout session.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Invitees for breakout session. Please note that one invitee cannot
              be assigned to more than one breakout session.
            name: invitees
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          param_object: []
          type: array[BreakoutSessionObject]
          type_spec: null
        Response Properties:
        - doc: Breakout Sessions information for meeting.
          name: items
          param_attrs:
          - doc: Unique identifier for breakout session.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name for breakout session.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Invitees for breakout session.
            name: invitees
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          param_object: []
          type: array[GetBreakoutSessionObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Does not support meeting IDs for
            a scheduled personal room meeting.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Lists meeting breakout sessions for a meeting with a specified meetingId.

        This operation can be used for meeting series, scheduled meeting and ended
        or ongoing meeting instance objects. See the Webex Meetings guide for more
        information about the types of meetings.'
      documentation:
        doc: List Meeting Breakout Sessions
        doc_link: https://developer.webex.com/docs/api/v1/meetings/list-meeting-breakout-sessions
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/breakoutSessions
        http_method: GET
      header: List Meeting Breakout Sessions
      parameters_and_response:
        Response Properties:
        - doc: Breakout Sessions information for meeting.
          name: items
          param_attrs:
          - doc: Unique identifier for breakout session.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name for breakout session.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Invitees for breakout session.
            name: invitees
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          param_object: []
          type: array[GetBreakoutSessionObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. This parameter applies to meeting
            series, scheduled meeting and ended or ongoing meeting instance objects.
            Please note that currently meeting ID of a scheduled personal room meeting
            is not supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes breakout sessions with a specified meeting ID. The deleted breakout
        sessions cannot be recovered. The value of enabledBreakoutSessions attribute
        is set to false automatically.

        This operation applies to meeting series and scheduled meetings. It doesn''t
        apply to ended or in-progress meeting instances.'
      documentation:
        doc: Delete Meeting Breakout Sessions
        doc_link: https://developer.webex.com/docs/api/v1/meetings/delete-meeting-breakout-sessions
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/breakoutSessions
        http_method: DELETE
      header: Delete Meeting Breakout Sessions
      parameters_and_response:
        Query Parameters:
        - doc: Whether or not to send emails to host and invitees. It is an optional
            field and default value is true.
          name: sendEmail
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. This parameter applies to meeting
            series and scheduled meetings. It doesn't apply to ended or in-progress
            meeting instances.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Retrieves details for a meeting survey identified by meetingId.
      documentation:
        doc: Get a Meeting Survey
        doc_link: https://developer.webex.com/docs/api/v1/meetings/get-a-meeting-survey
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/survey
        http_method: GET
      header: Get a Meeting Survey
      parameters_and_response:
        Response Properties:
        - doc: Unique identifier for the survey.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name for the survey.
          name: surveyName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the meeting.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Description for the survey.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether the survey allows attendees to submit anonymously.
          name: allowAnonymousSubmit
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Questions for the survey.
          name: questions
          param_attrs:
          - doc: Unique identifier for the question.
            name: id
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Details for the question.
            name: question
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type for the question.
            name: type
            param_attrs:
            - doc: Text input.
              name: text
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Rating.
              name: rating
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Check box which requires options.
              name: checkbox
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Drop down list box which requires options.
              name: singleDropdown
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Single radio button which requires options.
              name: singleRadio
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The lowest score of the rating question. This attribute will be ingnored,
              if the value of type attribute is not rating.
            name: fromScore
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The lowest score label of the rating question. This attribute will
              be ingnored, if the value of type attribute is not rating.
            name: fromLabel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The highest score of the rating question. This attribute will be
              ingnored, if the value of type attribute is not rating.
            name: toScore
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The highest score label of the rating question. This attribute will
              be ingnored, if the value of type attribute is not rating.
            name: toLabel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Options for the question. This attribute will be ingnored, if the
              value of type attribute is text or rating.
            name: options
            param_attrs:
            - doc: Unique identifier for the question option.
              name: id
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Value for the question option.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[QuestionOptionObject]
            type_spec: null
          param_object: []
          type: array[QuestionObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Please note that only the meeting
            ID of a scheduled webinar is supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Retrieves results for a meeting survey identified by meetingId.
      documentation:
        doc: List Meeting Survey Results
        doc_link: https://developer.webex.com/docs/api/v1/meetings/list-meeting-survey-results
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/surveyResults
        http_method: GET
      header: List Meeting Survey Results
      parameters_and_response:
        Query Parameters:
        - doc: 'Start date and time (inclusive) in any ISO 8601 compliant format for
            the meeting objects being requested. meetingStartTimeFrom cannot be after
            meetingStartTimeTo. This parameter will be ignored if meetingId is the
            unique identifier for the specific meeting instance.

            When meetingId is not the unique identifier for the specific meeting instance,
            the meetingStartTimeFrom, if not specified, equals meetingStartTimeTo
            minus 1 month; if meetingStartTimeTo is also not specified, the default
            value for meetingStartTimeFrom is 1 month before the current date and
            time.'
          name: meetingStartTimeFrom
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'End date and time (exclusive) in any ISO 8601 compliant format for
            the meeting objects being requested. meetingStartTimeTo cannot be prior
            to meetingStartTimeFrom. This parameter will be ignored if meetingId is
            the unique identifier for the specific meeting instance.

            When meetingId is not the unique identifier for the specific meeting instance,
            if meetingStartTimeFrom is also not specified, the default value for meetingStartTimeTo
            is the current date and time;For example,if meetingStartTimeFrom is a
            month ago, the default value for meetingStartTimeTo is 1 month after meetingStartTimeFrom.Otherwise
            it is the current date and time.'
          name: meetingStartTimeTo
          param_attrs: []
          param_object: []
          type: String
          type_spec: null
        - doc: Limit the maximum number of meetings in the response, up to 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: SurveyResult array
          name: items
          param_attrs:
          - doc: Unique identifier for the survey result.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name for the survey.
            name: surveyName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the meeting.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address of the user who submits the survey.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the user who submits the survey.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The time when the user submits the survey.
            name: createTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: User's answers for the questions
            name: questions
            param_attrs:
            - doc: Unique identifier for the question.
              name: id
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Details for the question.
              name: question
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Type for the question.
              name: type
              param_attrs:
              - doc: Text input.
                name: text
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Rating.
                name: rating
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Check box which requires options.
                name: checkbox
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Drop down list box which requires options.
                name: singleDropdown
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Single radio button which requires options.
                name: singleRadio
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The user's answers for the question.
              name: answers
              param_attrs:
              - doc: Unique identifier for the question option. This attribute will
                  be ingnored, if the value of type attribute is text or rating.
                name: optionId
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: The user's answers for the question.
                name: answer
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[QuestionAnswerObject]
              type_spec: null
            param_object: []
            type: array[QuestionWithAnswersObject]
            type_spec: null
          param_object: []
          type: array[SurveyResultObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Please note that only the meeting
            ID of a scheduled webinar is supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Creates one or more invitation sources for a meeting.
      documentation:
        doc: Create Invitation Sources
        doc_link: https://developer.webex.com/docs/api/v1/meetings/create-invitation-sources
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/invitationSources
        http_method: POST
      header: Create Invitation Sources
      parameters_and_response:
        Body Parameters:
        - doc: Email address for the meeting host. This parameter is only used if
            a user or application calling the API has the admin-level scopes. The
            admin may specify the email of a user on a site they manage and the API
            will return meeting participants of the meetings that are hosted by that
            user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the meeting host. Should only be set if the user
            or application calling the API has the admin-level scopes. When used,
            the admin may specify the email of a user in a site they manage to be
            the meeting host.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: items
          param_attrs:
          - doc: Source ID for the invitation.
            name: sourceId
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Email for invitation source.
            name: sourceEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: array[InvitationSourceCreateObject]
          type_spec: null
        Response Properties:
        - doc: Invitation source array.
          name: items
          param_attrs:
          - doc: Unique identifier for invitation source.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Source ID for invitation.
            name: sourceId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email for invitation source.
            name: sourceEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The link bound to sourceId can directly join the meeting.If the meeting
              requires registration,joinLink is not returned.
            name: joinLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The link bound to sourceId can directly register the meeting.If the
              meeting requires registration,registerLink is returned.
            name: registerLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[InvitationSourceObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the meeting ID of a scheduled
            webinar is supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Lists invitation sources for a meeting.
      documentation:
        doc: List Invitation Sources
        doc_link: https://developer.webex.com/docs/api/v1/meetings/list-invitation-sources
        endpoint: https://webexapis.com/v1/meetings/{meetingId}/invitationSources
        http_method: GET
      header: List Invitation Sources
      parameters_and_response:
        Response Properties:
        - doc: Invitation source array.
          name: items
          param_attrs:
          - doc: Unique identifier for invitation source.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Source ID for invitation.
            name: sourceId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email for invitation source.
            name: sourceEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The link bound to sourceId can directly join the meeting.If the meeting
              requires registration,joinLink is not returned.
            name: joinLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The link bound to sourceId can directly register the meeting.If the
              meeting requires registration,registerLink is returned.
            name: registerLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[InvitationSourceObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the meeting. Only the meeting ID of a scheduled
            webinar is supported for this API.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Lists tracking codes on a site by a meeting host. The result indicates
        which tracking codes and what options can be used to create or update a meeting
        on the specified site.
      documentation:
        doc: List Meeting Tracking Codes
        doc_link: https://developer.webex.com/docs/api/v1/meetings/list-meeting-tracking-codes
        endpoint: https://webexapis.com/v1/meetings/trackingCodes
        http_method: GET
      header: List Meeting Tracking Codes
      parameters_and_response:
        Query Parameters:
        - doc: URL of the Webex site which the API retrieves the tracking code from.
            If not specified, the API retrieves the tracking code from the user's
            preferred site. All available Webex sites and preferred sites of a user
            can be retrieved by Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Service for schedule or sign-up pages.
          name: service
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Email address for the meeting host. This parameter is only used if
            a user or application calling the API has the admin-level scopes. The
            admin may specify the email of a user on a site they manage and the API
            will return meeting participants of the meetings that are hosted by that
            user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for the tracking code.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name for the tracking code.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Site URL for the tracking code.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Tracking code option list. The options here differ from those in the
            site-level tracking codes and the user-level tracking codes. It is the
            result of a selective combination of the two. If there's user-level value
            for a tracking code, the user-level value becomes the default option for
            the tracking code, and the site-level default value becomes non-default.
          name: options
          param_attrs:
          - doc: The value of a tracking code option. value cannot be empty and the
              maximum size is 120 characters.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the option is the default option of a tracking code.
            name: defaultValue
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[OptionsForTrackingCodeObject]
          type_spec: null
        - doc: The input mode in which the tracking code value can be assigned.
          name: inputMode
          param_attrs:
          - doc: Text input.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Drop down list which requires options.
            name: select
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Both text input and select from list.
            name: editableSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An input method which is only available for the host profile and
              sign-up pages.
            name: hostProfileSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Service for schedule or sign up pages
          name: service
          param_attrs:
          - doc: Tracking codes apply to all services.
            name: All
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Users can set tracking codes when scheduling a meeting.
            name: MeetingCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Users can set tracking codes when scheduling an event.
            name: EventCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Users can set tracking codes when scheduling a training session.
            name: TrainingCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Users can set tracking codes when scheduling a support meeting.
            name: SupportCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Type for meeting scheduler or meeting start pages.
          name: type
          param_attrs:
          - doc: Available to be chosen but not compulsory.
            name: optional
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Officially compulsory.
            name: required
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value is set by admin.
            name: adminSet
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value cannot be used.
            name: notUsed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: This value only applies to the service of All. When the type of All
              for a tracking code is notApplicable, there are different types for
              different services. For example, required for MeetingCenter, optional
              for EventCenter and notUsed for others.
            name: notApplicable
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
    - doc: 'Reassigns a list of meetings to a new host by an admin user.

        All the meetings of meetingIds should belong to the same site, which is the
        siteUrl in the request header, if specified, or the admin user''s preferred
        site, if not specified. All available Webex sites and the preferred sites
        of a user can be retrieved by Get Site List API.

        If the user of hostEmail is not qualified to be a host of the target site,
        the API returns an error with the HTTP status code 403. If all the meetings
        referenced by meetingIds have been reassigned the new host successfully, the
        API returns an empty response with the HTTP status code 204. Otherwise, if
        all the meetings of meetingIds fail or some of them fail, the API returns
        a "Multi-Status" response with status code of 207, and individual errors for
        each meeting in the response body.

        Only IDs of meeting series are supported for the meetingIds. IDs of scheduled
        meetings, meeting instances, or scheduled personal room meetings are not supported.
        See the Meetings Overview for more information about the types of meetings.

        There are several limitations when reassigning meetings:'
      documentation:
        doc: Reassign Meetings to a New Host
        doc_link: https://developer.webex.com/docs/api/v1/meetings/reassign-meetings-to-a-new-host
        endpoint: https://webexapis.com/v1/meetings/reassignHost
        http_method: POST
      header: Reassign Meetings to a New Host
      parameters_and_response:
        Body Parameters:
        - doc: Email address of the new meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: List of meeting series IDs to be reassigned the new host. The size
            is between 1 and 100. All the meetings of meetingIds should belong to
            the same site, which is the siteUrl in the request header, if specified,
            or the admin user's preferred site, if not specified. All available Webex
            sites and the preferred sites of a user can be retrieved by Get Site List
            API.
          name: meetingIds
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        Response Properties:
        - doc: Array of meeting reassignment results.
          name: items
          param_attrs:
          - doc: Unique identifier for the meeting to be reassigned host.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: HTTP status code for the meeting reassignment result.
            name: httpStatus
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: General message for the host reassignment of meetingId if it fails.
            name: message
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Detailed descriptions for the host reassignment of meetingId if it
              fails.
            name: errors
            param_attrs:
            - doc: Detailed description for the host reassignment of meetingId if
                it fails.
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[ReassignMeetingErrorDescriptionObject]
            type_spec: null
          param_object: []
          type: array[ReassignMeetingResponseObject]
          type_spec: null
  Meetings Summary Report:
    doc: 'The meeting usage report API is used to retrieve aggregated meeting usage
      information, like totalCallInMinutes, totalParticipants, etc. It also includes
      the meeting trackingCodes.

      The meeting attendee report API is used to retrieve aggregated meeting attendee
      information, like joinedTime, leftTime, duration, etc.

      The report data for a meeting should be available within 24 hours after the
      meeting ended.

      Refer to the Meetings API Scopes section of Meetings Overview for scopes required
      for each API.'
    header: Meetings Summary Report
    methods:
    - doc: 'List meeting usage reports of all the users on the specified site by an
        admin. You can specify a date range and the maximum number of meeting usage
        reports to return.

        The list returned is sorted in descending order by the date and time the meetings
        were started.

        Long result sets are split into pages.'
      documentation:
        doc: List Meeting Usage Reports
        doc_link: https://developer.webex.com/docs/api/v1/meetings-summary-report/list-meeting-usage-reports
        endpoint: https://webexapis.com/v1/meetingReports/usage
        http_method: GET
      header: List Meeting Usage Reports
      parameters_and_response:
        Query Parameters:
        - doc: URL of the Webex site which the API lists meeting usage reports from.
            All available Webex sites can be retrieved by the Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Starting date and time for meeting usage reports to return, in any
            ISO 8601 compliant format. from cannot be after to. The interval between
            to and from cannot exceed 30 days and from cannot be earlier than 90 days
            ago.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Ending date and time for meeting usage reports to return, in any ISO
            8601 compliant format. to cannot be before from. The interval between
            to and from cannot exceed 30 days.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Maximum number of meetings to include in the meetings usage report
            in a single page. max must be greater than 0 and equal to or less than
            1000.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: An array of meeting usage report objects.
          name: items
          param_attrs:
          - doc: Unique identifier for the meeting.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting number.
            name: meetingNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting title.
            name: meetingTitle
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time when the meeting was started. It's in the timezone
              specified in the request header or in the UTC timezone if timezone is
              not specified.
            name: start
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time when the meeting was ended. It's in the timezone
              specified in the request header or in the UTC timezone if timezone is
              not specified.
            name: end
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Duration of the meeting in minutes.
            name: duration
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Scheduled type for the meeting.
            name: scheduledType
            param_attrs:
            - doc: Regular meeting.
              name: meeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webinar meeting.
              name: webinar
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Display name for the meeting host.
            name: hostDisplayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address for the meeting host.
            name: hostEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Aggregated attendee minutes.
            name: totalPeopleMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Aggregated attendee PSTN call-in minutes.
            name: totalCallInMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Aggregated attendee domestic PSTN call-out minutes.
            name: totalCallOutDomestic
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Aggregated attendee toll-free PSTN call-in minutes.
            name: totalCallInTollFreeMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Aggregated attendee international PSTN call-out minutes.
            name: totalCallOutInternational
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Aggregated attendee VoIP minutes.
            name: totalVoipMinutes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of participants of the meeting.
            name: totalParticipants
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of VoIP participants of the meeting.
            name: totalParticipantsVoip
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of PSTN call-in participants of the meeting.
            name: totalParticipantsCallIn
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of PSTN call-out participants of the meeting.
            name: totalParticipantsCallOut
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Peak number of attendees throughout the meeting.
            name: peakAttendee
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of registrants of the meeting.
            name: totalRegistered
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Total number of invitees of the meeting.
            name: totalInvitee
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Tracking codes of the meeting.
            name: trackingCodes
            param_attrs:
            - doc: Name of the tracking code.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Value of the tracking code.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[MeetingUsageReportTrackingCodeObject]
            type_spec: null
          param_object: []
          type: array[MeetingUsageReportObject]
          type_spec: null
    - doc: 'Lists of meeting attendee reports by a date range, the maximum number
        of meeting attendee reports, a meeting ID, a meeting number or a meeting title.

        If the requesting user is an admin, the API returns meeting attendee reports
        of the meetings hosted by all the users on the specified site filtered by
        meeting ID, meeting number or meeting title.

        If it''s a normal meeting host, the API returns meeting attendee reports of
        the meetings hosted by the user himself on the specified site filtered by
        meeting ID, meeting number or meeting title.

        The list returned is grouped by meeting instances. Both the groups and items
        of each group are sorted in descending order of joinedTime. For example, if
        meetingId is specified and it''s a meeting series ID, the returned list is
        grouped by meeting instances of that series. The groups are sorted in descending
        order of joinedTime, and within each group the items are also sorted in descending
        order of joinedTime. Please refer to Meetings Overview for details of meeting
        series, scheduled meeting and meeting instance.

        Long result sets are split into pages.'
      documentation:
        doc: List Meeting Attendee Reports
        doc_link: https://developer.webex.com/docs/api/v1/meetings-summary-report/list-meeting-attendee-reports
        endpoint: https://webexapis.com/v1/meetingReports/attendees
        http_method: GET
      header: List Meeting Attendee Reports
      parameters_and_response:
        Query Parameters:
        - doc: URL of the Webex site which the API lists meeting attendee reports
            from. All available Webex sites can be retrieved by the Get Site List
            API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Meeting ID for the meeting attendee reports to return. If specified,
            return meeting attendee reports of the specified meeting; otherwise, return
            meeting attendee reports of all meetings. Currently, only ended meeting
            instance IDs are supported. IDs of meeting series, scheduled meetings
            or personal room meetings are not supported.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting number for the meeting attendee reports to return. If specified,
            return meeting attendee reports of the specified meeting; otherwise, return
            meeting attendee reports of all meetings.
          name: meetingNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Meeting title for the meeting attendee reports to return. If specified,
            return meeting attendee reports of the specified meeting; otherwise, return
            meeting attendee reports of all meetings.
          name: meetingTitle
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Starting date and time for the meeting attendee reports to return,
            in any ISO 8601 compliant format. from cannot be after to. The interval
            between to and from cannot exceed 30 days and from cannot be earlier than
            90 days ago.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Ending date and time for the meeting attendee reports to return, in
            any ISO 8601 compliant format. to cannot be before from. The interval
            between to and from cannot exceed 30 days.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Maximum number of meeting attendees to include in the meeting attendee
            report in a single page. max must be greater than 0 and equal to or less
            than 1000.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: An array of meeting attendee report objects.
          name: items
          param_attrs:
          - doc: Unique identifier for the meeting.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meeting number.
            name: meetingNumber
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Meeting title.
            name: meetingTitle
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Attendee's display name.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Attendee's email.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time when the attendee joined the meeting. It's in the
              timezone specified in the request header or in the UTC timezone if timezone
              is not specified.
            name: joinedTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time when the attendee left the meeting. It's in the
              timezone specified in the request header or in the UTC timezone if timezone
              is not specified.
            name: leftTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Duration of the attendee in the meeting in minutes.
            name: duration
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The attendee's role in the meeting.
            name: participantType
            param_attrs:
            - doc: Meeting host.
              name: host
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Meeting attendee.
              name: attendee
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: IP address of the attendee when he attended the meeting.
            name: ipAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Information of the attendee's operating system and application when
              he attended the meeting.
            name: clientAgent
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Attendee's company.
            name: company
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Attendee's phone number.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Attendee's address, part one.
            name: address1
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Attendee's address, part two.
            name: address2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Attendee's city.
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Attendee's state.
            name: state
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Attendee's country.
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Attendee's zip code.
            name: zipCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the attendee has registered the meeting.
            name: registered
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the attendee has been invited to the meeting.
            name: invited
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[MeetingAttendeeReportObject]
          type_spec: null
  Memberships:
    doc: 'Memberships represent a person''s relationship to a room. Use this API to
      list members of any room that you''re in or create memberships to invite someone
      to a room. Compliance Officers can now also list memberships for personEmails
      where the CO is not part of the room.

      Memberships can also be updated to make someone a moderator, or deleted, to
      remove someone from the room.

      Just like in the Webex client, you must be a member of the room in order to
      list its memberships or invite people.'
    header: Memberships
    methods:
    - doc: 'Lists all room memberships. By default, lists memberships for rooms to
        which the authenticated user belongs.

        Use query parameters to filter the response.

        Use roomId to list memberships for a room, by ID.

        NOTE: For moderated team spaces, the list of memberships will include only
        the space moderators if the user is a team member but not a direct participant
        of the space.

        Use either personId or personEmail to filter the results. The roomId parameter
        is required when using these parameters.

        Long result sets will be split into pages.'
      documentation:
        doc: List Memberships
        doc_link: https://developer.webex.com/docs/api/v1/memberships/list-memberships
        endpoint: https://webexapis.com/v1/memberships
        http_method: GET
      header: List Memberships
      parameters_and_response:
        Query Parameters:
        - doc: List memberships associated with a room, by ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List memberships associated with a person, by ID. The roomId parameter
            is required when using this parameter.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List memberships associated with a person, by email address. The roomId
            parameter is required when using this parameter.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of memberships in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the membership.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room ID.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person ID.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the person.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The display name of the person.
            name: personDisplayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The organization ID of the person.
            name: personOrgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the participant is a room moderator.
            name: isModerator
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the direct type room is hidden in the Webex clients.
            name: isRoomHidden
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The type of room the membership is associated with.
            name: roomType
            param_attrs:
            - doc: 1:1 room.
              name: direct
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Group room.
              name: group
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not the participant is a monitoring bot (deprecated).
            name: isMonitor
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The date and time when the membership was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Membership]
          type_spec: null
    - doc: Add someone to a room by Person ID or email address, optionally making
        them a moderator. Compliance Officers cannot add people to empty (team) spaces.
      documentation:
        doc: Create a Membership
        doc_link: https://developer.webex.com/docs/api/v1/memberships/create-a-membership
        endpoint: https://webexapis.com/v1/memberships
        http_method: POST
      header: Create a Membership
      parameters_and_response:
        Body Parameters:
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the direct type room is hidden in the Webex clients.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The type of room the membership is associated with.
          name: roomType
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the participant is a monitoring bot (deprecated).
          name: isMonitor
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Get details for a membership by ID.

        Specify the membership ID in the membershipId URI parameter.'
      documentation:
        doc: Get Membership Details
        doc_link: https://developer.webex.com/docs/api/v1/memberships/get-membership-details
        endpoint: https://webexapis.com/v1/memberships/{membershipId}
        http_method: GET
      header: Get Membership Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the direct type room is hidden in the Webex clients.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The type of room the membership is associated with.
          name: roomType
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the participant is a monitoring bot (deprecated).
          name: isMonitor
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates properties for a membership by ID.

        Specify the membership ID in the membershipId URI parameter.'
      documentation:
        doc: Update a Membership
        doc_link: https://developer.webex.com/docs/api/v1/memberships/update-a-membership
        endpoint: https://webexapis.com/v1/memberships/{membershipId}
        http_method: PUT
      header: Update a Membership
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: When set to true, hides direct spaces in the teams client. Any new
            message will make the room visible again.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the direct type room is hidden in the Webex clients.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The type of room the membership is associated with.
          name: roomType
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the participant is a monitoring bot (deprecated).
          name: isMonitor
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a membership by ID.

        Specify the membership ID in the membershipId URI parameter.

        The membership for the last moderator of a Team''s General space may not be
        deleted; promote another user to team moderator first.'
      documentation:
        doc: Delete a Membership
        doc_link: https://developer.webex.com/docs/api/v1/memberships/delete-a-membership
        endpoint: https://webexapis.com/v1/memberships/{membershipId}
        http_method: DELETE
      header: Delete a Membership
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Messages:
    doc: 'Messages are how you communicate in a room. In Webex, each message is displayed
      on its own line along with a timestamp and sender information. Use this API
      to list, create, update, and delete messages.

      Message can contain plain text, rich text, and a file attachment.

      Just like in the Webex app, you must be a member of the room in order to target
      it with this API.'
    header: Messages
    methods:
    - doc: 'Lists all messages in a room.  Each message will include content attachments
        if present.

        The list sorts the messages in descending order by creation date.

        Long result sets will be split into pages.'
      documentation:
        doc: List Messages
        doc_link: https://developer.webex.com/docs/api/v1/messages/list-messages
        endpoint: https://webexapis.com/v1/messages
        http_method: GET
      header: List Messages
      parameters_and_response:
        Query Parameters:
        - doc: List messages in a room, by ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: List messages with a parent, by ID.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List messages with these people mentioned, by ID. Use me as a shorthand
            for the current API user. Only me or the person ID of the current user
            may be specified. Bots must include this parameter to list messages in
            group rooms (spaces).
          name: mentionedPeople
          param_attrs: []
          param_object: []
          type: array
          type_spec: null
        - doc: List messages sent before a date and time.
          name: before
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List messages sent before a message, by ID.
          name: beforeMessage
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of messages in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique identifier for the message.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The unique identifier for the parent message.
            name: parentId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room ID of the message.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of room.
            name: roomType
            param_attrs:
            - doc: 1:1 room
              name: direct
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: group room
              name: group
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The message, in plain text. If markdown is specified this parameter
              may be optionally used to provide alternate text for UI clients that
              do not support rich text.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The message, in Markdown format.
            name: markdown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The text content of the message, in HTML format. This read-only property
              is used by the Webex clients.
            name: html
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Public URLs for files attached to the message. For the supported
              media types and the behavior of file uploads, see Message Attachments.
            name: files
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: The person ID of the message author.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the message author.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: People IDs for anyone mentioned in the message.
            name: mentionedPeople
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Group names for the groups mentioned in the message.
            name: mentionedGroups
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Message content attachments attached to the message. See the Cards
              Guide for more information.
            name: attachments
            param_attrs:
            - doc: The content type of the attachment.
              name: contentType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Adaptive Card content.
              name: content
              param_attrs:
              - doc: Must be AdaptiveCard.
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Adaptive Card schema version.
                name: version
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The card's elements.
                name: body
                param_attrs:
                - doc: '

                    Possible values: TextBlock'
                  name: type
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: Adaptive Cards'
                  name: text
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: large'
                  name: size
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[object]
                type_spec: null
              - doc: The card's actions.
                name: actions
                param_attrs:
                - doc: '

                    Possible values: Action.OpenUrl'
                  name: type
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: http://adaptivecards.io'
                  name: url
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: Learn More'
                  name: title
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[object]
                type_spec: null
              param_object: []
              type: Adaptive Card
              type_spec: null
            param_object: []
            type: array[Attachment]
            type_spec: null
          - doc: The date and time the message was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time that the message was last edited by the author.
              This field is only present when the message contents have changed.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: true if the audio file is a voice clip recorded by the client; false
              if the audio file is a standard audio file not posted using the voice
              clip feature.
            name: isVoiceClip
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[List Message]
          type_spec: null
    - doc: 'List all messages in a 1:1 (direct) room. Use the personId or personEmail
        query parameter to specify the room. Each message will include content attachments
        if present.

        The list sorts the messages in descending order by creation date.'
      documentation:
        doc: List Direct Messages
        doc_link: https://developer.webex.com/docs/api/v1/messages/list-direct-messages
        endpoint: https://webexapis.com/v1/messages/direct
        http_method: GET
      header: List Direct Messages
      parameters_and_response:
        Query Parameters:
        - doc: List messages with a parent, by ID.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List messages in a 1:1 room, by person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List messages in a 1:1 room, by person email.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique identifier for the message.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The unique identifier for the parent message.
            name: parentId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room ID of the message.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of room. Will always be direct.
            name: roomType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The message, in plain text. If markdown is specified this parameter
              may be optionally used to provide alternate text for UI clients that
              do not support rich text.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The message, in Markdown format.
            name: markdown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The text content of the message, in HTML format. This read-only property
              is used by the Webex clients.
            name: html
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Public URLs for files attached to the message. For the supported
              media types and the behavior of file uploads, see Message Attachments.
            name: files
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: The person ID of the message author.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the message author.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Message content attachments attached to the message. See the Cards
              Guide for more information.
            name: attachments
            param_attrs:
            - doc: The content type of the attachment.
              name: contentType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Adaptive Card content.
              name: content
              param_attrs:
              - doc: Must be AdaptiveCard.
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Adaptive Card schema version.
                name: version
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The card's elements.
                name: body
                param_attrs:
                - doc: '

                    Possible values: TextBlock'
                  name: type
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: Adaptive Cards'
                  name: text
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: large'
                  name: size
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[object]
                type_spec: null
              - doc: The card's actions.
                name: actions
                param_attrs:
                - doc: '

                    Possible values: Action.OpenUrl'
                  name: type
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: http://adaptivecards.io'
                  name: url
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: '

                    Possible values: Learn More'
                  name: title
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[object]
                type_spec: null
              param_object: []
              type: Adaptive Card
              type_spec: null
            param_object: []
            type: array[Attachment]
            type_spec: null
          - doc: The date and time the message was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time that the message was last edited by the author.
              This field is only present when the message contents have changed.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: True if the audio file is a voice clip recorded by the client; false
              if the audio file is a standard audio file not posted using the voice
              clip feature.
            name: isVoiceClip
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[Direct Message]
          type_spec: null
    - doc: 'Post a plain text or rich text message, and optionally, a file attachment
        attachment, to a room.

        The files parameter is an array, which accepts multiple values to allow for
        future expansion, but currently only one file may be included with the message.
        File previews are only rendered for attachments of 1MB or less.'
      documentation:
        doc: Create a Message
        doc_link: https://developer.webex.com/docs/api/v1/messages/create-a-message
        endpoint: https://webexapis.com/v1/messages
        http_method: POST
      header: Create a Message
      parameters_and_response:
        Body Parameters:
        - doc: The room ID of the message.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The parent message to reply to.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the recipient when sending a private 1:1 message.
          name: toPersonId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the recipient when sending a private 1:1 message.
          name: toPersonEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in plain text. If markdown is specified this parameter
            may be optionally used to provide alternate text for UI clients that do
            not support rich text. The maximum message length is 7439 bytes.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in Markdown format. The maximum message length is 7439
            bytes.
          name: markdown
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The public URL to a binary file to be posted into the room. Only one
            file is allowed per message. Uploaded files are automatically converted
            into a format that all Webex clients can render. For the supported media
            types and the behavior of uploads, see the Message Attachments Guide.

            Possible values: http://www.example.com/images/media.png'
          name: files
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Content attachments to attach to the message. Only one card per message
            is supported. See the Cards Guide for more information.
          name: attachments
          param_attrs:
          - doc: The content type of the attachment.
            name: contentType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Adaptive Card content.
            name: content
            param_attrs:
            - doc: Must be AdaptiveCard.
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Adaptive Card schema version.
              name: version
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: The card's elements.
              name: body
              param_attrs:
              - doc: ''
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: text
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: size
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The card's actions.
              name: actions
              param_attrs:
              - doc: ''
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: url
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: title
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            param_object: []
            type: Adaptive Card
            type_spec: null
          param_object: []
          type: array[Attachment]
          type_spec: null
        Response Properties:
        - doc: The unique identifier for the message.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique identifier for the parent message.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID of the message.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The type of room.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The person ID of the recipient when sending a private 1:1 message.
          name: toPersonId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the recipient when sending a private 1:1 message.
          name: toPersonEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in plain text. If markdown is specified this parameter
            may be optionally used to provide alternate text for UI clients that do
            not support rich text.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in Markdown format.
          name: markdown
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The text content of the message, in HTML format. This read-only property
            is used by the Webex clients.
          name: html
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Public URLs for files attached to the message. For the supported media
            types and the behavior of file uploads, see Message Attachments.
          name: files
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The person ID of the message author.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the message author.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: People IDs for anyone mentioned in the message.
          name: mentionedPeople
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Group names for the groups mentioned in the message.
          name: mentionedGroups
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Message content attachments attached to the message. See the Cards
            Guide for more information.
          name: attachments
          param_attrs:
          - doc: The content type of the attachment.
            name: contentType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Adaptive Card content.
            name: content
            param_attrs:
            - doc: Must be AdaptiveCard.
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Adaptive Card schema version.
              name: version
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The card's elements.
              name: body
              param_attrs:
              - doc: '

                  Possible values: TextBlock'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Adaptive Cards'
                name: text
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: large'
                name: size
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The card's actions.
              name: actions
              param_attrs:
              - doc: '

                  Possible values: Action.OpenUrl'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: http://adaptivecards.io'
                name: url
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Learn More'
                name: title
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            param_object: []
            type: Adaptive Card
            type_spec: null
          param_object: []
          type: array[Attachment]
          type_spec: null
        - doc: The date and time the message was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time that the message was last edited by the author. This
            field is only present when the message contents have changed.
          name: updated
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: True if the audio file is a voice clip recorded by the client; false
            if the audio file is a standard audio file not posted using the voice
            clip feature.
          name: isVoiceClip
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
    - doc: "Update a message you have posted not more than 10 times.\nSpecify the\
        \ messageId of the message you want to edit.\nEdits of messages containing\
        \ files or attachments are not currently supported.\nIf a user attempts to\
        \ edit a message containing files or attachments a 400 Bad Request will be\
        \ returned by the API with a message stating that the feature is currently\
        \ unsupported.\nThere is also a maximum number of times a user can edit a\
        \ message. The maximum currently supported is 10 edits per message.\n    If\
        \ a user attempts to edit a message greater that the maximum times allowed\
        \ the API will return 400 Bad Request with a message stating the edit limit\
        \ has been reached.\nWhile only the roomId and text or markdown attributes\
        \ are required in the request body, a common pattern for editing message is\
        \ to first call GET /messages/{id} for the message you wish to edit and to\
        \ then update the text or markdown attribute accordingly, passing the updated\
        \ message object in the request body of the PUT /messages/{id} request.\n\
        When this pattern is used on a message that included markdown, the html attribute\
        \ must be deleted prior to making the PUT request."
      documentation:
        doc: Edit a Message
        doc_link: https://developer.webex.com/docs/api/v1/messages/edit-a-message
        endpoint: https://webexapis.com/v1/messages/{messageId}
        http_method: PUT
      header: Edit a Message
      parameters_and_response:
        Body Parameters:
        - doc: The room ID of the message.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The message, in plain text. If markdown is specified this parameter
            may be optionally used to provide alternate text for UI clients that do
            not support rich text. The maximum message length is 7439 bytes.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in Markdown format. If this attribute is set ensure that
            the request does NOT contain an html attribute.
          name: markdown
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: The unique identifier for the message.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique identifier for the parent message.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID of the message.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The type of room.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The message, in plain text. If markdown is specified this parameter
            may be optionally used to provide alternate text for UI clients that do
            not support rich text.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in Markdown format.
          name: markdown
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The text content of the message, in HTML format. This read-only property
            is used by the Webex clients.
          name: html
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Public URLs for files attached to the message. For the supported media
            types and the behavior of file uploads, see Message Attachments.
          name: files
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The person ID of the message author.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the message author.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: People IDs for anyone mentioned in the message.
          name: mentionedPeople
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Group names for the groups mentioned in the message.
          name: mentionedGroups
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Message content attachments attached to the message. See the Cards
            Guide for more information.
          name: attachments
          param_attrs:
          - doc: The content type of the attachment.
            name: contentType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Adaptive Card content.
            name: content
            param_attrs:
            - doc: Must be AdaptiveCard.
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Adaptive Card schema version.
              name: version
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The card's elements.
              name: body
              param_attrs:
              - doc: '

                  Possible values: TextBlock'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Adaptive Cards'
                name: text
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: large'
                name: size
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The card's actions.
              name: actions
              param_attrs:
              - doc: '

                  Possible values: Action.OpenUrl'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: http://adaptivecards.io'
                name: url
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Learn More'
                name: title
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            param_object: []
            type: Adaptive Card
            type_spec: null
          param_object: []
          type: array[Attachment]
          type_spec: null
        - doc: The date and time the message was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time that the message was last edited by the author. This
            field is only present when the message contents have changed.
          name: updated
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: true if the audio file is a voice clip recorded by the client; false
            if the audio file is a standard audio file not posted using the voice
            clip feature.
          name: isVoiceClip
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the message.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Show details for a message, by message ID.

        Specify the message ID in the messageId parameter in the URI.'
      documentation:
        doc: Get Message Details
        doc_link: https://developer.webex.com/docs/api/v1/messages/get-message-details
        endpoint: https://webexapis.com/v1/messages/{messageId}
        http_method: GET
      header: Get Message Details
      parameters_and_response:
        Response Properties:
        - doc: The unique identifier for the message.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique identifier for the parent message.
          name: parentId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID of the message.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The type of room.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The message, in plain text. If markdown is specified this parameter
            may be optionally used to provide alternate text for UI clients that do
            not support rich text.
          name: text
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The message, in Markdown format.
          name: markdown
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The text content of the message, in HTML format. This read-only property
            is used by the Webex clients.
          name: html
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Public URLs for files attached to the message. For the supported media
            types and the behavior of file uploads, see Message Attachments.
          name: files
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The person ID of the message author.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the message author.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: People IDs for anyone mentioned in the message.
          name: mentionedPeople
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Group names for the groups mentioned in the message.
          name: mentionedGroups
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Message content attachments attached to the message. See the Cards
            Guide for more information.
          name: attachments
          param_attrs:
          - doc: The content type of the attachment.
            name: contentType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Adaptive Card content.
            name: content
            param_attrs:
            - doc: Must be AdaptiveCard.
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Adaptive Card schema version.
              name: version
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The card's elements.
              name: body
              param_attrs:
              - doc: '

                  Possible values: TextBlock'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Adaptive Cards'
                name: text
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: large'
                name: size
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            - doc: The card's actions.
              name: actions
              param_attrs:
              - doc: '

                  Possible values: Action.OpenUrl'
                name: type
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: http://adaptivecards.io'
                name: url
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: '

                  Possible values: Learn More'
                name: title
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[object]
              type_spec: null
            param_object: []
            type: Adaptive Card
            type_spec: null
          param_object: []
          type: array[Attachment]
          type_spec: null
        - doc: The date and time the message was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time that the message was last edited by the author. This
            field is only present when the message contents have changed.
          name: updated
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: true if the audio file is a voice clip recorded by the client; false
            if the audio file is a standard audio file not posted using the voice
            clip feature.
          name: isVoiceClip
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the message.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete a message, by message ID.

        Specify the message ID in the messageId parameter in the URI.'
      documentation:
        doc: Delete a Message
        doc_link: https://developer.webex.com/docs/api/v1/messages/delete-a-message
        endpoint: https://webexapis.com/v1/messages/{messageId}
        http_method: DELETE
      header: Delete a Message
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the message.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Organizations:
    doc: 'A set of people in Webex. Organizations may manage other organizations or
      be managed themselves. This organizations resource can be accessed only by an
      admin.

      Applications can delete an Organization only after they have been authorized
      by a user with the Full Administrator Role which may be a user in the customer
      org or a user in a managing partner organization to which the role has been
      granted. The authorizing admin must grant the spark-admin:organizations-write
      scope.'
    header: Organizations
    methods:
    - doc: List all organizations visible by your account. The results will not be
        paginated.
      documentation:
        doc: List Organizations
        doc_link: https://developer.webex.com/docs/api/v1/organizations/list-organizations
        endpoint: https://webexapis.com/v1/organizations
        http_method: GET
      header: List Organizations
      parameters_and_response:
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the organization.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Full name of the organization.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the organization was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Organization]
          type_spec: null
    - doc: 'Shows details for an organization, by ID.

        Specify the org ID in the orgId parameter in the URI.'
      documentation:
        doc: Get Organization Details
        doc_link: https://developer.webex.com/docs/api/v1/organizations/get-organization-details
        endpoint: https://webexapis.com/v1/organizations/{orgId}
        http_method: GET
      header: Get Organization Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the organization.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Full name of the organization.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the organization was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes an organization, by ID. It may take up to 10 minutes for the organization
        to be deleted after the response is returned.


        Specify the org ID in the orgId parameter in the URI.

        Deleting an Organization may fail with a HTTP 409 Conflict response and encounter
        one or more of the errors described below. Resolve these conditions to allow
        the delete to succeed.

        '
      documentation:
        doc: Delete Organization
        doc_link: https://developer.webex.com/docs/api/v1/organizations/delete-organization
        endpoint: https://webexapis.com/v1/organizations/{orgId}
        http_method: DELETE
      header: Delete Organization
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Partner Management:
    doc: 'Partner organizations that manage their customers through Webex Partner
      Hub can leverage this API to assign or unassign partner administrator roles
      to their users, as well as assign or unassign customer organizations to specific
      partner administrators.

      Managing other partner administrators in an organization requires the partner
      full administrator role. The users being acted upon also exist in the partners
      own organization. To create a user, see People API. The authorizing admin must
      grant the spark-admin:organizations-read scope for read operations and spark-admin:organizations-write
      scope for write operations.'
    header: Partner Administrators
    methods:
    - doc: 'Get all customers managed by given partner admin, in the managedBy request
        parameter.

        This API can be used by partner full admin and partner readonly admin.

        Specify the personId in the managedBy parameter in the URI.'
      documentation:
        doc: Get all customers managed by a partner admin
        doc_link: https://developer.webex.com/docs/api/v1/partner-management/get-all-customers-managed-by-a-partner-admin
        endpoint: https://webexapis.com/v1/partner/organizations
        http_method: GET
      header: Get all customers managed by a partner admin
      parameters_and_response:
        Query Parameters:
        - doc: List customer orgs associated with this person ID.
          name: managedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: An array of managed orgs objects.
          name: items
          param_attrs:
          - doc: The org ID of the managed org.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: role ID of the user to this org.
            name: role
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[IdentityManagedOrg]
          type_spec: null
    - doc: 'For a given customer, get all the partner admins with their role details.

        This API can be used by partner full admin.

        Specify the orgId in the path parameter.'
      documentation:
        doc: Get all partner admins assigned to a customer
        doc_link: https://developer.webex.com/docs/api/v1/partner-management/get-all-partner-admins-assigned-to-a-customer
        endpoint: https://webexapis.com/v1/partner/organizations/{orgId}/partnerAdmins
        http_method: GET
      header: Get all partner admins assigned to a customer
      parameters_and_response:
        Response Properties:
        - doc: An array of partner admin user details.
          name: items
          param_attrs:
          - doc: The user ID of the partner admin.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The display name of the partner admin.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The first name of the partner admin.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The last name of the partner admin.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: List of emails for the partner admin.
            name: emails
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: The role of this partner admin in the given customer org.
            name: roleInCustomerOrg
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[PartnerAdminUser]
          type_spec: null
        URI Parameters:
        - doc: List partner admins associated with this customer org ID.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Assign a specific partner admin to a customer organization. The partner
        admin is a user that has the partner administrator role.

        Other partner roles, such as partner full administrator are not applicable
        for this API, since this role manages all customer organizations.

        This API can be used by partner full admin.

        Specify the orgId and the personId in the path param.'
      documentation:
        doc: Assign partner admin to a customer
        doc_link: https://developer.webex.com/docs/api/v1/partner-management/assign-partner-admin-to-a-customer
        endpoint: https://webexapis.com/v1/partner/organizations/{orgId}/partnerAdmin/{personId}/assign
        http_method: POST
      header: Assign partner admin to a customer
      parameters_and_response:
        URI Parameters:
        - doc: The ID of the customer organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: User ID of the partner admin in the partners org.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Unassign a specific partner admin from a customer organization. The partner
        admin is a user that has the partner administrator role.

        Unassigning a customer organization from a partner admin does not remove the
        role from the user.

        This API can be used by partner full admin.

        Specify the orgId and the personId in the path param.'
      documentation:
        doc: Unassign partner admin from a customer
        doc_link: https://developer.webex.com/docs/api/v1/partner-management/unassign-partner-admin-from-a-customer
        endpoint: https://webexapis.com/v1/partner/organizations/{orgId}/partnerAdmin/{personId}/unassign
        http_method: DELETE
      header: Unassign partner admin from a customer
      parameters_and_response:
        URI Parameters:
        - doc: The ID of the customer organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: User ID of the partner admin in the partners org.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Revoke all partner administrator roles from a user, thereby revoking access
        to Partner Hub and all managed customer organizations.

        This action does not grant or revoke Control Hub administrator roles (e.g.
        full administrator, user and device administrator, etc.).

        This API can be used by partner full admin.

        Specify the personId in the path param.'
      documentation:
        doc: Revoke all partner admin roles for a given person ID
        doc_link: https://developer.webex.com/docs/api/v1/partner-management/revoke-all-partner-admin-roles-for-a-given-person-id
        endpoint: https://webexapis.com/v1/partner/organizations/partnerAdmin/{personId}
        http_method: DELETE
      header: Revoke all partner admin roles for a given person ID
      parameters_and_response:
        URI Parameters:
        - doc: ID of the user whose partner roles needs to be revoked.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Partner Tags:
    doc: Customer organization tags offer a flexible way of identifying and grouping
      customer organizations. Tags are configured by partners for their customers
      and are neither visible to other partners nor the customers themselves. To manage
      tags, the user must have a full partner admin or partner admin role. The authorizing
      admin must grant the spark-admin:organizations-read scope for read operations
      and spark-admin:organizations-write scope for write operations.
    header: Partner Tags
    methods:
    - doc: "Retrieves all tags which are being used by any customer organizations.\
        \ Once a tag is unassigned from the last customer, it is automatically removed\
        \ and is not returned by this API.\nThis API can be used by a partner full\
        \ admin, a read-only partner, or an partner admin. \nThe type can have the\
        \ value ORGANIZATION or SUBSCRIPTION. If not provided, the value is ORGANIZATION"
      documentation:
        doc: Retrieve all customer tags
        doc_link: https://developer.webex.com/docs/api/v1/partner-tags/retrieve-all-customer-tags
        endpoint: https://webexapis.com/v1/partner/tags
        http_method: GET
      header: Retrieve all customer tags
      parameters_and_response:
        Query Parameters:
        - doc: List tags associated with an organization.
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties: []
    - doc: "Assign or replace tag(s) which for a customer organization. If the tag\
        \ doesn't already exist, a new one is created and assigned to the customer\
        \ automatically.\nThis API can be used by partner full admins and partner\
        \ admins. \nEach tag has a character limit of 25. Currently, there is a limit\
        \ of 5 tags per organization when creating tags. To remove all the tags, pass\
        \ an empty array.\nSpecify the customer organization ID in the orgId parameter\
        \ in the URI."
      documentation:
        doc: Create or Replace existing customer tags with the provided ones
        doc_link: https://developer.webex.com/docs/api/v1/partner-tags/create-or-replace-existing-customer-tags-with-the-provided-ones
        endpoint: https://webexapis.com/v1/partner/tags/organizations/{orgId}/assignTags
        http_method: POST
      header: Create or Replace existing customer tags with the provided ones
      parameters_and_response:
        Body Parameters:
        - doc: An array of tags.
          name: tags
          param_attrs:
          - doc: Name of the tag.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Description of the tag
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[TagsObj]
          type_spec: null
        Response Properties: []
        URI Parameters:
        - doc: The unique identifier for the customer organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: "Retrieve tags associated with a customer organization based on the orgId\
        \ provided.\nThis API can be used by a partner full admin, a read-only partner,\
        \ or an partner admin. \nSpecify the customer orgId in the orgId parameter\
        \ in the URI."
      documentation:
        doc: Get customer organization's tags
        doc_link: https://developer.webex.com/docs/api/v1/partner-tags/get-customer-organization's-tags
        endpoint: https://webexapis.com/v1/partner/tags/organizations/{orgId}
        http_method: GET
      header: Get customer organization's tags
      parameters_and_response:
        Response Properties:
        - doc: Name of the customer organization.
          name: orgName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique identifier for the customer organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of tags.
          name: tags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        URI Parameters:
        - doc: Fetch all customers and associated tags for the customer.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'For a set of tags, retrieve all customer organizations that match any
        one of the tags.

        This API can be used by a partner full admin, a read-only partner, or an partner
        admin.'
      documentation:
        doc: Fetch all customers for a given set of tags
        doc_link: https://developer.webex.com/docs/api/v1/partner-tags/fetch-all-customers-for-a-given-set-of-tags
        endpoint: https://webexapis.com/v1/partner/tags/organizations
        http_method: GET
      header: Fetch all customers for a given set of tags
      parameters_and_response:
        Query Parameters:
        - doc: A comma separated list of tags to filter by.
          name: tags
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Value must be between 1 and 100, inclusive.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties: []
    - doc: "Assign or replace tags specific to each subscription for an organization.\
        \ Each organization may have one or more subscriptions.\nThis API can be used\
        \ by partner full admins and partner admins. \nCurrently there is a limit\
        \ of 5 tags per subscription when creating tags. To remove all the tags, pass\
        \ an empty array.\nSpecify the customer organization ID in the orgId parameter\
        \ in the URI and subscription ID in subscriptionId parameter"
      documentation:
        doc: Create or Replace existing subscription tags with the provided ones
        doc_link: https://developer.webex.com/docs/api/v1/partner-tags/create-or-replace-existing-subscription-tags-with-the-provided-ones
        endpoint: https://webexapis.com/v1/partner/tags/organizations/{orgId}/subscriptions/{subscriptionId}/assignTags
        http_method: POST
      header: Create or Replace existing subscription tags with the provided ones
      parameters_and_response:
        Body Parameters:
        - doc: An array of tags.
          name: tags
          param_attrs:
          - doc: Name of the tag.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Description of the tag
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[TagsObj]
          type_spec: null
        Response Properties: []
        URI Parameters:
        - doc: The unique identifier for the customer organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique identifier for the subscription.
          name: subscriptionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'For a partner organization fetch all it''s subscriptions with their tag
        list for a given tag names.

        This API can be used by partner full admins, partner admins and admin read-only
        partners.'
      documentation:
        doc: Subscription List on a given tag name or a set of tags
        doc_link: https://developer.webex.com/docs/api/v1/partner-tags/subscription-list-on-a-given-tag-name-or-a-set-of-tags
        endpoint: https://webexapis.com/v1/partner/tags/subscriptions
        http_method: GET
      header: Subscription List on a given tag name or a set of tags
      parameters_and_response:
        Query Parameters:
        - doc: A comma separated list of tags to filter by.
          name: tags
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Value must be between 1 and 100, inclusive.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties: []
    - doc: 'For a given partner org, customer org and external subscription id, fetch
        subscription details with its associated tags.

        This API can be used by partner full admins, partner admins and admin read-only
        partners.'
      documentation:
        doc: Fetch a Subscription
        doc_link: https://developer.webex.com/docs/api/v1/partner-tags/fetch-a-subscription
        endpoint: https://webexapis.com/v1/partner/tags/organizations/{orgId}/subscriptions/{subscriptionId}
        http_method: GET
      header: Fetch a Subscription
      parameters_and_response:
        Response Properties:
        - doc: Name of the customer organization.
          name: orgName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique identifier for the customer organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of tags.
          name: tags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The unique identifier for the subscription.
          name: subscriptionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: boolean flag for trial or not.
          name: trial
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the customer organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique identifier for the subscription.
          name: subscriptionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  People:
    doc: 'People are registered users of Webex. Searching and viewing People requires
      an auth token with a scope of spark:people_read. Viewing the list of all People
      in your Organization requires an administrator auth token with spark-admin:people_read
      scope. Adding, updating, and removing People requires an administrator auth
      token with the spark-admin:people_write and spark-admin:people_read scope.

      A person''s call settings are for Webex Calling and necessitate Webex Calling
      licenses.

      To learn more about managing people in a room see the Memberships API. For information
      about how to allocate Hybrid Services licenses to people, see the Managing Hybrid
      Services guide.'
    header: People
    methods:
    - doc: 'List people in your organization. For most users, either the email or
        displayName parameter is required. Admin users can omit these fields and list
        all users in their organization.

        Response properties associated with a user''s presence status, such as status
        or lastActivity, will only be returned for people within your organization
        or an organization you manage. Presence information will not be returned if
        the authenticated user has disabled status sharing.

        Admin users can include Webex Calling (BroadCloud) user details in the response
        by specifying callingData parameter as true. Admin users can list all users
        in a location or with a specific phone number. Admin users will receive an
        enriched payload with additional administrative fields like liceneses,roles
        etc. These fields are shown when accessing a user via GET /people/{id}, not
        when doing a GET /people?id=

        Lookup by email is only supported for people within the same org or where
        a partner admin relationship is in place.

        Lookup by roles is only supported for Admin users for the people within the
        same org.

        Long result sets will be split into pages.'
      documentation:
        doc: List People
        doc_link: https://developer.webex.com/docs/api/v1/people/list-people
        endpoint: https://webexapis.com/v1/people
        http_method: GET
      header: List People
      parameters_and_response:
        Query Parameters:
        - doc: List people with this email address. For non-admin requests, either
            this or displayName are required. With the exception of partner admins
            and a managed org relationship, people lookup by email is only available
            for users in the same org.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List people whose name starts with this string. For non-admin requests,
            either this or email are required.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List people by ID. Accepts up to 85 person IDs separated by commas.
            If this parameter is provided then presence information (such as the lastActivity
            or status properties) will not be included in the response.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List people in this organization. Only admin users of another organization
            (such as partners) may use this parameter.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List of roleIds separated by commas.
          name: roles
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Include Webex Calling user details in the response.
          name: callingData
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: List people present in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of people in the response. If callingData=true,
            then max will not be more than 50.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: An array of person objects.
          name: items
          param_attrs:
          - doc: A unique identifier for the person.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email addresses of the person.
            name: emails
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Phone numbers for the person.
            name: phoneNumbers
            param_attrs:
            - doc: 'The type of phone number.

                Possible values: work, mobile, fax'
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The phone number.

                Possible values: +1 408 526 7209'
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: The Webex Calling extension for the person. Only applies to a person
              with a Webex Calling license
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the location for this person retrieved from BroadCloud.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The full name of the person.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The nickname of the person if configured. If no nickname is configured
              for the person, this field will not be present.
            name: nickName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The first name of the person.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The last name of the person.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The URL to the person's avatar in PNG format.
            name: avatar
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization to which this person belongs.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An array of role strings representing the roles to which this admin
              user belongs.
            name: roles
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: An array of license strings allocated to this person.
            name: licenses
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: The business department the user belongs to.
            name: department
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A manager identifier
            name: manager
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Person Id of the manager
            name: managerId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: the person's title
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Person's address
            name: addresses
            param_attrs:
            - doc: 'The type of address

                Possible values: work'
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The user''s country

                Possible values: US'
              name: country
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'the user''s locality, often city

                Possible values: Milpitas'
              name: locality
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'the user''s region, often state

                Possible values: California'
              name: region
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'the user''s street

                Possible values: 1099 Bird Ave.'
              name: streetAddress
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'the user''s postal or zip code

                Possible values: 99212'
              name: postalCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[object]
            type_spec: null
          - doc: The date and time the person was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the person was last changed.
            name: lastModified
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The time zone of the person if configured. If no timezone is configured
              on the account, this field will not be present
            name: timezone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time of the person's last activity within Webex. This
              will only be returned for people within your organization or an organization
              you manage. Presence information will not be shown if the authenticated
              user has disabled status sharing.
            name: lastActivity
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: One or several site names where this user has a role (host or attendee)
            name: siteUrls
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: The users sip addresses. Read-only.
            name: sipAddresses
            param_attrs: []
            param_object: []
            type: 'array[{"type": "personal-room","value": "testuser5@mycompany.webex.com","primary":
              false}]'
            type_spec: null
          - doc: The current presence status of the person. This will only be returned
              for people within your organization or an organization you manage. Presence
              information will not be shown if the authenticated user has disabled
              status sharing.
            name: status
            param_attrs:
            - doc: Active within the last 10 minutes
              name: active
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user is in a call
              name: call
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user has manually set their status to "Do Not Disturb"
              name: DoNotDisturb
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Last activity occurred more than 10 minutes ago
              name: inactive
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user is in a meeting
              name: meeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user or a Hybrid Calendar service has indicated that they are
                "Out of Office"
              name: OutOfOffice
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user has never logged in; a status cannot be determined
              name: pending
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The user is sharing content
              name: presenting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: "The user\u2019s status could not be determined"
              name: unknown
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not an invite is pending for the user to complete account
              activation. This property is only returned if the authenticated user
              is an admin user for the person's organization.
            name: invitePending
            param_attrs:
            - doc: The person has been invited to Webex but has not created an account
              name: 'true'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An invite is not pending for this person
              name: 'false'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not the user is allowed to use Webex. This property is
              only returned if the authenticated user is an admin user for the person's
              organization.
            name: loginEnabled
            param_attrs:
            - doc: the person can log into Webex
              name: 'true'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: the person cannot log into Webex
              name: 'false'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The type of person account, such as person or bot.
            name: type
            param_attrs:
            - doc: Account belongs to a person
              name: person
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Account is a bot user
              name: bot
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Account is a guest user
              name: appuser
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[Person]
          type_spec: null
        - doc: An array of person IDs that could not be found.
          name: notFoundIds
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
    - doc: 'Create a new user account for a given organization. Only an admin can
        create a new user account.

        At least one of the following body parameters is required to create a new
        user: displayName, firstName, lastName.

        Currently, users may have only one email address associated with their account.
        The emails parameter is an array, which accepts multiple values to allow for
        future expansion, but currently only one email address will be used for the
        new user.

        Admin users can include Webex calling (BroadCloud) user details in the response
        by specifying callingData parameter as true.

        When doing attendee management, append #attendee to the siteUrl parameter
        (e.g. mysite.webex.com#attendee) to make the new user an attendee for a site.'
      documentation:
        doc: Create a Person
        doc_link: https://developer.webex.com/docs/api/v1/people/create-a-person
        endpoint: https://webexapis.com/v1/people
        http_method: POST
      header: Create a Person
      parameters_and_response:
        Body Parameters:
        - doc: 'The email addresses of the person. Only one email address is allowed
            per person.

            Possible values: john.andersen@example.com'
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        - doc: Phone numbers for the person. Only settable for Webex Calling. Requires
            a Webex Calling license.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: Webex Calling extension of the person. This is only settable for a
            person with a Webex Calling license.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'An array of role strings representing the roles to which this admin
            user belongs.

            Possible values: Y2lzY29zcGFyazovL3VzL1JPTEUvOTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh,
            Y2lzY29zcGFyazovL3VzL1JPTEUvOTZhYmMyYWEtM2RjYy0xMWU1LWIyNjMtMGY0NTkyYWRlZmFi'
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: 'An array of license strings allocated to this person.

            Possible values: Y2lzY29zcGFyazovL3VzL0xJQ0VOU0UvOTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh,
            Y2lzY29zcGFyazovL3VzL0xJQ0VOU0UvOTZhYmMyYWEtM2RjYy0xMWU1LWIyNjMtMGY0NTkyYWRlZmFi'
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier.
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: 'One or several site names where this user has an attendee role. Append
            #attendee to the sitename (eg: mysite.webex.com#attendee)

            Possible values: mysite.webex.com#attendee'
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: Include Webex Calling user details in the response.
          name: callingData
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the person.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email addresses of the person.
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Phone numbers for the person.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work, mobile, fax'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: +1 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The Webex Calling extension for the person. Only applies to a person
            with a Webex Calling license
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person retrieved from BroadCloud.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The nickname of the person if configured. If no nickname is configured
            for the person, this field will not be present.
          name: nickName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of role strings representing the roles to which this admin
            user belongs.
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: An array of license strings allocated to this person.
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The date and time the person was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the person was last changed.
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time zone of the person if configured. If no timezone is configured
            on the account, this field will not be present
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the person's last activity within Webex. This
            will only be returned for people within your organization or an organization
            you manage. Presence information will not be shown if the authenticated
            user has disabled status sharing.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: One or several site names where this user has a role (host or attendee)
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The users sip addresses. Read-only.
          name: sipAddresses
          param_attrs: []
          param_object: []
          type: 'array[{"type": "personal-room","value": "testuser5@mycompany.webex.com","primary":
            false}]'
          type_spec: null
        - doc: The current presence status of the person. This will only be returned
            for people within your organization or an organization you manage. Presence
            information will not be shown if the authenticated user has disabled status
            sharing.
          name: status
          param_attrs:
          - doc: Active within the last 10 minutes
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a call
            name: call
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has manually set their status to "Do Not Disturb"
            name: DoNotDisturb
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last activity occurred more than 10 minutes ago
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a meeting
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user or a Hybrid Calendar service has indicated that they are
              "Out of Office"
            name: OutOfOffice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has never logged in; a status cannot be determined
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is sharing content
            name: presenting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "The user\u2019s status could not be determined"
            name: unknown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not an invite is pending for the user to complete account
            activation. This property is only returned if the authenticated user is
            an admin user for the person's organization.
          name: invitePending
          param_attrs:
          - doc: The person has been invited to Webex but has not created an account
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An invite is not pending for this person
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the user is allowed to use Webex. This property is only
            returned if the authenticated user is an admin user for the person's organization.
          name: loginEnabled
          param_attrs:
          - doc: the person can log into Webex
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: the person cannot log into Webex
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The type of person account, such as person or bot.
          name: type
          param_attrs:
          - doc: Account belongs to a person
            name: person
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a bot user
            name: bot
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a guest user
            name: appuser
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
    - doc: 'Shows details for a person, by ID.

        Response properties associated with a user''s presence status, such as status
        or lastActivity, will only be displayed for people within your organization
        or an organization you manage. Presence information will not be shown if the
        authenticated user has disabled status sharing.

        Admin users can include Webex Calling (BroadCloud) user details in the response
        by specifying callingData parameter as true.

        Specify the person ID in the personId parameter in the URI.'
      documentation:
        doc: Get Person Details
        doc_link: https://developer.webex.com/docs/api/v1/people/get-person-details
        endpoint: https://webexapis.com/v1/people/{personId}
        http_method: GET
      header: Get Person Details
      parameters_and_response:
        Query Parameters:
        - doc: Include Webex Calling user details in the response.
          name: callingData
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the person.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email addresses of the person.
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Phone numbers for the person.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work, mobile, fax'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: +1 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The Webex Calling extension for the person. Only applies to a person
            with a Webex Calling license
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person retrieved from BroadCloud.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The nickname of the person if configured. If no nickname is configured
            for the person, this field will not be present.
          name: nickName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of role strings representing the roles to which this admin
            user belongs.
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: An array of license strings allocated to this person.
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The date and time the person was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the person was last changed.
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time zone of the person if configured. If no timezone is configured
            on the account, this field will not be present
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the person's last activity within Webex. This
            will only be returned for people within your organization or an organization
            you manage. Presence information will not be shown if the authenticated
            user has disabled status sharing.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: One or several site names where this user has a role (host or attendee)
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The users sip addresses. Read-only.
          name: sipAddresses
          param_attrs: []
          param_object: []
          type: 'array[{"type": "personal-room","value": "testuser5@mycompany.webex.com","primary":
            false}]'
          type_spec: null
        - doc: The current presence status of the person. This will only be returned
            for people within your organization or an organization you manage. Presence
            information will not be shown if the authenticated user has disabled status
            sharing.
          name: status
          param_attrs:
          - doc: Active within the last 10 minutes
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a call
            name: call
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has manually set their status to "Do Not Disturb"
            name: DoNotDisturb
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last activity occurred more than 10 minutes ago
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a meeting
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user or a Hybrid Calendar service has indicated that they are
              "Out of Office"
            name: OutOfOffice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has never logged in; a status cannot be determined
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is sharing content
            name: presenting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "The user\u2019s status could not be determined"
            name: unknown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not an invite is pending for the user to complete account
            activation. This property is only returned if the authenticated user is
            an admin user for the person's organization.
          name: invitePending
          param_attrs:
          - doc: The person has been invited to Webex but has not created an account
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An invite is not pending for this person
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the user is allowed to use Webex. This property is only
            returned if the authenticated user is an admin user for the person's organization.
          name: loginEnabled
          param_attrs:
          - doc: the person can log into Webex
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: the person cannot log into Webex
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The type of person account, such as person or bot.
          name: type
          param_attrs:
          - doc: Account belongs to a person
            name: person
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a bot user
            name: bot
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a guest user
            name: appuser
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update details for a person, by ID.

        Specify the person ID in the personId parameter in the URI. Only an admin
        can update a person details.

        Include all details for the person. This action expects all user details to
        be present in the request. A common approach is to first GET the person''s
        details, make changes, then PUT both the changed and unchanged values.

        Admin users can include Webex Calling (BroadCloud) user details in the response
        by specifying callingData parameter as true.

        Note: The locationId can only be set when adding a calling license to a user.
        It cannot be changed if a user is already an existing calling user.

        When doing attendee management, to update a user from host role to an attendee
        for a site append #attendee to the respective siteUrl and remove the meeting
        host license for this site from the license array.

        To update a person from an attendee role to a host for a site, add the meeting
        license for this site in the meeting array, and remove that site from the
        siteurl parameter.

        To remove the attendee privilege for a user on a meeting site, remove the
        sitename#attendee from the siteUrls array. The showAllTypes parameter must
        be set to true.'
      documentation:
        doc: Update a Person
        doc_link: https://developer.webex.com/docs/api/v1/people/update-a-person
        endpoint: https://webexapis.com/v1/people/{personId}
        http_method: PUT
      header: Update a Person
      parameters_and_response:
        Body Parameters:
        - doc: 'The email addresses of the person. Only one email address is allowed
            per person.

            Possible values: john.andersen@example.com'
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Phone numbers for the person. Can only be set for Webex Calling. Needs
            a Webex Calling license.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: Webex Calling extension of the person. This is only settable for a
            person with a Webex Calling license
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The nickname of the person if configured. Set to the firstName automatically
            in update request.
          name: nickName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'An array of role strings representing the roles to which this admin
            user belongs.

            Possible values: Y2lzY29zcGFyazovL3VzL1JPTEUvOTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh,
            Y2lzY29zcGFyazovL3VzL1JPTEUvOTZhYmMyYWEtM2RjYy0xMWU1LWIyNjMtMGY0NTkyYWRlZmFi'
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: 'An array of license strings allocated to this person.

            Possible values: Y2lzY29zcGFyazovL3VzL0xJQ0VOU0UvOTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh,
            Y2lzY29zcGFyazovL3VzL0xJQ0VOU0UvOTZhYmMyYWEtM2RjYy0xMWU1LWIyNjMtMGY0NTkyYWRlZmFi'
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: 'One or several site names where this user has a role (host or attendee).
            Append #attendee to the site name to designate the attendee role on that
            site.

            Possible values: mysite.webex.com#attendee'
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Whether or not the user is allowed to use Webex. This property is only
            accessible if the authenticated user is an admin user for the person's
            organization.
          name: loginEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: Include Webex Calling user details in the response.
          name: callingData
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: 'Include additional user data like #attendee role'
          name: showAllTypes
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the person.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email addresses of the person.
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Phone numbers for the person.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work, mobile, fax'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: +1 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The Webex Calling extension for the person. Only applies to a person
            with a Webex Calling license
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person retrieved from BroadCloud.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The nickname of the person if configured. If no nickname is configured
            for the person, this field will not be present.
          name: nickName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of role strings representing the roles to which this admin
            user belongs.
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: An array of license strings allocated to this person.
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The date and time the person was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the person was last changed.
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time zone of the person if configured. If no timezone is configured
            on the account, this field will not be present
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the person's last activity within Webex. This
            will only be returned for people within your organization or an organization
            you manage. Presence information will not be shown if the authenticated
            user has disabled status sharing.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: One or several site names where this user has a role (host or attendee)
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The users sip addresses. Read-only.
          name: sipAddresses
          param_attrs: []
          param_object: []
          type: 'array[{"type": "personal-room","value": "testuser5@mycompany.webex.com","primary":
            false}]'
          type_spec: null
        - doc: The current presence status of the person. This will only be returned
            for people within your organization or an organization you manage. Presence
            information will not be shown if the authenticated user has disabled status
            sharing.
          name: status
          param_attrs:
          - doc: Active within the last 10 minutes
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a call
            name: call
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has manually set their status to "Do Not Disturb"
            name: DoNotDisturb
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last activity occurred more than 10 minutes ago
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a meeting
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user or a Hybrid Calendar service has indicated that they are
              "Out of Office"
            name: OutOfOffice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has never logged in; a status cannot be determined
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is sharing content
            name: presenting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "The user\u2019s status could not be determined"
            name: unknown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not an invite is pending for the user to complete account
            activation. This property is only returned if the authenticated user is
            an admin user for the person's organization.
          name: invitePending
          param_attrs:
          - doc: The person has been invited to Webex but has not created an account
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An invite is not pending for this person
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the user is allowed to use Webex. This property is only
            returned if the authenticated user is an admin user for the person's organization.
          name: loginEnabled
          param_attrs:
          - doc: the person can log into Webex
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: the person cannot log into Webex
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The type of person account, such as person or bot.
          name: type
          param_attrs:
          - doc: Account belongs to a person
            name: person
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a bot user
            name: bot
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a guest user
            name: appuser
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Remove a person from the system. Only an admin can remove a person.

        Specify the person ID in the personId parameter in the URI.'
      documentation:
        doc: Delete a Person
        doc_link: https://developer.webex.com/docs/api/v1/people/delete-a-person
        endpoint: https://webexapis.com/v1/people/{personId}
        http_method: DELETE
      header: Delete a Person
      parameters_and_response:
        URI Parameters:
        - doc: A unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get profile details for the authenticated user. This is the same as GET
        /people/{personId} using the Person ID associated with your Auth token.

        Admin users can include Webex Calling (BroadCloud) user details in the response
        by specifying callingData parameter as true.'
      documentation:
        doc: Get My Own Details
        doc_link: https://developer.webex.com/docs/api/v1/people/get-my-own-details
        endpoint: https://webexapis.com/v1/people/me
        http_method: GET
      header: Get My Own Details
      parameters_and_response:
        Query Parameters:
        - doc: Include Webex Calling user details in the response.
          name: callingData
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the person.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email addresses of the person.
          name: emails
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Phone numbers for the person.
          name: phoneNumbers
          param_attrs:
          - doc: 'The type of phone number.

              Possible values: work, mobile, fax'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The phone number.

              Possible values: +1 408 526 7209'
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The Webex Calling extension for the person. Only applies to a person
            with a Webex Calling license
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the location for this person retrieved from BroadCloud.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The full name of the person.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The nickname of the person if configured. If no nickname is configured
            for the person, this field will not be present.
          name: nickName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The first name of the person.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The last name of the person.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL to the person's avatar in PNG format.
          name: avatar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of role strings representing the roles to which this admin
            user belongs.
          name: roles
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: An array of license strings allocated to this person.
          name: licenses
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The business department the user belongs to.
          name: department
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A manager identifier
          name: manager
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person Id of the manager
          name: managerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: the person's title
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's address
          name: addresses
          param_attrs:
          - doc: 'The type of address

              Possible values: work'
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The user''s country

              Possible values: US'
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s locality, often city

              Possible values: Milpitas'
            name: locality
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s region, often state

              Possible values: California'
            name: region
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s street

              Possible values: 1099 Bird Ave.'
            name: streetAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'the user''s postal or zip code

              Possible values: 99212'
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        - doc: The date and time the person was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the person was last changed.
          name: lastModified
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time zone of the person if configured. If no timezone is configured
            on the account, this field will not be present
          name: timezone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the person's last activity within Webex. This
            will only be returned for people within your organization or an organization
            you manage. Presence information will not be shown if the authenticated
            user has disabled status sharing.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: One or several site names where this user has a role (host or attendee)
          name: siteUrls
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The users sip addresses. Read-only.
          name: sipAddresses
          param_attrs: []
          param_object: []
          type: 'array[{"type": "personal-room","value": "testuser5@mycompany.webex.com","primary":
            false}]'
          type_spec: null
        - doc: The current presence status of the person. This will only be returned
            for people within your organization or an organization you manage. Presence
            information will not be shown if the authenticated user has disabled status
            sharing.
          name: status
          param_attrs:
          - doc: Active within the last 10 minutes
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a call
            name: call
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has manually set their status to "Do Not Disturb"
            name: DoNotDisturb
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last activity occurred more than 10 minutes ago
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is in a meeting
            name: meeting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user or a Hybrid Calendar service has indicated that they are
              "Out of Office"
            name: OutOfOffice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user has never logged in; a status cannot be determined
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user is sharing content
            name: presenting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "The user\u2019s status could not be determined"
            name: unknown
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not an invite is pending for the user to complete account
            activation. This property is only returned if the authenticated user is
            an admin user for the person's organization.
          name: invitePending
          param_attrs:
          - doc: The person has been invited to Webex but has not created an account
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An invite is not pending for this person
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the user is allowed to use Webex. This property is only
            returned if the authenticated user is an admin user for the person's organization.
          name: loginEnabled
          param_attrs:
          - doc: the person can log into Webex
            name: 'true'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: the person cannot log into Webex
            name: 'false'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The type of person account, such as person or bot.
          name: type
          param_attrs:
          - doc: Account belongs to a person
            name: person
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a bot user
            name: bot
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Account is a guest user
            name: appuser
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
  Recording Report:
    doc: 'The recording report API is used to retrieve reports of recording.

      Refer to the Meetings API Scopes section of Meetings Overview for scopes required
      for each API.'
    header: Recording Report
    methods:
    - doc: 'Lists of recording audit report summaries. You can specify a date range
        and the maximum number of recording audit report summaries to return.

        Only recording audit report summaries of meetings hosted by or shared with
        the authenticated user will be listed.

        The list returned is sorted in descending order by the date and time that
        the recordings were created.

        Long result sets are split into pages.'
      documentation:
        doc: List of Recording Audit Report Summaries
        doc_link: https://developer.webex.com/docs/api/v1/recording-report/list-of-recording-audit-report-summaries
        endpoint: https://webexapis.com/v1/recordingReport/accessSummary
        http_method: GET
      header: List of Recording Audit Report Summaries
      parameters_and_response:
        Query Parameters:
        - doc: Maximum number of recording audit report summaries to return in a single
            page. max must be equal to or greater than 1 and equal to or less than
            100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Starting date and time (inclusive) for recording audit report summaries
            to return, in any ISO 8601 compliant format. from cannot be after to.
            Please note that the interval between to and from cannot exceed 90 days
            and the interval between the current time and from cannot exceed 365 days.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Ending date and time (exclusive) for recording audit report summaries
            to return, in any ISO 8601 compliant format. to cannot be before from.
            Please note that the interval between to and from cannot exceed 90 days
            and the interval between the current time and from cannot exceed 365 days.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin on-behalf-of scopes.
            If set, the admin may specify the email of a user in a site they manage
            and the API will return recording audit report summaries of that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: URL of the Webex site which the API lists recording audit report summaries
            from. If not specified, the API lists summary audit report for recordings
            from the user's preferred site. All available Webex sites and the preferred
            site of the user can be retrieved by Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of recording audit report summaries objects.
          name: items
          param_attrs:
          - doc: A unique identifier for the recording.
            name: recordingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The recording's topic.
            name: topic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the recording started in ISO 8601 compliant format.
              the time is the record button was clicked in the meeting.
            name: timeRecorded
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Site URL for the recording.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address for the meeting host.
            name: hostEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The number of times the recording was viewed.
            name: viewCount
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The number of times the recording was downloaded.
            name: downloadCount
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: array[RecordingReportSummaryObject]
          type_spec: null
    - doc: 'Retrieves details for a recording audit report with a specified recording
        ID.

        Only recording audit report details of meetings hosted by or shared with the
        authenticated user may be retrieved.'
      documentation:
        doc: Get Recording Audit Report Details
        doc_link: https://developer.webex.com/docs/api/v1/recording-report/get-recording-audit-report-details
        endpoint: https://webexapis.com/v1/recordingReport/accessDetail
        http_method: GET
      header: Get Recording Audit Report Details
      parameters_and_response:
        Query Parameters:
        - doc: A unique identifier for the recording.
          name: recordingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the admin on-behalf-of scopes.
            If set, the admin may specify the email of a user in a site they manage
            and the API will return recording details of that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Maximum number of recording audit report details to return in a single
            page. max must be equal to or greater than 1 and equal to or less than
            100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: An array of recording audit report objects.
          name: items
          param_attrs:
          - doc: A unique identifier for the recording.
            name: recordingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The recording's topic.
            name: topic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The name of the person who accessed the recording.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the person who accessed the recording.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the recording was accessed in ISO 8601 compliant
              format.
            name: accessTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the recording was viewed by the person.
            name: viewed
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the recording was downloaded by the person.
            name: downloaded
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[RecordingReportObject]
          type_spec: null
    - doc: 'Lists of meeting archive summaries. You can specify a date range and the
        maximum number of meeting archive summaries to return.

        Meeting archive summaries are only available to full administrators, not even
        the meeting host.

        The list returned is sorted in descending order by the date and time that
        the archives were created.

        Long result sets are split into pages.'
      documentation:
        doc: List Meeting Archive Summaries
        doc_link: https://developer.webex.com/docs/api/v1/recording-report/list-meeting-archive-summaries
        endpoint: https://webexapis.com/v1/recordingReport/meetingArchiveSummaries
        http_method: GET
      header: List Meeting Archive Summaries
      parameters_and_response:
        Query Parameters:
        - doc: Maximum number of meeting archive summaries to return in a single page.
            max must be equal to or greater than 1 and equal to or less than 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Starting date and time (inclusive) for meeting archive summaries to
            return, in any ISO 8601 compliant format. from cannot be after to. Please
            note that the interval between to and from cannot exceed 30 days.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Ending date and time (exclusive) for meeting archive summaries to return,
            in any ISO 8601 compliant format. to cannot be before from. Please note
            that the interval between to and from cannot exceed 30 days.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: URL of the Webex site which the API lists meeting archive summaries
            from. If not specified, the API lists meeting archive summaries for recordings
            from the user's preferred site. All available Webex sites and the preferred
            site of the user can be retrieved by Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of meeting archive summaries objects.
          name: items
          param_attrs:
          - doc: A unique identifier for the meeting archive summary.
            name: archiveId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Recording achrive summary's service-type.
            name: serviceType
            param_attrs:
            - doc: ''
              name: MeetingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: EventCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: TrainingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: SupportCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Meeting title.
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time in ISO 8601 compliant format that when the archive
              was created by the system.
            name: createTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[RecordingAchriveSummaryObject]
          type_spec: null
    - doc: 'Retrieves details for a meeting archive report with a specified archive
        ID, which contains recording metadata.

        Meeting archive details are only available to full administrators, not even
        the meeting host.'
      documentation:
        doc: Get Meeting Archive Details
        doc_link: https://developer.webex.com/docs/api/v1/recording-report/get-meeting-archive-details
        endpoint: https://webexapis.com/v1/recordingReport/meetingArchives/{archiveId}
        http_method: GET
      header: Get Meeting Archive Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the meeting archive summary.
          name: archiveId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Recording achrive report's service-type.
          name: serviceType
          param_attrs:
          - doc: ''
            name: MeetingCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: EventCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: TrainingCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: SupportCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Meeting title.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start time for meeting in ISO 8601 compliant format.
          name: start
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End time for a meeting in ISO 8601 compliant format.
          name: end
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Display name for the meeting host.
          name: hostDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the meeting host.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The participants of the meeting archive.
          name: participants
          param_attrs:
          - doc: An internal ID that is associated with each join.
            name: correlationId
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Display name for the meeting participant.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The time the participant joined the meeting.
            name: joinedTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The time the participant left the meeting.
            name: leftTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Email address for the meeting participant.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[MeetingRecordingArchiveParticipant]
          type_spec: null
        - doc: The chats of the meeting archive.
          name: chats
          param_attrs:
          - doc: Whether the type of the chat is private, public or group. Private
              chat is for the 1:1 chat. Public chat is for the message which is sent
              to all the people in the meeting. Group chat is for the message which
              is sent to a small group of people, like a message to the "host and
              presenter".
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name for the sender of the chat snippet.
            name: senderName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Chat time for the chat snippet in ISO 8601 compliant format.
            name: chatTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Information of the receivers of the chat snippet.
            name: target
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The text of the chat snippet.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[MeetingRecordingArchiveChat]
          type_spec: null
        - doc: The polls of the meeting archive.
          name: polls
          param_attrs:
          - doc: The type of the question.
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the poll started in ISO 8601 compliant format.
            name: startTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the poll ended in ISO 8601 compliant format.
            name: endTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The content of the meeting archive poll;
            name: content
            param_attrs: []
            param_object:
            - doc: The total number of questions.
              name: questionCount
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The total number of users.
              name: userCount
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of voters among users.
              name: votedUserCount
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Poll's questions.
              name: questions
              param_attrs:
              - doc: The voters among users.
                name: voteUsers
                param_attrs:
                - doc: An internal ID that is associated with each join.
                  name: correlationId
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: Display name for the meeting participant.
                  name: displayName
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Email address for the meeting participant.
                  name: email
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[MeetingRecordingArchiveUser]
                type_spec: null
              - doc: The poll's question.
                name: question
                param_attrs: []
                param_object:
                - doc: The number of choices in the questions.
                  name: choiceCount
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: The type of the question.
                  name: type
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The text of the question.
                  name: text
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                type: object
                type_spec: null
              - doc: The answer summary of the archive poll.
                name: answerSummary
                param_attrs:
                - doc: The total number of people who selected this answer.
                  name: totalRespondents
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: Whether the answer is correct.
                  name: isCorrect
                  param_attrs: []
                  param_object: []
                  type: boolean
                  type_spec: null
                - doc: The text of the answer.
                  name: text
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The voters among users.
                  name: voteUsers
                  param_attrs:
                  - doc: An internal ID that is associated with each join.
                    name: correlationId
                    param_attrs: []
                    param_object: []
                    type: number
                    type_spec: null
                  - doc: Display name for the meeting participant.
                    name: displayName
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Email address for the meeting participant.
                    name: email
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  param_object: []
                  type: array[MeetingRecordingArchiveUser]
                  type_spec: null
                param_object: []
                type: array[MeetingRecordingArchivePollAnswerSummary]
                type_spec: null
              - doc: The question's respondents.
                name: respondents
                param_attrs:
                - doc: An internal ID that is associated with the respondent's each
                    join.
                  name: correlationId
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: Display name for the poll respondent.
                  name: displayName
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Email address for the poll respondent.
                  name: email
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: An array of answers to the question.
                  name: answers
                  param_attrs: []
                  param_object: []
                  type: array[string]
                  type_spec: null
                param_object: []
                type: array[MeetingRecordingArchivePollRespondent]
                type_spec: null
              param_object: []
              type: array[MeetingRecordingArchivePollQuestion]
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: array[MeetingRecordingArchivePoll]
          type_spec: null
        - doc: Meeting meeting archive's Q and A.
          name: qas
          param_attrs:
          - doc: The priority of the Q and A.
            name: priority
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether the type of the Q and A is private, public, or group. Private
              Q and A is for the 1:1 chat. Public Q and A are for the message which
              is sent to all the people in the meeting. Group Q and A are for the
              message which is sent to a small group of people, like a Q and A to
              "host and presenter".
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email of the user who asked the question.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the question was created in ISO 8601 compliant
              format.
            name: questionTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Information of the user who asked the question.
            name: target
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The question that was asked.
            name: question
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Question's answers.
            name: answers
            param_attrs:
            - doc: The answer's response mode.
              name: responseMode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The name of the person who answered the question.
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An internal ID that is associated with the answer's each join.
              name: correlationId
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The email of the person who answered the question.
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The date and time the question answered in ISO 8601 compliant format.
              name: answerTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The text of the answer.
              name: text
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[MeetingRecordingArchiveQAAnswer]
            type_spec: null
          param_object: []
          type: array[MeetingRecordingArchiveQA]
          type_spec: null
        - doc: The system Information of the meeting archive, which can be only supported
            when serviceType is SupportCenter.
          name: systemInfos
          param_attrs:
          - doc: The name of the person who accessed the meeting archive.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The catalogs of system information.
            name: catalogs
            param_attrs:
            - doc: System summary.
              name: systemSummary
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The browser user agent of the person who acted.
              name: browser
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The type of hardware that the user used to attend the meeting.
              name: hardware
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The software that the user used to attend the meeting.
              name: installedSoftware
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The software the user used that is running.
              name: runningSoftware
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Startup Programs.
              name: startupPrograms
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The storage information of the user's device.
              name: storage
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The video of the user's device.
              name: video
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The network of the user's device.
              name: network
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The operating system of the user's device.
              name: operatingSystem
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The environment variables of the user's device.
              name: environmentVariables
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The processes of the user's device.
              name: processes
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The logical drives of the user's device.
              name: logicalDrives
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The device of the user.
              name: devices
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The service of the user's device.
              name: services
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The system driver of the user's device.
              name: systemDrivers
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The sign driver system of the user's device.
              name: signedDrivers
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The event viewer of the user's device.
              name: eventViewer
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The basic input and output system.
              name: bios
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[SystemInfoCatalog]
            type_spec: null
          param_object: []
          type: array[MeetingRecordingArchiveSystemInfo]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the meeting archive summary.
          name: archiveId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Recordings:
    doc: 'Recordings are meeting content captured in a meeting or files uploaded via
      the upload page for your Webex site.

      This API manages recordings. Recordings may be retrieved via download or playback
      links defined by downloadUrl or playbackUrl in the response body.

      When the recording function is paused in the meeting the recording will not
      contain the pause. If the recording function is stopped and restarted in the
      meeting, several recordings will be created. These recordings will be consolidate
      and available all at once.

      Refer to the Meetings API Scopes for the specific scopes required for each API.'
    header: Recordings
    methods:
    - doc: 'Lists recordings. You can specify a date range, a parent meeting ID, and
        the maximum number of recordings to return.

        Only recordings of meetings hosted by or shared with the authenticated user
        will be listed.

        The list returned is sorted in descending order by the date and time that
        the recordings were created.

        Long result sets are split into pages.'
      documentation:
        doc: List Recordings
        doc_link: https://developer.webex.com/docs/api/v1/recordings/list-recordings
        endpoint: https://webexapis.com/v1/recordings
        http_method: GET
      header: List Recordings
      parameters_and_response:
        Query Parameters:
        - doc: Maximum number of recordings to return in a single page. max must be
            equal to or greater than 1 and equal to or less than 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Starting date and time (inclusive) for recordings to return, in any
            ISO 8601 compliant format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Ending date and time (exclusive) for List recordings to return, in
            any ISO 8601 compliant format. to cannot be before from.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the parent meeting series, scheduled meeting,
            or meeting instance for which recordings are being requested. If a meeting
            series ID is specified, the operation returns an array of recordings for
            the specified meeting series. If a scheduled meeting ID is specified,
            the operation returns an array of recordings for the specified scheduled
            meeting. If a meeting instance ID is specified, the operation returns
            an array of recordings for the specified meeting instance. If no ID is
            specified, the operation returns an array of recordings for all meetings
            of the current user. When meetingId is specified, the siteUrl parameter
            is ignored.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the required admin-level meeting
            scopes. If set, the admin may specify the email of a user in a site they
            manage and the API will return recordings of that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: URL of the Webex site from which the API lists recordings. If not specified,
            the API lists recordings from all of a user's sites. All available Webex
            sites and the preferred site of the user can be retrieved by the Get Site
            List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: External key of the parent meeting created by an integration application.
            This parameter is used by the integration application to query recordings
            by a key in its own domain, such as a Zendesk ticket ID, a Jira ID, a
            Salesforce Opportunity ID, etc.
          name: integrationTag
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Recording's topic. If specified, the API filters recordings by topic
            in a case-insensitive manner.
          name: topic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Recording's file format. If specified, the API filters recordings by
            format. Valid values are MP4 or ARF.
          name: format
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Recording''s service-type. If this item is specified, the API filters
            recordings by service-type. Valid values:

            * MeetingCenter

            * EventCenter

            * SupportCenter

            * TrainingCenter'
          name: serviceType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Recording''s status. If not specified or available, retrieves recordings
            that are available. Otherwise, if specified as deleted, retrieves recordings
            that have been moved into the recycle bin.

            Possible values: available, deleted'
          name: status
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of recording objects.
          name: items
          param_attrs:
          - doc: A unique identifier for the recording.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the parent ended meeting instance which the
              recording belongs to.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the parent scheduled meeting which the recording
              belongs to.
            name: scheduledMeetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the parent meeting series which the recording
              belongs to.
            name: meetingSeriesId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The recording's topic.
            name: topic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time recording was created in ISO 8601 compliant format.
              Please note that it's not the time the record button was clicked in
              meeting but the time the recording file was generated offline.
            name: createTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time recording started in ISO 8601 compliant format.
              It indicates when the record button was clicked in the meeting.
            name: timeRecorded
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Site URL for the recording.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The download link for recording. This attribute is not available
              if Prevent downloading has been turned on for the recording being requested.
              The Prevent downloading option can be viewed and set by a site admin
              on Control Hub.
            name: downloadUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The playback link for recording.
            name: playbackUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The recording's password.
            name: password
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: format
            param_attrs:
            - doc: Recording file format is MP4.
              name: MP4
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Recording file format is ARF, a private format of Webex recordings.
                This format requires the Cisco ARF recording player.
              name: ARF
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: ''
            name: serviceType
            param_attrs:
            - doc: Recording service-type is MeetingCenter.
              name: MeetingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Recording service-type is EventCenter.
              name: EventCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Recording service-type is SupportCenter.
              name: SupportCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Recording service-type is TrainingCenter.
              name: TrainingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The duration of the recording, in seconds.
            name: durationSeconds
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The size of the recording file, in bytes.
            name: sizeBytes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Whether or not the recording has been shared to the current user.
            name: shareToMe
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: External keys of the parent meeting created by an integration application.
              They could be Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
              etc. The integration application queries recordings by a key in its
              own domain.
            name: integrationTags
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: ''
            name: status
            param_attrs:
            - doc: Recording is available.
              name: available
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Recording has been moved into recycle bin.
              name: deleted
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[RecordingObject]
          type_spec: null
    - doc: 'List recordings for an admin or compliance officer. You can specify a
        date range, a parent meeting ID, and the maximum number of recordings to return.

        The list returned is sorted in descending order by the date and time that
        the recordings were created.

        Long result sets are split into pages.'
      documentation:
        doc: List Recordings For an Admin or Compliance Officer
        doc_link: https://developer.webex.com/docs/api/v1/recordings/list-recordings-for-an-admin-or-compliance-officer
        endpoint: https://webexapis.com/v1/admin/recordings
        http_method: GET
      header: List Recordings For an Admin or Compliance Officer
      parameters_and_response:
        Query Parameters:
        - doc: Maximum number of recordings to return in a single page. max must be
            equal to or greater than 1 and equal to or less than 100.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Starting date and time (inclusive) for recordings to return, in any
            ISO 8601 compliant format. from cannot be after to. The interval between
            from and to must be within 30 days.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Ending date and time (exclusive) for List recordings to return, in
            any ISO 8601 compliant format. to cannot be before from. The interval
            between from and to must be within 30 days.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the parent meeting series, scheduled meeting,
            or meeting instance for which recordings are being requested. If a meeting
            series ID is specified, the operation returns an array of recordings for
            the specified meeting series. If a scheduled meeting ID is specified,
            the operation returns an array of recordings for the specified scheduled
            meeting. If a meeting instance ID is specified, the operation returns
            an array of recordings for the specified meeting instance. If not specified,
            the operation returns an array of recordings for all the current user's
            meetings. When meetingId is specified, the siteUrl parameter is ignored.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: URL of the Webex site which the API lists recordings from. If not specified,
            the API lists recordings from user's preferred site. All available Webex
            sites and preferred site of the user can be retrieved by Get Site List
            API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: External key of the parent meeting created by an integration application.
            This parameter is used by the integration application to query recordings
            by a key in its own domain such as a Zendesk ticket ID, a Jira ID, a Salesforce
            Opportunity ID, etc.
          name: integrationTag
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Recording topic. If specified, the API filters recordings by topic
            in a case-insensitive manner.
          name: topic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Recording''s file format. If specified, the API filters recordings
            by format. Valid values: MP4 or ARF.'
          name: format
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Recording''s service-type. If specified, the API filters recordings
            by service-type. Valid values:

            * MeetingCenter

            * EventCenter

            * SupportCenter

            * TrainingCenter'
          name: serviceType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Recording''s status. If not specified or available, retrieves recordings
            that are available. Otherwise, if specified as deleted, retrieves recordings
            that have been moved to the recycle bin.

            Possible values: available, deleted'
          name: status
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of recording objects.
          name: items
          param_attrs:
          - doc: A unique identifier for the recording.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the parent ended meeting instance which the
              recording belongs to.
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the parent scheduled meeting which the recording
              belongs to.
            name: scheduledMeetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the parent meeting series which the recording
              belongs to.
            name: meetingSeriesId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The recording's topic.
            name: topic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time recording was created in ISO 8601 compliant format.
              Please note that it's not the time the record button was clicked in
              meeting but the time the recording file was generated offline.
            name: createTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time recording started in ISO 8601 compliant format.
              It indicates when the record button was clicked in the meeting.
            name: timeRecorded
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Site URL for the recording.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The download link for recording. This attribute is not available
              if Prevent downloading has been turned on for the recording being requested.
              The Prevent downloading option can be viewed and set by a site admin
              on Control Hub.
            name: downloadUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The playback link for recording.
            name: playbackUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The recording's password.
            name: password
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: format
            param_attrs:
            - doc: Recording file format is MP4.
              name: MP4
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Recording file format is ARF, a private format of Webex recordings.
                This format requires the Cisco ARF recording player.
              name: ARF
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: ''
            name: serviceType
            param_attrs:
            - doc: Recording service-type is MeetingCenter.
              name: MeetingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Recording service-type is EventCenter.
              name: EventCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Recording service-type is SupportCenter.
              name: SupportCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Recording service-type is TrainingCenter.
              name: TrainingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The duration of the recording, in seconds.
            name: durationSeconds
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The size of the recording file, in bytes.
            name: sizeBytes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Whether or not the recording has been shared to the current user.
            name: shareToMe
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: External keys of the parent meeting created by an integration application.
              They could be Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
              etc. The integration application queries recordings by a key in its
              own domain.
            name: integrationTags
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: ''
            name: status
            param_attrs:
            - doc: Recording is available.
              name: available
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Recording has been moved into recycle bin.
              name: deleted
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[RecordingObject]
          type_spec: null
    - doc: 'Retrieves details for a recording with a specified recording ID.

        Only recordings of meetings hosted by or shared with the authenticated user
        may be retrieved.'
      documentation:
        doc: Get Recording Details
        doc_link: https://developer.webex.com/docs/api/v1/recordings/get-recording-details
        endpoint: https://webexapis.com/v1/recordings/{recordingId}
        http_method: GET
      header: Get Recording Details
      parameters_and_response:
        Query Parameters:
        - doc: Email address for the meeting host. Only used if the user or application
            calling the API has required admin-level meeting scopes. If set, the admin
            may specify the email of a user in a site they manage, and the API will
            return recording details of that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for recording.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the parent ended meeting instance which the recording
            belongs to.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the parent scheduled meeting which the recording
            belongs to.
          name: scheduledMeetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the parent meeting series which the recording
            belongs to.
          name: meetingSeriesId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The recording's topic.
          name: topic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time recording was created in ISO 8601 compliant format.
            Please note that it's not the time the record button was clicked in meeting
            but the time the recording file was generated offline.
          name: createTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time recording started in ISO 8601 compliant format. It
            indicates when the record button was clicked in the meeting.
          name: timeRecorded
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Site URL for the recording.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The download link for the recording. This attribute is not available
            if prevent downloading has been turned on for the recording being requested.
            The prevent downloading option can be viewed and set on page when editing
            a recording.
          name: downloadUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The playback link for recording.
          name: playbackUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The recording's password.
          name: password
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: format
          param_attrs:
          - doc: Recording file format is MP4.
            name: MP4
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Recording file format is ARF, a private format of Webex recordings.
              This format requires the Cisco ARF recording player.
            name: ARF
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: ''
          name: serviceType
          param_attrs:
          - doc: Recording service-type is MeetingCenter.
            name: MeetingCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Recording service-type is EventCenter.
            name: EventCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Recording service-type is SupportCenter.
            name: SupportCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Recording service-type is TrainingCenter.
            name: TrainingCenter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The duration of the recording in seconds.
          name: durationSeconds
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The size of the recording file in bytes.
          name: sizeBytes
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Whether or not the recording has been shared to the current user.
          name: shareToMe
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The download links for MP4, audio, and transcript of the recording
            without HTML page rendering in browser or HTTP redirect. This attribute
            is not available if the user is not a Compliance Officer and Prevent Downloading
            has been turned on for the recording being requested. The Prevent Downloading
            option can be viewed and set on page when editing a recording. Note that
            there are various products in Webex Suite such as "Webex Meetings", "Webex
            Training" and "Webex Events". Currently, this attribute is only available
            for Webex Meetings.
          name: temporaryDirectDownloadLinks
          param_attrs: []
          param_object:
          - doc: The download link for recording MP4 file without HTML page rendering
              in browser or HTTP redirect. Expires 3 hours after the API request.
            name: recordingDownloadLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The download link for recording audio file without HTML page rendering
              in browser or HTTP redirect. This attribute is not available if Prevent
              Downloading has been turned on for the recording being requested. Expires
              3 hours after the API request.
            name: audioDownloadLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The download link for recording transcript file without HTML page
              rendering in browser or HTTP redirect. This attribute is not available
              if Prevent Downloading has been turned on for the recording being requested.
              Expires 3 hours after the API request.
            name: transcriptDownloadLink
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time when recordingDownloadLink, audioDownloadLink,
              and transcriptDownloadLink expire in ISO 8601 compliant format.
            name: expiration
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: External keys of the parent meeting created by an integration application.
            The key can be Zendesk ticket IDs, Jira IDs, Salesforce Opportunity IDs,
            etc. The integration application queries recordings by a key in its own
            domain.
          name: integrationTags
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: ''
          name: status
          param_attrs:
          - doc: Recording is available.
            name: available
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Recording has been moved to the recycle bin.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Recording has been purged from the recycle bin. Please note that
              only a compliance officer can access recordings with a purged status.
            name: purged
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the recording.
          name: recordingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Removes a recording with a specified recording ID. The deleted recording
        cannot be recovered. If a Compliance Officer deletes another user''s recording,
        the recording will be inaccessible to regular users (host, attendees and shared),
        but will be still available to the Compliance Officer.

        Only recordings of meetings hosted by the authenticated user can be deleted.'
      documentation:
        doc: Delete a Recording
        doc_link: https://developer.webex.com/docs/api/v1/recordings/delete-a-recording
        endpoint: https://webexapis.com/v1/recordings/{recordingId}
        http_method: DELETE
      header: Delete a Recording
      parameters_and_response:
        Body Parameters:
        - doc: Reason for deleting a recording. Only required when a Compliance Officer
            is operating on another user's recording.
          name: reason
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Compliance Officer's explanation for deleting a recording. The comment
            can be a maximum of 255 characters long.
          name: comment
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: Email address for the meeting host. Only used if the user or application
            calling the API has the required admin-level meeting scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will delete a recording of that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the recording.
          name: recordingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Move recordings into the recycle bin with recording IDs. Recordings in
        the recycle bin can be recovered by Restore Recordings from Recycle Bin API.
        If you''d like to empty recordings from the recycle bin, you can use Purge
        Recordings from Recycle Bin API to purge all or some of them.

        Only recordings of meetings hosted by the authenticated user can be moved
        into the recycle bin.'
      documentation:
        doc: Move Recordings into the Recycle Bin
        doc_link: https://developer.webex.com/docs/api/v1/recordings/move-recordings-into-the-recycle-bin
        endpoint: https://webexapis.com/v1/recordings/softDelete
        http_method: POST
      header: Move Recordings into the Recycle Bin
      parameters_and_response:
        Body Parameters:
        - doc: Recording IDs for removing recordings into the recycle bin in batch.
            Please note that all the recording IDs should belong to the site of siteUrl
            or the user's preferred site if siteUrl is not specified.
          name: recordingIds
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        - doc: URL of the Webex site from which the API deletes recordings. If not
            specified, the API deletes recordings from the user's preferred site.
            All available Webex sites and preferred sites of a user can be retrieved
            by the Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: Email address for the meeting host. Only used if the user or application
            calling the API has the required admin-level meeting scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will move recordings into recycle bin of that user
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Restore all or some recordings from the recycle bin. Only recordings of
        meetings hosted by the authenticated user can be restored from recycle bin.
      documentation:
        doc: Restore Recordings from Recycle Bin
        doc_link: https://developer.webex.com/docs/api/v1/recordings/restore-recordings-from-recycle-bin
        endpoint: https://webexapis.com/v1/recordings/restore
        http_method: POST
      header: Restore Recordings from Recycle Bin
      parameters_and_response:
        Body Parameters:
        - doc: If not specified or false, restores the recordings specified by recordingIds.
            If true, restores all recordings from the recycle bin.
          name: restoreAll
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Recording IDs for recovering recordings from the recycle bin in batch.
            Note that all the recording IDs should belong to the site of siteUrl or
            the user's preferred site if siteUrl is not specified.
          name: recordingIds
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: URL of the Webex site from which the API restores recordings. If not
            specified, the API restores recordings from a user's preferred site. All
            available Webex sites and preferred sites of a user can be retrieved by
            Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: Email address for the meeting host. This parameter is only used if
            the user or application calling the API has the required admin-level meeting
            scopes. If set, the admin may specify the email of a user in a site they
            manage and the API will restore recordings of that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Purge recordings from recycle bin with recording IDs or purge all the
        recordings that are in the recycle bin.

        Only recordings of meetings hosted by the authenticated user can be purged
        from recycle bin.'
      documentation:
        doc: Purge Recordings from Recycle Bin
        doc_link: https://developer.webex.com/docs/api/v1/recordings/purge-recordings-from-recycle-bin
        endpoint: https://webexapis.com/v1/recordings/purge
        http_method: POST
      header: Purge Recordings from Recycle Bin
      parameters_and_response:
        Body Parameters:
        - doc: If not specified or false, purges the recordings specified by recordingIds.
            If true, purges all recordings from the recycle bin.
          name: purgeAll
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Recording IDs for purging recordings from the recycle bin in batch.
            Note that all the recording IDs should belong to the site of siteUrl or
            the user's preferred site if siteUrl is not specified.
          name: recordingIds
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: URL of the Webex site from which the API purges recordings. If not
            specified, the API purges recordings from user's preferred site. All available
            Webex sites and preferred sites of the user can be retrieved by Get Site
            List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: Email address for the meeting host. Only used if the user or application
            calling the API has the required admin-level meeting scopes. If set, the
            admin may specify the email of a user in a site they manage and the API
            will purge recordings from recycle bin of that user.
          name: hostEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
  Report Templates:
    doc: 'Report templates are available for use with the Reports API.

      To access this endpoint, you must use an administrator token with the analytics:read_all
      scope. The authenticated user must be a read-only or full administrator of the
      organization to which the report belongs.

      To use this endpoint the organization needs to be licensed for Pro Pack for
      Control Hub.

      For more information about Report Templates, see the Admin API guide.'
    header: Report Templates
    methods:
    - doc: 'List all the available report templates that can be generated.

        CSV (comma separated value) reports for Webex services are only supported
        for organizations based in the North American region. Organizations based
        in other regions will return blank CSV files for any Webex reports.'
      documentation:
        doc: List Report Templates
        doc_link: https://developer.webex.com/docs/api/v1/report-templates/list-report-templates
        endpoint: https://webexapis.com/v1/report/templates
        http_method: GET
      header: List Report Templates
      parameters_and_response:
        Response Properties:
        - doc: An array of template object
          name: Template Attributes
          param_attrs:
          - doc: Unique identifier representing a report.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the template.
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The service to which the report belongs.
            name: service
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Maximum date range for reports belonging to this template.
            name: maxDays
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Generated reports belong to which field.
            name: identifier
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: validations
            param_attrs:
            - doc: An array of validation rules
              name: validations
              param_attrs:
              - doc: Field on which validation rule is applied
                name: field
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Whether the above field is required
                name: required
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[Validation Rules]
              type_spec: null
            param_object: []
            type: Validation Rules Collection
            type_spec: null
          param_object: []
          type: array[Template]
          type_spec: null
  Reports:
    doc: 'To access these endpoints, you must use an administrator token with the
      analytics:read_all scope. The authenticated user must be a read-only or full
      administrator of the organization to which the report belongs.

      To use this endpoint the org needs to be licensed for the Pro Pack.

      Reports available via Webex Control Hub may be generated and downloaded via
      the Reports API. To access this API, the authenticated user must be a read-only
      or full administrator of the organization to which the report belongs.

      For more information about Reports, see the Admin API guide.'
    header: Reports
    methods:
    - doc: 'Lists all reports. Use query parameters to filter the response. The parameters
        are optional. However, from and to parameters should be provided together.

        CSV reports for Teams services are only supported for organizations based
        in the North American region. Organizations based in a different region will
        return blank CSV files for any Teams reports.'
      documentation:
        doc: List Reports
        doc_link: https://developer.webex.com/docs/api/v1/reports/list-reports
        endpoint: https://webexapis.com/v1/reports
        http_method: GET
      header: List Reports
      parameters_and_response:
        Query Parameters:
        - doc: List reports by ID.
          name: reportId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List reports which use this service.
          name: service
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List reports with this report template ID.
          name: templateId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: List reports that were created on or after this date.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List reports that were created before this date.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of report objects.
          name: Report Attributes
          param_attrs:
          - doc: Unique identifier for the report.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the template to which this report belongs.
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The service to which the report belongs.
            name: service
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The data in this report belongs to dates greater than or equal to
              this.
            name: startDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The data in this report belongs to dates smaller than or equal to
              this.
            name: endDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The site to which this report belongs to. This only exists if the
              report belongs to service Webex.
            name: siteList
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Time of creation for this report.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person who created the report.
            name: createdBy
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether this report was scheduled from API or Control Hub.
            name: scheduledFrom
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Completion status of this report.
            name: status
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The link from which the report can be downloaded.
            name: downloadURL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Report]
          type_spec: null
    - doc: 'Create a new report. For each templateId, there are a set of validation
        rules that need to be followed. For example, for templates belonging to Webex,
        the user needs to provide siteUrl. These validation rules can be retrieved
        via the Report Templates API.

        The ''templateId'' parameter is a number. However, it is a limitation of developer.webex.com
        platform that it is passed as a string when you try to test the API from here.

        CSV reports for Teams services are only supported for organizations based
        in the North American region. Organizations based in a different region will
        return blank CSV files for any Teams reports.'
      documentation:
        doc: Create a Report
        doc_link: https://developer.webex.com/docs/api/v1/reports/create-a-report
        endpoint: https://webexapis.com/v1/reports
        http_method: POST
      header: Create a Report
      parameters_and_response:
        Body Parameters:
        - doc: Unique ID representing valid report templates.
          name: templateId
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: Data in the report will be from this date onwards.
          name: startDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Data in the report will be until this date.
          name: endDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sites belonging to user's organization. This attribute is needed for
            site-based templates.
          name: siteList
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: The unique identifier for the report.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a report, by report ID.

        Specify the report ID in the reportId parameter in the URI.

        CSV reports for Teams services are only supported for organizations based
        in the North American region. Organizations based in a different region will
        return blank CSV files for any Teams reports.'
      documentation:
        doc: Get Report Details
        doc_link: https://developer.webex.com/docs/api/v1/reports/get-report-details
        endpoint: https://webexapis.com/v1/reports/{reportId}
        http_method: GET
      header: Get Report Details
      parameters_and_response:
        Response Properties:
        - doc: Unique identifier for the report.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the template to which this report belongs.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The service to which the report belongs.
          name: service
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The data in this report belongs to dates greater than or equal to this.
          name: startDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The data in this report belongs to dates smaller than or equal to this.
          name: endDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The site to which this report belongs to. This only exists if the report
            belongs to service Webex.
          name: siteList
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Time of creation for this report.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person who created the report.
          name: createdBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether this report was scheduled from API or Control Hub.
          name: scheduledFrom
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Completion status of this report.
          name: status
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The link from which the report can be downloaded.
          name: downloadURL
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the report.
          name: reportId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Remove a report from the system.

        Specify the report ID in the reportId parameter in the URI

        CSV reports for Teams services are only supported for organizations based
        in the North American region. Organizations based in a different region will
        return blank CSV files for any Teams reports.'
      documentation:
        doc: Delete a Report
        doc_link: https://developer.webex.com/docs/api/v1/reports/delete-a-report
        endpoint: https://webexapis.com/v1/reports/{reportId}
        http_method: DELETE
      header: Delete a Report
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the report.
          name: reportId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Resource Group Memberships:
    doc: 'Resource Group Memberships represent a person''s relationship to a Resource
      Group for a particular Hybrid Services license. Users assigned a new license
      will be automatically placed in a "default" Resource Group. Use this API to
      list memberships for all people in an organization or update memberships to
      use a different Resource Group.

      Searching and viewing Resource Group Memberships requires an administrator auth
      token with the spark-admin:resource_group_memberships_read scope. Updating memberships
      requires an administrator auth token with the spark-admin:resource_group_memberships_write
      scope.

      To manage Resource Groups, see the Resource Groups API. For more information
      about Resource Groups, see the Managing Hybrid Services guide.'
    header: Resource Group Memberships
    methods:
    - doc: 'Lists all resource group memberships for an organization.

        Use query parameters to filter the response.'
      documentation:
        doc: List Resource Group Memberships
        doc_link: https://developer.webex.com/docs/api/v1/resource-group-memberships/list-resource-group-memberships
        endpoint: https://webexapis.com/v1/resourceGroup/memberships
        http_method: GET
      header: List Resource Group Memberships
      parameters_and_response:
        Query Parameters:
        - doc: List resource group memberships for a license, by ID.
          name: licenseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List resource group memberships for a person, by ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List resource group memberships for an organization, by ID.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit resource group memberships to a specific status.
          name: status
          param_attrs:
          - doc: ''
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: activated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: error
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Limit the maximum number of resource group memberships in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the resource group membership.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The resource group ID.
            name: resourceGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The license ID.
            name: licenseId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person ID.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The organization ID of the person.
            name: personOrgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The activation status of the resource group membership.
            name: status
            param_attrs:
            - doc: activation pending
              name: pending
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: activated
              name: activated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: error present
              name: error
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[Resource Group Membership]
          type_spec: null
    - doc: 'Shows details for a resource group membership, by ID.

        Specify the resource group membership ID in the resourceGroupMembershipId
        URI parameter.'
      documentation:
        doc: Get Resource Group Membership Details
        doc_link: https://developer.webex.com/docs/api/v1/resource-group-memberships/get-resource-group-membership-details
        endpoint: https://webexapis.com/v1/resourceGroup/memberships/{resourceGroupMembershipId}
        http_method: GET
      header: Get Resource Group Membership Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the resource group membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The resource group ID.
          name: resourceGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The license ID.
          name: licenseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The activation status of the resource group membership.
          name: status
          param_attrs:
          - doc: activation pending
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: activated
            name: activated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: error present
            name: error
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the resource group membership.
          name: resourceGroupMembershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: "Updates a resource group membership, by ID.\nSpecify the resource group\
        \ membership ID in the resourceGroupMembershipId\_URI parameter.\nOnly the\
        \ resourceGroupId\_can be changed with this action. Resource group memberships\
        \ with a status\_of \"pending\" cannot be updated. For more information about\
        \ resource group memberships, see the Managing Hybrid Services guide."
      documentation:
        doc: Update a Resource Group Membership
        doc_link: https://developer.webex.com/docs/api/v1/resource-group-memberships/update-a-resource-group-membership
        endpoint: https://webexapis.com/v1/resourceGroup/memberships/{resourceGroupMembershipId}
        http_method: PUT
      header: Update a Resource Group Membership
      parameters_and_response:
        Body Parameters:
        - doc: The resource group ID.
          name: resourceGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The license ID.
          name: licenseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The activation status of the resource group membership.
          name: status
          param_attrs:
          - doc: activation pending
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: activated
            name: activated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: error present
            name: error
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the resource group membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The resource group ID.
          name: resourceGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The license ID.
          name: licenseId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The activation status of the resource group membership.
          name: status
          param_attrs:
          - doc: activation pending
            name: pending
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: activated
            name: activated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: error present
            name: error
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the resource group membership.
          name: resourceGroupMembershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Resource Groups:
    doc: 'Resource Groups are collections of on-premise clusters which provide Hybrid
      Services to a particular subset of people in an organization. If a person has
      a Hybrid Services license associated with their account, they will be associated
      with a resource group to use specific on-premise clusters for that service.

      Searching and viewing Resource Groups requires an administrator auth token with
      a scope of spark-admin:resource_groups_read.

      To manage the people associated with Resource Groups, see the Resource Group
      Memberships API. For more information about Resource Groups, see the Managing
      Hybrid Services guide.'
    header: Resource Groups
    methods:
    - doc: 'List resource groups.

        Use query parameters to filter the response.'
      documentation:
        doc: List Resource Groups
        doc_link: https://developer.webex.com/docs/api/v1/resource-groups/list-resource-groups
        endpoint: https://webexapis.com/v1/resourceGroups
        http_method: GET
      header: List Resource Groups
      parameters_and_response:
        Query Parameters:
        - doc: List resource groups in this organization. Only admin users of another
            organization (such as partners) may use this parameter.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the resource group.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A user-friendly name for the resource group.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization to which this resource group belongs.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Resource Group]
          type_spec: null
    - doc: 'Shows details for a resource group, by ID.

        Specify the resource group ID in the resourceGroupId parameter in the URI.'
      documentation:
        doc: Get Resource Group Details
        doc_link: https://developer.webex.com/docs/api/v1/resource-groups/get-resource-group-details
        endpoint: https://webexapis.com/v1/resourceGroups/{resourceGroupId}
        http_method: GET
      header: Get Resource Group Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the resource group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the resource group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization to which this resource group belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the resource group.
          name: resourceGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Roles:
    doc: A persona for an authenticated user, corresponding to a set of privileges
      within an organization. This roles resource can be accessed only by an admin
      and shows only roles relevant to an admin.
    header: Roles
    methods:
    - doc: List all roles.
      documentation:
        doc: List Roles
        doc_link: https://developer.webex.com/docs/api/v1/roles/list-roles
        endpoint: https://webexapis.com/v1/roles
        http_method: GET
      header: List Roles
      parameters_and_response:
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the role.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The name of the role.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Role]
          type_spec: null
    - doc: 'Shows details for a role, by ID.

        Specify the role ID in the roleId parameter in the URI.'
      documentation:
        doc: Get Role Details
        doc_link: https://developer.webex.com/docs/api/v1/roles/get-role-details
        endpoint: https://webexapis.com/v1/roles/{roleId}
        http_method: GET
      header: Get Role Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the role.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The name of the role.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the role.
          name: roleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Room Tabs:
    doc: 'A Room Tab represents a URL shortcut that is added as a persistent tab to
      a Webex room (space) tab row. Use this API to list tabs of any Webex room that
      you belong to. Room Tabs can also be updated to point to a different content
      URL, or deleted to remove the tab from the room.

      Just like in the Webex app, you must be a member of the room in order to list
      its Room Tabs.'
    header: Room Tabs
    methods:
    - doc: Lists all Room Tabs of a room specified by the roomId query parameter.
      documentation:
        doc: List Room Tabs
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/list-room-tabs
        endpoint: https://webexapis.com/v1/room/tabs
        http_method: GET
      header: List Room Tabs
      parameters_and_response:
        Query Parameters:
        - doc: ID of the room for which to list room tabs.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the Room Tab.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the room containing the room tab.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room type.
            name: roomType
            param_attrs:
            - doc: 1:1 room
              name: direct
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: group room
              name: group
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: User-friendly name for the room tab.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Room Tab's content URL.
            name: contentUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person ID of the person who created this Room Tab.
            name: creatorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time when the Room Tab was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Room Tab]
          type_spec: null
    - doc: Add a tab with a specified URL to a room.
      documentation:
        doc: Create a Room Tab
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/create-a-room-tab
        endpoint: https://webexapis.com/v1/room/tabs
        http_method: POST
      header: Create a Room Tab
      parameters_and_response:
        Body Parameters:
        - doc: A unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: URL of the Room Tab. Must use https protocol.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the room containing the room tab.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room Tab's content URL.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the person who created this Room Tab.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time when the Room Tab was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Get details for a Room Tab with the specified room tab ID.
      documentation:
        doc: Get Room Tab Details
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/get-room-tab-details
        endpoint: https://webexapis.com/v1/room/tabs/{id}
        http_method: GET
      header: Get Room Tab Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the room containing the room tab.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room Tab's content URL.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the person who created this Room Tab.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time when the Room Tab was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Updates the content URL of the specified Room Tab ID.
      documentation:
        doc: Update a Room Tab
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/update-a-room-tab
        endpoint: https://webexapis.com/v1/room/tabs/{id}
        http_method: PUT
      header: Update a Room Tab
      parameters_and_response:
        Body Parameters:
        - doc: ID of the room that contains the room tab in question.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Content URL of the Room Tab. URL must use https protocol.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the room containing the room tab.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room Tab's content URL.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the person who created this Room Tab.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time when the Room Tab was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Deletes a Room Tab with the specified ID.
      documentation:
        doc: Delete a Room Tab
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/delete-a-room-tab
        endpoint: https://webexapis.com/v1/room/tabs/{id}
        http_method: DELETE
      header: Delete a Room Tab
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the Room Tab to delete.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Rooms:
    doc: 'Rooms are virtual meeting places where people post messages and collaborate
      to get work done. This API is used to manage the rooms themselves. Rooms are
      created and deleted with this API. You can also update a room to change its
      title or make it public, for example.

      To create a team room, specify the a teamId in the POST payload. Note that once
      a room is added to a team, it cannot be moved. To learn more about managing
      teams, see the Teams API.

      To manage people in a room see the Memberships API.

      To post content see the Messages API.'
    header: Rooms
    methods:
    - doc: 'List rooms.

        The title of the room for 1:1 rooms will be the display name of the other
        person. When a Compliance Officer lists 1:1 rooms, the "other" person cannot
        be determined. This means that the room''s title may not be filled in. Please
        use the memberships API to list the people in the space.

        By default, lists rooms to which the authenticated user belongs.

        Long result sets will be split into pages.

        Known Limitations:

        The underlying database does not support natural sorting by lastactivity and
        will only sort on limited set of results, which are pulled from the database
        in order of roomId. For users or bots in more than 3000 spaces this can result
        in anomalies such as spaces that have had recent activity not being returned
        in the results when sorting by lastacivity.'
      documentation:
        doc: List Rooms
        doc_link: https://developer.webex.com/docs/api/v1/rooms/list-rooms
        endpoint: https://webexapis.com/v1/rooms
        http_method: GET
      header: List Rooms
      parameters_and_response:
        Query Parameters:
        - doc: List rooms associated with a team, by ID. Cannot be set in combination
            with orgPublicSpaces.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List rooms by type. Cannot be set in combination with orgPublicSpaces.

            Possible values: direct, group'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Shows the org's public spaces joined and unjoined. When set the result
            list is sorted by the madePublic timestamp.
          name: orgPublicSpaces
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Filters rooms, that were made public after this time. See madePublic
            timestamp
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Filters rooms, that were made public before this time. See maePublic
            timestamp
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Sort results. Cannot be set in combination with orgPublicSpaces.

            Possible values: id, lastactivity, created'
          name: sortBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of rooms in the response. Value must be between
            1 and 1000, inclusive.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the room.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A user-friendly name for the room.
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room type.
            name: type
            param_attrs:
            - doc: 1:1 room.
              name: direct
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Group room.
              name: group
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether the room is moderated (locked) or not.
            name: isLocked
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The ID for the team with which this room is associated.
            name: teamId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time of the room's last activity.
            name: lastActivity
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the person who created this room.
            name: creatorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the room was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization which owns this room. See Webex Data in
              the Compliance Guide for more information.
            name: ownerId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Space classification ID represents the space's current classification.  It
              can be attached during space creation time, and can be modified at the
              request of an authorized user.
            name: classificationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates when a space is in Announcement Mode where only moderators
              can post messages
            name: isAnnouncementOnly
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: A compliance officer can set a direct room as read-only, which will
              disallow any new information exchanges in this space, while maintaing
              historical data.
            name: isReadOnly
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The room is public and therefore discoverable within the org. Anyone
              can find and join that room.
            name: isPublic
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Date and time when the room was made public.
            name: madePublic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The description of the space.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Room]
          type_spec: null
    - doc: 'Creates a room. The authenticated user is automatically added as a member
        of the room. See the Memberships API to learn how to add more people to the
        room.

        To create a 1:1 room, use the Create Messages endpoint to send a message directly
        to another person by using the toPersonId or toPersonEmail parameters.

        Bots are not able to create and simultaneously classify a room. A bot may
        update a space classification after a person of the same owning organization
        joined the space as the first human user.

        A space can only be put into announcement mode when it is locked.'
      documentation:
        doc: Create a Room
        doc_link: https://developer.webex.com/docs/api/v1/rooms/create-a-room
        endpoint: https://webexapis.com/v1/rooms
        http_method: POST
      header: Create a Room
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The classificationId for the room.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set the space as locked/moderated and the creator becomes a moderator
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room. When true the description must be filled
            in.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sets the space into announcement Mode.
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the room.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: type
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether the room is moderated (locked) or not.
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the room's last activity.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who created this room.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the room was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization which owns this room. See Webex Data in
            the Compliance Guide for more information.
          name: ownerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Space classification ID represents the space's current classification.  It
            can be attached during space creation time, and can be modified at the
            request of an authorized user.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates when a space is in Announcement Mode where only moderators
            can post messages
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Date and time when the room was made public.
          name: madePublic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a room, by ID.

        The title of the room for 1:1 rooms will be the display name of the other
        person.

        Specify the room ID in the roomId parameter in the URI.'
      documentation:
        doc: Get Room Details
        doc_link: https://developer.webex.com/docs/api/v1/rooms/get-room-details
        endpoint: https://webexapis.com/v1/rooms/{roomId}
        http_method: GET
      header: Get Room Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the room.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: type
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether the room is moderated (locked) or not.
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the room's last activity.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who created this room.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the room was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization which owns this room. See Webex Data in
            the Compliance Guide for more information.
          name: ownerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Space classification ID represents the space's current classification.  It
            can be attached during space creation time, and can be modified at the
            request of an authorized user.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates when a space is in Announcement Mode where only moderators
            can post messages
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Date and time when the room was made public.
          name: madePublic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Shows Webex meeting details for a room such as the SIP address, meeting
        URL, toll-free and toll dial-in numbers.

        Specify the room ID in the roomId parameter in the URI.'
      documentation:
        doc: Get Room Meeting Details
        doc_link: https://developer.webex.com/docs/api/v1/rooms/get-room-meeting-details
        endpoint: https://webexapis.com/v1/rooms/{roomId}/meetingInfo
        http_method: GET
      header: Get Room Meeting Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex meeting URL for the room.
          name: meetingLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The SIP address for the room.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex meeting number for the room.
          name: meetingNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex meeting ID for the room.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The toll-free PSTN number for the room.
          name: callInTollFreeNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The toll (local) PSTN number for the room.
          name: callInTollNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates details for a room, by ID.

        Specify the room ID in the roomId parameter in the URI.

        A space can only be put into announcement mode when it is locked.

        Any space participant or compliance officer can convert a space from public
        to private. Only a compliance officer can convert a space from private to
        public and only if the space is classified with the lowest category (usually
        public), and the space has a description.

        To remove a description please use a space character   by itself.'
      documentation:
        doc: Update a Room
        doc_link: https://developer.webex.com/docs/api/v1/rooms/update-a-room
        endpoint: https://webexapis.com/v1/rooms/{roomId}
        http_method: PUT
      header: Update a Room
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The classificationId for the room.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teamId to which this space should be assigned. Only unowned spaces
            can be assigned to a team. Assignment between teams is unsupported.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set the space as locked/moderated and the creator becomes a moderator
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room. When true the description must be filled
            in.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sets the space into Announcement Mode or clears the Anouncement Mode
            (false)
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the room.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: type
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether the room is moderated (locked) or not.
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the room's last activity.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who created this room.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the room was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization which owns this room. See Webex Data in
            the Compliance Guide for more information.
          name: ownerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Space classification ID represents the space's current classification.  It
            can be attached during space creation time, and can be modified at the
            request of an authorized user.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates when a space is in Announcement Mode where only moderators
            can post messages
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Date and time when the room was made public.
          name: madePublic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a room, by ID. Deleted rooms cannot be recovered.

        As a security measure to prevent accidental deletion, when a non moderator
        deletes the room they are removed from the room instead.

        Deleting a room that is part of a team will archive the room instead.

        Specify the room ID in the roomId parameter in the URI.'
      documentation:
        doc: Delete a Room
        doc_link: https://developer.webex.com/docs/api/v1/rooms/delete-a-room
        endpoint: https://webexapis.com/v1/rooms/{roomId}
        http_method: DELETE
      header: Delete a Room
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Security Audit Events:
    doc: 'List Security Audit Events. This API currently returns user sign-in and
      sign-out data.

      To call this API the audit:events_read scope must be selected for the Integration
      or Service App and auhtorized by a Full Admin.

      Several query parameters are available to filter the response.

      Long result sets will be split into multiple pages

      NOTE: A maximum of one year of audit events can be returned per request.'
    header: Security Audit Events
    methods:
    - doc: 'List Security Audit Events. This API currently returns user sign-in and
        sign-out data.

        To call this API the audit:events_read scope must be selected for the Integration
        or Service App and auhtorized by a Full Admin.

        Several query parameters are available to filter the response.

        Long result sets will be split into multiple pages

        NOTE: A maximum of one year of audit events can be returned per request.'
      documentation:
        doc: List Security Audit Events
        doc_link: https://developer.webex.com/docs/api/v1/security-audit-events/list-security-audit-events
        endpoint: https://webexapis.com/v1/admin/securityAudit/events
        http_method: GET
      header: List Security Audit Events
      parameters_and_response:
        Query Parameters:
        - doc: List events in this organization, by ID.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: List events which occurred after a specific date and time.
          name: startTime
          param_attrs: []
          param_object: []
          type: ''
          type_spec: required
        - doc: List events which occurred before a specific date and time.
          name: endTime
          param_attrs: []
          param_object: []
          type: ''
          type_spec: required
        - doc: List events performed by this person, by ID.
          name: actorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of events in the response. The maximum value
            is 1000.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: List events, by event categories.
          name: eventCategories
          param_attrs: []
          param_object: []
          type: list
          type_spec: null
        Response Properties:
        - doc: array of monitoring Audit events
          name: items
          param_attrs:
          - doc: ''
            name: data
            param_attrs: []
            param_object:
            - doc: The display name of the organization.
              name: actorOrgName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A description for the event.
              name: eventDescription
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The name of the person who performed the action.
              name: actorName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The email of the person who performed the action.
              name: actorEmail
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The browser user agent of the person who performed the action.
              name: actorUserAgent
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A tracking identifier for the event.
              name: trackingId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The category of resource changed by the event.
              name: eventCategory
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The IP address of the person who performed the action.
              name: actorIp
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A more detailed description of the change made by the person.
              name: actionText
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          - doc: The date and time the event took place.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The orgId of the person who made the change.
            name: actorOrgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the event.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The personId of the person who made the change.
            name: actorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Security Audit Event]
          type_spec: null
  Session Types:
    doc: 'Session types define the features and options that are available to users
      for scheduled meetings.

      The API allows getting site-level session types and modifying user-level session
      types.

      Viewing the list of site session types and user session types requires an administrator
      auth token with meeting:admin_schedule_read or meeting:admin_config_read. Updating
      user session types requires an administrator auth token with the meeting:admin_schedule_write
      or meeting:admin_config_write scope.'
    header: Session Types
    methods:
    - doc: List session types for a specific site.
      documentation:
        doc: List Site Session Types
        doc_link: https://developer.webex.com/docs/api/v1/session-types/list-site-session-types
        endpoint: https://webexapis.com/v1/admin/meeting/config/sessionTypes
        http_method: GET
      header: List Site Session Types
      parameters_and_response:
        Query Parameters:
        - doc: URL of the Webex site to query. If siteUrl is not specified, the query
            will use the default site for the admin's authorization token used to
            make the call.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of the site's session types.
          name: items
          param_attrs:
          - doc: Site URL for the session type.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[SiteSessionType]
          type_spec: null
    - doc: List session types for a specific user.
      documentation:
        doc: List User Session Type
        doc_link: https://developer.webex.com/docs/api/v1/session-types/list-user-session-type
        endpoint: https://webexapis.com/v1/admin/meeting/userconfig/sessionTypes
        http_method: GET
      header: List User Session Type
      parameters_and_response:
        Query Parameters:
        - doc: URL of the Webex site to query.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the user.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of the user's session types.
          name: items
          param_attrs:
          - doc: A unique identifier for the user.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email of the user.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Site URL for the user.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: All session types are supported by the user on the site.
            name: sessionTypes
            param_attrs:
            - doc: The ID of the session type.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The short name of the session type.
              name: shortName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The name of the session type.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The meeting type of meeting that you can create with the session
                type.
              name: type
              param_attrs:
              - doc: Meeting Center.
                name: meeting
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Webinar meeting.
                name: webinar
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Private meeting.
                name: privateMeeting
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Event Center.
                name: EventCenter
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Support Center.
                name: SupportCenter
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Training Center.
                name: TrainCenter
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[SessionType]
            type_spec: null
          param_object: []
          type: array[UserSessionTypes]
          type_spec: null
    - doc: Assign session types to specific users.
      documentation:
        doc: Update User Session Types
        doc_link: https://developer.webex.com/docs/api/v1/session-types/update-user-session-types
        endpoint: https://webexapis.com/v1/admin/meeting/userconfig/sessionTypes
        http_method: PUT
      header: Update User Session Types
      parameters_and_response:
        Body Parameters:
        - doc: Site URL for the session type.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A unique identifier for the user.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email of the user.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'An array of the session type ID.

            Possible values: 3, 9'
          name: sessionTypeIds
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the user.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email of the user.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Site URL for the user.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: All session types are supported by the user on the site.
          name: sessionTypes
          param_attrs:
          - doc: The ID of the session type.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The short name of the session type.
            name: shortName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The name of the session type.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The meeting type of meeting that you can create with the session
              type.
            name: type
            param_attrs:
            - doc: Meeting Center.
              name: meeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webinar meeting.
              name: webinar
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Private meeting.
              name: privateMeeting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Event Center.
              name: EventCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Support Center.
              name: SupportCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Training Center.
              name: TrainCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[SessionType]
          type_spec: null
  Site:
    doc: 'This chapter provides descriptions of the Webex RESTful APIs for the site
      service, which contains operations like querying and updating common meeting
      configuration settings.

      Samples are given for the outbound request messages and expected server response
      messages. The API calls available as part of the Site service are listed below.

      You can see the elements that constitute the respective RESTful schema in a
      separate section below.'
    header: Site
    methods:
    - doc: Site administrators can use this API to get a list of functions, options,
        and privileges that are configured for their Webex service sites.
      documentation:
        doc: Get Meeting Common Settings Configuration
        doc_link: https://developer.webex.com/docs/api/v1/site/get-meeting-common-settings-configuration
        endpoint: https://webexapis.com/v1/admin/meeting/config/commonSettings
        http_method: GET
      header: Get Meeting Common Settings Configuration
      parameters_and_response:
        Query Parameters:
        - doc: URL of the Webex site which the API queries common settings of the
            meeting's configuration from. If not specified, the API will query from
            the site administrator's preferred site. All available Webex sites and
            the preferred site of the user can be retrieved by the Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Site Options on Webex Administration.
          name: siteOptions
          param_attrs: []
          param_object:
          - doc: Allow hosts to change their Personal Room URLs.
            name: allowCustomPersonalRoomURL
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Telephony Configuration on WebEx Super Admin (These options are read-only,
            unable to update by Update Common Settings API).
          name: telephonyConfig
          param_attrs: []
          param_object:
          - doc: Whether call-in teleconferencing for sessions was enabled.
            name: allowCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether call-back teleconferencing for sessions was enabled.
            name: allowCallBack
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether other teleconferencing for sessions was enabled.
            name: allowOtherTeleconf
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether toll-free call-in teleconferencing was enabled.
            name: allowTollFreeCallin
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether international call-in teleconferencing was enabled.
            name: allowInternationalCallin
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether international call-back teleconferencing was enabled.
            name: allowInternationalCallback
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether Voice Over IP functionality using the attendee computer's
              speakers and microphones was enabled.
            name: VoIP
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Default Scheduler Options on Webex Administration (These options are
            applied to the site as defaults, but individual users can change them).
          name: defaultSchedulerOptions
          param_attrs: []
          param_object:
          - doc: Determines if a sound is made when someone enters or exits.
            name: entryAndExitTone
            param_attrs:
            - doc: No tone.
              name: NoTone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Beep.
              name: Beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Announce name.
              name: AnnounceName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Specifies whether or not joining teleconference without pressing
              1 is checked by default.
            name: joinTeleconfNotPress1
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Specifies the type of teleconference support for meetings.
            name: telephonySupport
            param_attrs:
            - doc: None.
              name: None
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webex teleconferencing.
              name: WebexTeleconferencing
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Other Teleconferencing.
              name: Other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Specifies whether toll-free call-in is available.
            name: tollFree
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Denotes if VoIP protocols are being used.
            name: VoIP
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Schedule Meeting Options on Webex Administration.
          name: scheduleMeetingOptions
          param_attrs: []
          param_object:
          - doc: Determines if email reminders are to be sent out.
            name: emailReminders
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Security Options on Webex Administration.
          name: securityOptions
          param_attrs: []
          param_object:
          - doc: Allow attendees or panelists to join before the host.
            name: joinBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Allows attendees or panelists to join the teleconference before the
              host.
            name: audioBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Allows first attendee or panelist as the presenter.
            name: firstAttendeeAsPresenter
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Specifies that all meetings must be unlisted.
            name: unlistAllMeetings
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Determines if a user must login before getting site access.
            name: requireLoginBeforeAccess
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Allow screen capture (Android devices only).
            name: allowMobileScreenCapture
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Determines if strict passwords are required for meetings.
            name: requireStrongPassword
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Criteria of a strong password.
            name: passwordCriteria
            param_attrs: []
            param_object:
            - doc: Determines if a password requires mixed case.
              name: mixedCase
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Sets the minimum password length.
              name: minLength
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Sets the minimum number of numeric characters in the password.
              name: minNumeric
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Sets the minimum number of alphabetical characters in the password.
              name: minAlpha
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Sets the minimum number of special characters in the password.
              name: minSpecial
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Do not allow dynamic web page text for meeting passwords (like
                site name, host's name, username, meeting topic).
              name: disallowDynamicWebText
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specifies if passwords from the disallowValues list are to be allowed.
              name: disallowList
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Sets password values that are not allowed.
              name: disallowValues
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
    - doc: Site administrators can use this API to update the option of features,
        options and privileges that are configured for their WebEx service sites.
      documentation:
        doc: Update Meeting Common Settings Configuration
        doc_link: https://developer.webex.com/docs/api/v1/site/update-meeting-common-settings-configuration
        endpoint: https://webexapis.com/v1/admin/meeting/config/commonSettings
        http_method: PATCH
      header: Update Meeting Common Settings Configuration
      parameters_and_response:
        Body Parameters:
        - doc: 'Site Options on Webex Administration.

            Allow hosts to change their Personal Room URLs.'
          name: siteOptions
          param_attrs: []
          param_object: []
          type: object
          type_spec: null
        - doc: Default Scheduler Options on Webex Administration (These options are
            applied to the site as defaults, but individual users can change them).
          name: defaultSchedulerOptions
          param_attrs:
          - doc: Determines if a sound is made when someone enters or exits.
            name: entryAndExitTone
            param_attrs:
            - doc: No tone.
              name: NoTone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Beep.
              name: Beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Announce name.
              name: AnnounceName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Specifies whether or not joining teleconference without pressing
              1 is checked by default.
            name: joinTeleconfNotPress1
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Specifies the type of teleconference support for meetings.
            name: telephonySupport
            param_attrs:
            - doc: None.
              name: None
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webex teleconferencing (Unabled when Webex Super Admin hasn't turned
                on call-in teleconferencing and call-back teleconferencing).
              name: WebexTeleconferencing
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Other Teleconferencing (Unabled when Webex Super Admin hasn't turned
                on other teleconferencing).
              name: Other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Specifies whether toll-free call-in is available, it can't be specified
              when telephonySupport was not WebexTeleconferencing, and it can't be
              specified as true when Webex Super Admin hasn't turned on toll-free
              call-in teleconferencing.
            name: tollFree
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Denotes if VoIP protocols are being used, it can't be specified as
              true when Webex Super Admin hasn't turned on Voice Over IP functionality.
            name: VoIP
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: 'Schedule Meeting Options on Webex Administration.

            Determines if email reminders are to be sent out.'
          name: scheduleMeetingOptions
          param_attrs: []
          param_object: []
          type: object
          type_spec: null
        - doc: Security Options on Webex Administration.
          name: securityOptions
          param_attrs:
          - doc: Allow attendees or panelists to join before the host.
            name: joinBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Allows attendees or panelists to join the teleconference before the
              host, it can't be turned on when joinBeforeHost was false.
            name: audioBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Allows first attendee or panelist as the presenter, it can't be turned
              on when firstAttendeeAsPresenter was false.
            name: firstAttendeeAsPresenter
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Specifies that all meetings must be unlisted.
            name: unlistAllMeetings
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Determines if a user must login before getting site access.
            name: requireLoginBeforeAccess
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Allow screen capture (Android devices only).
            name: allowMobileScreenCapture
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Determines if strict passwords are required for meetings.
            name: requireStrongPassword
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Criteria of a strong password, which cannot be specified when requireStrongPassword
              was false.
            name: passwordCriteria
            param_attrs:
            - doc: Determines if a password requires mixed case.
              name: mixedCase
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Sets the minimum password length, maximum value limit of 12.
              name: minLength
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Sets the minimum number of numeric characters in the password,
                maximum value limit of 12.
              name: minNumeric
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Sets the minimum number of alphabetical characters in the password,
                maximum value limit of 12.
              name: minAlpha
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Sets the minimum number of special characters in the password,
                maximum value limit of 12.
              name: minSpecial
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Do not allow dynamic web page text for meeting passwords (like
                site name, host's name, username, meeting topic).
              name: disallowDynamicWebText
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specifies if passwords from the disallowValues list are to be allowed.
              name: disallowList
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Sets password values that are not allowed, and cannot type repeated
                items in it.
              name: disallowValues
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Response Properties:
        - doc: Site Options on Webex Administration.
          name: siteOptions
          param_attrs: []
          param_object:
          - doc: Allow hosts to change their Personal Room URLs.
            name: allowCustomPersonalRoomURL
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Telephony Configuration on WebEx Super Admin (These options are read-only,
            unable to update by Update Common Settings API).
          name: telephonyConfig
          param_attrs: []
          param_object:
          - doc: Whether call-in teleconferencing for sessions was enabled.
            name: allowCallIn
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether call-back teleconferencing for sessions was enabled.
            name: allowCallBack
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether other teleconferencing for sessions was enabled.
            name: allowOtherTeleconf
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether toll-free call-in teleconferencing was enabled.
            name: allowTollFreeCallin
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether international call-in teleconferencing was enabled.
            name: allowInternationalCallin
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether international call-back teleconferencing was enabled.
            name: allowInternationalCallback
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether Voice Over IP functionality using the attendee computer's
              speakers and microphones was enabled.
            name: VoIP
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Default Scheduler Options on Webex Administration (These options are
            applied to the site as defaults, but individual users can change them).
          name: defaultSchedulerOptions
          param_attrs: []
          param_object:
          - doc: Determines if a sound is made when someone enters or exits.
            name: entryAndExitTone
            param_attrs:
            - doc: No tone.
              name: NoTone
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Beep.
              name: Beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Announce name.
              name: AnnounceName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Specifies whether or not joining teleconference without pressing
              1 is checked by default.
            name: joinTeleconfNotPress1
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Specifies the type of teleconference support for meetings.
            name: telephonySupport
            param_attrs:
            - doc: None.
              name: None
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webex teleconferencing.
              name: WebexTeleconferencing
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Other Teleconferencing.
              name: Other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Specifies whether toll-free call-in is available.
            name: tollFree
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Denotes if VoIP protocols are being used.
            name: VoIP
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Schedule Meeting Options on Webex Administration.
          name: scheduleMeetingOptions
          param_attrs: []
          param_object:
          - doc: Determines if email reminders are to be sent out.
            name: emailReminders
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Security Options on Webex Administration.
          name: securityOptions
          param_attrs: []
          param_object:
          - doc: Allow attendees or panelists to join before the host.
            name: joinBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Allows attendees or panelists to join the teleconference before the
              host.
            name: audioBeforeHost
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Allows first attendee or panelist as the presenter.
            name: firstAttendeeAsPresenter
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Specifies that all meetings must be unlisted.
            name: unlistAllMeetings
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Determines if a user must login before getting site access.
            name: requireLoginBeforeAccess
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Allow screen capture (Android devices only).
            name: allowMobileScreenCapture
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Determines if strict passwords are required for meetings.
            name: requireStrongPassword
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Criteria of a strong password.
            name: passwordCriteria
            param_attrs: []
            param_object:
            - doc: Determines if a password requires mixed case.
              name: mixedCase
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Sets the minimum password length.
              name: minLength
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Sets the minimum number of numeric characters in the password.
              name: minNumeric
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Sets the minimum number of alphabetical characters in the password.
              name: minAlpha
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Sets the minimum number of special characters in the password.
              name: minSpecial
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Do not allow dynamic web page text for meeting passwords (like
                site name, host's name, username, meeting topic).
              name: disallowDynamicWebText
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specifies if passwords from the disallowValues list are to be allowed.
              name: disallowList
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Sets password values that are not allowed.
              name: disallowValues
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
  Space Classifications:
    doc: Each Webex organization has its own Space Classification object that contains
      exactly five (5) space classifications.
    header: Classifications
    methods:
    - doc: List all the space classifications configured in your org.
      documentation:
        doc: List classifications
        doc_link: https://developer.webex.com/docs/api/v1/space-classifications/list-classifications
        endpoint: https://webexapis.com/v1/classifications
        http_method: GET
      header: List classifications
      parameters_and_response:
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: Unique identifier for the org's Space Classification
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Represents the rank of the classification. A number from 0 to 4,
              in which 0 usually refers to "public", and is the default whenever a
              rank cannot be determined.
            name: rank
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Represents the classification title to be displayed in classified
              spaces for org users.
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Space Classification enabled state.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Classification's description.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the Space Classification was last changed.
            name: lastModified
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the Webex organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[HydraClassification]
          type_spec: null
  Team Memberships:
    doc: 'Team Memberships represent a person''s relationship to a team. Use this
      API to list members of any team that you''re in or create memberships to invite
      someone to a team. Team memberships can also be updated to make someone a moderator
      or deleted to remove them from the team.

      Just like in the Webex app, you must be a member of the team in order to list
      its memberships or invite people.'
    header: Team Memberships
    methods:
    - doc: 'Lists all team memberships for a given team, specified by the teamId query
        parameter.

        Use query parameters to filter the response.'
      documentation:
        doc: List Team Memberships
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/list-team-memberships
        endpoint: https://webexapis.com/v1/team/memberships
        http_method: GET
      header: List Team Memberships
      parameters_and_response:
        Query Parameters:
        - doc: List memberships for a team, by ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Limit the maximum number of team memberships in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the team membership.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The team ID.
            name: teamId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person ID.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the person.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The display name of the person.
            name: personDisplayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The organization ID of the person.
            name: personOrgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the participant is a team moderator.
            name: isModerator
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The date and time when the team membership was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Team Membership]
          type_spec: null
    - doc: Add someone to a team by Person ID or email address, optionally making
        them a moderator.
      documentation:
        doc: Create a Team Membership
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/create-a-team-membership
        endpoint: https://webexapis.com/v1/team/memberships
        http_method: POST
      header: Create a Team Membership
      parameters_and_response:
        Body Parameters:
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the team membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a team membership, by ID.

        Specify the team membership ID in the membershipId URI parameter.'
      documentation:
        doc: Get Team Membership Details
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/get-team-membership-details
        endpoint: https://webexapis.com/v1/team/memberships/{membershipId}
        http_method: GET
      header: Get Team Membership Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the team membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the team membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates a team membership, by ID.

        Specify the team membership ID in the membershipId URI parameter.'
      documentation:
        doc: Update a Team Membership
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/update-a-team-membership
        endpoint: https://webexapis.com/v1/team/memberships/{membershipId}
        http_method: PUT
      header: Update a Team Membership
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the team membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the team membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a team membership, by ID.

        Specify the team membership ID in the membershipId URI parameter.

        The team membership for the last moderator of a team may not be deleted; promote
        another user to team moderator first.'
      documentation:
        doc: Delete a Team Membership
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/delete-a-team-membership
        endpoint: https://webexapis.com/v1/team/memberships/{membershipId}
        http_method: DELETE
      header: Delete a Team Membership
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the team membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Teams:
    doc: 'Teams are groups of people with a set of rooms that are visible to all members
      of that team. This API is used to manage the teams themselves. Teams are created
      and deleted with this API. You can also update a team to change its name, for
      example.

      To manage people in a team see the Team Memberships API.

      To manage team rooms see the Rooms API.'
    header: Teams
    methods:
    - doc: Lists teams to which the authenticated user belongs.
      documentation:
        doc: List Teams
        doc_link: https://developer.webex.com/docs/api/v1/teams/list-teams
        endpoint: https://webexapis.com/v1/teams
        http_method: GET
      header: List Teams
      parameters_and_response:
        Query Parameters:
        - doc: Limit the maximum number of teams in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the team.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A user-friendly name for the team.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The teams description.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the team was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Team]
          type_spec: null
    - doc: 'Creates a team.

        The authenticated user is automatically added as a member of the team. See
        the Team Memberships API to learn how to add more people to the team.'
      documentation:
        doc: Create a Team
        doc_link: https://developer.webex.com/docs/api/v1/teams/create-a-team
        endpoint: https://webexapis.com/v1/teams
        http_method: POST
      header: Create a Team
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the team was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a team, by ID.

        Specify the team ID in the teamId parameter in the URI.'
      documentation:
        doc: Get Team Details
        doc_link: https://developer.webex.com/docs/api/v1/teams/get-team-details
        endpoint: https://webexapis.com/v1/teams/{teamId}
        http_method: GET
      header: Get Team Details
      parameters_and_response:
        Query Parameters:
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the team was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates details for a team, by ID.

        Specify the team ID in the teamId parameter in the URI.'
      documentation:
        doc: Update a Team
        doc_link: https://developer.webex.com/docs/api/v1/teams/update-a-team
        endpoint: https://webexapis.com/v1/teams/{teamId}
        http_method: PUT
      header: Update a Team
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the team was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a team, by ID.

        Specify the team ID in the teamId parameter in the URI.'
      documentation:
        doc: Delete a Team
        doc_link: https://developer.webex.com/docs/api/v1/teams/delete-a-team
        endpoint: https://webexapis.com/v1/teams/{teamId}
        http_method: DELETE
      header: Delete a Team
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the team.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Tracking Codes:
    doc: 'Tracking codes are alphanumeric codes that identify categories of users
      on a Webex site. With tracking codes, you can analyze usage by various groups
      within an organization.

      The authenticated user calling this API must have an Administrator role with
      the meeting:admin_schedule_write and meeting:admin_schedule_read scopes.'
    header: Tracking Codes
    methods:
    - doc: Lists tracking codes on a site by an admin user.
      documentation:
        doc: List Tracking Codes
        doc_link: https://developer.webex.com/docs/api/v1/tracking-codes/list-tracking-codes
        endpoint: 'https: //webexapis.com/v1/admin/meeting/config/trackingCodes'
        http_method: GET
      header: List Tracking Codes
      parameters_and_response:
        Query Parameters:
        - doc: URL of the Webex site which the API retrieves the tracking code from.
            If not specified, the API retrieves the tracking code from the user's
            preferred site. All available Webex sites and preferred sites of a user
            can be retrieved by the Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Tracking codes information.
          name: items
          param_attrs:
          - doc: Unique identifier for tracking code.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name for tracking code.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Site URL for the tracking code.
            name: siteUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Tracking code option list.
            name: options
            param_attrs:
            - doc: The value of a tracking code option.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Whether or not the option is the default option of a tracking code.
              name: defaultValue
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[OptionsForTrackingCodeObject]
            type_spec: null
          - doc: An option for how an admin user can provide a code value.
            name: inputMode
            param_attrs:
            - doc: Text input.
              name: text
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Drop down list which requires options.
              name: select
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Both text input and select from list.
              name: editableSelect
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An input method is only available for the host profile and sign-up
                pages.
              name: hostProfileSelect
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Type for the host profile.
            name: hostProfileCode
            param_attrs:
            - doc: Available to be chosen but not compulsory.
              name: optional
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Officially compulsory.
              name: required
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value is set by admin.
              name: adminSet
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value cannot be used.
              name: notUsed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Specify how tracking codes are used for each service on the meeting
              scheduler or meeting start pages.
            name: scheduleStartCodes
            param_attrs:
            - doc: Service for schedule or sign up pages
              name: service
              param_attrs:
              - doc: Tracking codes apply to all services.
                name: All
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Users can set tracking codes when scheduling a meeting.
                name: MeetingCenter
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Users can set tracking codes when scheduling an event.
                name: EventCenter
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Users can set tracking codes when scheduling a training session.
                name: TrainingCenter
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Users can set tracking codes when scheduling a support meeting.
                name: SupportCenter
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Type for meeting scheduler or meeting start pages.
              name: type
              param_attrs:
              - doc: Available to be chosen but not compulsory.
                name: optional
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Officially compulsory.
                name: required
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The value is set by admin. This value only applies when hostProfileCode
                  is adminSet.
                name: adminSet
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The value cannot be used.
                name: notUsed
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: This value only applies to the service of All. When the type
                  of All for a tracking code is notApplicable, there are different
                  types for different services. For example, required for MeetingCenter,
                  optional for EventCenter and notUsed for others.
                name: notApplicable
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[ScheduleStartCodeObject]
            type_spec: null
          param_object: []
          type: array[GetTrackingCodeObject]
          type_spec: null
    - doc: Retrieves details for a tracking code by an admin user.
      documentation:
        doc: Get a Tracking Code
        doc_link: https://developer.webex.com/docs/api/v1/tracking-codes/get-a-tracking-code
        endpoint: 'https: //webexapis.com/v1/admin/meeting/config/trackingCodes/{trackingCodeId}'
        http_method: GET
      header: Get a Tracking Code
      parameters_and_response:
        Query Parameters:
        - doc: URL of the Webex site which the API retrieves the tracking code from.
            If not specified, the API retrieves the tracking code from the user's
            preferred site. All available Webex sites and the preferred sites of a
            user can be retrieved by the Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for tracking code.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name for tracking code.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Site URL for the tracking code.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Tracking code option list.
          name: options
          param_attrs:
          - doc: The value of a tracking code option.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the option is the default option of a tracking code.
            name: defaultValue
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[OptionsForTrackingCodeObject]
          type_spec: null
        - doc: An option for how an admin user can provide a code value.
          name: inputMode
          param_attrs:
          - doc: Text input.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Drop down list which requires options.
            name: select
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Both text input and select from list.
            name: editableSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An input method is only available for the host profile and sign-up
              pages.
            name: hostProfileSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Type for the host profile.
          name: hostProfileCode
          param_attrs:
          - doc: Available to be chosen but not compulsory.
            name: optional
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Officially compulsory.
            name: required
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value is set by admin.
            name: adminSet
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value cannot be used.
            name: notUsed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Specify how tracking codes are used for each service on the meeting
            scheduler or meeting start pages.
          name: scheduleStartCodes
          param_attrs:
          - doc: Service for schedule or sign up pages
            name: service
            param_attrs:
            - doc: Tracking codes apply to all services.
              name: All
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a meeting.
              name: MeetingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling an event.
              name: EventCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a training session.
              name: TrainingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a support meeting.
              name: SupportCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Type for meeting scheduler or meeting start pages.
            name: type
            param_attrs:
            - doc: Available to be chosen but not compulsory.
              name: optional
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Officially compulsory.
              name: required
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value is set by admin. This value only applies when hostProfileCode
                is adminSet.
              name: adminSet
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value cannot be used.
              name: notUsed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This value only applies to the service of All. When the type of
                All for a tracking code is notApplicable, there are different types
                for different services. For example, required for MeetingCenter, optional
                for EventCenter and notUsed for others.
              name: notApplicable
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[ScheduleStartCodeObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the tracking code whose details are being requested.
          name: trackingCodeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Create a new tracking code by an admin user.
      documentation:
        doc: Create a Tracking Code
        doc_link: https://developer.webex.com/docs/api/v1/tracking-codes/create-a-tracking-code
        endpoint: 'https: //webexapis.com/v1/admin/meeting/config/trackingCodes'
        http_method: POST
      header: Create a Tracking Code
      parameters_and_response:
        Body Parameters:
        - doc: Name for tracking code. The name cannot be empty and the maximum size
            is 120 characters.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Site URL for the tracking code.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Tracking code option list. The maximum size of options is 500.
          name: options
          param_attrs:
          - doc: The value of a tracking code option. value cannot be empty and the
              maximum size is 120 characters.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Whether or not the option is the default option of a tracking code.
            name: defaultValue
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          param_object: []
          type: array[OptionsForCreateOrUpdateTrackingCodeObject]
          type_spec: required
        - doc: Select an option for how users can provide a code value. Please note
            that if users set inputMode as hostProfileSelect, scheduleStartCode should
            be null, which means hostProfileSelect only applies to "Host Profile".
          name: inputMode
          param_attrs:
          - doc: Text input.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Drop down list which requires options.
            name: select
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Both text input and select from list.
            name: editableSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An input method is only available for the host profile and sign-up
              pages.
            name: hostProfileSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: Type for the host profile.
          name: hostProfileCode
          param_attrs:
          - doc: Available to be chosen but not compulsory.
            name: optional
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Officially compulsory.
            name: required
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value is set by admin.
            name: adminSet
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value cannot be used.
            name: notUsed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: Specify how tracking codes are used for each service on the meeting
            scheduler or meeting start pages. The maximum size of scheduleStartCodes
            is 5.
          name: scheduleStartCodes
          param_attrs:
          - doc: Service for schedule or sign up pages
            name: service
            param_attrs:
            - doc: Tracking codes apply to all services.
              name: All
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a meeting.
              name: MeetingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling an event.
              name: EventCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a training session.
              name: TrainingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a support meeting.
              name: SupportCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Type for meeting scheduler or meeting start pages.
            name: type
            param_attrs:
            - doc: Available to be chosen but not compulsory.
              name: optional
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Officially compulsory.
              name: required
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value is set by admin. This value only applies when hostProfileCode
                is adminSet.
              name: adminSet
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value cannot be used.
              name: notUsed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This value only applies to the service of All. When the type of
                All for a tracking code is notApplicable, there are different types
                for different services. For example, required for MeetingCenter, optional
                for EventCenter and notUsed for others.
              name: notApplicable
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: array[ScheduleStartCodeObject]
          type_spec: required
        Response Properties:
        - doc: Unique identifier for tracking code.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name for tracking code.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Site URL for the tracking code.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Tracking code option list.
          name: options
          param_attrs:
          - doc: The value of a tracking code option.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the option is the default option of a tracking code.
            name: defaultValue
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[OptionsForTrackingCodeObject]
          type_spec: null
        - doc: An option for how an admin user can provide a code value.
          name: inputMode
          param_attrs:
          - doc: Text input.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Drop down list which requires options.
            name: select
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Both text input and select from list.
            name: editableSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An input method is only available for the host profile and sign-up
              pages.
            name: hostProfileSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Type for the host profile.
          name: hostProfileCode
          param_attrs:
          - doc: Available to be chosen but not compulsory.
            name: optional
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Officially compulsory.
            name: required
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value is set by admin.
            name: adminSet
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value cannot be used.
            name: notUsed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Specify how tracking codes are used for each service on the meeting
            scheduler or meeting start pages.
          name: scheduleStartCodes
          param_attrs:
          - doc: Service for schedule or sign up pages
            name: service
            param_attrs:
            - doc: Tracking codes apply to all services.
              name: All
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a meeting.
              name: MeetingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling an event.
              name: EventCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a training session.
              name: TrainingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a support meeting.
              name: SupportCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Type for meeting scheduler or meeting start pages.
            name: type
            param_attrs:
            - doc: Available to be chosen but not compulsory.
              name: optional
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Officially compulsory.
              name: required
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value is set by admin. This value only applies when hostProfileCode
                is adminSet.
              name: adminSet
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value cannot be used.
              name: notUsed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This value only applies to the service of All. When the type of
                All for a tracking code is notApplicable, there are different types
                for different services. For example, required for MeetingCenter, optional
                for EventCenter and notUsed for others.
              name: notApplicable
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[ScheduleStartCodeObject]
          type_spec: null
    - doc: Updates details for a tracking code by an admin user.
      documentation:
        doc: Update a Tracking Code
        doc_link: https://developer.webex.com/docs/api/v1/tracking-codes/update-a-tracking-code
        endpoint: 'https: //webexapis.com/v1/admin/meeting/config/trackingCodes/{trackingCodeId}'
        http_method: PUT
      header: Update a Tracking Code
      parameters_and_response:
        Body Parameters:
        - doc: Name for tracking code. The name cannot be empty and the maximum size
            is 120 characters.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Site URL for the tracking code.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Tracking code option list. The maximum size of options is 500.
          name: options
          param_attrs:
          - doc: The value of a tracking code option. value cannot be empty and the
              maximum size is 120 characters.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Whether or not the option is the default option of a tracking code.
            name: defaultValue
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          param_object: []
          type: array[OptionsForCreateOrUpdateTrackingCodeObject]
          type_spec: required
        - doc: Select an option for how users can provide a code value. Please note
            that if users set inputMode as hostProfileSelect, scheduleStartCode should
            be null, which means hostProfileSelect only applies to "Host Profile".
          name: inputMode
          param_attrs:
          - doc: Text input.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Drop down list which requires options.
            name: select
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Both text input and select from list.
            name: editableSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An input method is only available for the host profile and sign-up
              pages.
            name: hostProfileSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: Type for the host profile.
          name: hostProfileCode
          param_attrs:
          - doc: Available to be chosen but not compulsory.
            name: optional
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Officially compulsory.
            name: required
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value is set by admin.
            name: adminSet
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value cannot be used.
            name: notUsed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: Specify how tracking codes are used for each service on the meeting
            scheduler or meeting start pages. The maximum size of scheduleStartCodes
            is 5.
          name: scheduleStartCodes
          param_attrs:
          - doc: Service for schedule or sign up pages
            name: service
            param_attrs:
            - doc: Tracking codes apply to all services.
              name: All
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a meeting.
              name: MeetingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling an event.
              name: EventCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a training session.
              name: TrainingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a support meeting.
              name: SupportCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Type for meeting scheduler or meeting start pages.
            name: type
            param_attrs:
            - doc: Available to be chosen but not compulsory.
              name: optional
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Officially compulsory.
              name: required
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value is set by admin. This value only applies when hostProfileCode
                is adminSet.
              name: adminSet
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value cannot be used.
              name: notUsed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This value only applies to the service of All. When the type of
                All for a tracking code is notApplicable, there are different types
                for different services. For example, required for MeetingCenter, optional
                for EventCenter and notUsed for others.
              name: notApplicable
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: array[ScheduleStartCodeObject]
          type_spec: required
        Response Properties:
        - doc: Unique identifier for tracking code.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name for tracking code.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Site URL for the tracking code.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Tracking code option list.
          name: options
          param_attrs:
          - doc: The value of a tracking code option.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the option is the default option of a tracking code.
            name: defaultValue
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[OptionsForTrackingCodeObject]
          type_spec: null
        - doc: An option for how an admin user can provide a code value.
          name: inputMode
          param_attrs:
          - doc: Text input.
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Drop down list which requires options.
            name: select
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Both text input and select from list.
            name: editableSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An input method is only available for the host profile and sign-up
              pages.
            name: hostProfileSelect
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Type for the host profile.
          name: hostProfileCode
          param_attrs:
          - doc: Available to be chosen but not compulsory.
            name: optional
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Officially compulsory.
            name: required
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value is set by admin.
            name: adminSet
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The value cannot be used.
            name: notUsed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Specify how tracking codes are used for each service on the meeting
            scheduler or meeting start pages.
          name: scheduleStartCodes
          param_attrs:
          - doc: Service for schedule or sign up pages
            name: service
            param_attrs:
            - doc: Tracking codes apply to all services.
              name: All
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a meeting.
              name: MeetingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling an event.
              name: EventCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a training session.
              name: TrainingCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Users can set tracking codes when scheduling a support meeting.
              name: SupportCenter
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Type for meeting scheduler or meeting start pages.
            name: type
            param_attrs:
            - doc: Available to be chosen but not compulsory.
              name: optional
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Officially compulsory.
              name: required
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value is set by admin. This value only applies when hostProfileCode
                is adminSet.
              name: adminSet
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The value cannot be used.
              name: notUsed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This value only applies to the service of All. When the type of
                All for a tracking code is notApplicable, there are different types
                for different services. For example, required for MeetingCenter, optional
                for EventCenter and notUsed for others.
              name: notApplicable
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[ScheduleStartCodeObject]
          type_spec: null
    - doc: Deletes a tracking code by an admin user.
      documentation:
        doc: Delete a Tracking Code
        doc_link: https://developer.webex.com/docs/api/v1/tracking-codes/delete-a-tracking-code
        endpoint: 'https: //webexapis.com/v1/admin/meeting/config/trackingCodes/{trackingCodeId}'
        http_method: DELETE
      header: Delete a Tracking Code
      parameters_and_response:
        Query Parameters:
        - doc: URL of the Webex site from which the API deletes the tracking code.
            All available Webex sites and preferred sites of a user can be retrieved
            by the Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        URI Parameters:
        - doc: Unique identifier for the tracking code to be deleted.
          name: trackingCodeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Lists user's tracking codes by an admin user.
      documentation:
        doc: Get User Tracking Codes
        doc_link: https://developer.webex.com/docs/api/v1/tracking-codes/get-user-tracking-codes
        endpoint: 'https: //webexapis.com/v1/admin/meeting/userconfig/trackingCodes'
        http_method: GET
      header: Get User Tracking Codes
      parameters_and_response:
        Query Parameters:
        - doc: URL of the Webex site from which the API retrieves the tracking code.
            If not specified, the API retrieves the tracking code from the user's
            preferred site. All available Webex sites and preferred sites of a user
            can be retrieved by the Get Site List API.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the user whose tracking codes are being retrieved.
            The admin user can specify the personId of a user on a site they manage
            and the API returns details for the user's tracking codes. At least one
            parameter of personId or email is required.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Site URL for the tracking code.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the user.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the user.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Tracking code information.
          name: trackingCodes
          param_attrs:
          - doc: Unique identifier for tracking code.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name for tracking code.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Value for tracking code.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[GetTrackingCodeItemForUserObject]
          type_spec: null
    - doc: Updates tracking codes for a specified user by an admin user.
      documentation:
        doc: Update User Tracking Codes
        doc_link: https://developer.webex.com/docs/api/v1/tracking-codes/update-user-tracking-codes
        endpoint: 'https: //webexapis.com/v1/admin/meeting/userconfig/trackingCodes'
        http_method: PUT
      header: Update User Tracking Codes
      parameters_and_response:
        Body Parameters:
        - doc: Site URL for the tracking code.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique identifier for the user. At least one parameter of personId
            or email is required. personId must precede email if both are specified.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the user. At least one parameter of personId or email
            is required. personId must precede email if both are specified.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Tracking code information for updates.
          name: trackingCodes
          param_attrs:
          - doc: Name for tracking code. The name cannot be empty and the maximum
              size is 120 characters.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Value for tracking code. value cannot be empty and the maximum size
              is 120 characters.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: array[UpdateTrackingCodeItemForUserObject]
          type_spec: null
        Response Properties:
        - doc: Site URL for the tracking code.
          name: siteUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the user.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Email address for the user.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Tracking code information.
          name: trackingCodes
          param_attrs:
          - doc: Unique identifier for tracking code.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name for tracking code.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Value for tracking code.
            name: value
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[GetTrackingCodeItemForUserObject]
          type_spec: null
  Video Mesh:
    doc: 'The Video Mesh Developer APIs provide the ability for organization admins
      to retrieve analytics and monitoring data, trigger on-demand troubleshooting
      tests (Media Health Monitoring Tool, Network, and Reachability) from the Developer
      Portal or their own monitoring application, which can help in quickly isolating
      and identifying root cause of issues which affect normal functioning of a customer''s
      Video Mesh Deployment.

      NOTE: The Media Health Monitor Test and Reachability Test can be triggered only
      on clusters that are not reserved for private meetings.

      To obtain the Organization ID needed for these APIs, use the Organizations API'
    header: Video Mesh
    methods:
    - doc: Returns the availability details for all Video Mesh clusters in an organization.
      documentation:
        doc: List Clusters Availability
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/list-clusters-availability
        endpoint: https://webexapis.com/v1/videoMesh/clusters/availability
        http_method: GET
      header: List Clusters Availability
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique ID for the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique ID for the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Availability details of the Video Mesh cluster.
            name: items
            param_attrs:
            - doc: ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: availabilitySegments
              param_attrs:
              - doc: Start date and time of the segment of availability data.
                name: segmentStartTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: End date and time of the segment of availability data.
                name: segmentEndTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Availability information of the Video Mesh cluster.
                name: availability
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Number of nodes that are online.
                name: noOfOnlineNodes
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Number of nodes that are offline.
                name: noOfOfflineNodes
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Total number of nodes in the Video Mesh cluster.
                name: totalNodes
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: array[ClusterAvailableTimeline]
              type_spec: null
            param_object: []
            type: array[ClusterAvailability]
            type_spec: null
          - doc: Start date and time (inclusive) of the availability data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the availability data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Cluster Availability Collection]
          type_spec: null
    - doc: Returns the availability details of a single Video Mesh cluster in an organization.
      documentation:
        doc: Get Cluster Availability
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-cluster-availability
        endpoint: https://webexapis.com/v1/videoMesh/clusters/availability/{clusterId}
        http_method: GET
      header: Get Cluster Availability
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique ID for the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Availability details of the Video Mesh cluster.
            name: items
            param_attrs:
            - doc: ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: availabilitySegments
              param_attrs:
              - doc: Start date and time of the segment of availability data.
                name: segmentStartTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: End date and time of the segment of availability data.
                name: segmentEndTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Availability information of the Video Mesh cluster.
                name: availability
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Number of nodes that are online.
                name: noOfOnlineNodes
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Number of nodes that are offline.
                name: noOfOfflineNodes
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Total number of nodes in the Video Mesh cluster.
                name: totalNodes
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: array[ClusterAvailableTimeline]
              type_spec: null
            param_object: []
            type: array[ClusterAvailability]
            type_spec: null
          - doc: Start date and time (inclusive) of the availability data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the availability data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Cluster Availability Collection]
          type_spec: null
        URI Parameters:
        - doc: The unique Video Mesh clusterID
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Returns the availability details of all nodes in a Video Mesh cluster.
      documentation:
        doc: List Node Availability
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/list-node-availability
        endpoint: https://webexapis.com/v1/videoMesh/nodes/availability
        http_method: GET
      header: List Node Availability
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique Video Mesh cluster ID.
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: Unique ID for a Video Mesh organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Availability details of the Video Mesh cluster.
            name: items
            param_attrs:
            - doc: ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Host Name or the IP of the Video Mesh node.
              name: hostNameOrIp
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ID of the Video Mesh node.
              name: nodeId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: availabilitySegments
              param_attrs:
              - doc: Number of nodes that are online.
                name: noOfOnlineNodes
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Number of nodes that are offline.
                name: noOfOfflineNodes
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Start date and time of the segment of availability data.
                name: segmentStartTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: End date and time of the segment of availability data.
                name: segmentEndTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Availability information of the Video Mesh node.
                name: availability
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Reason for the Video Mesh node being unavailable (if any).
                name: unAvailabilityReason
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Total number of nodes in the Video Mesh cluster.
                name: totalNodes
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: array[NodeAvailableTimeline]
              type_spec: null
            param_object: []
            type: array[NodeAvailability]
            type_spec: null
          - doc: Start date and time (inclusive) of the availability data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the availability data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Node Availability Collection]
          type_spec: null
    - doc: Returns the availability details of a single node in a Video Mesh cluster.
      documentation:
        doc: Get Node Availability
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-node-availability
        endpoint: https://webexapis.com/v1/videoMesh/nodes/availability/{nodeId}
        http_method: GET
      header: Get Node Availability
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: Unique ID for a Video Mesh organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Availability details of the Video Mesh cluster.
            name: items
            param_attrs:
            - doc: ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Host Name or the IP of the Video Mesh node.
              name: hostNameOrIp
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ID of the Video Mesh node.
              name: nodeId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: availabilitySegments
              param_attrs:
              - doc: Start date and time of the segment of availability data.
                name: segmentStartTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: End date and time of the segment of availability data.
                name: segmentEndTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Availability information of the Video Mesh node.
                name: availability
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Reason for the Video Mesh node being unavailable (if any).
                name: unAvailabilityReason
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[SingleNodeAvailableTimeline]
              type_spec: null
            param_object: []
            type: array[Single NodeAvailability]
            type_spec: null
          - doc: Start date and time (inclusive) of the availability data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the availability data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Single Node Availability Collection]
          type_spec: null
        URI Parameters:
        - doc: The unique Video Mesh node ID.
          name: nodeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Returns the test results of the Media Health Monitoring Tool tests for
        an organization.
      documentation:
        doc: List Media Health Monitoring Tool results
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/list-media-health-monitoring-tool-results
        endpoint: https://webexapis.com/v1/videoMesh/mediaHealthMonitor
        http_method: GET
      header: List Media Health Monitoring Tool results
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to. from must not be older than 1 week.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique Video Mesh organization ID.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: Unique ID of the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date and time (inclusive) of the Media Health Monitoring Tool
              data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the Media Health Monitoring Tool
              data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Media Health Monitoring Tool test results.
            name: items
            param_attrs:
            - doc: The list of Video Mesh clusters.
              name: clusters
              param_attrs:
              - doc: Unique ID of the Video Mesh cluster.
                name: clusterId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Name of the Video Mesh cluster.
                name: clusterName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The Video Mesh nodes in the cluster.
                name: nodes
                param_attrs:
                - doc: Unique ID of the Video Mesh node.
                  name: nodeId
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Host name or the IP of the Video Mesh node.
                  name: hostNameOrIP
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The Media Health Monitoring Tool test results for a single
                    Video Mesh node.
                  name: mhmTestResults
                  param_attrs:
                  - doc: The timestamp of the test run.
                    name: timestamp
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Unique ID of the test.
                    name: id
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Test results of Media Signalling, SIP Signalling, Media Cascade
                      runs.
                    name: testResults
                    param_attrs:
                    - doc: The name of the test.
                      name: testName
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Test results(Success/Failed).
                      name: testResult
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Reason for test failure.
                      name: failureReason
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    param_object: []
                    type: array[Media Signalling testResult Failure]
                    type_spec: null
                  param_object: []
                  type: array[Media Health Monitoring Test Results Failure]
                  type_spec: null
                param_object: []
                type: array[Media Health Monitoring second node]
                type_spec: null
              param_object: []
              type: array[Media Health Monitoring for first cluster]
              type_spec: null
            param_object: []
            type: array[Media Health Monitoring clusters]
            type_spec: null
          param_object: []
          type: array[Media Health Monitoring Results Collection for organization]
          type_spec: null
    - doc: 'Returns the test results of the Media Health Monitoring Tool tests for
        an organization.

        Changes in V2:

        On-demand test results can be obtained along with the periodic tests that
        are executed on Video Mesh nodes.'
      documentation:
        doc: List Media Health Monitoring Tool Test results V2
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/list-media-health-monitoring-tool-test-results-v2
        endpoint: https://webexapis.com/v1/videoMesh/testResults/mediaHealthMonitorTest
        http_method: GET
      header: List Media Health Monitoring Tool Test results V2
      parameters_and_response:
        Query Parameters:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The start date and time of the requested data in any ISO 8601 compliant
            format. The from parameter cannot have date and time values that exceed
            to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The end date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Trigger type.

            Possible values: OnDemand, Periodic, All'
          name: triggerType
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start date and time (inclusive) of the Media Health Monitoring Tool
            data.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date and time (inclusive) of the Media Health Monitoring Tool data.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Media Health Monitoring Tool test results.
          name: items
          param_attrs:
          - doc: The list of Video Mesh clusters.
            name: clusters
            param_attrs:
            - doc: Unique ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Video Mesh nodes in the cluster.
              name: nodes
              param_attrs:
              - doc: Unique ID of the Video Mesh node.
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host name or the IP of the Video Mesh node.
                name: hostNameOrIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The Media Health Monitoring Tool test results for a single Video
                  Mesh node.
                name: mhmTestResults
                param_attrs:
                - doc: The timestamp of the test run.
                  name: timestamp
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Unique ID of the test.
                  name: id
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Test results of Media Signalling, SIP Signalling, Media Cascade
                    runs.
                  name: testResults
                  param_attrs:
                  - doc: The name of the test.
                    name: testName
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Test results(Success/Failed).
                    name: testResult
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Reason for test failure.
                    name: failureReason
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  param_object: []
                  type: array[Media Signalling testResult Failure]
                  type_spec: null
                param_object: []
                type: array[Media Health Monitoring Test Results Failure]
                type_spec: null
              param_object: []
              type: array[Media Health Monitoring second node]
              type_spec: null
            param_object: []
            type: array[Media Health Monitoring for first cluster]
            type_spec: null
          param_object: []
          type: array[Media Health Monitoring clusters]
          type_spec: null
    - doc: Returns the test results of the Media Health Monitoring Tool tests for
        a single Video Mesh cluster.
      documentation:
        doc: Get Media Health Monitoring Tool Cluster results
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-media-health-monitoring-tool-cluster-results
        endpoint: https://webexapis.com/v1/videoMesh/mediaHealthMonitor/clusters
        http_method: GET
      header: Get Media Health Monitoring Tool Cluster results
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to. from must not be older than 1 week.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique Video Mesh Cluster ID.
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: Unique ID of the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date and time (inclusive) of the Media Health Monitoring Tool
              data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the Media Health Monitoring Tool
              data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Media Health Monitoring Tool test results.
            name: items
            param_attrs:
            - doc: List of Video Mesh clusters.
              name: clusters
              param_attrs:
              - doc: Unique ID of the Video Mesh cluster.
                name: clusterId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Name of the Video Mesh cluster.
                name: clusterName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The Video Mesh nodes in the cluster.
                name: nodes
                param_attrs:
                - doc: Unique ID of the Video Mesh node.
                  name: nodeId
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Host name or the IP of the Video Mesh node.
                  name: hostNameOrIP
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The Media Health Monitoring Tool test results for a single
                    Video Mesh node.
                  name: mhmTestResults
                  param_attrs:
                  - doc: The timestamp of the test run.
                    name: timestamp
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Unique ID of the test.
                    name: id
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Test results of Media Signalling, SIP Signalling, Media Cascade
                      runs.
                    name: testResults
                    param_attrs:
                    - doc: The name of the test.
                      name: testName
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Test results(Success/Failed).
                      name: testResult
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Reason for test failure.
                      name: failureReason
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    param_object: []
                    type: array[Media Signalling testResult Failure]
                    type_spec: null
                  param_object: []
                  type: array[Media Health Monitoring Test Results Failure]
                  type_spec: null
                param_object: []
                type: array[Media Health Monitoring second node]
                type_spec: null
              param_object: []
              type: array[Per cluster Media Health Monitoring result]
              type_spec: null
            param_object: []
            type: array[Per cluster Media Health Monitoring clusters]
            type_spec: null
          param_object: []
          type: array[Media Health Monitoring Results Collection for cluster]
          type_spec: null
    - doc: 'Returns the test results of the Media Health Monitoring Tool tests for
        a single Video Mesh cluster.

        Changes in V2:

        On-demand test results can be obtained along with the periodic tests that
        are executed on Video Mesh nodes.'
      documentation:
        doc: Get Media Health Monitoring Tool Test results for clusters V2
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-media-health-monitoring-tool-test-results-for-clusters-v2
        endpoint: https://webexapis.com/v1/videoMesh/testResults/mediaHealthMonitorTest/clusters
        http_method: GET
      header: Get Media Health Monitoring Tool Test results for clusters V2
      parameters_and_response:
        Query Parameters:
        - doc: Unique ID of the Video Mesh cluster.
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The start date and time of the requested data in any ISO 8601 compliant
            format. The from parameter cannot have date and time values that exceed
            to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The end date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Trigger type.

            Possible values: OnDemand, Periodic, All'
          name: triggerType
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start date and time (inclusive) of the Media Health Monitoring Tool
            data.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date and time (inclusive) of the Media Health Monitoring Tool data.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Media Health Monitoring Tool test results.
          name: items
          param_attrs:
          - doc: List of Video Mesh clusters.
            name: clusters
            param_attrs:
            - doc: Unique ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Video Mesh nodes in the cluster.
              name: nodes
              param_attrs:
              - doc: Unique ID of the Video Mesh node.
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host name or the IP of the Video Mesh node.
                name: hostNameOrIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The Media Health Monitoring Tool test results for a single Video
                  Mesh node.
                name: mhmTestResults
                param_attrs:
                - doc: The timestamp of the test run.
                  name: timestamp
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Unique ID of the test.
                  name: id
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Test results of Media Signalling, SIP Signalling, Media Cascade
                    runs.
                  name: testResults
                  param_attrs:
                  - doc: The name of the test.
                    name: testName
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Test results(Success/Failed).
                    name: testResult
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Reason for test failure.
                    name: failureReason
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  param_object: []
                  type: array[Media Signalling testResult Failure]
                  type_spec: null
                param_object: []
                type: array[Media Health Monitoring Test Results Failure]
                type_spec: null
              param_object: []
              type: array[Media Health Monitoring second node]
              type_spec: null
            param_object: []
            type: array[Per cluster Media Health Monitoring result]
            type_spec: null
          param_object: []
          type: array[Per cluster Media Health Monitoring clusters]
          type_spec: null
    - doc: Returns the test results of the Media Health Monitoring Tool tests for
        a single Video Mesh node.
      documentation:
        doc: Get Media Health Monitoring Tool Node results
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-media-health-monitoring-tool-node-results
        endpoint: https://webexapis.com/v1/videoMesh/mediaHealthMonitor/nodes
        http_method: GET
      header: Get Media Health Monitoring Tool Node results
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to. from must not be older than 1 week.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique Video Mesh Node ID.
          name: nodeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: Unique ID of the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date and time (inclusive) of the Media Health Monitoring Tool
              data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the Media Health Monitoring Tool
              data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Media Health Monitoring Tool test results.
            name: items
            param_attrs:
            - doc: The list of Video Mesh clusters.
              name: clusters
              param_attrs:
              - doc: Unique ID of the Video Mesh cluster.
                name: clusterId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Name of the Video Mesh cluster.
                name: clusterName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The Video Mesh nodes in the cluster.
                name: nodes
                param_attrs:
                - doc: Unique ID of the Video Mesh node.
                  name: nodeId
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Host name or IP Address of the Video Mesh node.
                  name: hostNameOrIP
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ' The Media Health Monitoring Tool test results for a single
                    Video Mesh node.'
                  name: mhmTestResults
                  param_attrs:
                  - doc: The timestamp of the test run.
                    name: timestamp
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Unique ID of the test.
                    name: id
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Test results of Media Signalling, SIP Signalling, Media Cascade
                      runs.
                    name: testResults
                    param_attrs:
                    - doc: The name of the test.
                      name: testName
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Test results(Success/Failed).
                      name: testResult
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Reason for test failure.
                      name: failureReason
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    param_object: []
                    type: array[Media Signalling testResult Failure]
                    type_spec: null
                  param_object: []
                  type: array[Media Health Monitoring Test Results Failure]
                  type_spec: null
                param_object: []
                type: array[Media Health Monitoring first node]
                type_spec: null
              param_object: []
              type: array[Per node Media Health Monitoring result]
              type_spec: null
            param_object: []
            type: array[Per node Media Health Monitoring clusters]
            type_spec: null
          param_object: []
          type: array[Media Health Monitoring Results Collection for node]
          type_spec: null
    - doc: 'Returns the test results of the Media Health Monitoring Tool tests for
        a single Video Mesh node.

        Changes in V2:

        On-demand test results can be obtained along with the periodic tests that
        are executed on Video Mesh nodes.'
      documentation:
        doc: Get Media Health Monitoring Tool Test results for node V2
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-media-health-monitoring-tool-test-results-for-node-v2
        endpoint: https://webexapis.com/v1/videoMesh/testResults/mediaHealthMonitorTest/nodes
        http_method: GET
      header: Get Media Health Monitoring Tool Test results for node V2
      parameters_and_response:
        Query Parameters:
        - doc: Unique ID of the Video Mesh node.
          name: nodeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The start date and time of the requested data in any ISO 8601 compliant
            format. The from parameter cannot have date and time values that exceed
            to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The end date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Trigger type.

            Possible values: OnDemand, Periodic, All'
          name: triggerType
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start date and time (inclusive) of the Media Health Monitoring Tool
            data.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date and time (inclusive) of the Media Health Monitoring Tool data.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Media Health Monitoring Tool test results.
          name: items
          param_attrs:
          - doc: The list of Video Mesh clusters.
            name: clusters
            param_attrs:
            - doc: Unique ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Video Mesh nodes in the cluster.
              name: nodes
              param_attrs:
              - doc: Unique ID of the Video Mesh node.
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host name or IP Address of the Video Mesh node.
                name: hostNameOrIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ' The Media Health Monitoring Tool test results for a single
                  Video Mesh node.'
                name: mhmTestResults
                param_attrs:
                - doc: The timestamp of the test run.
                  name: timestamp
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Unique ID of the test.
                  name: id
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Test results of Media Signalling, SIP Signalling, Media Cascade
                    runs.
                  name: testResults
                  param_attrs:
                  - doc: The name of the test.
                    name: testName
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Test results(Success/Failed).
                    name: testResult
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Reason for test failure.
                    name: failureReason
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  param_object: []
                  type: array[Media Signalling testResult Failure]
                  type_spec: null
                param_object: []
                type: array[Media Health Monitoring Test Results Failure]
                type_spec: null
              param_object: []
              type: array[Media Health Monitoring first node]
              type_spec: null
            param_object: []
            type: array[Per node Media Health Monitoring result]
            type_spec: null
          param_object: []
          type: array[Per node Media Health Monitoring clusters]
          type_spec: null
    - doc: Returns details of overflows to the cloud in an organization.
      documentation:
        doc: List Overflow to Cloud details
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/list-overflow-to-cloud-details
        endpoint: https://webexapis.com/v1/videoMesh/cloudOverflow
        http_method: GET
      header: List Overflow to Cloud details
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique Video Mesh organization ID.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique ID for the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date and time (inclusive) for the Overflow to Cloud data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) for the Overflow to Cloud data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The aggregation period of the trend data.
            name: aggregationInterval
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Overflow data for the organization.
            name: items
            param_attrs:
            - doc: Timestamp.
              name: timestamp
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Overflow Details.
              name: overflowDetails
              param_attrs:
              - doc: The reason for this overflow.
                name: overflowReason
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Number of overflows.
                name: overflowCount
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Any possible remediations for this overflow.
                name: possibleRemediation
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[OverflowDetails1]
              type_spec: null
            param_object: []
            type: array[CloudOverflowTrend1]
            type_spec: null
          param_object: []
          type: array[Overflow to Cloud Collection]
          type_spec: null
    - doc: Returns the redirect details of all Video Mesh clusters in an organization.
      documentation:
        doc: List Cluster Redirect details
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/list-cluster-redirect-details
        endpoint: https://webexapis.com/v1/videoMesh/callRedirects
        http_method: GET
      header: List Cluster Redirect details
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique Video Mesh organization ID.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique ID for the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date and time (inclusive) for the Call Redirect details.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the Call Redirect details.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The aggregation period of the trend data.
            name: aggregationInterval
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Redirect details for the organization.
            name: items
            param_attrs:
            - doc: Timestamp.
              name: timestamp
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: clusters
              param_attrs:
              - doc: ID of the Video Mesh cluster.
                name: clusterId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Name of the Video Mesh cluster.
                name: clusterName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Call Redirect Details.
                name: redirectDetails
                param_attrs:
                - doc: The reason for the redirect.
                  name: redirectReason
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Number of Call Redirects.
                  name: redirectCount
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: ' Any possible remediations for this overflow.'
                  name: possibleRemediation
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[ClusterRedirectDetailsBlr1a]
                type_spec: null
              param_object: []
              type: array[ClusterRedirectBlr1]
              type_spec: null
            param_object: []
            type: array[RedirectTrend1]
            type_spec: null
          param_object: []
          type: array[Redirect Collection For Org]
          type_spec: null
    - doc: Returns details of cluster redirects for a single Video Mesh cluster.
      documentation:
        doc: Get Cluster Redirect details
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-cluster-redirect-details
        endpoint: https://webexapis.com/v1/videoMesh/clusters/callRedirects
        http_method: GET
      header: Get Cluster Redirect details
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique Video Mesh Cluster ID.
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique ID for the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date and time (inclusive) for the Call Redirect details.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the Call Redirect details.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The aggregation period of the trend data.
            name: aggregationInterval
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Redirect details for the organization.
            name: items
            param_attrs:
            - doc: Timestamp.
              name: timestamp
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: clusters
              param_attrs:
              - doc: ID of the Video Mesh cluster.
                name: clusterId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Name of the Video Mesh cluster.
                name: clusterName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Call Redirect Details.
                name: redirectDetails
                param_attrs:
                - doc: The reason for the redirect.
                  name: redirectReason
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Number of Call Redirects.
                  name: redirectCount
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: ' Any possible remediations for this overflow.'
                  name: possibleRemediation
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[ClusterRedirectDetailsBlr1a]
                type_spec: null
              param_object: []
              type: array[ClusterRedirectBlr1]
              type_spec: null
            param_object: []
            type: array[RedirectTrendForCluster1]
            type_spec: null
          param_object: []
          type: array[Redirect Collection For Cluster]
          type_spec: null
    - doc: Returns the utilization details of all Video Mesh clusters in an organization.
      documentation:
        doc: List Clusters Utilization
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/list-clusters-utilization
        endpoint: https://webexapis.com/v1/videoMesh/utilization
        http_method: GET
      header: List Clusters Utilization
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique ID for the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique ID for the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The aggregation period of the trend data.
            name: aggregationInterval
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date and time (inclusive) of the utilization data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the utilization data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Utilization details of the Video Mesh cluster
            name: items
            param_attrs:
            - doc: Timestamp.
              name: timestamp
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: clusters
              param_attrs:
              - doc: ID of the Video Mesh cluster.
                name: clusterId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Name of the Video Mesh cluster.
                name: clusterName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Utilization details for the cluster in the time interval.
                name: utilizationMetrics
                param_attrs:
                - doc: Peak CPU usage during the time interval.
                  name: peakCpu
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: Average CPU usage during the time interval.
                  name: avgCpu
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: Maximum active calls at a point in the time interval.
                  name: activeCalls
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: Maximum active private calls at a point in the time interval.
                  name: activePrivateCalls
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                param_object: []
                type: UtilizationMetricsT1SJ
                type_spec: null
              param_object: []
              type: array[ClusterUtilizationT1SJ]
              type_spec: null
            param_object: []
            type: array[ClusterUtilizationTrend1]
            type_spec: null
          param_object: []
          type: array[Cluster Utilization Collection]
          type_spec: null
    - doc: Returns the utilization details for a single Video Mesh cluster.
      documentation:
        doc: Get Cluster Utilization details
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-cluster-utilization-details
        endpoint: https://webexapis.com/v1/videoMesh/clusters/utilization
        http_method: GET
      header: Get Cluster Utilization details
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique Video Mesh Cluster ID.
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique ID for the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The aggregation period of the trend data.
            name: aggregationInterval
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date and time (inclusive) of the utilization data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the utilization data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Utilization details of the Video Mesh cluster.
            name: items
            param_attrs:
            - doc: Timestamp.
              name: timestamp
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: clusters
              param_attrs:
              - doc: ID of the Video Mesh cluster.
                name: clusterId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Name of the Video Mesh cluster.
                name: clusterName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Utilization details for the cluster in the time interval.
                name: utilizationMetrics
                param_attrs:
                - doc: Peak CPU usage during the time interval.
                  name: peakCpu
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: Average CPU usage during the time interval.
                  name: avgCpu
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: Maximum active calls at a point in the time interval.
                  name: activeCalls
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: Maximum active private calls at a point in the time interval.
                  name: activePrivateCalls
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                param_object: []
                type: UtilizationMetricsT1Blr
                type_spec: null
              param_object: []
              type: array[ClusterUtilizationT1Blr]
              type_spec: null
            param_object: []
            type: array[UtilizationForClusterTrend1]
            type_spec: null
          param_object: []
          type: array[Utilization For Cluster Collection]
          type_spec: null
    - doc: Returns the test results of the Reachability tests for an organization.
      documentation:
        doc: List Reachability Test results
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/list-reachability-test-results
        endpoint: https://webexapis.com/v1/videoMesh/reachabilityTest
        http_method: GET
      header: List Reachability Test results
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to.  from must not be older than 1 week.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique ID for the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: Unique ID of the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date and time (inclusive) of the Reachability test results
              data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the Reachability test results data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Reachability test results data.
            name: items
            param_attrs:
            - doc: List of Video Mesh clusters.
              name: clusters
              param_attrs:
              - doc: Unique ID of the Video Mesh cluster.
                name: clusterId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Name of the Video Mesh cluster.
                name: clusterName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The Video Mesh nodes in the cluster.
                name: nodes
                param_attrs:
                - doc: Unique ID of the Video Mesh node.
                  name: nodeId
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Host name or the IP of the Video Mesh node.
                  name: hostNameOrIP
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ' Reachability test results for a single Video Mesh node.'
                  name: testResults
                  param_attrs:
                  - doc: Cloud Webex cluster against which Reachability test is being
                      executed.
                    name: destinationCluster
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: STUN test results for a Video Mesh cluster.
                    name: stunResults
                    param_attrs:
                    - doc: The timestamp of the test run.
                      name: timestamp
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: The type of the test being executed. Can be either OnDemand
                        or Periodic.
                      name: triggerType
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Unique ID of the test.
                      name: id
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: List of UDP ports being checked in Reachability test.
                      name: udp
                      param_attrs:
                      - doc: Destination IP address.
                        name: ipAddress
                        param_attrs: []
                        param_object: []
                        type: string
                        type_spec: null
                      - doc: Port number.
                        name: port
                        param_attrs: []
                        param_object: []
                        type: number
                        type_spec: null
                      - doc: Port reachability information.
                        name: reachable
                        param_attrs: []
                        param_object: []
                        type: boolean
                        type_spec: null
                      param_object: []
                      type: array[Reachability Test results Failure]
                      type_spec: null
                    - doc: List of TCP ports being checked in Reachability test.
                      name: tcp
                      param_attrs:
                      - doc: Destination IP address.
                        name: ipAddress
                        param_attrs: []
                        param_object: []
                        type: string
                        type_spec: null
                      - doc: Port number.
                        name: port
                        param_attrs: []
                        param_object: []
                        type: number
                        type_spec: null
                      - doc: Port reachability information.
                        name: reachable
                        param_attrs: []
                        param_object: []
                        type: boolean
                        type_spec: null
                      param_object: []
                      type: array[Reachability Test results Failure]
                      type_spec: null
                    param_object: []
                    type: array[Reachability Test results Stun results 1]
                    type_spec: null
                  param_object: []
                  type: array[Reachability Test results destination cluster]
                  type_spec: null
                param_object: []
                type: array[Reachability Test results first node]
                type_spec: null
              param_object: []
              type: array[Reachability Test Results for first cluster]
              type_spec: null
            param_object: []
            type: array[Reachability Test Results for cluster]
            type_spec: null
          param_object: []
          type: array[Reachability Test results for organization]
          type_spec: null
    - doc: 'Returns the test results of the Reachability tests for an organization.

        Changes in V2:'
      documentation:
        doc: List Reachability Test results V2
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/list-reachability-test-results-v2
        endpoint: https://webexapis.com/v1/videoMesh/testResults/reachabilityTest
        http_method: GET
      header: List Reachability Test results V2
      parameters_and_response:
        Query Parameters:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The start date and time of the requested data in any ISO 8601 compliant
            format. The from parameter cannot have date and time values that exceed
            to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The end date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Trigger type.

            Possible values: OnDemand, Periodic, All'
          name: triggerType
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start date and time (inclusive) of the Reachability test results data.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date and time (inclusive) of the Reachability test results data.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Reachability test results data.
          name: items
          param_attrs:
          - doc: List of Video Mesh clusters.
            name: clusters
            param_attrs:
            - doc: Unique ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Video Mesh nodes in the cluster.
              name: nodes
              param_attrs:
              - doc: Unique ID of the Video Mesh node.
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host name or the IP of the Video Mesh node.
                name: hostNameOrIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ' Reachability test results for a single Video Mesh node.'
                name: testResults
                param_attrs:
                - doc: Cloud Webex cluster against which Reachability test is being
                    executed.
                  name: destinationCluster
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: STUN test results for a Video Mesh cluster.
                  name: stunResults
                  param_attrs:
                  - doc: The timestamp of the test run.
                    name: timestamp
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: The type of the test being executed. Can be either OnDemand
                      or Periodic.
                    name: triggerType
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Unique ID of the test.
                    name: id
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: List of UDP ports being checked in Reachability test.
                    name: udp
                    param_attrs:
                    - doc: Destination IP address.
                      name: ipAddress
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Port number.
                      name: port
                      param_attrs: []
                      param_object: []
                      type: number
                      type_spec: null
                    - doc: Port reachability information.
                      name: reachable
                      param_attrs: []
                      param_object: []
                      type: boolean
                      type_spec: null
                    param_object: []
                    type: array[Reachability Test results Failure]
                    type_spec: null
                  - doc: List of TCP ports being checked in Reachability test.
                    name: tcp
                    param_attrs:
                    - doc: Destination IP address.
                      name: ipAddress
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Port number.
                      name: port
                      param_attrs: []
                      param_object: []
                      type: number
                      type_spec: null
                    - doc: Port reachability information.
                      name: reachable
                      param_attrs: []
                      param_object: []
                      type: boolean
                      type_spec: null
                    param_object: []
                    type: array[Reachability Test results Failure]
                    type_spec: null
                  param_object: []
                  type: array[Reachability Test results Stun results 1]
                  type_spec: null
                param_object: []
                type: array[Reachability Test results destination cluster]
                type_spec: null
              param_object: []
              type: array[Reachability Test results first node]
              type_spec: null
            param_object: []
            type: array[Reachability Test Results for first cluster]
            type_spec: null
          param_object: []
          type: array[Reachability Test Results for cluster]
          type_spec: null
    - doc: Returns the test results of the Reachability tests for a single Video Mesh
        cluster.
      documentation:
        doc: Get Reachability Test results for Cluster
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-reachability-test-results-for-cluster
        endpoint: https://webexapis.com/v1/videoMesh/reachabilityTest/clusters
        http_method: GET
      header: Get Reachability Test results for Cluster
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to. from must not be older than 1 week.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique Video Mesh Cluster ID.
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: Unique ID of the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date and time (inclusive) of the Reachability test results
              data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the Reachability test results data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Reachability test results data.
            name: items
            param_attrs:
            - doc: List of Video Mesh clusters.
              name: clusters
              param_attrs:
              - doc: Unique ID of the Video Mesh cluster.
                name: clusterId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Name of the Video Mesh cluster.
                name: clusterName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The Video Mesh nodes in the cluster.
                name: nodes
                param_attrs:
                - doc: Unique ID of the Video Mesh node.
                  name: nodeId
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Host name or the IP of the Video Mesh node.
                  name: hostNameOrIP
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ' Reachability test results for a single Video Mesh node.'
                  name: testResults
                  param_attrs:
                  - doc: Cloud Webex cluster against which Reachability test is being
                      executed.
                    name: destinationCluster
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: STUN test results for a Video Mesh cluster.
                    name: stunResults
                    param_attrs:
                    - doc: The timestamp of the test run.
                      name: timestamp
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: The type of the test being executed. Can be either OnDemand
                        or Periodic.
                      name: triggerType
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Unique ID of the test.
                      name: id
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: List of UDP ports being checked in Reachability test.
                      name: udp
                      param_attrs:
                      - doc: Destination IP address.
                        name: ipAddress
                        param_attrs: []
                        param_object: []
                        type: string
                        type_spec: null
                      - doc: Port number.
                        name: port
                        param_attrs: []
                        param_object: []
                        type: number
                        type_spec: null
                      - doc: Port reachability information.
                        name: reachable
                        param_attrs: []
                        param_object: []
                        type: boolean
                        type_spec: null
                      param_object: []
                      type: array[Reachability Test results Failure]
                      type_spec: null
                    - doc: List of TCP ports being checked in Reachability test.
                      name: tcp
                      param_attrs:
                      - doc: Destination IP address.
                        name: ipAddress
                        param_attrs: []
                        param_object: []
                        type: string
                        type_spec: null
                      - doc: Port number.
                        name: port
                        param_attrs: []
                        param_object: []
                        type: number
                        type_spec: null
                      - doc: Port reachability information.
                        name: reachable
                        param_attrs: []
                        param_object: []
                        type: boolean
                        type_spec: null
                      param_object: []
                      type: array[Reachability Test results Failure]
                      type_spec: null
                    param_object: []
                    type: array[Reachability Test results Stun results 1]
                    type_spec: null
                  param_object: []
                  type: array[Reachability Test results destination cluster]
                  type_spec: null
                param_object: []
                type: array[Reachability Test results first node]
                type_spec: null
              param_object: []
              type: array[Reachability Test Results for first cluster]
              type_spec: null
            param_object: []
            type: array[Reachability Test Results for single cluster]
            type_spec: null
          param_object: []
          type: array[Reachability Test results for cluster]
          type_spec: null
    - doc: 'Returns the test results of the Reachability tests for a single Video
        Mesh cluster.

        Changes in V2:'
      documentation:
        doc: Get Reachability Test results for cluster V2
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-reachability-test-results-for-cluster-v2
        endpoint: https://webexapis.com/v1/videoMesh/testResults/reachabilityTest/clusters
        http_method: GET
      header: Get Reachability Test results for cluster V2
      parameters_and_response:
        Query Parameters:
        - doc: Unique ID of the Video Mesh cluster.
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The start date and time of the requested data in any ISO 8601 compliant
            format. The from parameter cannot have date and time values that exceed
            to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The end date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Trigger type.

            Possible values: OnDemand, Periodic, All'
          name: triggerType
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start date and time (inclusive) of the Reachability test results data.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date and time (inclusive) of the Reachability test results data.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Reachability test results data.
          name: items
          param_attrs:
          - doc: List of Video Mesh clusters.
            name: clusters
            param_attrs:
            - doc: Unique ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Video Mesh nodes in the cluster.
              name: nodes
              param_attrs:
              - doc: Unique ID of the Video Mesh node.
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host name or the IP of the Video Mesh node.
                name: hostNameOrIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ' Reachability test results for a single Video Mesh node.'
                name: testResults
                param_attrs:
                - doc: Cloud Webex cluster against which Reachability test is being
                    executed.
                  name: destinationCluster
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: STUN test results for a Video Mesh cluster.
                  name: stunResults
                  param_attrs:
                  - doc: The timestamp of the test run.
                    name: timestamp
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: The type of the test being executed. Can be either OnDemand
                      or Periodic.
                    name: triggerType
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Unique ID of the test.
                    name: id
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: List of UDP ports being checked in Reachability test.
                    name: udp
                    param_attrs:
                    - doc: Destination IP address.
                      name: ipAddress
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Port number.
                      name: port
                      param_attrs: []
                      param_object: []
                      type: number
                      type_spec: null
                    - doc: Port reachability information.
                      name: reachable
                      param_attrs: []
                      param_object: []
                      type: boolean
                      type_spec: null
                    param_object: []
                    type: array[Reachability Test results Failure]
                    type_spec: null
                  - doc: List of TCP ports being checked in Reachability test.
                    name: tcp
                    param_attrs:
                    - doc: Destination IP address.
                      name: ipAddress
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Port number.
                      name: port
                      param_attrs: []
                      param_object: []
                      type: number
                      type_spec: null
                    - doc: Port reachability information.
                      name: reachable
                      param_attrs: []
                      param_object: []
                      type: boolean
                      type_spec: null
                    param_object: []
                    type: array[Reachability Test results Failure]
                    type_spec: null
                  param_object: []
                  type: array[Reachability Test results Stun results 1]
                  type_spec: null
                param_object: []
                type: array[Reachability Test results destination cluster]
                type_spec: null
              param_object: []
              type: array[Reachability Test results first node]
              type_spec: null
            param_object: []
            type: array[Reachability Test Results for first cluster]
            type_spec: null
          param_object: []
          type: array[Reachability Test Results for single cluster]
          type_spec: null
    - doc: Returns the test results of the Reachability tests for a single Video Mesh
        node.
      documentation:
        doc: Get Reachability Test results for Node
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-reachability-test-results-for-node
        endpoint: https://webexapis.com/v1/videoMesh/reachabilityTest/nodes
        http_method: GET
      header: Get Reachability Test results for Node
      parameters_and_response:
        Query Parameters:
        - doc: The starting date and time of the requested data in any ISO 8601 compliant
            format. from cannot be after to. from must not be older than 1 week.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ending date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The unique Video Mesh node ID.
          name: nodeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: Unique ID of the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date and time (inclusive) of the Reachability test results
              data.
            name: from
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date and time (inclusive) of the Reachability test results data.
            name: to
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Reachability test results data.
            name: items
            param_attrs:
            - doc: List of Video Mesh clusters.
              name: clusters
              param_attrs:
              - doc: Unique ID of the Video Mesh cluster.
                name: clusterId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Name of the Video Mesh cluster.
                name: clusterName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The Video Mesh nodes in the cluster.
                name: nodes
                param_attrs:
                - doc: Unique ID of the Video Mesh node.
                  name: nodeId
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Host name or the IP of the Video Mesh node.
                  name: hostNameOrIP
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ' Reachability test results for a single Video Mesh node.'
                  name: testResults
                  param_attrs:
                  - doc: Cloud Webex cluster against which Reachability test is being
                      executed.
                    name: destinationCluster
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: STUN test results for a Video Mesh cluster.
                    name: stunResults
                    param_attrs:
                    - doc: The timestamp of the test run.
                      name: timestamp
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: The type of the test being executed. Can be either OnDemand
                        or Periodic.
                      name: triggerType
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Unique ID of the test.
                      name: id
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: List of UDP ports being checked in Reachability test.
                      name: udp
                      param_attrs:
                      - doc: Destination IP address.
                        name: ipAddress
                        param_attrs: []
                        param_object: []
                        type: string
                        type_spec: null
                      - doc: Port number.
                        name: port
                        param_attrs: []
                        param_object: []
                        type: number
                        type_spec: null
                      - doc: Port reachability information.
                        name: reachable
                        param_attrs: []
                        param_object: []
                        type: boolean
                        type_spec: null
                      param_object: []
                      type: array[Reachability Test results Failure]
                      type_spec: null
                    - doc: List of TCP ports being checked in Reachability test.
                      name: tcp
                      param_attrs:
                      - doc: Destination IP address.
                        name: ipAddress
                        param_attrs: []
                        param_object: []
                        type: string
                        type_spec: null
                      - doc: Port number.
                        name: port
                        param_attrs: []
                        param_object: []
                        type: number
                        type_spec: null
                      - doc: Port reachability information.
                        name: reachable
                        param_attrs: []
                        param_object: []
                        type: boolean
                        type_spec: null
                      param_object: []
                      type: array[Reachability Test results Failure]
                      type_spec: null
                    param_object: []
                    type: array[Reachability Test results Stun results 1]
                    type_spec: null
                  param_object: []
                  type: array[Reachability Test results destination cluster]
                  type_spec: null
                param_object: []
                type: array[Reachability Test results first node]
                type_spec: null
              param_object: []
              type: array[Reachability Test Results for one cluster]
              type_spec: null
            param_object: []
            type: array[Reachability Test Results for one cluster one node]
            type_spec: null
          param_object: []
          type: array[Reachability Test results for node]
          type_spec: null
    - doc: 'Returns the test results of the Reachability tests for a single Video
        Mesh node.

        Changes in V2:'
      documentation:
        doc: Get Reachability Test results for node V2
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-reachability-test-results-for-node-v2
        endpoint: https://webexapis.com/v1/videoMesh/testResults/reachabilityTest/nodes
        http_method: GET
      header: Get Reachability Test results for node V2
      parameters_and_response:
        Query Parameters:
        - doc: Unique ID of the Video Mesh node.
          name: nodeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The start date and time of the requested data in any ISO 8601 compliant
            format. The from parameter cannot have date and time values that exceed
            to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The end date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Trigger type.

            Possible values: OnDemand, Periodic, All'
          name: triggerType
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start date and time (inclusive) of the Reachability test results data.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date and time (inclusive) of the Reachability test results data.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Reachability test results data.
          name: items
          param_attrs:
          - doc: List of Video Mesh clusters.
            name: clusters
            param_attrs:
            - doc: Unique ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Video Mesh nodes in the cluster.
              name: nodes
              param_attrs:
              - doc: Unique ID of the Video Mesh node.
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host name or the IP of the Video Mesh node.
                name: hostNameOrIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ' Reachability test results for a single Video Mesh node.'
                name: testResults
                param_attrs:
                - doc: Cloud Webex cluster against which Reachability test is being
                    executed.
                  name: destinationCluster
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: STUN test results for a Video Mesh cluster.
                  name: stunResults
                  param_attrs:
                  - doc: The timestamp of the test run.
                    name: timestamp
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: The type of the test being executed. Can be either OnDemand
                      or Periodic.
                    name: triggerType
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Unique ID of the test.
                    name: id
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: List of UDP ports being checked in Reachability test.
                    name: udp
                    param_attrs:
                    - doc: Destination IP address.
                      name: ipAddress
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Port number.
                      name: port
                      param_attrs: []
                      param_object: []
                      type: number
                      type_spec: null
                    - doc: Port reachability information.
                      name: reachable
                      param_attrs: []
                      param_object: []
                      type: boolean
                      type_spec: null
                    param_object: []
                    type: array[Reachability Test results Failure]
                    type_spec: null
                  - doc: List of TCP ports being checked in Reachability test.
                    name: tcp
                    param_attrs:
                    - doc: Destination IP address.
                      name: ipAddress
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Port number.
                      name: port
                      param_attrs: []
                      param_object: []
                      type: number
                      type_spec: null
                    - doc: Port reachability information.
                      name: reachable
                      param_attrs: []
                      param_object: []
                      type: boolean
                      type_spec: null
                    param_object: []
                    type: array[Reachability Test results Failure]
                    type_spec: null
                  param_object: []
                  type: array[Reachability Test results Stun results 1]
                  type_spec: null
                param_object: []
                type: array[Reachability Test results destination cluster]
                type_spec: null
              param_object: []
              type: array[Reachability Test results first node]
              type_spec: null
            param_object: []
            type: array[Reachability Test Results for one cluster]
            type_spec: null
          param_object: []
          type: array[Reachability Test Results for one cluster one node]
          type_spec: null
    - doc: Returns the cluster details of all Video Mesh clusters in an organization.
      documentation:
        doc: List Cluster Details
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/list-cluster-details
        endpoint: https://webexapis.com/v1/videoMesh/clusters
        http_method: GET
      header: List Cluster Details
      parameters_and_response:
        Query Parameters:
        - doc: The unique ID for the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique ID for the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ' Details of all the clusters of the organization.'
            name: items
            param_attrs:
            - doc: ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Video Mesh nodes in the cluster.
              name: nodes
              param_attrs:
              - doc: ID of the Video Mesh node.
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host Name or the IP of the Video Mesh node.
                name: hostNameOrIp
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Deployment Type of the Video Mesh node.
                name: deploymentType
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Location details of the Video Mesh node.
                name: location
                param_attrs:
                - doc: Country code of the Location where the Video Mesh node is deployed.
                  name: countryCode
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: City where Video Mesh node is deployed.
                  name: city
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Time zone in which the Video Mesh node is deployed.
                  name: timeZone
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: BlrNodeLocation
                type_spec: null
              param_object: []
              type: array[BlrNode1]
              type_spec: null
            - doc: Release Channel of the Video Mesh cluster.
              name: releaseChannel
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Upgrade Schedule details of the Video Mesh cluster.
              name: upgradeSchedule
              param_attrs:
              - doc: Days of the week when scheduled upgrades will occur for the Video
                  Mesh cluster.
                name: scheduleDays
                param_attrs: []
                param_object: []
                type: array[string]
                type_spec: null
              - doc: Time when scheduled upgrade will occur for the Video Mesh cluster.
                name: scheduleTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Timezone of the scheduled upgrade of Video Mesh cluster.
                name: scheduleTimeZone
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Upgrade Pending information.
                name: upgradePending
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Time when the next upgrade is scheduled for the Video Mesh cluster.
                name: nextUpgradeTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: ClusterUpgradeScheduleBlr
              type_spec: null
            param_object: []
            type: array[BlrClusterDetails]
            type_spec: null
          param_object: []
          type: array[Cluster Details Collection]
          type_spec: null
    - doc: Returns the cluster details for a single Video Mesh cluster.
      documentation:
        doc: Get Cluster Details
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-cluster-details
        endpoint: https://webexapis.com/v1/videoMesh/clusters/{clusterId}
        http_method: GET
      header: Get Cluster Details
      parameters_and_response:
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique ID for the organization.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ' Details of the cluster.'
            name: items
            param_attrs:
            - doc: ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Video Mesh nodes in the cluster.
              name: nodes
              param_attrs:
              - doc: ID of the Video Mesh node.
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host Name or the IP of the Video Mesh node.
                name: hostNameOrIp
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Deployment Type of the Video Mesh node.
                name: deploymentType
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Location details of the Video Mesh node.
                name: location
                param_attrs:
                - doc: Country code of the Location where the Video Mesh node is deployed.
                  name: countryCode
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: City where Video Mesh node is deployed.
                  name: city
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Time zone in which the Video Mesh node is deployed.
                  name: timeZone
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: BlrNodeLocation
                type_spec: null
              param_object: []
              type: array[BlrNode1]
              type_spec: null
            - doc: Release Channel of the Video Mesh cluster.
              name: releaseChannel
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Upgrade Schedule details of the Video Mesh cluster.
              name: upgradeSchedule
              param_attrs:
              - doc: Days of the week when scheduled upgrades will occur for the Video
                  Mesh cluster.
                name: scheduleDays
                param_attrs: []
                param_object: []
                type: array[string]
                type_spec: null
              - doc: Time when scheduled upgrade will occur for the Video Mesh cluster.
                name: scheduleTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Timezone of the scheduled upgrade of Video Mesh cluster.
                name: scheduleTimeZone
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Upgrade Pending information.
                name: upgradePending
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Time when the next upgrade is scheduled for the Video Mesh cluster.
                name: nextUpgradeTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: ClusterUpgradeScheduleBlr
              type_spec: null
            param_object: []
            type: array[BlrClusterDetails]
            type_spec: null
          param_object: []
          type: array[Specific Cluster Details Collection]
          type_spec: null
        URI Parameters:
        - doc: The unique Video Mesh Cluster ID.
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Triggers an on-demand test for a cluster.

        The test is run on a maximum of 10 nodes present in the cluster, chosen at
        random, or based on input from the user.'
      documentation:
        doc: Trigger on-demand test for cluster
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/trigger-on-demand-test-for-cluster
        endpoint: https://webexapis.com/v1/videoMesh/triggerTest/clusters/{clusterId}
        http_method: POST
      header: Trigger on-demand test for cluster
      parameters_and_response:
        Body Parameters:
        - doc: Test type to trigger on node.
          name: type
          param_attrs:
          - doc: Used to test whether the media ports within the Video Mesh node are
              open, and whether the Video Mesh node is able to reach the cloud clusters
              pertaining to the media containers via those ports.
            name: ReachabilityTest
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Used to test the network environment of the Video Mesh node by running
              various connectivity, bandwidth, and DNS resolution tests against Webex
              Cloud and ThirdParty Cloud (Docker) services.
            name: NetworkTest
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Used to test the meetings and call health of Video Mesh nodes using
              signaling and cascading methods.
            name: MediaHealthMonitorTest
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: 'List of nodes to test.

            Possible values: Y2lzY29zcGFyazovL3VzL0hZQlJJRF9DT05ORUNUT1IvMmMzYzlmOWUtNzNkOS00NDYwLWE2NjgtMDQ3MTYyZmYxYmFjOjE1NmRmNzg5Yzg1NTRkNTVhMjc1ZGU5OTc4Zjk5MDJk,
            Y2lzY29zcGFyazovL3VzL0hZQlJJRF9DT05ORUNUT1IvMmMzYzlmOWUtNzNkOS00NDYwLWE2NjgtMDQ3MTYyZmYxYmFjOjE1NmRmNzg5Yzg1NTRhYmNhZGVmZ2U5OTc4Zjk5MDJk'
          name: nodes
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique ID of the test being executed.
          name: commandId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ' Unique ID of the Video Mesh cluster.'
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: nodes
          param_attrs:
          - doc: Unique ID of the Video Mesh node.
            name: nodeId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Status of the test triggered.
            name: status
            param_attrs:
            - doc: ''
              name: Dispatched
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Completed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Errored
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[Node Status List1]
          type_spec: null
        URI Parameters:
        - doc: Unique ID of the Video Mesh cluster.
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Triggers an on-demand test for a node.
      documentation:
        doc: Trigger on-demand test for node
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/trigger-on-demand-test-for-node
        endpoint: https://webexapis.com/v1/videoMesh/triggerTest/nodes/{nodeId}
        http_method: POST
      header: Trigger on-demand test for node
      parameters_and_response:
        Body Parameters:
        - doc: Test type to trigger on node.
          name: type
          param_attrs:
          - doc: Used to test whether the media ports within the Video Mesh node are
              open, and whether the Video Mesh node is able to reach the cloud clusters
              pertaining to the media containers via those ports.
            name: ReachabilityTest
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Used to test the network environment of the Video Mesh node by running
              various connectivity, bandwidth, and DNS resolution tests against Webex
              Cloud and ThirdParty Cloud (Docker) services.
            name: NetworkTest
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Used to test the meetings and call health of Video Mesh nodes using
              signalling and cascading methods.
            name: MediaHealthMonitorTest
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique ID of the test being executed.
          name: commandId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique ID of the Video Mesh cluster.
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: nodes
          param_attrs:
          - doc: Unique ID of the Video Mesh node.
            name: nodeId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Status of the test triggered.
            name: status
            param_attrs:
            - doc: ''
              name: Dispatched
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Completed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Errored
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[Node Status List1]
          type_spec: null
        URI Parameters:
        - doc: Unique ID of the Video Mesh node.
          name: nodeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Returns the status of the test triggered using the Trigger on-demand test
        API.
      documentation:
        doc: Get Triggered test status
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-triggered-test-status
        endpoint: https://webexapis.com/v1/videoMesh/testStatus
        http_method: GET
      header: Get Triggered test status
      parameters_and_response:
        Query Parameters:
        - doc: The unique command ID generated from Trigger on-demand test API.
          name: commandId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique ID of the test being executed.
          name: commandId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ' Unique ID of the Video Mesh cluster.'
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: nodes
          param_attrs:
          - doc: Unique ID of the Video Mesh node.
            name: nodeId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Status of the test triggered.
            name: status
            param_attrs:
            - doc: ''
              name: Dispatched
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Completed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Errored
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[Node Status List1]
          type_spec: null
    - doc: 'Returns the results of the test triggered using the command ID.NOTE: The
        response format depends on the type of test triggered and it is the same as
        that of NetworkTest API, MediaHealthMonitorTest API, and ReachabilityTest
        API respectively.'
      documentation:
        doc: Get Triggered test results
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-triggered-test-results
        endpoint: https://webexapis.com/v1/videoMesh/testResults
        http_method: GET
      header: Get Triggered test results
      parameters_and_response:
        Query Parameters:
        - doc: The unique command ID generated from Trigger on-demand test API.
          name: commandId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Test type of the command ID.
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The unique ID for the test being executed.
          name: commandId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: results
          param_attrs:
          - doc: ''
            name: clusters
            param_attrs:
            - doc: Unique ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: nodes
              param_attrs:
              - doc: ' Unique ID of the Video Mesh node.'
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host name or IP Address of the Video Mesh node.
                name: hostNameOrIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: mhmTestResults
                param_attrs:
                - doc: The timestamp of the test run.
                  name: timestamp
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: id
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: testResults
                  param_attrs:
                  - doc: ''
                    name: testName
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: ''
                    name: testResult
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: ''
                    name: failureReason
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  param_object: []
                  type: array[MHM Test Result1]
                  type_spec: null
                param_object: []
                type: array[MHM Test Results]
                type_spec: null
              param_object: []
              type: array[Nodes Result]
              type_spec: null
            param_object: []
            type: array[Results]
            type_spec: null
          param_object: []
          type: array[Test Clusters Result]
          type_spec: null
    - doc: 'Returns the test results of the Network tests triggered for an organization.
        The tests listed below are run as a part of the Network Test execution on
        the node.

        Bandwidth Test - Tests the bandwidth parameters of the Video Mesh node''s
        network. The test is run between the Video Mesh node and cloud services.DNS
        Resolution Test - Tests the resolution of IP addresses related to cloud services,
        against the DNS servers configured on the Video Mesh node''s network.HTTPS
        Connectivity Test - Tests whether the Video Mesh node is able to connect to
        cloud services via HTTPS protocol.Websocket Connectivity Test - Tests whether
        the Video Mesh node is able to connect to Webex cloud services via Websocket.'
      documentation:
        doc: List Network Test results
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/list-network-test-results
        endpoint: https://webexapis.com/v1/videoMesh/testResults/networkTest
        http_method: GET
      header: List Network Test results
      parameters_and_response:
        Query Parameters:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The start date and time of the requested data in any ISO 8601 compliant
            format. The from parameter cannot have date and time values that exceed
            to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The end date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Trigger type.

            Possible values: OnDemand, Periodic, All'
          name: triggerType
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start date and time (inclusive) of the Network Test data.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date and time (inclusive) of the Network Test data.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Network test results.
          name: items
          param_attrs:
          - doc: List of Video Mesh clusters.
            name: clusters
            param_attrs:
            - doc: Unique ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: nodes
              param_attrs:
              - doc: Unique ID of the Video Mesh node.
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host name or IP Address of the Video Mesh node.
                name: hostNameOrIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: testResults
                param_attrs:
                - doc: The timestamp of the test run.
                  name: timestamp
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The type of the test being executed. Can be either OnDemand
                    or Periodic.
                  name: triggerType
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Unique ID of the test.
                  name: id
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: result
                  param_attrs:
                  - doc: The type of test result.
                    name: type
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Test Results from different services.
                    name: results
                    param_attrs:
                    - doc: Service for which the test was executed.
                      name: serviceType
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Result of the test executed.
                      name: testResult
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: ''
                      name: failureDetails
                      param_attrs:
                      - doc: Possible reasons for failure for the test.
                        name: possibleFailureReason
                        param_attrs: []
                        param_object: []
                        type: array[string]
                        type_spec: null
                      - doc: Possible fixes for the failures mentioned above.
                        name: possibleRemediation
                        param_attrs: []
                        param_object: []
                        type: array[string]
                        type_spec: null
                      param_object: []
                      type: FailureDetails1
                      type_spec: null
                    param_object: []
                    type: array[Service Type Result1]
                    type_spec: null
                  param_object: []
                  type: array[DNS Resolution Test]
                  type_spec: null
                param_object: []
                type: array[Connectivity Test Results For Node]
                type_spec: null
              param_object: []
              type: array[Per Node Connectivity Result1]
              type_spec: null
            param_object: []
            type: array[Per Cluster Connectivity Result1]
            type_spec: null
          param_object: []
          type: array[Connectivity Test Results Clusters Object 1]
          type_spec: null
    - doc: 'Returns the test results of the Network tests triggered for a single Video
        Mesh cluster. The tests listed below are run as a part of the Network Test
        execution on the node.

        Bandwidth Test - Tests the bandwidth parameters of the Video Mesh node''s
        network. The test is run between the Video Mesh node and cloud services.DNS
        Resolution Test - Tests the resolution of IP addresses related to cloud services,
        against the DNS servers configured on the Video Mesh node''s network.HTTPS
        Connectivity Test - Tests whether the Video Mesh node is able to connect to
        cloud services via HTTPS protocol.Websocket Connectivity Test - Tests whether
        the Video Mesh node is able to connect to Webex cloud services via Websocket.'
      documentation:
        doc: Get Network Test results for cluster
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-network-test-results-for-cluster
        endpoint: https://webexapis.com/v1/videoMesh/testResults/networkTest/clusters
        http_method: GET
      header: Get Network Test results for cluster
      parameters_and_response:
        Query Parameters:
        - doc: Unique ID of the Video Mesh cluster.
          name: clusterId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The start date and time of the requested data in any ISO 8601 compliant
            format. The from parameter cannot have date and time values that exceed
            to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The end date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Trigger type.

            Possible values: OnDemand, Periodic, All'
          name: triggerType
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start date and time (inclusive) of the Network Test data.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date and time (inclusive) of the Network Test data.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Network test results.
          name: items
          param_attrs:
          - doc: List of Video Mesh clusters.
            name: clusters
            param_attrs:
            - doc: Unique ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: nodes
              param_attrs:
              - doc: Unique ID of the Video Mesh node.
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host name or IP Address of the Video Mesh node.
                name: hostNameOrIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: testResults
                param_attrs:
                - doc: The timestamp of the test run.
                  name: timestamp
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The type of the test being executed. Can be either OnDemand
                    or Periodic.
                  name: triggerType
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Unique ID of the test.
                  name: id
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: result
                  param_attrs:
                  - doc: The type of test result.
                    name: type
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Test Results from different services.
                    name: results
                    param_attrs:
                    - doc: Service for which the test was executed.
                      name: serviceType
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Result of the test executed.
                      name: testResult
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: ''
                      name: failureDetails
                      param_attrs:
                      - doc: Possible reasons for failure for the test.
                        name: possibleFailureReason
                        param_attrs: []
                        param_object: []
                        type: array[string]
                        type_spec: null
                      - doc: Possible fixes for the failures mentioned above.
                        name: possibleRemediation
                        param_attrs: []
                        param_object: []
                        type: array[string]
                        type_spec: null
                      param_object: []
                      type: FailureDetails1
                      type_spec: null
                    param_object: []
                    type: array[Service Type Result1]
                    type_spec: null
                  param_object: []
                  type: array[DNS Resolution Test]
                  type_spec: null
                param_object: []
                type: array[Connectivity Test Results For Node]
                type_spec: null
              param_object: []
              type: array[Per Node Connectivity Result2]
              type_spec: null
            param_object: []
            type: array[Per Cluster Connectivity Result2]
            type_spec: null
          param_object: []
          type: array[Connectivity Test Results Clusters Object 2]
          type_spec: null
    - doc: 'Returns the test results of the Network tests triggered for a single Video
        Mesh node. The tests listed below are run as a part of the Network Test execution
        on the node.

        Bandwidth Test - Tests the bandwidth parameters of the Video Mesh node''s
        network. The test is run between the Video Mesh node and cloud services.DNS
        Resolution Test - Tests the resolution of IP addresses related to cloud services,
        against the DNS servers configured on the Video Mesh node''s network.HTTPS
        Connectivity Test - Tests whether the Video Mesh node is able to connect to
        cloud services via HTTPS protocol.Websocket Connectivity Test - Tests whether
        the Video Mesh node is able to connect to Webex cloud services via Websocket.'
      documentation:
        doc: Get Network Test results for node
        doc_link: https://developer.webex.com/docs/api/v1/video-mesh/get-network-test-results-for-node
        endpoint: https://webexapis.com/v1/videoMesh/testResults/networkTest/nodes
        http_method: GET
      header: Get Network Test results for node
      parameters_and_response:
        Query Parameters:
        - doc: Unique ID of the Video Mesh node.
          name: nodeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The start date and time of the requested data in any ISO 8601 compliant
            format. The from parameter cannot have date and time values that exceed
            to.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The end date and time of the requested data in any ISO 8601 compliant
            format.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Trigger type.

            Possible values: OnDemand, Periodic, All'
          name: triggerType
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Unique ID of the organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start date and time (inclusive) of the Network Test data.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date and time (inclusive) of the Network Test data.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Network test results.
          name: items
          param_attrs:
          - doc: List of Video Mesh clusters.
            name: clusters
            param_attrs:
            - doc: Unique ID of the Video Mesh cluster.
              name: clusterId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the Video Mesh cluster.
              name: clusterName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: nodes
              param_attrs:
              - doc: Unique ID of the Video Mesh node.
                name: nodeId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Host name or IP Address of the Video Mesh node.
                name: hostNameOrIP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: testResults
                param_attrs:
                - doc: The timestamp of the test run.
                  name: timestamp
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: The type of the test being executed. Can be either OnDemand
                    or Periodic.
                  name: triggerType
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Unique ID of the test.
                  name: id
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: result
                  param_attrs:
                  - doc: The type of test result.
                    name: type
                    param_attrs: []
                    param_object: []
                    type: string
                    type_spec: null
                  - doc: Test Results from different services.
                    name: results
                    param_attrs:
                    - doc: Service for which the test was executed.
                      name: serviceType
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: Result of the test executed.
                      name: testResult
                      param_attrs: []
                      param_object: []
                      type: string
                      type_spec: null
                    - doc: ''
                      name: failureDetails
                      param_attrs:
                      - doc: Possible reasons for failure for the test.
                        name: possibleFailureReason
                        param_attrs: []
                        param_object: []
                        type: array[string]
                        type_spec: null
                      - doc: Possible fixes for the failures mentioned above.
                        name: possibleRemediation
                        param_attrs: []
                        param_object: []
                        type: array[string]
                        type_spec: null
                      param_object: []
                      type: FailureDetails1
                      type_spec: null
                    param_object: []
                    type: array[Service Type Result1]
                    type_spec: null
                  param_object: []
                  type: array[DNS Resolution Test]
                  type_spec: null
                param_object: []
                type: array[Connectivity Test Results For Node]
                type_spec: null
              param_object: []
              type: array[Per Node Connectivity Result1]
              type_spec: null
            param_object: []
            type: array[Per Cluster Connectivity Result3]
            type_spec: null
          param_object: []
          type: array[Connectivity Test Results Clusters Object 3]
          type_spec: null
  Webex Calling Detailed Call History:
    doc: 'The base URL for these APIs is analytics.webexapis.com (or analytics-f.webex.com
      for Government), which does not work with the API reference''s Try It feature.
      If you have any questions or need help please contact the Webex Developer Support
      team at devsupport@webex.com.

      To retrieve Detailed Call History information, you must use a token with the
      spark-admin:calling_cdr_read scope. The authenticating user must be a read-only-admin
      or full-admin of the organization and have the administrator role "Webex Calling
      Detailed Call History API access" enabled.

      Detailed Call History information is available 5 minutes after a call has ended
      and may be retrieved for up to 48 hours. For example, if a call ends at 9:46
      am, the record for that call can be collected using the API from 9:51 am, and
      is available until 9:46 am two days later.

      This API is rate-limited to one call every 5 minutes for a given organization
      ID.

      Details on the fields returned from this API and their potential values are
      available at https://help.webex.com/en-us/article/nmug598/Reports-for-Your-Cloud-Collaboration-Portfolio.
      Select the Report templates tab, and then in the Webex Calling reports section
      see Calling Detailed Call History Report.'
    header: Webex Calling Detailed Call History
    methods:
    - doc: 'Provides Webex Calling Detailed Call History data for your organization.

        Results can be filtered with the startTime, endTime and locations request
        parameters. The startTime and endTime parameters specify the start and end
        of the time period for the Detailed Call History reports you wish to collect.
        The API will return all reports that were created between startTime and endTime.


        Response entries may be added as more information is made available for the
        reports.

        Values in response items may be extended as more capabilities are added to
        Webex Calling.'
      documentation:
        doc: Get Detailed Call History
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-detailed-call-history/get-detailed-call-history
        endpoint: https://analytics.webexapis.com/v1/cdr_feed
        http_method: GET
      header: Get Detailed Call History
      parameters_and_response:
        Query Parameters:
        - doc: 'Time of the first report you wish to collect. (Report time is the
            time the call finished). Note: The specified time must be between 5 minutes
            ago and 48 hours ago, and be formatted as YYYY-MM-DDTHH:MM:SS.mmmZ.'
          name: startTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Time of the last report you wish to collect. (Report time is the time
            the call finished). Note: The specified time should be later than startTime
            but no later than 48 hours, and be formatted as YYYY-MM-DDTHH:MM:SS.mmmZ.'
          name: endTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Name of the location (as shown in Control Hub). Up to 10 comma-separated
            locations can be provided. Allows you to query reports by location.
          name: locations
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of reports in the response. Range is 1 to
            500. When the API has more reports to return than the max value, the API
            response will be paginated.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The time the call was answered. Time is in UTC.
            name: Answer time
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether the call leg was answered. For example, in a hunt group case,
              some legs will be unanswered, and one will be answered.
            name: Answered
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The authorization code admin created for a location or site for users
              to use. Collected by the Account/Authorization Codes or Enhanced Outgoing
              Calling Plan services.
            name: Authorization code
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: SIP Call ID used to identify the call. You can share the Call ID
              with Cisco TAC to help them pinpoint a call if necessary.
            name: Call ID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Type of call. For example:

              * SIP_MEETING

              * SIP_INTERNATIONAL

              * SIP_SHORTCODE

              * SIP_INBOUND

              * UNKNOWN

              * SIP_EMERGENCY

              * SIP_PREMIUM

              * SIP_ENTERPRISE

              * SIP_TOLLFREE

              * SIP_NATIONAL

              * SIP_MOBILE'
            name: Call type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: For incoming calls, the calling line ID of the user. For outgoing
              calls, it's the calling line ID of the called party.
            name: Called line ID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: For incoming calls, the telephone number of the user. For outgoing
              calls, it's the telephone number of the called party.
            name: Called number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: For incoming calls, the calling line ID of the calling party. For
              outgoing calls, it's the calling line ID of the user.
            name: Calling line ID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: For incoming calls, the telephone number of the calling party. For
              outgoing calls, it's the telephone number of the user.
            name: Calling number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The type of client that the user (creating this record) is using
              to make or receive the call. For example:

              * SIP

              * WXC_CLIENT

              * WXC_THIRD_PARTY

              * TEAMS_WXC_CLIENT

              * WXC_DEVICE

              * WXC_SIP_GW'
            name: Client type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The version of the client that the user (creating this record) is
              using to make or receive the call.
            name: Client version
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Correlation ID to tie together multiple call legs of the same call
              session.
            name: Correlation ID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the user's department name.
            name: Department ID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The MAC address of the device, if known.
            name: Device MAC
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "The keypad digits as dialed by the user, before pre-translations.\
              \ \nThis field reports multiple call dial possibilities:\n* Feature\
              \ access codes (FAC) used for invoking features such as Last Number\
              \ Redial or a Call Return.\n* An extension that got dialed and a mis-dialed\
              \ keypad digit from a device/app.\n* When a user must dial an outside\
              \ access code (for example, 9+) before dialing a number, this access\
              \ code is also reported, as well as the digits dialed thereafter. \n\
              Note that when pre-translations have no effect, the dialed digits field\
              \ contains the same data as the called number field. \nThis field is\
              \ only used for originating (outgoing) Calls and is not available for\
              \ terminating (incoming) Calls."
            name: Dialed digits
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Whether the call was inbound or outbound. The possible values are:

              * ORIGINATING

              * TERMINATING'
            name: Direction
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The length of the call in seconds.
            name: Duration
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Inbound trunk may be presented in Originating and Terminating records.
            name: Inbound trunk
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The country code of the dialed number. This is only populated for
              international calls.
            name: International country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The Session ID comprises a Universally Unique Identifier (UUID)
              for each user-agent participating in a call. It can be used for end-to-end
              tracking of a SIP session in IP-based multimedia communication. Each
              call consists of two UUIDs known as Local Session ID and Remote Session
              ID.

              * The Local SessionID is generated from the Originating user agent.'
            name: Local SessionID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location of the report.
            name: Location
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The device model type the user is using to make or receive the call. '
            name: Model
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the organization that made the call. This
              is a unique identifier across Cisco.
            name: Org UUID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "Call redirection reason for the original called number. For example:\n\
              * Unconditional: Call Forward Always (CFA) service, Group night forwarding.\n\
              * NoAnswer: The party was not available to take the call. CF/busy or\
              \ Voicemail/busy.\n* Deflection: Indicates that a call was redirected.\
              \ Possible causes could be auto attendant transfer, transfer out of\
              \ a call-center, user\u2019s app/device redirection, direct VM transfer\
              \ etc..\n* TimeOfDay: Call scheduled period of automated redirection.\
              \ CF/selective, group night forwarding.\n* UserBusy: DND enabled or\
              \ the user willingly declined the call. CF/busy or voicemail/busy.\n\
              * FollowMe: Automated redirection to a personal redirecting service.\n\
              * CallQueue: A call center call to an agent or a user (a member of the\
              \ call queue).\n* HuntGroup: A hunt-group-based call to an agent or\
              \ a user (denotes a member of the hunt group).\n* Unavailable: To voicemail,\
              \ when the user has no app or device.\n* Unrecognized: Unable to determine\
              \ the reason.\n* Unknown: Call forward by phone with no reason."
            name: Original reason
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The operating system that the app was running on, if available.
            name: OS type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outbound trunk may be presented in Originating and Terminating records.
            name: Outbound trunk
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "Call Redirection Reason for the redirecting number. For example:\n\
              * Unconditional: Call Forward Always (CFA) service.\n* NoAnswer: The\
              \ party was not available to take the call. CF/busy or Voicemail/busy.\n\
              * Deflection: Indicates that a call was redirected. Possible causes\
              \ could be auto attendant transfer, transfer out of a call-center, user\u2019\
              s app/device redirection, direct VM transfer etc..\n* TimeOfDay: Call\
              \ scheduled period of automated redirection. CF/Selective.\n* UserBusy:\
              \ DND enabled or user willingly declined the call. CF/busy or Voicemail/busy.\n\
              * FollowMe: Automated redirection to a personal redirecting service.\n\
              * CallQueue: A call center call to an agent or a user (denotes a member\
              \ of the call queue).\n* HuntGroup: A hunt-group-based call to an agent\
              \ or a user (denotes a member of the hunt group).\n* Unavailable: To\
              \ voicemail, when the user has no app or device.\n* Unrecognized: Unable\
              \ to determine the reason.\n* Unknown: Call forward by phone with no\
              \ reason."
            name: Redirect reason
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: When the call has been redirected one or more times, this field reports
              the last redirecting number. Identifies who last redirected the call.
              Only applies to call scenarios such as transfer, call forwarded calls,
              simultaneous rings, etc.
            name: Redirecting number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: "Indicates a trigger that led to a change in the call presence. The\
              \ trigger could be for this particular call or redirected via a different\
              \ call. For example:\n* ConsultativeTransfer: While on a call, the call\
              \ was transferred to another user by announcing it first. meaning the\
              \ person was given a heads up or asked if they're interested in taking\
              \ the call and then transferred.\n* CallForwardSelective: Call Forward\
              \ as per the defined schedule. Might be based on factors like a specific\
              \ time, specific callers or to a VM. It always takes precedence over\
              \ Call Forwarding.\n* CallForwardAlways: Calls are unconditionally forwarded\
              \ to a defined phone number or to VM.\n* CallForwardNoAnswer: The party\
              \ was not available to take the call.\n* CallQueue: A call center call\
              \ to an agent or a user (denotes a member of the call queue).\n* HuntGroup:\
              \ A hunt group based call to an agent or a user (denotes a member of\
              \ the hunt group).\n* CallPickup: The user part of a pickup group or\
              \ pickup attempted by this user against a ringing call for a different\
              \ user or extension.\n* CalllPark: An ongoing call was parked, assigned\
              \ with a parked number (not the user\u2019s phone number).\n* CallParkRetrieve:\
              \ Call park retrieval attempt by the user, either for a different extension\
              \ or against the user\u2019s own extension.\n* Deflection: Indicates\
              \ that a call was redirected. Possible causes include an auto attendant\
              \ transfer, transfer out of a call-center, user\u2019s app/device redirection\
              \ etc..\n* FaxDeposit: Indicates a FAX was transmitted to the FAX service.\n\
              * PushNotificationRetrieval: Push notification feature usage indication.\
              \ Means that a push notification was sent to wake up the client and\
              \ get ready to receive a call.\n* BargeIn: Indicates the user barged-in\
              \ to someone else\u2019s call.\n* VoiceXMLScriptTermination: Route Point\
              \ feature usage indication.\n* AnywhereLocation: Indicates call origination\
              \ towards the single number reach location.\n* AnywherePortal: Indicates\
              \ call origination towards the \u201Cuser\u201D identified by the single\
              \ number reach portal.\n* Unrecognized: Unable to determine the reason."
            name: Related reason
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Indicates which party released the call first. The possible values
              are:

              * Local: Used when the local user has released the call first.

              * Remote: Used when the far-end party releases the call first.

              * Unknown: Used when the call has partial information or is unable to
              gather enough information about the party who released the call. It
              could be because of situations like force lock or because of a session
              audit failure.'
            name: Releasing party
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The Session ID comprises a Universally Unique Identifier (UUID)
              for each user-agent participating in a call. It can be used for end-to-end
              tracking of a SIP session in IP-based multimedia communication. Each
              call consists of two UUIDs known as Local Session ID and Remote Session
              ID.

              * The Remote SessionID is generated from the Terminating user agent.'
            name: Remote SessionID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique ID for this particular record. This can be used when processing
              records to aid in deduplication.
            name: Report ID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The time this report was created. Time is in UTC.
            name: Report time
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If present, this field's only reported in Originating records. Route
              group identifies the route group used for outbound calls routed via
              a route group to Premises-based PSTN or an on-prem deployment integrated
              with Webex Calling (dial plan or unknown extension).
            name: Route group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The main number for the user's site where the call was made or received.
            name: Site main number
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Site timezone is the offset in minutes from UTC time of the user's
              timezone.
            name: Site timezone
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the site associated with the call. Unique
              across Cisco products.
            name: Site UUID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'This is the start time of the call, the answer time may be slightly
              after this. Time is in UTC. '
            name: Start time
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If the call is TO or FROM a mobile phone using Webex Go, the Client
              type will show SIP, and Sub client type will show MOBILE_NETWORK.
            name: Sub client type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Transfer related call ID is used as a call identifier of the other
              call involved in the transfer. You can share this ID with Cisco TAC
              to help them pinpoint parties who are involved during a call transfer.
            name: Transfer related call ID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The user who made or received the call.
            name: User
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'The type of user (user or workspace) that made or received the call.
              For example:

              * AutomatedAttendantVideo

              * Anchor

              * BroadworksAnywhere

              * VoiceMailRetrieval

              * LocalGateway

              * HuntGroup

              * GroupPaging

              * User

              * VoiceMailGroup

              * CallCenterStandard

              * VoiceXML

              * RoutePoint'
            name: User type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the user associated with the call. This is
              a unique identifier across Cisco products.
            name: User UUID
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[CDR]
          type_spec: null
  Webex Calling Device Settings:
    doc: 'These APIs manages Webex Calling settings for devices with are of the Webex
      Calling type.

      Viewing these read-only device settings requires a full, device, or

      read-only administrator auth token with a scope of

      spark-admin:telephony_config_read, as the current set of APIs is

      designed to provide supplemental information for administrators

      utilizing People Webex Calling APIs.

      Modifying these device settings requires a full or device

      administrator auth token with a scope of

      spark-admin:telephony_config_write.'
    header: Webex Calling Device Settings
    methods:
    - doc: "Get the list of all the members of the device including primary and secondary\
        \ users.\nA device member can be either a person or a workspace. An admin\
        \ can access the list of member details, modify member details and \nsearch\
        \ for available members on a device.\nRetrieving this list requires a full\
        \ or read-only administrator auth token with a scope of spark-admin:telephony_config_read."
      documentation:
        doc: Get Device Members
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-device-settings/get-device-members
        endpoint: https://webexapis.com/v1/telephony/config/devices/{deviceId}/members
        http_method: GET
      header: Get Device Members
      parameters_and_response:
        Query Parameters:
        - doc: Retrieves the list of all members of the device in this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Model type of the device.
          name: model
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List of members that appear on the device.
          name: members
          param_attrs:
          - doc: Unique identifier for the member.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of a person or workspace.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of a person or workspace.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone Number of a person or workspace. In some regions phone numbers
              are not returned in E.164 format. This will be supported in a future
              update.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Extension of a person or workspace.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: This field indicates whether the person or the workspace is the owner
              of the device, and points to a primary Line/Port of the device.
            name: primaryOwner
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Port number assigned to person or workspace.
            name: port
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: T.38 Fax Compression setting and is available only for ATA Devices.
              Choose T.38 fax compression if the device requires this option. This
              will override user level compression options.
            name: t38FaxCompressionEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Line type is used to differentiate Primary and SCA, at which endpoint
              it is assigned.
            name: lineType
            param_attrs:
            - doc: Indicates a Primary line for the member.
              name: PRIMARY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a Shared line for the member. Shared line appearance
                allows users to receive and place calls to and from another user's
                extension, using their device.
              name: SHARED_CALL_APPEARANCE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: LineType
            type_spec: null
          - doc: Number of lines that have been configured for the person on the device.
            name: lineWeight
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Registration Host IP address for the line port.
            name: hostIP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registration Remote IP address for the line port.
            name: remoteIP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Enable Hotline. Configure this line to automatically call a predefined
              number whenever taken off-hook. Once enabled, the line can only make
              calls to the predefined number set in hotlineDestination.
            name: hotlineEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The preconfigured number for Hotline. Required only if hotlineEnabled
              is set to true.
            name: hotlineDestination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Set how a person's device behaves when a call is declined. When set
              to true, a call decline request is extended to all the endpoints on
              the device. When set to false, a call decline request only declines
              the current endpoint.
            name: allowCallDeclineEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Device line label.
            name: lineLabel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates if the member is of type PEOPLE or PLACE.
            name: memberType
            param_attrs:
            - doc: Indicates the associated member is a person.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the associated member is a workspace.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: MemberType
            type_spec: null
          - doc: Location object having a unique identifier for the location and its
              name.
            name: location
            param_attrs:
            - doc: Location identifier associated with the members.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Location name associated with the member.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: location
            type_spec: null
          param_object: []
          type: array[MemberObject]
          type_spec: null
        - doc: Maximum number of lines available for the device.
          name: maxLineCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify member details on the device.

        A device member can be either a person or a workspace. An admin can access
        the list of member details, modify member details and

        search for available members on a device.

        Modifying members on the device requires a full administrator auth token with
        a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Members on the device
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-device-settings/update-members-on-the-device
        endpoint: https://webexapis.com/v1/telephony/config/devices/{deviceId}/members
        http_method: PUT
      header: Update Members on the device
      parameters_and_response:
        Body Parameters:
        - doc: If the member's list is missing then all the users are removed except
            the primary user.
          name: members
          param_attrs:
          - doc: Person's assigned port number.
            name: port
            param_attrs: []
            param_object: []
            type: number
            type_spec: required
          - doc: Unique identifier for the member.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: T.38 Fax Compression setting and is available only for ATA Devices.
              Choose T.38 fax compression if the device requires this option. This
              will override user level compression options.
            name: t38FaxCompressionEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether the user is the owner of the device or not, and points to
              a primary Line/Port of device.
            name: primaryOwner
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Line type is used to differentiate Primary and SCA, at which endpoint
              it is assigned.
            name: lineType
            param_attrs:
            - doc: Indicates a Primary line for the member.
              name: PRIMARY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a Shared line for the member. Shared line appearance
                allows users to receive and place calls to and from another user's
                extension, using their device.
              name: SHARED_CALL_APPEARANCE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: LineType
            type_spec: required
          - doc: Number of lines that have been configured for the person on the device.
            name: lineWeight
            param_attrs: []
            param_object: []
            type: number
            type_spec: required
          - doc: Enable Hotline. Configure this line to automatically call a predefined
              number whenever taken off-hook. Once enabled, the line can only make
              calls to the predefined number set in hotlineDestination.
            name: hotlineEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: The preconfigured number for Hotline. Required only if hotlineEnabled
              is set to true.
            name: hotlineDestination
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Set how a person's device behaves when a call is declined. When set
              to true, a call decline request is extended to all the endpoints on
              the device. When set to false, a call decline request only declines
              the current endpoint.
            name: allowCallDeclineEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Device line label.
            name: lineLabel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[PutMemberObject]
          type_spec: null
        Query Parameters:
        - doc: Modify members on the device in this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Search members that can be assigned to the device.

        A device member can be either a person or a workspace. A admin can access
        the list of member details, modify member details and

        search for available members on a device.

        This requires a full or read-only administrator auth token with a scope of
        spark-admin:telephony_config_read.'
      documentation:
        doc: Search Members
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-device-settings/search-members
        endpoint: https://webexapis.com/v1/telephony/config/devices/{deviceId}/availableMembers
        http_method: GET
      header: Search Members
      parameters_and_response:
        Query Parameters:
        - doc: Retrieves the list of available members on the device in this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Specifies the offset from the first result that you want to fetch.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies the maximum number of records that you want to fetch.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Search (Contains) numbers based on member name.
          name: memberName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Search (Contains) based on number.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Search (Contains) based on extension.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: List of members available for the device.
          name: members
          param_attrs:
          - doc: Unique identifier for the member.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of a person or workspace.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of a person or workspace.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone Number of a person or workspace.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: T.38 Fax Compression setting and available only for ATA Devices.
              Choose T.38 fax compression if the device requires this option. this
              will override user level compression options.
            name: t38FaxCompressionEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Line type is used to differentiate Primary and SCA, at which endpoint
              it is assigned.
            name: lineType
            param_attrs:
            - doc: Indicates a Primary line for the member.
              name: PRIMARY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a Shared line for the member. Shared line appearance
                allows users to receive and place calls to and from another user's
                extension, using their device.
              name: SHARED_CALL_APPEARANCE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: LineType
            type_spec: null
          - doc: Set how a person's device behaves when a call is declined. When set
              to true, a call decline request is extended to all the endpoints on
              the device. When set to false, a call decline request only declines
              the current endpoint.
            name: allowCallDeclineEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Indicates if member is of type PEOPLE or PLACE.
            name: memberType
            param_attrs:
            - doc: Indicates the associated member is a person.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the associated member is a workspace.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: MemberType
            type_spec: null
          - doc: Location object having a unique identifier for the location and its
              name.
            name: location
            param_attrs:
            - doc: Location identifier associated with the members.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Location name associated with the member.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: location
            type_spec: null
          param_object: []
          type: array[SearchMemberObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Issues request to the device to download and apply changes to the configuration.

        Applying changes for a specific device requires a full administrator auth
        token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Apply Changes for a specific device
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-device-settings/apply-changes-for-a-specific-device
        endpoint: https://webexapis.com/v1/telephony/config/devices/{deviceId}/actions/applyChanges/invoke
        http_method: POST
      header: Apply Changes for a specific device
      parameters_and_response:
        Query Parameters:
        - doc: Apply changes for a device in this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get override settings for a device.

        Device settings lists all the applicable settings for an MPP and an ATA devices
        at the device level. An admin can also modify the settings. DECT devices do
        not support settings at the device level.

        This requires a full or read-only administrator auth token with a scope of
        spark-admin:telephony_config_read.'
      documentation:
        doc: Get Device Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-device-settings/get-device-settings
        endpoint: https://webexapis.com/v1/telephony/config/devices/{deviceId}/settings
        http_method: GET
      header: Get Device Settings
      parameters_and_response:
        Query Parameters:
        - doc: Settings on the device in this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Model type of the device.
          name: deviceModel
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: Indicates the customization object of the device settings.
          name: customizations
          param_attrs:
          - doc: Applicable device settings for an ATA device.
            name: ata
            param_attrs:
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of an Audio Codec Priority Object.
                name: selection
                param_attrs:
                - doc: Indicates the regional selection type for audio codec priority.
                  name: REGIONAL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Indicates the custom selection type for audio codec priority.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: SelectionType
                type_spec: null
              - doc: Indicates the primary Audio Codec.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the secondary Audio Codec.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the tertiary Audio Codec.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AudioCodecPriorityObject
              type_spec: null
            - doc: DTMF Detection Tx Mode selection for Cisco ATA devices.
              name: ataDtmfMode
              param_attrs:
              - doc: A DTMF digit requires an extra hold time after detection and
                  the DTMF level threshold is raised to -20 dBm.
                name: STRICT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Normal threshold mode.
                name: NORMAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AtaDtmfModeObject
              type_spec: null
            - doc: Method for transmitting DTMF signals to the far end.
              name: ataDtmfMethod
              param_attrs:
              - doc: Sends DTMF by using the audio path.
                name: INBAND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Audio video transport. Sends DTMF as AVT events.
                name: AVT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Uses InBand or AVT based on the outcome of codec negotiation.
                name: AUTO
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AtaDtmfMethodObject
              type_spec: null
            - doc: Enable/disable Cisco Discovery Protocol for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Enable/disable quality of service tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Denotes whether the VLAN object of an ATA is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: The value of the VLAN Object of DECT.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: VlanObject
              type_spec: null
            param_object: []
            type: ataObject
            type_spec: null
          - doc: Applicable device settings for an MPP device.
            name: mpp
            param_attrs:
            - doc: Indicates whether the PNAC of MPP object is enabled or not.
              name: pnacEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of the Audio Codec Priority Object for
                  an MPP object.
                name: selection
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the primary Audio Codec for an MPP object.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the secondary Audio Codec for an MPP object.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the tertiary Audio Codec for an MPP object.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: MppAudioCodecPriorityObject
              type_spec: null
            - doc: Choose the length of time (in minutes) for the phone's backlight
                to remain on.
              name: backlightTimer
              param_attrs:
              - doc: ''
                name: ONE_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FIVE_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRTY_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ALWAYS_ON
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: 'OFF'
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TEN_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TWENTY_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRTY_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: BacklightTimerObject
              type_spec: null
            - doc: Holds the background object of MPP Object.
              name: background
              param_attrs:
              - doc: Indicates that there will be no background image set for the
                  devices.
                name: NONE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that dark blue background image will be set for the
                  devices.
                name: DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that Cisco themed dark blue background image will be
                  set for the devices.
                name: CISCO_DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that Cisco Webex dark blue background image will be
                  set for the devices.
                name: WEBEX_DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that a custom background image will be set for the
                  devices.
                name: CUSTOM_BACKGROUND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: When this option is selected, a field 'Custom Background URL'
                  needs to be added with the image url. URLs provided must link directly
                  to an image file and be in HTTP, HTTPS, or filepath format.
                name: customUrl
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: BackgroundImage
              type_spec: null
            - doc: The display name that appears on the phone screen.
              name: displayNameFormat
              param_attrs:
              - doc: Indicates that devices will display the person's phone number,
                  or if a person doesn't have a phone number, the location number
                  will be displayed.
                name: PERSON_NUMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in first name then
                  last name format.
                name: PERSON_FIRST_THEN_LAST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in last name then
                  first name format.
                name: PERSON_LAST_THEN_FIRST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: DisplayNameSelection
              type_spec: null
            - doc: Allows you to enable/disable CDP for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Choose the desired logging level for an MPP devices.
              name: defaultLoggingLevel
              param_attrs:
              - doc: Enables standard logging.
                name: STANDARD
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Enables detailed debugging logging.
                name: DEBUGGING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: DefaultLoggingLevelObject
              type_spec: null
            - doc: Enable/disable Do-Not-Disturb capabilities for Multi-Platform Phones.
              name: dndServicesEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Chooses the location of the Call Queue Agent Login/Logout softkey
                on Multi-Platform Phones.
              name: displayCallqueueAgentSoftkeys
              param_attrs:
              - doc: ''
                name: FRONT_PAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: LAST_PAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: DisplayCallqueueAgentSoftkeysObject
              type_spec: null
            - doc: Choose the duration (in hours) of Hoteling guest login.
              name: hotelingGuestAssociationTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Holds the Acd object value.
              name: acd
              param_attrs:
              - doc: Indicates whether the ACD object is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates the call queue agent soft key value of an ACD object.
                name: displayCallqueueAgentSoftkeys
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AcdObject
              type_spec: null
            - doc: Indicates the short inter digit timer value.
              name: shortInterdigitTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates the long inter digit timer value..
              name: longInterdigitTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Line key labels define the format of what's shown next to line
                keys.
              name: lineKeyLabelFormat
              param_attrs:
              - doc: This will display the person extension, or if a person doesn't
                  have an extension, the person's first name will be displayed.
                name: PERSON_EXTENSION
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in first name then
                  last name format.
                name: PERSON_FIRST_THEN_LAST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in last name then
                  first name format.
                name: PERSON_LAST_THEN_FIRST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: LineKeyLabelSelection
              type_spec: null
            - doc: LED patterns define lighting schemes for the line keys on the MPP
                devices. Note that this parameter is not supported on the MPP 8875
              name: lineKeyLEDPattern
              param_attrs:
              - doc: ''
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: PRESET_1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: LineKeyLEDPattern
              type_spec: null
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Enable/disable user-level access to the web interface of Multi-Platform
                Phones.
              name: mppUserWebAccessEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Select up to 10 Multicast Group URLs (each with a unique Listening
                Port).
              name: multicast
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            - doc: Specify the amount of time (in seconds) that a phone can remain
                off-hook.
              name: offHookTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Select the language for your MPP phone. Setting this overrides
                the default language setting in place for your provisioned location.
              name: phoneLanguage
              param_attrs:
              - doc: Indicates a person's announcement language.
                name: PERSON_LANGUAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ARABIC
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: BULGARIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CATALAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CHINESE_SIMPLIFIED
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CHINESE_TRADITIONAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CROATIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CZECH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DANISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DUTCH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ENGLISH_UNITED_STATES
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ENGLISH_UNITED_KINGDOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FINNISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRENCH_CANADA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRENCH_FRANCE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: GERMAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: GREEK
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: HEBREW
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: HUNGARIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ITALIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JAPANESE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: KOREAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NORWEGIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: POLISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: PORTUGUESE_PORTUGAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: RUSSIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SPANISH_COLOMBIA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SPANISH_SPAIN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SLOVAK
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SWEDISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SLOVENIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TURKISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: UKRAINE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: PhoneLanguage
              type_spec: null
            - doc: Enable/disable the Power-Over-Ethernet mode for Multi-Platform
                Phones.
              name: poeMode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Allows you to enable/disable tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify the amount of inactive time needed (in seconds) before
                the phone's screen saver activates.
              name: screenTimeout
              param_attrs:
              - doc: Indicates whether the Screen Time object is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates the value of screen timeout.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: ScreenTimeoutObject
              type_spec: null
            - doc: Enable/disable the use of the USB ports on Multi-Platform phones.
              name: usbPortsEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Indicates whether the VLAN object of an MPP is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates the value of a VLAN object for an MPP object.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Indicates the PC port value of a VLAN object for an MPP object.
                name: pcPort
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: MppVlanObject
              type_spec: null
            - doc: Specify the Wi-Fi SSID and password for wireless-enabled MPP phones.
              name: wifiNetwork
              param_attrs:
              - doc: Indicates whether the wifi network is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Authentication method of wifi network.
                name: authenticationMethod
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: SSID name of the wifi network.
                name: ssidName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: User Id of the wifi network.
                name: userId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: WifiNetworkObject
              type_spec: null
            param_object: []
            type: mppObject
            type_spec: null
          param_object: []
          type: CustomizationDeviceLevelObject
          type_spec: null
        - doc: Indicates if customization is allowed at a device level. If true, customized
            at a device level. If false, not customized; uses customer-level configuration.
          name: customEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Customer devices setting update status. If true, an update is in progress
            (no further changes are allowed). If false, no update in progress (changes
            are allowed).
          name: updateInProgress
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of devices that will be updated.
          name: deviceCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Indicates the last updated time.
          name: lastUpdateTime
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify override settings for a device.

        Device settings list all the applicable settings for an MPP and an ATA devices
        at the device level. Admins can also modify the settings. NOTE: DECT devices
        do not support settings at the device level.

        Updating settings on the device requires a full administrator auth token with
        a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update device settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-device-settings/update-device-settings
        endpoint: https://webexapis.com/v1/telephony/config/devices/{deviceId}/settings
        http_method: PUT
      header: Update device settings
      parameters_and_response:
        Body Parameters:
        - doc: Indicates the customization object of the device settings.
          name: customizations
          param_attrs:
          - doc: Applicable device settings for an ATA device.
            name: ata
            param_attrs:
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of an Audio Codec Priority Object.
                name: selection
                param_attrs:
                - doc: Indicates the regional selection type for audio codec priority.
                  name: REGIONAL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Indicates the custom selection type for audio codec priority.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: Indicates the primary Audio Codec.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the secondary Audio Codec.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the tertiary Audio Codec.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            - doc: DTMF Detection Tx Mode selection for Cisco ATA devices.
              name: ataDtmfMode
              param_attrs:
              - doc: A DTMF digit requires an extra hold time after detection and
                  the DTMF level threshold is raised to -20 dBm.
                name: STRICT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Normal threshold mode.
                name: NORMAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Method for transmitting DTMF signals to the far end.
              name: ataDtmfMethod
              param_attrs:
              - doc: Sends DTMF by using the audio path.
                name: INBAND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Audio video transport. Sends DTMF as AVT events.
                name: AVT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Uses InBand or AVT based on the outcome of codec negotiation.
                name: AUTO
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Enable/disable Cisco Discovery Protocol for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Enable/disable quality of service tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Denotes whether the VLAN object of an ATA is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: required
              - doc: The value of the VLAN Object of DECT.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            param_object: []
            type: ataObject
            type_spec: null
          - doc: Applicable device settings for an MPP device.
            name: mpp
            param_attrs:
            - doc: Indicates whether the PNAC of MPP object is enabled or not.
              name: pnacEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of the Audio Codec Priority Object for
                  an MPP object.
                name: selection
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the primary Audio Codec for an MPP object.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the secondary Audio Codec for an MPP object.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the tertiary Audio Codec for an MPP object.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            - doc: Choose the length of time (in minutes) for the phone's backlight
                to remain on.
              name: backlightTimer
              param_attrs:
              - doc: ''
                name: ONE_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FIVE_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRTY_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ALWAYS_ON
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: 'OFF'
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TEN_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TWENTY_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRTY_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Holds the background object of MPP Object.
              name: background
              param_attrs:
              - doc: Indicates that there will be no background image set for the
                  devices.
                name: NONE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that dark blue background image will be set for the
                  devices.
                name: DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that Cisco themed dark blue background image will be
                  set for the devices.
                name: CISCO_DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that Cisco Webex dark blue background image will be
                  set for the devices.
                name: WEBEX_DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that a custom background image will be set for the
                  devices.
                name: CUSTOM_BACKGROUND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: When this option is selected, a field 'Custom Background URL'
                  needs to be added with the image url. URLs provided must link directly
                  to an image file and be in HTTP, HTTPS, or filepath format.
                name: customUrl
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: The display name that appears on the phone screen.
              name: displayNameFormat
              param_attrs:
              - doc: Indicates that devices will display the person's phone number,
                  or if a person doesn't have a phone number, the location number
                  will be displayed.
                name: PERSON_NUMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in first name then
                  last name format.
                name: PERSON_FIRST_THEN_LAST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in last name then
                  first name format.
                name: PERSON_LAST_THEN_FIRST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Allows you to enable/disable CDP for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Choose the desired logging level for an MPP devices.
              name: defaultLoggingLevel
              param_attrs:
              - doc: Enables standard logging.
                name: STANDARD
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Enables detailed debugging logging.
                name: DEBUGGING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Enable/disable Do-Not-Disturb capabilities for Multi-Platform Phones.
              name: dndServicesEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Chooses the location of the Call Queue Agent Login/Logout softkey
                on Multi-Platform Phones.
              name: displayCallqueueAgentSoftkeys
              param_attrs:
              - doc: ''
                name: FRONT_PAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: LAST_PAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Choose the duration (in hours) of Hoteling guest login.
              name: hotelingGuestAssociationTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Holds the Acd object value.
              name: acd
              param_attrs:
              - doc: Indicates whether the ACD object is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: required
              - doc: Indicates the call queue agent soft key value of an ACD object.
                name: displayCallqueueAgentSoftkeys
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            - doc: Indicates the short inter digit timer value.
              name: shortInterdigitTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Indicates the long inter digit timer value..
              name: longInterdigitTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Line key labels define the format of what's shown next to line
                keys.
              name: lineKeyLabelFormat
              param_attrs:
              - doc: This will display the person extension, or if a person doesn't
                  have an extension, the person's first name will be displayed.
                name: PERSON_EXTENSION
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in first name then
                  last name format.
                name: PERSON_FIRST_THEN_LAST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in last name then
                  first name format.
                name: PERSON_LAST_THEN_FIRST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: LED patterns define lighting schemes for the line keys on the MPP
                devices. Note that this parameter is not supported on the MPP 8875
              name: lineKeyLEDPattern
              param_attrs:
              - doc: ''
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: PRESET_1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Enable/disable user-level access to the web interface of Multi-Platform
                Phones.
              name: mppUserWebAccessEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: 'Select up to 10 Multicast Group URLs (each with a unique Listening
                Port).

                '
              name: multicast
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: required
            - doc: Specify the amount of time (in seconds) that a phone can remain
                off-hook.
              name: offHookTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Select the language for your MPP phone. Setting this overrides
                the default language setting in place for your provisioned location.
              name: phoneLanguage
              param_attrs:
              - doc: Indicates a person's announcement language.
                name: PERSON_LANGUAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ARABIC
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: BULGARIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CATALAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CHINESE_SIMPLIFIED
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CHINESE_TRADITIONAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CROATIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CZECH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DANISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DUTCH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ENGLISH_UNITED_STATES
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ENGLISH_UNITED_KINGDOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FINNISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRENCH_CANADA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRENCH_FRANCE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: GERMAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: GREEK
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: HEBREW
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: HUNGARIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ITALIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JAPANESE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: KOREAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NORWEGIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: POLISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: PORTUGUESE_PORTUGAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: RUSSIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SPANISH_COLOMBIA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SPANISH_SPAIN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SLOVAK
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SWEDISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SLOVENIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TURKISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: UKRAINE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Enable/disable the Power-Over-Ethernet mode for Multi-Platform
                Phones.
              name: poeMode
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Allows you to enable/disable tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Specify the amount of inactive time needed (in seconds) before
                the phone's screen saver activates.
              name: screenTimeout
              param_attrs:
              - doc: Indicates whether the Screen Time object is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: required
              - doc: Indicates the value of screen timeout.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            - doc: Enable/disable the use of the USB ports on Multi-Platform phones.
              name: usbPortsEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Indicates whether the VLAN object of an MPP is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: required
              - doc: Indicates the value of a VLAN object for an MPP object.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Indicates the PC port value of a VLAN object for an MPP object.
                name: pcPort
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: object
              type_spec: required
            - doc: Specify the Wi-Fi SSID and password for wireless-enabled MPP phones.
              name: wifiNetwork
              param_attrs:
              - doc: Indicates whether the wifi network is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: required
              - doc: Authentication method of wifi network.
                name: authenticationMethod
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: SSID name of the wifi network.
                name: ssidName
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: User Id of the wifi network.
                name: userId
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            param_object: []
            type: mppObject
            type_spec: null
          param_object: []
          type: CustomizationDeviceLevelObject
          type_spec: required
        - doc: Indicates if customization is allowed at a device level. If true, customized
            at a device level. If false, not customized; uses customer-level configuration.
          name: customEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Query Parameters:
        - doc: Organization in which the device resides..
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Device model name.
          name: deviceModel
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Webex Calling Organization Settings:
    doc: 'Not supported for Webex for Government (FedRAMP)

      Webex Calling Organization Settings support reading and writing of Webex Calling
      settings for a specific organization.

      Viewing these read-only organization settings requires a full or read-only administrator
      auth token with a scope of spark-admin:telephony_config_read, as the current
      set of APIs is designed to provide supplemental information for administrators
      utilizing People Webex Calling APIs.

      Modifying these organization settings requires a full administrator auth token
      with a scope of spark-admin:telephony_config_write.

      A partner administrator can retrieve or change settings in a customer''s organization
      using the optional OrgId query parameter.'
    header: Webex Calling Organization Settings
    methods:
    - doc: 'Change announcement language for the given location.

        Change announcement language for current people/workspaces and/or existing
        feature configurations. This does not change the default announcement language
        which is applied to new users/workspaces and new feature configurations.

        Changing announcement language for the given location requires a full administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Change Announcement Language
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/change-announcement-language
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/actions/modifyAnnouncementLanguage/invoke
        http_method: POST
      header: Change Announcement Language
      parameters_and_response:
        Body Parameters:
        - doc: Set to true to change announcement language for existing people and
            workspaces.
          name: agentEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Set to true to change announcement language for existing feature configurations.
          name: serviceEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Language code.
          name: announcementLanguageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Query Parameters:
        - doc: Change announcement language for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Change announcement language for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all Auto Attendants for the organization.

        Auto attendants play customized prompts and provide callers with menu options
        for routing their calls through your system.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Auto Attendants
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-auto-attendants
        endpoint: https://webexapis.com/v1/telephony/config/autoAttendants
        http_method: GET
      header: Read the List of Auto Attendants
      parameters_and_response:
        Query Parameters:
        - doc: List auto attendants for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of auto attendants for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Only return auto attendants with the matching name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return auto attendants with the matching phone number.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of auto attendants.
          name: autoAttendants
          param_attrs:
          - doc: A unique identifier for the auto attendant.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique name for the auto attendant.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of location for auto attendant.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ID of location for auto attendant.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Auto attendant phone number.  Either phoneNumber or extension is
              mandatory.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Auto attendant extension.  Either phoneNumber or extension is mandatory.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Flag to indicate if auto attendant number is toll-free number.
            name: tollFreeNumber
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[ListAutoAttendantObject]
          type_spec: null
    - doc: 'Retrieve an Auto Attendant details.

        Auto attendants play customized prompts and provide callers with menu options
        for routing their calls through your system.

        Retrieving an auto attendant details requires a full or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Details for an Auto Attendant
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-an-auto-attendant
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/autoAttendants/{autoAttendantId}
        http_method: GET
      header: Get Details for an Auto Attendant
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve auto attendant details from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the auto attendant.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique name for the auto attendant.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Flag to indicate if auto attendant number is enabled or not.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Auto attendant phone number.  Either phoneNumber or extension is mandatory.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Auto attendant extension.  Either phoneNumber or extension is mandatory.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Flag to indicate if auto attendant number is toll-free number.
          name: tollFreeNumber
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: First name defined for an auto attendant.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name defined for an auto attendant.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Alternate numbers defined for the auto attendant.
          name: alternateNumbers
          param_attrs:
          - doc: Phone number defined as alternate number.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Flag to indicate if auto attendant number is toll-free number.
            name: tollFreeNumber
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Ring pattern that will be used for the alternate number.
            name: ringPattern
            param_attrs:
            - doc: ''
              name: NORMAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: LONG_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: SHORT_SHORT_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: SHORT_LONG_SHORT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[AlternateNumbersObject]
          type_spec: null
        - doc: Language for the auto attendant.
          name: language
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language code for the auto attendant.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Business hours defined for the auto attendant.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Holiday defined for the auto attendant.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Extension dialing setting. If the values are not set default will be
            set as ENTERPRISE.
          name: extensionDialing
          param_attrs:
          - doc: ''
            name: ENTERPRISE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: GROUP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Name dialing setting. If the values are not set default will be set
            as ENTERPRISE.
          name: nameDialing
          param_attrs:
          - doc: ''
            name: ENTERPRISE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: GROUP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Time zone defined for the auto attendant.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Business hours menu defined for the auto attendant.
          name: businessHoursMenu
          param_attrs:
          - doc: Greeting type defined for the auto attendant.
            name: greeting
            param_attrs:
            - doc: ''
              name: DEFAULT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Flag to indicate if auto attendant extension is enabled or not.
            name: extensionEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Announcement Audio File details.
            name: audioFile
            param_attrs:
            - doc: Announcement audio file name.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Announcement audio file media type.
              name: mediaType
              param_attrs:
              - doc: WMA File Extension.
                name: WMA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: WAV File Extension.
                name: WAV
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 3GP File Extension.
                name: 3GP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: AudioFileObject
            type_spec: null
          - doc: Key configurations defined for the auto attendant.
            name: keyConfigurations
            param_attrs:
            - doc: Key assigned to specific menu configuration.
              name: key
              param_attrs:
              - doc: ''
                name: digit_0
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_2
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_3
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_4
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_5
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_6
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_7
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_8
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_9
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: hash
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Action assigned to specific menu key configuration.
              name: action
              param_attrs:
              - doc: ''
                name: TRANSFER_WITHOUT_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_WITH_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_OPERATOR
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NAME_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXTENSION_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: REPEAT_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXIT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_MAILBOX
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: RETURN_TO_PREVIOUS_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The description of each menu key.
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Value based on actions.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: KeyConfigurationsObject
            type_spec: null
          param_object: []
          type: HoursMenuObject
          type_spec: null
        - doc: After hours menu defined for the auto attendant.
          name: afterHoursMenu
          param_attrs:
          - doc: Greeting type defined for the auto attendant.
            name: greeting
            param_attrs:
            - doc: ''
              name: DEFAULT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Flag to indicate if auto attendant extension is enabled or not.
            name: extensionEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Announcement Audio File details.
            name: audioFile
            param_attrs:
            - doc: Announcement audio file name.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Announcement audio file media type.
              name: mediaType
              param_attrs:
              - doc: WMA File Extension.
                name: WMA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: WAV File Extension.
                name: WAV
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 3GP File Extension.
                name: 3GP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: AudioFileObject
            type_spec: null
          - doc: Key configurations defined for the auto attendant.
            name: keyConfigurations
            param_attrs:
            - doc: Key assigned to specific menu configuration.
              name: key
              param_attrs:
              - doc: ''
                name: digit_0
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_2
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_3
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_4
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_5
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_6
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_7
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_8
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_9
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: hash
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Action assigned to specific menu key configuration.
              name: action
              param_attrs:
              - doc: ''
                name: TRANSFER_WITHOUT_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_WITH_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_OPERATOR
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NAME_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXTENSION_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: REPEAT_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXIT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_MAILBOX
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: RETURN_TO_PREVIOUS_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The description of each menu key.
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Value based on actions.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: KeyConfigurationsObject
            type_spec: null
          param_object: []
          type: HoursMenuObject
          type_spec: null
        URI Parameters:
        - doc: Retrieve an auto attendant details in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve the auto attendant with the matching ID.
          name: autoAttendantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create new Auto Attendant for the given location.

        Auto attendants play customized prompts and provide callers with menu options
        for routing their calls through your system.

        Creating an auto attendant requires a full administrator auth token with a
        scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Create an Auto Attendant
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-an-auto-attendant
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/autoAttendants
        http_method: POST
      header: Create an Auto Attendant
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the auto attendant.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Auto attendant phone number.  Either phoneNumber or extension is mandatory.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Auto attendant extension.  Either phoneNumber or extension is mandatory.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: First name defined for an auto attendant.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name defined for an auto attendant.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Alternate numbers defined for the auto attendant.
          name: alternateNumbers
          param_attrs:
          - doc: Phone number defined as alternate number.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Flag to indicate if auto attendant number is toll-free number.
            name: tollFreeNumber
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Ring pattern that will be used for the alternate number.
            name: ringPattern
            param_attrs:
            - doc: ''
              name: NORMAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: LONG_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: SHORT_SHORT_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: SHORT_LONG_SHORT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: array[AlternateNumbersObject]
          type_spec: null
        - doc: Language code for the auto attendant.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Business hours defined for the auto attendant.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Holiday defined for the auto attendant.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Extension dialing setting. If the values are not set default will be
            set as ENTERPRISE.
          name: extensionDialing
          param_attrs:
          - doc: ''
            name: ENTERPRISE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: GROUP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Name dialing setting. If the values are not set default will be set
            as ENTERPRISE.
          name: nameDialing
          param_attrs:
          - doc: ''
            name: ENTERPRISE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: GROUP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Time zone defined for the auto attendant.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Business hours menu defined for the auto attendant.
          name: businessHoursMenu
          param_attrs:
          - doc: Greeting type defined for the auto attendant.
            name: greeting
            param_attrs:
            - doc: ''
              name: DEFAULT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Flag to indicate if auto attendant extension is enabled or not.
            name: extensionEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Key configurations defined for the auto attendant.
            name: keyConfigurations
            param_attrs:
            - doc: Key assigned to specific menu configuration.
              name: key
              param_attrs:
              - doc: ''
                name: digit_0
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_2
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_3
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_4
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_5
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_6
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_7
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_8
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_9
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: hash
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Action assigned to specific menu key configuration.
              name: action
              param_attrs:
              - doc: ''
                name: TRANSFER_WITHOUT_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_WITH_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_OPERATOR
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NAME_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXTENSION_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: REPEAT_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXIT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_MAILBOX
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: RETURN_TO_PREVIOUS_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: The description of each menu key.
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Value based on actions.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: KeyConfigurationsObject
            type_spec: required
          param_object: []
          type: PostHoursMenuObject
          type_spec: required
        - doc: After hours menu defined for the auto attendant.
          name: afterHoursMenu
          param_attrs:
          - doc: Greeting type defined for the auto attendant.
            name: greeting
            param_attrs:
            - doc: ''
              name: DEFAULT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Flag to indicate if auto attendant extension is enabled or not.
            name: extensionEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Key configurations defined for the auto attendant.
            name: keyConfigurations
            param_attrs:
            - doc: Key assigned to specific menu configuration.
              name: key
              param_attrs:
              - doc: ''
                name: digit_0
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_2
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_3
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_4
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_5
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_6
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_7
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_8
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_9
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: hash
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Action assigned to specific menu key configuration.
              name: action
              param_attrs:
              - doc: ''
                name: TRANSFER_WITHOUT_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_WITH_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_OPERATOR
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NAME_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXTENSION_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: REPEAT_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXIT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_MAILBOX
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: RETURN_TO_PREVIOUS_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: The description of each menu key.
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Value based on actions.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: KeyConfigurationsObject
            type_spec: required
          param_object: []
          type: PostHoursMenuObject
          type_spec: required
        Query Parameters:
        - doc: Create the auto attendant for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created auto attendant.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Create the auto attendant for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated Auto Attendant.

        Auto attendants play customized prompts and provide callers with menu options
        for routing their calls through your system.

        Updating an auto attendant requires a full administrator auth token with a
        scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update an Auto Attendant
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-an-auto-attendant
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/autoAttendants/{autoAttendantId}
        http_method: PUT
      header: Update an Auto Attendant
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the auto attendant.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Auto attendant phone number.  Either phoneNumber or extension is mandatory.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Auto attendant extension.  Either phoneNumber or extension is mandatory.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: First name defined for an auto attendant.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name defined for an auto attendant.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Alternate numbers defined for the auto attendant.
          name: alternateNumbers
          param_attrs:
          - doc: Phone number defined as alternate number.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Flag to indicate if auto attendant number is toll-free number.
            name: tollFreeNumber
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Ring pattern that will be used for the alternate number.
            name: ringPattern
            param_attrs:
            - doc: ''
              name: NORMAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: LONG_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: SHORT_SHORT_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: SHORT_LONG_SHORT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: array[AlternateNumbersObject]
          type_spec: null
        - doc: Language code for the auto attendant.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Business hours defined for the auto attendant.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Holiday defined for the auto attendant.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Extension dialing setting. If the values are not set default will be
            set as ENTERPRISE.
          name: extensionDialing
          param_attrs:
          - doc: ''
            name: ENTERPRISE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: GROUP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Name dialing setting. If the values are not set default will be set
            as ENTERPRISE.
          name: nameDialing
          param_attrs:
          - doc: ''
            name: ENTERPRISE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: GROUP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Time zone defined for the auto attendant.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Business hours menu defined for the auto attendant.
          name: businessHoursMenu
          param_attrs:
          - doc: Greeting type defined for the auto attendant.
            name: greeting
            param_attrs:
            - doc: ''
              name: DEFAULT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Flag to indicate if auto attendant extension is enabled or not.
            name: extensionEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Announcement Audio File details.
            name: audioFile
            param_attrs:
            - doc: Announcement audio file name.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Announcement audio file media type.
              name: mediaType
              param_attrs:
              - doc: WMA File Extension.
                name: WMA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: WAV File Extension.
                name: WAV
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 3GP File Extension.
                name: 3GP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: AudioFileObject
            type_spec: null
          - doc: Key configurations defined for the auto attendant.
            name: keyConfigurations
            param_attrs:
            - doc: Key assigned to specific menu configuration.
              name: key
              param_attrs:
              - doc: ''
                name: digit_0
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_2
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_3
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_4
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_5
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_6
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_7
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_8
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_9
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: hash
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Action assigned to specific menu key configuration.
              name: action
              param_attrs:
              - doc: ''
                name: TRANSFER_WITHOUT_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_WITH_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_OPERATOR
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NAME_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXTENSION_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: REPEAT_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXIT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_MAILBOX
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: RETURN_TO_PREVIOUS_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: The description of each menu key.
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Value based on actions.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: KeyConfigurationsObject
            type_spec: required
          param_object: []
          type: HoursMenuObject
          type_spec: null
        - doc: After hours menu defined for the auto attendant.
          name: afterHoursMenu
          param_attrs:
          - doc: Greeting type defined for the auto attendant.
            name: greeting
            param_attrs:
            - doc: ''
              name: DEFAULT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Flag to indicate if auto attendant extension is enabled or not.
            name: extensionEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Announcement Audio File details.
            name: audioFile
            param_attrs:
            - doc: Announcement audio file name.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Announcement audio file media type.
              name: mediaType
              param_attrs:
              - doc: WMA File Extension.
                name: WMA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: WAV File Extension.
                name: WAV
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: 3GP File Extension.
                name: 3GP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: AudioFileObject
            type_spec: null
          - doc: Key configurations defined for the auto attendant.
            name: keyConfigurations
            param_attrs:
            - doc: Key assigned to specific menu configuration.
              name: key
              param_attrs:
              - doc: ''
                name: digit_0
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_2
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_3
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_4
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_5
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_6
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_7
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_8
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: digit_9
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: hash
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Action assigned to specific menu key configuration.
              name: action
              param_attrs:
              - doc: ''
                name: TRANSFER_WITHOUT_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_WITH_PROMPT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_OPERATOR
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NAME_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXTENSION_DIALING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: REPEAT_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: EXIT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TRANSFER_TO_MAILBOX
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: RETURN_TO_PREVIOUS_MENU
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: The description of each menu key.
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Value based on actions.
              name: value
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: KeyConfigurationsObject
            type_spec: required
          param_object: []
          type: HoursMenuObject
          type_spec: null
        Query Parameters:
        - doc: Update an auto attendant from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this auto attendant exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update an auto attendant with the matching ID.
          name: autoAttendantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete the designated Auto Attendant.

        Auto attendants play customized prompts and provide callers with menu options
        for routing their calls through your system.

        Deleting an auto attendant requires a full administrator auth token with a
        scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete an Auto Attendant
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-an-auto-attendant
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/autoAttendants/{autoAttendantId}
        http_method: DELETE
      header: Delete an Auto Attendant
      parameters_and_response:
        Query Parameters:
        - doc: Delete the auto attendant from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location from which to delete an auto attendant.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the auto attendant with the matching ID.
          name: autoAttendantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Forwarding settings for the designated Auto Attendant including
        the list of call forwarding rules.

        Retrieving call forwarding settings for an auto attendant requires a full
        or read-only administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Call Forwarding Settings for an Auto Attendant
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-call-forwarding-settings-for-an-auto-attendant
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/autoAttendants/{autoAttendantId}/callForwarding
        http_method: GET
      header: Get Call Forwarding Settings for an Auto Attendant
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve auto attendant forwarding settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Settings related to Always, Busy, and No Answer call forwarding.
          name: callForwarding
          param_attrs:
          - doc: Settings for forwarding all incoming calls to the destination you
              choose.
            name: always
            param_attrs:
            - doc: Always call forwarding is enabled or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for Always call forwarding. Required if field enabled
                is set to true.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: sendToVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: GetCallForwardAlwaysSettingObject
            type_spec: null
          - doc: Selectively forward calls to a designated number, depending on criteria
              rules. You'll need to have at least one rule for forwarding applied
              for call forwarding to be active.
            name: selective
            param_attrs:
            - doc: Busy call forwarding is enabled or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for Busy call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: sendToVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: GetCallForwardSelectiveSettingObject
            type_spec: null
          - doc: Rules for selectively forwarding calls.
            name: rules
            param_attrs:
            - doc: Unique ID for the rule.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Unique name of rule.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Comma-separated list of incoming call numbers that, when matched,
                will not be forwarded. A Limit of 12 numbers is allowed. Use Any private
                Number in the comma-separated value to indicate rules that match incoming
                calls from a private number. Use Any unavailable number in the comma-separated
                value to match incoming calls from an unavailable number.
              name: callsFrom
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Comma-separated list of the types of numbers being matched for
                incoming call destination.
              name: callsTo
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Number to which calls will be forwarded if the rule is of type
                "Forward To" and the incoming call is matched.
              name: forwardTo
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Reflects if rule is enabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[CallForwardRulesObject]
            type_spec: null
          param_object: []
          type: AutoAttendantCallForwardSettingsDetailsObject
          type_spec: null
        URI Parameters:
        - doc: Location in which this auto attendant exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve the call forwarding settings for this auto attendant.
          name: autoAttendantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update Call Forwarding settings for the designated Auto Attendant.

        Updating call forwarding settings for an auto attendant requires a full administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Call Forwarding Settings for an Auto Attendant
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-call-forwarding-settings-for-an-auto-attendant
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/autoAttendants/{autoAttendantId}/callForwarding
        http_method: PUT
      header: Update Call Forwarding Settings for an Auto Attendant
      parameters_and_response:
        Body Parameters:
        - doc: Settings related to Always, Busy, and No Answer call forwarding.
          name: callForwarding
          param_attrs:
          - doc: Settings for forwarding all incoming calls to the destination you
              choose.
            name: always
            param_attrs:
            - doc: Always call forwarding is enabled or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for Always call forwarding. Required if field enabled
                is set tu true.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: sendToVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: ModifyCallForwardAlwaysSettingObject
            type_spec: null
          - doc: Selectively forward calls to a designated number, depending on criteria
              rules. You'll need to have at least one rule for forwarding applied
              for call forwarding to be active.
            name: selective
            param_attrs:
            - doc: Busy call forwarding is enable or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for Busy call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: sendToVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: ModifyCallForwardSelectiveSettingObject
            type_spec: null
          - doc: Rules for selectively forwarding calls. (Rules which are omitted
              in the list will not be deleted.)
            name: rules
            param_attrs:
            - doc: A unique identifier for the auto attendant call forward selective
                rule.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Flag to indicate if always call forwarding selective rule criteria
                is active. If not set, flag will be set to false.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[CallForwardRulesModifyObject]
            type_spec: null
          param_object: []
          type: AutoAttendantCallForwardSettingsModifyDetailsObject
          type_spec: required
        Query Parameters:
        - doc: Update auto attendant forwarding settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this auto attendant exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update call forwarding settings for this auto attendant.
          name: autoAttendantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create a Selective Call Forwarding Rule for the designated Auto Attendant.

        A selective call forwarding rule for an auto attendant allows calls to be
        forwarded or not forwarded to the designated number, based on the defined
        criteria.

        Note that the list of existing call forward rules is available in the auto
        attendant''s call forwarding settings.

        Creating a selective call forwarding rule for an auto attendant requires a
        full administrator auth token with a scope of spark-admin:telephony_config_write.

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Create a Selective Call Forwarding Rule for an Auto Attendant
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-selective-call-forwarding-rule-for-an-auto-attendant
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/autoAttendants/{autoAttendantId}/callForwarding/selectiveRules
        http_method: POST
      header: Create a Selective Call Forwarding Rule for an Auto Attendant
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the selective rule in the auto attendant.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Reflects if rule is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Name of the location's business schedule which determines when this
            selective call forwarding rule is in effect.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the location's holiday schedule which determines when this
            selective call forwarding rule is in effect.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Controls what happens when the rule matches including the destination
            number for the call forwarding.
          name: forwardTo
          param_attrs:
          - doc: Phone number used if selection is FORWARD_TO_SPECIFIED_NUMBER.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Controls what happens when the rule matches.
            name: selection
            param_attrs:
            - doc: When the rule matches, forward to the destination for the auto
                attendant.
              name: FORWARD_TO_DEFAULT_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, forward to the destination for this rule.
              name: FORWARD_TO_SPECIFIED_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, do not forward to another number.
              name: DO_NOT_FORWARD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: CallForwardSelectiveForwardToObject
          type_spec: required
        - doc: Settings related to the rule matching based on incoming caller ID.
          name: callsFrom
          param_attrs:
          - doc: If CUSTOM, use customNumbers to specify which incoming caller ID
              values cause this rule to match. ANY means any incoming call matches
              assuming the rule is in effect based on the associated schedules.
            name: selection
            param_attrs:
            - doc: Rule matches for calls from any number.
              name: ANY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Rule matches based on the numbers and options in customNumbers.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Custom rules for matching incoming caller ID information. Mandatory
              if the selection option is set to CUSTOM.
            name: customNumbers
            param_attrs:
            - doc: Match if caller ID indicates the call is from a private number.
              name: privateNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Match if callerID is unavailable.
              name: unavailableNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Array of number strings to be matched against incoming caller ID.
              name: numbers
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: required
            param_object: []
            type: CallForwardSelectiveCallsFromCustomNumbersObject
            type_spec: null
          param_object: []
          type: CallForwardSelectiveCallsFromObject
          type_spec: required
        - doc: Settings related to the rule matching based on the destination number.
          name: callsTo
          param_attrs:
          - doc: Array of numbers to be matched against the calling destination number.
            name: numbers
            param_attrs:
            - doc: AutoCalls To phone number. Either phone number or extension should
                be present as mandatory.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Calls To extension.  Either phoneNumber or extension is mandatory.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Calls to type options.
              name: type
              param_attrs:
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is a primary number or extension.
                name: PRIMARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is an alternate number or extension.
                name: ALTERNATE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: array[CallForwardSelectiveCallsToNumbersObject]
            type_spec: null
          param_object: []
          type: CallForwardSelectiveCallsToObject
          type_spec: null
        Query Parameters:
        - doc: Create the auto attendant rule for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created auto attendant call forward selective rule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which the auto attendant exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Create the rule for this auto attendant.
          name: autoAttendantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a Selective Call Forwarding Rule''s settings for the designated
        Auto Attendant.

        A selective call forwarding rule for an auto attendant allows calls to be
        forwarded or not forwarded to the designated number, based on the defined
        criteria.

        Note that the list of existing call forward rules is available in the auto
        attendant''s call forwarding settings.

        Retrieving a selective call forwarding rule''s settings for an auto attendant
        requires a full or read-only administrator

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Get Selective Call Forwarding Rule for an Auto Attendant
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-selective-call-forwarding-rule-for-an-auto-attendant
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/autoAttendants/{autoAttendantId}/callForwarding/selectiveRules/{ruleId}
        http_method: GET
      header: Get Selective Call Forwarding Rule for an Auto Attendant
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve auto attendant rule settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique ID for the rule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique name for the selective rule in the auto attendant.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Reflects if rule is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Name of the location's business schedule which determines when this
            selective call forwarding rule is in effect.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the location's holiday schedule which determines when this
            selective call forwarding rule is in effect.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Controls what happens when the rule matches including the destination
            number for the call forwarding.
          name: forwardTo
          param_attrs:
          - doc: Phone number used if selection is FORWARD_TO_SPECIFIED_NUMBER.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Controls what happens when the rule matches.
            name: selection
            param_attrs:
            - doc: When the rule matches, forward to the destination for the auto
                attendant.
              name: FORWARD_TO_DEFAULT_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, forward to the destination for this rule.
              name: FORWARD_TO_SPECIFIED_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, do not forward to another number.
              name: DO_NOT_FORWARD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: CallForwardSelectiveForwardToObject
          type_spec: null
        - doc: Settings related to the rule matching based on incoming caller ID.
          name: callsFrom
          param_attrs:
          - doc: If CUSTOM, use customNumbers to specify which incoming caller ID
              values cause this rule to match. ANY means any incoming call matches
              assuming the rule is in effect based on the associated schedules.
            name: selection
            param_attrs:
            - doc: Rule matches for calls from any number.
              name: ANY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Rule matches based on the numbers and options in customNumbers.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Custom rules for matching incoming caller ID information. Mandatory
              if the selection option is set to CUSTOM.
            name: customNumbers
            param_attrs:
            - doc: Match if caller ID indicates the call is from a private number.
              name: privateNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Match if callerID is unavailable.
              name: unavailableNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Array of number strings to be matched against incoming caller ID.
              name: numbers
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: CallForwardSelectiveCallsFromCustomNumbersObject
            type_spec: null
          param_object: []
          type: CallForwardSelectiveCallsFromObject
          type_spec: null
        - doc: Settings related to the rule matching based on the destination number.
          name: callsTo
          param_attrs:
          - doc: Array of numbers to be matched against the calling destination number.
            name: numbers
            param_attrs:
            - doc: AutoCalls To phone number. Either phone number or extension should
                be present as mandatory.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Calls To extension.  Either phoneNumber or extension is mandatory.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Calls to type options.
              name: type
              param_attrs:
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is a primary number or extension.
                name: PRIMARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is an alternate number or extension.
                name: ALTERNATE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[CallForwardSelectiveCallsToNumbersObject]
            type_spec: null
          param_object: []
          type: CallForwardSelectiveCallsToObject
          type_spec: null
        URI Parameters:
        - doc: Location in which this auto attendant exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for a rule for this auto attendant.
          name: autoAttendantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Auto attendant rule you are retrieving settings for.
          name: ruleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update a Selective Call Forwarding Rule''s settings for the designated
        Auto Attendant.

        A selective call forwarding rule for an auto attendant allows calls to be
        forwarded or not forwarded to the designated number, based on the defined
        criteria.

        Note that the list of existing call forward rules is available in the auto
        attendant''s call forwarding settings.

        Updating a selective call forwarding rule''s settings for an auto attendant
        requires a full administrator auth token with a scope of spark-admin:telephony_config_write.

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Update Selective Call Forwarding Rule for an Auto Attendant
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-selective-call-forwarding-rule-for-an-auto-attendant
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/autoAttendants/{autoAttendantId}/callForwarding/selectiveRules/{ruleId}
        http_method: PUT
      header: Update Selective Call Forwarding Rule for an Auto Attendant
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the selective rule in the auto attendant.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Reflects if rule is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Name of the location's business schedule which determines when this
            selective call forwarding rule is in effect.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the location's holiday schedule which determines when this
            selective call forwarding rule is in effect.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Controls what happens when the rule matches including the destination
            number for the call forwarding.
          name: forwardTo
          param_attrs:
          - doc: Phone number used if selection is FORWARD_TO_SPECIFIED_NUMBER.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Controls what happens when the rule matches.
            name: selection
            param_attrs:
            - doc: When the rule matches, forward to the destination for the auto
                attendant.
              name: FORWARD_TO_DEFAULT_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, forward to the destination for this rule.
              name: FORWARD_TO_SPECIFIED_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, do not forward to another number.
              name: DO_NOT_FORWARD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: CallForwardSelectiveForwardToObject
          type_spec: null
        - doc: Settings related the rule matching based on incoming caller ID.
          name: callsFrom
          param_attrs:
          - doc: If CUSTOM, use customNumbers to specify which incoming caller ID
              values cause this rule to match. ANY means any incoming call matches
              assuming the rule is in effect based on the associated schedules.
            name: selection
            param_attrs:
            - doc: Rule matches for calls from any number.
              name: ANY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Rule matches based on the numbers and options in customNumbers.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Custom rules for matching incoming caller ID information. Mandatory
              if the selection option is set to CUSTOM.
            name: customNumbers
            param_attrs:
            - doc: Match if caller ID indicates the call is from a private number.
              name: privateNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Match if callerID is unavailable.
              name: unavailableNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Array of number strings to be matched against incoming caller ID.
              name: numbers
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: required
            param_object: []
            type: CallForwardSelectiveCallsFromCustomNumbersObject
            type_spec: null
          param_object: []
          type: CallForwardSelectiveCallsFromObject
          type_spec: null
        - doc: Settings related to the rule matching based on the destination number.
          name: callsTo
          param_attrs:
          - doc: Array of numbers to be matched against the calling destination number.
            name: numbers
            param_attrs:
            - doc: AutoCalls To phone number. Either phone number or extension should
                be present as mandatory.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Calls To extension.  Either phoneNumber or extension is mandatory.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Calls to type options.
              name: type
              param_attrs:
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is a primary number or extension.
                name: PRIMARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is an alternate number or extension.
                name: ALTERNATE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: array[CallForwardSelectiveCallsToNumbersObject]
            type_spec: null
          param_object: []
          type: CallForwardSelectiveCallsToObject
          type_spec: null
        Query Parameters:
        - doc: Update auto attendant rule settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: New ID for the modified rule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this auto attendant exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update settings for a rule for this auto attendant.
          name: autoAttendantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Auto attendant rule you are updating settings for.
          name: ruleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete a Selective Call Forwarding Rule for the designated Auto Attendant.

        A selective call forwarding rule for an auto attendant allows calls to be
        forwarded or not forwarded to the designated number, based on the defined
        criteria.

        Note that the list of existing call forward rules is available in the auto
        attendant''s call forwarding settings.

        Deleting a selective call forwarding rule for an auto attendant requires a
        full administrator auth token with a scope of spark-admin:telephony_config_write.

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Delete a Selective Call Forwarding Rule for an Auto Attendant
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-selective-call-forwarding-rule-for-an-auto-attendant
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/autoAttendants/{autoAttendantId}/callForwarding/selectiveRules/{ruleId}
        http_method: DELETE
      header: Delete a Selective Call Forwarding Rule for an Auto Attendant
      parameters_and_response:
        Query Parameters:
        - doc: Delete auto attendant rule from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this auto attendant exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the rule for this auto attendant.
          name: autoAttendantId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Auto attendant rule you are deleting.
          name: ruleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all Call Parks for the organization.

        Call Park allows call recipients to place a call on hold so that it can be
        retrieved from another device.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.

        NOTE: The Call Park ID will change upon modification of the Call Park name.'
      documentation:
        doc: Read the List of Call Parks
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-call-parks
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParks
        http_method: GET
      header: Read the List of Call Parks
      parameters_and_response:
        Query Parameters:
        - doc: List call parks for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of call parks returned to this maximum count. Default
            is 2000.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching call parks.
            Default is 0.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Sort the list of call parks by name, either ASC or DSC. Default is
            ASC.
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of call parks that contains the given name. The maximum
            length is 80.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of call parks.
          name: callParks
          param_attrs:
          - doc: Unique name for the call park. The maximum length is 80.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the call park.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the location for the call park.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ID of the location for the call park.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[ListCallParkObject]
          type_spec: null
        URI Parameters:
        - doc: Return the list of call parks for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create new Call Parks for the given location.

        Call Park allows call recipients to place a call on hold so that it can be
        retrieved from another device.

        Creating a call park requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.

        NOTE: The Call Park ID will change upon modification of the Call Park name.'
      documentation:
        doc: Create a Call Park
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-call-park
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParks
        http_method: POST
      header: Create a Call Park
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the call park. The maximum length is 80.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Recall options that are added to the call park.
          name: recall
          param_attrs:
          - doc: Alternate user which is a hunt group ID for call park recall alternate
              destination.
            name: huntGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Call park recall options.
            name: option
            param_attrs:
            - doc: Alert parking user only.
              name: ALERT_PARKING_USER_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Alert parking user first, then hunt group.
              name: ALERT_PARKING_USER_FIRST_THEN_HUNT_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Alert hunt group only.
              name: ALERT_HUNT_GROUP_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: PutRecallHuntGroupObject
          type_spec: required
        - doc: Array of ID strings of people, workspaces and virtual lines that are
            added to the call park.
          name: agents
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: Create the call park for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created call park.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Create the call park for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete the designated Call Park.

        Call Park allows call recipients to place a call on hold so that it can be
        retrieved from another device.

        Deleting a call park requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.

        NOTE: The Call Park ID will change upon modification of the Call Park name.'
      documentation:
        doc: Delete a Call Park
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-call-park
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParks/{callParkId}
        http_method: DELETE
      header: Delete a Call Park
      parameters_and_response:
        Query Parameters:
        - doc: Delete the call park from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location from which to delete a call park.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the call park with the matching ID.
          name: callParkId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Park details.

        Call Park allows call recipients to place a call on hold so that it can be
        retrieved from another device.

        Retrieving call park details requires a full or read-only administrator auth
        token with a scope of spark-admin:telephony_config_read.

        NOTE: The Call Park ID will change upon modification of the Call Park name.'
      documentation:
        doc: Get Details for a Call Park
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-call-park
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParks/{callParkId}
        http_method: GET
      header: Get Details for a Call Park
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call park settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the call park.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique name for the call park. The maximum length is 80.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Recall options that are added to call park.
          name: recall
          param_attrs:
          - doc: Alternate user which is a hunt group ID for call park recall alternate
              destination.
            name: huntGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique name for the hunt group.
            name: huntGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Call park recall options.
            name: option
            param_attrs:
            - doc: Alert parking user only.
              name: ALERT_PARKING_USER_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Alert parking user first, then hunt group.
              name: ALERT_PARKING_USER_FIRST_THEN_HUNT_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Alert hunt group only.
              name: ALERT_HUNT_GROUP_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: GetRecallHuntGroupObject
          type_spec: null
        - doc: People, workspaces and virtual lines that are eligible to receive calls.
          name: agents
          param_attrs:
          - doc: ID of a person, workspace or virtual line.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of a person, workspace or virtual line.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of a person, workspace or virtual line.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of a person, workspace or virtual line.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type of the person, workspace or virtual line.
            name: type
            param_attrs:
            - doc: Indicates that this object is a user.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a place.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a virtual line.
              name: VIRTUAL_LINE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Email of a person or workspace.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: List of phone numbers of a person, workspace or virtual line.
            name: numbers
            param_attrs:
            - doc: Phone number of a person or workspace.
              name: external
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Extension of a person or workspace.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Flag to indicate a primary phone.
              name: primary
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[GetUserNumberItemObject]
            type_spec: null
          param_object: []
          type: array[GetPersonPlaceVirtualLineCallParksObject]
          type_spec: null
        - doc: Whether or not the calls will be parked on agents as a destination.
          name: parkOnAgentsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Array of call park extensions assigned to a call park.
          name: callParkExtensions
          param_attrs:
          - doc: Unique identifier for the call park extension.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The extension for the call park.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the call park extension.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[ListCPCallParkExtensionObject]
          type_spec: null
        URI Parameters:
        - doc: Retrieve settings for a call park in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for a call park with the matching ID.
          name: callParkId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated Call Park.

        Call Park allows call recipients to place a call on hold so that it can be
        retrieved from another device.

        Updating a call park requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.

        NOTE: The Call Park ID will change upon modification of the Call Park name.'
      documentation:
        doc: Update a Call Park
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-call-park
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParks/{callParkId}
        http_method: PUT
      header: Update a Call Park
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the call park. The maximum length is 80.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Recall options that are added to call park.
          name: recall
          param_attrs:
          - doc: Alternate user which is a hunt group ID for call park recall alternate
              destination.
            name: huntGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Call park recall options.
            name: option
            param_attrs:
            - doc: Alert parking user only.
              name: ALERT_PARKING_USER_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Alert parking user first, then hunt group.
              name: ALERT_PARKING_USER_FIRST_THEN_HUNT_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Alert hunt group only.
              name: ALERT_HUNT_GROUP_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: PutRecallHuntGroupObject
          type_spec: null
        - doc: Array of ID strings of people, workspaces and virtual lines that are
            added to call park.
          name: agents
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: Update call park settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the target call park.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this call park exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update settings for a call park with the matching ID.
          name: callParkId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve available agents from call parks for a given location.

        Call Park allows call recipients to place a call on hold so that it can be
        retrieved from another device.

        Retrieving available agents from call parks requires a full or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get available agents from Call Parks
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-available-agents-from-call-parks
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParks/availableUsers
        http_method: GET
      header: Get available agents from Call Parks
      parameters_and_response:
        Query Parameters:
        - doc: Return the available agents for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return available agents from call parks with the matching name.
          name: callParkName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of available agents returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching available agents.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Only return available agents with the matching name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return available agents with the matching primary number.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Order the available agents according to the designated fields. Up
            to three vertical bar (|) separated sort order fields may be specified.
            Available sort fields: fname, lname, number and extension. The maximum
            supported sort order value is 3.'
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of agents.
          name: agents
          param_attrs:
          - doc: ID of a person, workspace or virtual line.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of a person, workspace or virtual line.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of a person, workspace or virtual line.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of a person, workspace or virtual line.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type of the person, workspace or virtual line.
            name: type
            param_attrs:
            - doc: Indicates that this object is a user.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a place.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a virtual line.
              name: VIRTUAL_LINE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Email of a person or workspace.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: List of phone numbers of a person, workspace or virtual line.
            name: numbers
            param_attrs:
            - doc: Phone number of a person or workspace.
              name: external
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Extension of a person or workspace.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Flag to indicate a primary phone.
              name: primary
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[GetUserNumberItemObject]
            type_spec: null
          param_object: []
          type: array[GetPersonPlaceVirtualLineCallParksObject]
          type_spec: null
        URI Parameters:
        - doc: Return the available agents for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve available recall hunt groups from call parks for a given location.

        Call Park allows call recipients to place a call on hold so that it can be
        retrieved from another device.

        Retrieving available recall hunt groups from call parks requires a full or
        read-only administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get available recall hunt groups from Call Parks
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-available-recall-hunt-groups-from-call-parks
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParks/availableRecallHuntGroups
        http_method: GET
      header: Get available recall hunt groups from Call Parks
      parameters_and_response:
        Query Parameters:
        - doc: Return the available recall hunt groups for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of available recall hunt groups returned to this maximum
            count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching available recall
            hunt groups.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Only return available recall hunt groups with the matching name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Order the available recall hunt groups according to the designated
            fields. Available sort fields: lname.'
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of available recall hunt groups.
          name: huntGroups
          param_attrs:
          - doc: A unique identifier for the hunt group.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique name for the hunt group.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[GetAvailableRecallHuntGroupsObject]
          type_spec: null
        URI Parameters:
        - doc: Return the available recall hunt groups for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Park Settings from call parks for a given location.

        Call Park allows call recipients to place a call on hold so that it can be
        retrieved from another device.

        Retrieving settings from call parks requires a full or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Call Park Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-call-park-settings
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParks/settings
        http_method: GET
      header: Get Call Park Settings
      parameters_and_response:
        Query Parameters:
        - doc: Return the call park settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Recall options that are added to call park.
          name: callParkRecall
          param_attrs:
          - doc: Alternate user which is a hunt group ID for call park recall alternate
              destination.
            name: huntGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique name for the hunt group.
            name: huntGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Call park recall options.
            name: option
            param_attrs:
            - doc: Alert parking user only.
              name: ALERT_PARKING_USER_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Alert parking user first, then hunt group.
              name: ALERT_PARKING_USER_FIRST_THEN_HUNT_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Alert hunt group only.
              name: ALERT_HUNT_GROUP_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: GetRecallHuntGroupObject
          type_spec: null
        - doc: Setting controlling call park behavior.
          name: callParkSettings
          param_attrs:
          - doc: Ring pattern for when this callpark is called.
            name: ringPattern
            param_attrs:
            - doc: Normal incoming ring pattern.
              name: NORMAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of two long rings.
              name: LONG_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of two short rings, followed by a short ring.
              name: SHORT_SHORT_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of a short ring, followed by a long ring,
                followed by a short ring.
              name: SHORT_LONG_SHORT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Amount of time within 30 and 600 seconds the Call Park will be parked.
              If the call isn't picked up within the set time, then the call will
              be recalled based on the Call Park Recall setting.
            name: recallTime
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Amount of time within 30 and 600 seconds the Call Park will be parked.
              If the call isn't picked up, the call will revert back to the hunt group
              (after the person who parked the call is alerted).
            name: huntWaitTime
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: CallParkSettingsObject
          type_spec: null
        URI Parameters:
        - doc: Return the call park settings for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update Call Park settings for the designated location.

        Call Park allows call recipients to place a call on hold so that it can be
        retrieved from another device.

        Updating call park settings requires a full administrator auth token with
        a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Call Park settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-call-park-settings
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParks/settings
        http_method: PUT
      header: Update Call Park settings
      parameters_and_response:
        Body Parameters:
        - doc: Recall options that are added to call park.
          name: callParkRecall
          param_attrs:
          - doc: Alternate user which is a hunt group ID for call park recall alternate
              destination.
            name: huntGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Call park recall options.
            name: option
            param_attrs:
            - doc: Alert parking user only.
              name: ALERT_PARKING_USER_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Alert parking user first, then hunt group.
              name: ALERT_PARKING_USER_FIRST_THEN_HUNT_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Alert hunt group only.
              name: ALERT_HUNT_GROUP_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: PutRecallHuntGroupObject
          type_spec: null
        - doc: Setting controlling call park behavior.
          name: callParkSettings
          param_attrs:
          - doc: Ring pattern for when this callpark is called.
            name: ringPattern
            param_attrs:
            - doc: Normal incoming ring pattern.
              name: NORMAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of two long rings.
              name: LONG_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of two short rings, followed by a short ring.
              name: SHORT_SHORT_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of a short ring, followed by a long ring,
                followed by a short ring.
              name: SHORT_LONG_SHORT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Amount of time within 30 and 600 seconds the Call Park will be parked.
              If the call isn't picked up within the set time, then the call will
              be recalled based on the Call Park Recall setting.
            name: recallTime
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Amount of time within 30 and 600 seconds the Call Park will be parked.
              If the call isn't picked up, the call will revert back to the hunt group
              (after the person who parked the call is alerted).
            name: huntWaitTime
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: CallParkSettingsObject
          type_spec: null
        Query Parameters:
        - doc: Update call park settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location for which call park settings will be updated.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all Call Park Extensions for the organization.

        The Call Park service, enabled for all users by default, allows a user to
        park a call against an available user''s extension or to a Call Park Extension.
        Call Park Extensions are extensions defined within the Call Park service for
        holding parked calls.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Call Park Extensions
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-call-park-extensions
        endpoint: https://webexapis.com/v1/telephony/config/callParkExtensions
        http_method: GET
      header: Read the List of Call Park Extensions
      parameters_and_response:
        Query Parameters:
        - doc: List call park extensions for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Only return call park extensions with the matching extension.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return call park extensions with the matching name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return call park extensions with matching location ID.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return call park extensions with the matching extension.
          name: locationName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Order the available agents according to the designated fields.  Available
            sort fields: groupName, callParkExtension, callParkExtensionName, callParkExtensionExternalId.'
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of call park extensions.
          name: callParkExtensions
          param_attrs:
          - doc: Unique identifier for the call park extension.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The extension for the call park extension.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the call park extension.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ID of location for call park extension.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of location for call park extension.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[ListCallParkExtensionObject]
          type_spec: null
    - doc: 'Retrieve Call Park Extension details.

        The Call Park service, enabled for all users by default, allows a user to
        park a call against an available user''s extension or to a Call Park Extension.
        Call Park Extensions are extensions defined within the Call Park service for
        holding parked calls.

        Retrieving call park extension details requires a full or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Details for a Call Park Extension
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-call-park-extension
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParkExtensions/{callParkExtensionId}
        http_method: GET
      header: Get Details for a Call Park Extension
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call park extension details from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: The extension for the call park extension.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique name for the call park extension.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Retrieve details for a call park extension in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve details for a call park extension with the matching ID.
          name: callParkExtensionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create new Call Park Extensions for the given location.

        Call Park Extension enables a call recipient to park a call to an extension,
        so someone else within the same Organization can retrieve the parked call
        by dialing that extension. Call Park Extensions can be added as monitored
        lines by users'' Cisco phones, so users can park and retrieve calls by pressing
        the associated phone line key.

        Creating a call park extension requires a full administrator auth token with
        a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Create a Call Park Extension
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-call-park-extension
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParkExtensions
        http_method: POST
      header: Create a Call Park Extension
      parameters_and_response:
        Body Parameters:
        - doc: Name for the call park extension. The maximum length is 30.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique extension which will be assigned to call park extension. The
            minimum length is 2, maximum length is 6.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Query Parameters:
        - doc: Create the call park extension for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created call park extension.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Create the call park extension for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete the designated Call Park Extension.

        Call Park Extension enables a call recipient to park a call to an extension,
        so someone else within the same Organization can retrieve the parked call
        by dialing that extension. Call Park Extensions can be added as monitored
        lines by users'' Cisco phones, so users can park and retrieve calls by pressing
        the associated phone line key.

        Deleting a call park extension requires a full administrator auth token with
        a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Call Park Extension
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-call-park-extension
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParkExtensions/{callParkExtensionId}
        http_method: DELETE
      header: Delete a Call Park Extension
      parameters_and_response:
        Query Parameters:
        - doc: Delete the call park extension from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location from which to delete a call park extension.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the call park extension with the matching ID.
          name: callParkExtensionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated Call Park Extension.

        Call Park Extension enables a call recipient to park a call to an extension,
        so someone else within the same Organization can retrieve the parked call
        by dialing that extension. Call Park Extensions can be added as monitored
        lines by users'' Cisco phones, so users can park and retrieve calls by pressing
        the associated phone line key.

        Updating a call park extension requires a full administrator auth token with
        a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update a Call Park Extension
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-call-park-extension
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callParkExtensions/{callParkExtensionId}
        http_method: PUT
      header: Update a Call Park Extension
      parameters_and_response:
        Body Parameters:
        - doc: Name for the call park extension. The maximum length is 30.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique extension which will be assigned to call park extension. The
            minimum length is 2, maximum length is 6.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: Update a call park extension from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this call park extension exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update a call park extension with the matching ID.
          name: callParkExtensionId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all Call Pickups for the organization.

        Call Pickup enables a user (agent) to answer any ringing line within their
        pickup group.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.

        NOTE: The Call Pickup ID will change upon modification of the Call Pickup
        name.'
      documentation:
        doc: Read the List of Call Pickups
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-call-pickups
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callPickups
        http_method: GET
      header: Read the List of Call Pickups
      parameters_and_response:
        Query Parameters:
        - doc: List call pickups for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of call pickups returned to this maximum count. Default
            is 2000.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching call pickups.
            Default is 0.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Sort the list of call pickups by name, either ASC or DSC. Default is
            ASC.
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of call pickups that contains the given name. The maximum
            length is 80.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of call pickups.
          name: callPickups
          param_attrs:
          - doc: Unique name for the call pickup. The maximum length is 80.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the call pickup.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the location for call pickup.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ID of the location for call pickup.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[ListCallPickupObject]
          type_spec: null
        URI Parameters:
        - doc: Return the list of call pickups for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create new Call Pickups for the given location.

        Call Pickup enables a user (agent) to answer any ringing line within their
        pickup group.

        Creating a call pickup requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.

        NOTE: The Call Pickup ID will change upon modification of the Call Pickup
        name.'
      documentation:
        doc: Create a Call Pickup
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-call-pickup
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callPickups
        http_method: POST
      header: Create a Call Pickup
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the call pickup. The maximum length is 80.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: An Array of ID strings of people, workspaces and virtual lines that
            are added to call pickup.
          name: agents
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: Create the call pickup for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created call pickup.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Create the call pickup for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete the designated Call Pickup.

        Call Pickup enables a user (agent) to answer any ringing line within their
        pickup group.

        Deleting a call pickup requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.

        NOTE: The Call Pickup ID will change upon modification of the Call Pickup
        name.'
      documentation:
        doc: Delete a Call Pickup
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-call-pickup
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callPickups/{callPickupId}
        http_method: DELETE
      header: Delete a Call Pickup
      parameters_and_response:
        Query Parameters:
        - doc: Delete the call pickup from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location from which to delete a call pickup.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the call pickup with the matching ID.
          name: callPickupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Pickup details.

        Call Pickup enables a user (agent) to answer any ringing line within their
        pickup group.

        Retrieving call pickup details requires a full or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.

        NOTE: The Call Pickup ID will change upon modification of the Call Pickup
        name.'
      documentation:
        doc: Get Details for a Call Pickup
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-call-pickup
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callPickups/{callPickupId}
        http_method: GET
      header: Get Details for a Call Pickup
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call pickup settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the call pickup.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique name for the call pickup. The maximum length is 80.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: People, workspaces and virtual lines that are eligible to receive calls.
          name: agents
          param_attrs:
          - doc: ID of a person, workspace or virtual line.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of a person, workspace or virtual line.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of a person, workspace or virtual line.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of a person, workspace or virtual line.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type of the person, workspace or virtual line.
            name: type
            param_attrs:
            - doc: Indicates that this object is a user.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a place.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a virtual line.
              name: VIRTUAL_LINE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Email of a person, workspace or virtual line.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: List of phone numbers of a person, workspace or virtual line.
            name: phoneNumber
            param_attrs:
            - doc: Phone number of a person or workspace.
              name: external
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Extension of a person or workspace.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Flag to indicate a primary phone.
              name: primary
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[GetUserNumberItemObject]
            type_spec: null
          param_object: []
          type: array[GetPersonPlaceVirtualLineCallPickupObject]
          type_spec: null
        URI Parameters:
        - doc: Retrieve settings for a call pickup in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for a call pickup with the matching ID.
          name: callPickupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated Call Pickup.

        Call Pickup enables a user (agent) to answer any ringing line within their
        pickup group.

        Updating a call pickup requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.

        NOTE: The Call Pickup ID will change upon modification of the Call Pickup
        name.'
      documentation:
        doc: Update a Call Pickup
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-call-pickup
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callPickups/{callPickupId}
        http_method: PUT
      header: Update a Call Pickup
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the call pickup. The maximum length is 80.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An array of people, workspace, and virtual lines IDs, that are added
            to call pickup.
          name: agents
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: Update call pickup settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the target call pickup.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this call pickup exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update settings for a call pickup with the matching ID.
          name: callPickupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve available agents from call pickups for a given location.

        Call Pickup enables a user (agent) to answer any ringing line within their
        pickup group.

        Retrieving available agents from call pickups requires a full or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get available agents from Call Pickups
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-available-agents-from-call-pickups
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/callPickups/availableUsers
        http_method: GET
      header: Get available agents from Call Pickups
      parameters_and_response:
        Query Parameters:
        - doc: Return the available agents for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return available agents from call pickups with the matching name.
          name: callPickupName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of available agents returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching available agents.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Only return available agents with the matching name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return available agents with the matching primary number.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Order the available agents according to the designated fields. Up
            to three vertical bar (|) separated sort order fields may be specified.
            Available sort fields: fname, lname, extension, number.'
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of agents.
          name: agents
          param_attrs:
          - doc: ID of a person, workspace or virtual line.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of a person, workspace or virtual line.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of a person, workspace or virtual line.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of a person, workspace or virtual line.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type of the person, workspace or virtual line.
            name: type
            param_attrs:
            - doc: Indicates that this object is a user.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a place.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a virtual line.
              name: VIRTUAL_LINE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Email of a person, workspace or virtual line.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: List of phone numbers of a person, workspace or virtual line.
            name: phoneNumber
            param_attrs:
            - doc: Phone number of a person or workspace.
              name: external
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Extension of a person or workspace.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Flag to indicate a primary phone.
              name: primary
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[GetUserNumberItemObject]
            type_spec: null
          param_object: []
          type: array[GetPersonPlaceVirtualLineCallPickupObject]
          type_spec: null
        URI Parameters:
        - doc: Return the available agents for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all Call Queues for the organization.

        Call queues temporarily hold calls in the cloud when all agents, which

        can be users or agents, assigned to receive calls from the queue are

        unavailable. Queued calls are routed to an available agent when not on an

        active call. Each call queue is assigned a Lead Number, which is a telephone

        number outside callers can dial to reach users assigned to the call queue.

        Call queues are also assigned an internal extension, which can be dialed

        internally to reach users assigned to the call queue.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Call Queues
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-call-queues
        endpoint: https://webexapis.com/v1/telephony/config/queues
        http_method: GET
      header: Read the List of Call Queues
      parameters_and_response:
        Query Parameters:
        - doc: List call queues for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return call queues with matching location ID.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Only return call queues with the matching name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return call queues with matching primary phone number or extension.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of call queues.
          name: queues
          param_attrs:
          - doc: A unique identifier for the call queue.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique name for the call queue.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of location for call queue.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ID of location for call queue.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Primary phone number of the call queue.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Primary phone extension of the call queue.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the call queue is enabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[ListCallQueueObject]
          type_spec: null
    - doc: 'Create new Call Queues for the given location.

        Call queues temporarily hold calls in the cloud when all agents, which

        can be users or agents, assigned to receive calls from the queue are

        unavailable. Queued calls are routed to an available agent when not on an

        active call. Each call queue is assigned a Lead Number, which is a telephone

        number outside callers can dial to reach users assigned to the call queue.

        Call queues are also assigned an internal extension, which can be dialed

        internally to reach users assigned to the call queue.

        Creating a call queue requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Create a Call Queue
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-call-queue
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues
        http_method: POST
      header: Create a Call Queue
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the call queue.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Primary phone number of the call queue. Either a phoneNumber or extension
            is mandatory.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Primary phone extension of the call queue. Either a phoneNumber or
            extension is mandatory.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language code.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: First name to be shown when calls are forwarded out of this call queue.
            Defaults to ".".
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name to be shown when calls are forwarded out of this call queue.
            Defaults to phoneNumber if set, otherwise defaults to call group name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Time zone for the call queue.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Policy controlling how calls are routed to agents.
          name: callPolicies
          param_attrs:
          - doc: Call routing type to use to dispatch calls to agents. The routing
              type should be SKILL_BASED if you want to assign skill level to agents.
              Only certain policy are allowed in SKILL_BASED type.
            name: routingType
            param_attrs:
            - doc: Default routing type which directly uses the routing policy to
                dispatch calls to the agents.
              name: PRIORITY_BASED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This option uses skill level as the criteria to route calls to
                agents. When there is more than one agent with the same skill level,
                the selected policy helps dispatch the calls to the agents.
              name: SKILL_BASED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: HuntRoutingTypeSelection
            type_spec: required
          - doc: Call routing policy to use to dispatch calls to agents.
            name: policy
            param_attrs:
            - doc: This option cycles through all agents after the last agent that
                took a call. It sends calls to the next available agent. This is supported
                for SKILL_BASED.
              name: CIRCULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Send the call through the queue of agents in order, starting from
                the top each time. This is supported for SKILL_BASED.
              name: REGULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to all agents at once
              name: SIMULTANEOUS
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to the agent that has been idle the longest. If they
                don't answer, proceed to the next agent who has been idle the second
                longest, and so on until the call is answered. This is supported for
                SKILL_BASED.
              name: UNIFORM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to idle agents based on percentages you assign to each
                agent (up to 100%).
              name: WEIGHTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: HuntPolicySelection
            type_spec: required
          - doc: Settings for when the call into the hunt group is not answered.
            name: callBounce
            param_attrs:
            - doc: If enabled, bounce calls after the set number of rings.
              name: callBounceEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of rings after which to bounce call, if callBounce is enabled.
              name: callBounceMaxRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Bounce if agent becomes unavailable.
              name: agentUnavailableEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Alert agent if call on hold more than alertAgentMaxSeconds.
              name: alertAgentEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of second after which to alert agent if alertAgentEnabled.
              name: alertAgentMaxSeconds
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Bounce if call on hold more than callBounceMaxSeconds.
              name: callBounceOnHoldEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of second after which to bounce if callBounceEnabled.
              name: callBounceOnHoldMaxSeconds
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            param_object: []
            type: object
            type_spec: required
          - doc: Whether or not the call queue has the distinctiveRing option enabled.
            name: distinctiveRing
            param_attrs:
            - doc: Whether or not the distinctiveRing is enabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Ring pattern for when this call queue is called. Only available
                when distinctiveRing is enabled for the call queue.
              name: ringPattern
              param_attrs:
              - doc: Normal incoming ring pattern.
                name: NORMAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of two long rings.
                name: LONG_LONG
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of two short rings, followed by a short
                  ring.
                name: SHORT_SHORT_LONG
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of a short ring, followed by a long ring,
                  followed by a short ring.
                name: SHORT_LONG_SHORT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: RingPatternObject
              type_spec: null
            param_object: []
            type: object
            type_spec: required
          param_object: []
          type: PostCallQueueCallPolicyObject
          type_spec: required
        - doc: Overall call queue settings.
          name: queueSettings
          param_attrs:
          - doc: The maximum number of calls for this call queue. Once this number
              is reached, the overflow settings are triggered.
            name: queueSize
            param_attrs: []
            param_object: []
            type: number
            type_spec: required
          - doc: Play ringing tone to callers when their call is set to an available
              agent.
            name: callOfferToneEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Reset caller statistics upon queue entry.
            name: resetCallStatisticsEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Settings for incoming calls exceed queueSize.
            name: overflow
            param_attrs:
            - doc: Indicates how to handle new calls when the queue is full.
              name: action
              param_attrs:
              - doc: The caller hears a fast-busy tone.
                name: PERFORM_BUSY_TREATMENT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The caller hears ringing until they disconnect.
                name: PLAY_RINGING_UNTIL_CALLER_HANGS_UP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Number where you want to transfer overflow calls.
                name: TRANSFER_TO_PHONE_NUMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: When true, forwards all calls to a voicemail service of an internal
                number. This option is ignored when an external transferNumber is
                entered.
              name: sendToVoicemail
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination number for overflow calls when action is set to TRANSFER_TO_PHONE_NUMBER.
              name: transferNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: After calls wait for the configured number of seconds and no agent
                is available, the overflow treatment is triggered.
              name: overflowAfterWaitEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of seconds to wait before the overflow treatment is triggered
                when no agent is available. The minimum value 0, The maximum value
                is 7200 seconds.
              name: overflowAfterWaitTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicate overflow audio to be played, otherwise, callers will hear
                the hold music until the call is answered by a user.
              name: playOverflowGreetingEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: 'Array of announcement fileName strings to be played as overflow
                greetings. These files are from the list of announcement files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.

                '
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: required
          - doc: "Play a message when callers first reach the queue. For example,\
              \ \u201CThank you for calling. An agent will be with you shortly.\u201D\
              \ It can be set as mandatory. If the mandatory option is not selected\
              \ and a caller reaches the call queue while there is an available agent,\
              \ the caller will not hear this announcement and is transferred to an\
              \ agent. The welcome message feature is enabled by default."
            name: welcomeMessage
            param_attrs:
            - doc: If enabled play entrance message. The default value is true.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Mandatory entrance message. The default value is false.
              name: alwaysEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: 'Array of announcement fileName strings to be played as welcomeMessage
                greetings. These files are from the list of announcement files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.

                '
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Notify the caller with either their estimated wait time or position
              in the queue. If this option is enabled, it plays after the welcome
              message and before the comfort message. By default, it is not enabled.
            name: waitMessage
            param_attrs:
            - doc: If enabled play Wait Message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Estimated wait message operating mode. Supported values TIME and
                POSITION.
              name: waitMode
              param_attrs:
              - doc: Announce the waiting time.
                name: TIME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Announce queue position.
                name: POSITION
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: The number of minutes for which the estimated wait is played. The
                minimum time is 10 minutes. The maximum time is 100 minutes.
              name: handlingTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The default number of call handling minutes. The minimum time is
                1 minutes, The maximum time is 100 minutes.
              name: defaultHandlingTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of the position for which the estimated wait is played.
                The minimum positions are 10, The maximum positions are 100.
              name: queuePosition
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Play time / Play position High Volume.
              name: highVolumeMessageEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The number of estimated waiting times in seconds. The minimum time
                is 10 seconds. The maximum time is 600 seconds.
              name: estimatedWaitingTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Callback options enabled/disabled. Default value is false.
              name: callbackOptionEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The minimum estimated callback times in minutes. The default value
                is 30.
              name: minimumEstimatedCallbackTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The international numbers for callback is enabled/disabled. The
                default value is false.
              name: internationalCallbackEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Play updated estimated wait message.
              name: playUpdatedEstimatedWaitMessage
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Play a message after the welcome message and before hold music. This
              is typically a CUSTOM announcement that plays information, such as current
              promotions or information about products and services.
            name: comfortMessage
            param_attrs:
            - doc: If enabled play periodic comfort message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The interval in seconds between each repetition of the comfort
                message played to queued users. The minimum time is 10 seconds.The
                maximum time is 600 seconds.
              name: timeBetweenMessages
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: 'Array of announcement fileName strings to be played as comfortMessage
                greetings. These files are from the list of announcement files associated
                with this call queue. These files are from the list of announcements
                files associated with this call queue. For CUSTOM announcement, a
                minimum of 1 fileName is mandatory, and the maximum is 4.

                '
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Play a shorter comfort message instead of the usual Comfort or Music
              On Hold announcement to all the calls that should be answered quickly.
              This feature prevents a caller from hearing a short portion of the standard
              comfort message that abruptly ends when they are connected to an agent.
            name: comfortMessageBypass
            param_attrs:
            - doc: If enabled play comfort bypass message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The interval in seconds between each repetition of the comfort
                bypass message played to queued users. The minimum time is 1 seconds.
                The maximum time is 120 seconds.
              name: callWaitingAgeThreshold
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: 'Array of announcement fileName strings to be played as comfortMessageBypass
                greetings. These files are from the list of announcements files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.

                '
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Play music after the comforting message in a repetitive loop.
            name: mohMessage
            param_attrs:
            - doc: ''
              name: normalSource
              param_attrs:
              - doc: Enable media on hold for queued calls.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates how to handle new calls when the queue is full.
                name: greeting
                param_attrs:
                - doc: Play the custom announcement specified by the fileName field.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Play default announcement.
                  name: DEFAULT
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: 'Array of announcement fileName strings to be played as mohMessage
                  greetings. These files are from the list of announcement files associated
                  with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                  is mandatory, and the maximum is 4.

                  '
                name: audioFiles
                param_attrs: []
                param_object: []
                type: array[string]
                type_spec: null
              param_object: []
              type: object
              type_spec: required
            - doc: ''
              name: alternateSource
              param_attrs:
              - doc: Enable media on hold for queued calls.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates how to handle new calls when the queue is full.
                name: greeting
                param_attrs:
                - doc: Play the custom announcement specified by the fileName field.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Play default announcement.
                  name: DEFAULT
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: 'Array of announcement fileName strings to be played as mohMessage
                  greetings. These files are from the list of announcement files associated
                  with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                  is mandatory, and the maximum is 4.

                  '
                name: audioFiles
                param_attrs: []
                param_object: []
                type: array[string]
                type_spec: null
              param_object: []
              type: object
              type_spec: required
            param_object: []
            type: object
            type_spec: null
          - doc: Play a message to the agent immediately before the incoming call
              is connected. The message typically announces the identity of the call
              queue from which the call is coming.
            name: whisperMessage
            param_attrs:
            - doc: If enabled play the Whisper Message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: 'Array of announcement fileName strings to be played as whisperMessage
                greetings. These files are from the list of announcement files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.

                '
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: CallQueueQueueSettingsObject
          type_spec: required
        - doc: People, workspaces and virtual lines that are eligible to receive calls.
          name: agents
          param_attrs:
          - doc: ID of person, workspace or virtual line.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Weight of person, workspace or virtual line. Only applied when call
              policy is WEIGHTED.
            name: weight
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Skill level of person, workspace or virtual line. Only applied when
              call routing type is SKILL_BASED.
            name: skillLevel
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: array[PostPersonPlaceVirtualLineCallQueueObject]
          type_spec: required
        - doc: Whether or not to allow agents to join or unjoin a queue.
          name: allowAgentJoinEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When true, indicates that the agent's configuration allows them to
            use the queue's Caller ID for outgoing calls.
          name: phoneNumberForOutgoingCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: Create the call queue for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created call queue.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Create the call queue for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete the designated Call Queue.

        Call queues temporarily hold calls in the cloud when all agents, which

        can be users or agents, assigned to receive calls from the queue are

        unavailable. Queued calls are routed to an available agent when not on an

        active call. Each call queue is assigned a Lead Number, which is a telephone

        number outside callers can dial to reach users assigned to the call queue.

        Call queues are also assigned an internal extension, which can be dialed

        internally to reach users assigned to the call queue.

        Deleting a call queue requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Call Queue
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-call-queue
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}
        http_method: DELETE
      header: Delete a Call Queue
      parameters_and_response:
        Query Parameters:
        - doc: Delete the call queue from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location from which to delete a call queue.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the call queue with the matching ID.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Queue details.

        Call queues temporarily hold calls in the cloud when all agents, which

        can be users or agents, assigned to receive calls from the queue are

        unavailable. Queued calls are routed to an available agent when not on an

        active call. Each call queue is assigned a Lead Number, which is a telephone

        number outside callers can dial to reach users assigned to the call queue.

        Call queues are also assigned an internal extension, which can be dialed

        internally to reach users assigned to the call queue.

        Retrieving call queue details requires a full or read-only administrator auth
        token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Details for a Call Queue
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-call-queue
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}
        http_method: GET
      header: Get Details for a Call Queue
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call queue settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the call queue.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique name for the call queue.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the call queue is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Language for the call queue.
          name: language
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language code.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: First name to be shown when calls are forwarded out of this call queue.
            Defaults to ..
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name to be shown when calls are forwarded out of this call queue.
            Defaults to the phoneNumber if set, otherwise defaults to call group name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Time zone for the call queue.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Primary phone number of the call queue.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Extension of the call queue.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: When true, indicates that the agent's configuration allows them to
            use the queue's Caller ID for outgoing calls.
          name: phoneNumberForOutgoingCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The alternate numbers feature allows you to assign multiple phone numbers
            or extensions to a call queue. Each number will reach the same greeting
            and each menu will function identically to the main number. The alternate
            numbers option enables you to have up to ten (10) phone numbers ring into
            the call queue.
          name: alternateNumberSettings
          param_attrs: []
          param_object:
          - doc: Distinctive Ringing selected for the alternate numbers in the call
              queue overrides the normal ringing patterns set for the Alternate Numbers.
            name: distinctiveRingEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Specifies up to 10 numbers which can each have an overriden distinctive
              ring setting.
            name: alternateNumbers
            param_attrs:
            - doc: Alternate phone number for the hunt group.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Ring pattern for when this alternate number is called. Only available
                when distinctiveRing is enabled for the hunt group.
              name: ringPattern
              param_attrs:
              - doc: Normal incoming ring pattern.
                name: NORMAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of two long rings.
                name: LONG_LONG
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of two short rings, followed by a short
                  ring.
                name: SHORT_SHORT_LONG
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of a short ring, followed by a long ring,
                  followed by a short ring.
                name: SHORT_LONG_SHORT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: RingPatternObject
              type_spec: null
            param_object: []
            type: array[AlternateNumbersWithPattern]
            type_spec: null
          type: object
          type_spec: null
        - doc: Policy controlling how calls are routed to agents.
          name: callPolicies
          param_attrs:
          - doc: Call routing type to use to dispatch calls to agents.
            name: routingType
            param_attrs:
            - doc: Default routing type which directly uses the routing policy to
                dispatch calls to the agents.
              name: PRIORITY_BASED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This option uses skill level as the criteria to route calls to
                agents. When there is more than one agent with the same skill level,
                the selected policy helps dispatch the calls to the agents.
              name: SKILL_BASED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: HuntRoutingTypeSelection
            type_spec: null
          - doc: Call routing policy to use to dispatch calls to agents.
            name: policy
            param_attrs:
            - doc: This option cycles through all agents after the last agent that
                took a call. It sends calls to the next available agent. This is supported
                for SKILL_BASED.
              name: CIRCULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Send the call through the queue of agents in order, starting from
                the top each time. This is supported for SKILL_BASED.
              name: REGULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to all agents at once
              name: SIMULTANEOUS
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to the agent that has been idle the longest. If they
                don't answer, proceed to the next agent who has been idle the second
                longest, and so on until the call is answered. This is supported for
                SKILL_BASED.
              name: UNIFORM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to idle agents based on percentages you assign to each
                agent (up to 100%).
              name: WEIGHTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: HuntPolicySelection
            type_spec: null
          - doc: Settings for when the call into the call queue is not answered.
            name: callBounce
            param_attrs: []
            param_object:
            - doc: If enabled, bounce calls after the set number of rings.
              name: callBounceEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of rings after which to bounce call, if call bounce is enabled.
              name: callBounceMaxRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Bounce if agent becomes unavailable.
              name: agentUnavailableEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Alert agent if call on hold more than alertAgentMaxSeconds.
              name: alertAgentEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of second after which to alert agent if alertAgentEnabled.
              name: alertAgentMaxSeconds
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Bounce if call on hold more than callBounceMaxSeconds.
              name: callBounceOnHoldEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of second after which to bounce if callBounceEnabled.
              name: callBounceOnHoldMaxSeconds
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            type: object
            type_spec: null
          - doc: Whether or not the call queue has the distinctive ring option enabled.
            name: distinctiveRing
            param_attrs: []
            param_object:
            - doc: Whether or not the distinctive ring is enabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Ring pattern for when this call queue is called. Only available
                when distinctiveRing is enabled for the call queue.
              name: ringPattern
              param_attrs:
              - doc: Normal incoming ring pattern.
                name: NORMAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of two long rings.
                name: LONG_LONG
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of two short rings, followed by a short
                  ring.
                name: SHORT_SHORT_LONG
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of a short ring, followed by a long ring,
                  followed by a short ring.
                name: SHORT_LONG_SHORT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: RingPatternObject
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: GetCallQueueCallPolicyObject
          type_spec: null
        - doc: Overall call queue settings.
          name: queueSettings
          param_attrs:
          - doc: The maximum number of calls for this call queue. Once this number
              is reached, the overflow settings are triggered.
            name: queueSize
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Play ringing tone to callers when their call is set to an available
              agent.
            name: callOfferToneEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Reset caller statistics upon queue entry.
            name: resetCallStatisticsEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Settings for incoming calls exceed queueSize.
            name: overflow
            param_attrs: []
            param_object:
            - doc: Indicates how to handle new calls when the queue is full.
              name: action
              param_attrs:
              - doc: The caller hears a fast-busy tone.
                name: PERFORM_BUSY_TREATMENT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The caller hears ringing until they disconnect.
                name: PLAY_RINGING_UNTIL_CALLER_HANGS_UP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Number where you want to transfer overflow calls.
                name: TRANSFER_TO_PHONE_NUMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: When true, forwards all calls to a voicemail service of an internal
                number. This option is ignored when an external transferNumber is
                entered.
              name: sendToVoicemail
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination number for overflow calls when action is set to TRANSFER_TO_PHONE_NUMBER.
              name: transferNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: After calls wait for the configured number of seconds and no agent
                is available, the overflow treatment is triggered.
              name: overflowAfterWaitEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of seconds to wait before the overflow treatment is triggered
                when no agent is available. The minimum value 0, The maximum value
                is 7200 seconds.
              name: overflowAfterWaitTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicate overflow audio to be played, otherwise, callers will hear
                the hold music until the call is answered by a user.
              name: playOverflowGreetingEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Array of announcement fileName strings to be played as overflow
                greetings. These files are from the list of announcement files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            type: object
            type_spec: null
          - doc: "Play a message when callers first reach the queue. For example,\
              \ \u201CThank you for calling. An agent will be with you shortly.\u201D\
              \ It can be set as mandatory. If the mandatory option is not selected\
              \ and a caller reaches the call queue while there is an available agent,\
              \ the caller will not hear this announcement and is transferred to an\
              \ agent. The welcome message feature is enabled by default."
            name: welcomeMessage
            param_attrs: []
            param_object:
            - doc: If enabled play entrance message. The default value is true.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Mandatory entrance message. The default value is false.
              name: alwaysEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Array of announcement fileName strings to be played as welcomeMessage
                greetings. These files are from the list of announcement files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            type: object
            type_spec: null
          - doc: Notify the caller with either their estimated wait time or position
              in the queue. If this option is enabled, it plays after the welcome
              message and before the comfort message. By default, it is not enabled.
            name: waitMessage
            param_attrs: []
            param_object:
            - doc: If enabled play Wait Message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Estimated wait message operating mode. Supported values TIME and
                POSITION.
              name: waitMode
              param_attrs:
              - doc: Announce the waiting time.
                name: TIME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Announce queue position.
                name: POSITION
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The number of minutes for which the estimated wait is played. The
                minimum time is 10 minutes. The maximum time is 100 minutes.
              name: handlingTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The default number of call handling minutes. The minimum time is
                1 minutes, The maximum time is 100 minutes.
              name: defaultHandlingTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of the position for which the estimated wait is played.
                The minimum positions are 10, The maximum positions are 100.
              name: queuePosition
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Play time / Play position High Volume.
              name: highVolumeMessageEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The number of estimated waiting times in seconds. The minimum time
                is 10 seconds. The maximum time is 600 seconds.
              name: estimatedWaitingTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Callback options enabled/disabled. Default value is false.
              name: callbackOptionEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The minimum estimated callback times in minutes. The default value
                is 30.
              name: minimumEstimatedCallbackTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The international numbers for callback is enabled/disabled. The
                default value is false.
              name: internationalCallbackEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Play updated estimated wait message.
              name: playUpdatedEstimatedWaitMessage
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          - doc: Play a message after the welcome message and before hold music. This
              is typically a CUSTOM announcement that plays information, such as current
              promotions or information about products and services.
            name: comfortMessage
            param_attrs: []
            param_object:
            - doc: If enabled play periodic comfort message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The interval in seconds between each repetition of the comfort
                message played to queued users. The minimum time is 10 seconds.The
                maximum time is 600 seconds.
              name: timeBetweenMessages
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Array of announcement fileName strings to be played as comfortMessage
                greetings. These files are from the list of announcement files associated
                with this call queue. These files are from the list of announcements
                files associated with this call queue. For CUSTOM announcement, a
                minimum of 1 fileName is mandatory, and the maximum is 4.
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            type: object
            type_spec: null
          - doc: Play a shorter comfort message instead of the usual Comfort or Music
              On Hold announcement to all the calls that should be answered quickly.
              This feature prevents a caller from hearing a short portion of the standard
              comfort message that abruptly ends when they are connected to an agent.
            name: comfortMessageBypass
            param_attrs: []
            param_object:
            - doc: If enabled play comfort bypass message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The interval in seconds between each repetition of the comfort
                bypass message played to queued users. The minimum time is 1 seconds.
                The maximum time is 120 seconds.
              name: callWaitingAgeThreshold
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Array of announcement fileName strings to be played as comfortMessageBypass
                greetings. These files are from the list of announcements files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            type: object
            type_spec: null
          - doc: Play music after the comforting message in a repetitive loop.
            name: mohMessage
            param_attrs: []
            param_object:
            - doc: ''
              name: normalSource
              param_attrs: []
              param_object:
              - doc: Enable media on hold for queued calls.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates how to handle new calls when the queue is full.
                name: greeting
                param_attrs:
                - doc: Play the custom announcement specified by the fileName field.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Play default announcement.
                  name: DEFAULT
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              - doc: Array of announcement fileName strings to be played as mohMessage
                  greetings. These files are from the list of announcement files associated
                  with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                  is mandatory, and the maximum is 4.
                name: audioFiles
                param_attrs: []
                param_object: []
                type: array[string]
                type_spec: null
              type: object
              type_spec: null
            - doc: ''
              name: alternateSource
              param_attrs: []
              param_object:
              - doc: Enable media on hold for queued calls.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates how to handle new calls when the queue is full.
                name: greeting
                param_attrs:
                - doc: Play the custom announcement specified by the fileName field.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Play default announcement.
                  name: DEFAULT
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              - doc: Array of announcement fileName strings to be played as mohMessage
                  greetings. These files are from the list of announcement files associated
                  with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                  is mandatory, and the maximum is 4.
                name: audioFiles
                param_attrs: []
                param_object: []
                type: array[string]
                type_spec: null
              type: object
              type_spec: null
            type: object
            type_spec: null
          - doc: Play a message to the agent immediately before the incoming call
              is connected. The message typically announces the identity of the call
              queue from which the call is coming.
            name: whisperMessage
            param_attrs: []
            param_object:
            - doc: If enabled play the Whisper Message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Array of announcement fileName strings to be played as whisperMessage
                greetings. These files are from the list of announcement files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: CallQueueQueueSettingsObject
          type_spec: null
        - doc: Flag to indicate whether call waiting is enabled for agents.
          name: allowCallWaitingForAgentsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: People, workspaces and virtual lines that are eligible to receive calls.
          name: agents
          param_attrs:
          - doc: ID of person, workspace or virtual line.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type of the person, workspace or virtual line.
            name: type
            param_attrs:
            - doc: Indicates that this object is a user.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a place.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a virtual line.
              name: VIRTUAL_LINE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: First name of person, workspace or virtual line.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of person, workspace or virtual line.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number of person, workspace or virtual line.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Extension of person, workspace or virtual line.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Weight of person, workspace or virtual line. Only applied when call
              policy is WEIGHTED.
            name: weight
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Skill level of person, workspace or virtual line. Only applied when
              the call routingType is SKILL_BASED.
            name: skillLevel
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the join status of the agent for this queue. The default
              value while creating call queue is true.
            name: joinEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[GetPersonPlaceVirtualLineCallQueueObject]
          type_spec: null
        - doc: Whether or not to allow agents to join or unjoin a queue.
          name: allowAgentJoinEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Retrieve settings for a call queue in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for the call queue with this identifier.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated Call Queue.

        Call queues temporarily hold calls in the cloud when all agents, which

        can be users or agents, assigned to receive calls from the queue are

        unavailable. Queued calls are routed to an available agent when not on an

        active call. Each call queue is assigned a Lead Number, which is a telephone

        number outside callers can dial to reach users assigned to the call queue.

        Call queues are also assigned an internal extension, which can be dialed

        internally to reach users assigned to the call queue.

        Updating a call queue requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Update a Call Queue
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-call-queue
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}
        http_method: PUT
      header: Update a Call Queue
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not the call queue is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Unique name for the call queue.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language code.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: First name to be shown when calls are forwarded out of this call queue.
            Defaults to ..
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name to be shown when calls are forwarded out of this call queue.
            Defaults to the phoneNumber if set, otherwise defaults to call group name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Time zone for the hunt group.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Primary phone number of the call queue.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Extension of the call queue.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The alternate numbers feature allows you to assign multiple phone numbers
            or extensions to a call queue. Each number will reach the same greeting
            and each menu will function identically to the main number. The alternate
            numbers option enables you to have up to ten (10) phone numbers ring into
            the call queue.
          name: alternateNumberSettings
          param_attrs:
          - doc: Distinctive Ringing selected for the alternate numbers in the call
              queue overrides the normal ringing patterns set for Alternate Numbers.
            name: distinctiveRingEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Specifies up to 10 numbers which can each have an overriden distinctive
              ring setting.
            name: alternateNumbers
            param_attrs:
            - doc: Alternate phone number for the hunt group.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Ring pattern for when this alternate number is called. Only available
                when distinctiveRing is enabled for the hunt group.
              name: ringPattern
              param_attrs:
              - doc: Normal incoming ring pattern.
                name: NORMAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of two long rings.
                name: LONG_LONG
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of two short rings, followed by a short
                  ring.
                name: SHORT_SHORT_LONG
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of a short ring, followed by a long ring,
                  followed by a short ring.
                name: SHORT_LONG_SHORT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[AlternateNumbersWithPattern]
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Policy controlling how calls are routed to agents.
          name: callPolicies
          param_attrs:
          - doc: Call routing type to use to dispatch calls to agents.
            name: routingType
            param_attrs:
            - doc: Default routing type which directly uses the routing policy to
                dispatch calls to the agents.
              name: PRIORITY_BASED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: This option uses skill level as the criteria to route calls to
                agents. When there is more than one agent with the same skill level,
                the selected policy helps dispatch the calls to the agents.
              name: SKILL_BASED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: HuntRoutingTypeSelection
            type_spec: required
          - doc: Call routing policy to use to dispatch calls to agents.
            name: policy
            param_attrs:
            - doc: This option cycles through all agents after the last agent that
                took a call. It sends calls to the next available agent. This is supported
                for SKILL_BASED.
              name: CIRCULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Send the call through the queue of agents in order, starting from
                the top each time. This is supported for SKILL_BASED.
              name: REGULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to all agents at once
              name: SIMULTANEOUS
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to the agent that has been idle the longest. If they
                don't answer, proceed to the next agent who has been idle the second
                longest, and so on until the call is answered. This is supported for
                SKILL_BASED.
              name: UNIFORM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to idle agents based on percentages you assign to each
                agent (up to 100%).
              name: WEIGHTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: HuntPolicySelection
            type_spec: null
          - doc: Settings for when the call is not answered.
            name: callBounce
            param_attrs:
            - doc: If enabled, bounce calls after the set number of rings.
              name: callBounceEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of rings after which to bounce call, if call bounce is enabled.
              name: callBounceMaxRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Bounce if agent becomes unavailable.
              name: agentUnavailableEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Alert agent if call on hold more than alertAgentMaxSeconds.
              name: alertAgentEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of second after which to alert agent if alertAgentEnabled.
              name: alertAgentMaxSeconds
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Bounce if call on hold more than callBounceMaxSeconds.
              name: callBounceOnHoldEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of second after which to bounce if callBounceEnabled.
              name: callBounceOnHoldMaxSeconds
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Whether or not the call queue has the distinctiveRing option enabled.
            name: distinctiveRing
            param_attrs:
            - doc: Whether or not the distinctiveRing is enabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Ring pattern for when this call queue is called. Only available
                when distinctiveRing is enabled for the call queue.
              name: ringPattern
              param_attrs:
              - doc: Normal incoming ring pattern.
                name: NORMAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of two long rings.
                name: LONG_LONG
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of two short rings, followed by a short
                  ring.
                name: SHORT_SHORT_LONG
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Incoming ring pattern of a short ring, followed by a long ring,
                  followed by a short ring.
                name: SHORT_LONG_SHORT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: RingPatternObject
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: ModifyCallQueueCallPolicyObject
          type_spec: null
        - doc: Overall call queue settings.
          name: queueSettings
          param_attrs:
          - doc: The maximum number of calls for this call queue. Once this number
              is reached, the overflow settings are triggered.
            name: queueSize
            param_attrs: []
            param_object: []
            type: number
            type_spec: required
          - doc: Play ringing tone to callers when their call is set to an available
              agent.
            name: callOfferToneEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Reset caller statistics upon queue entry.
            name: resetCallStatisticsEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Settings for incoming calls exceed queueSize.
            name: overflow
            param_attrs:
            - doc: Indicates how to handle new calls when the queue is full.
              name: action
              param_attrs:
              - doc: The caller hears a fast-busy tone.
                name: PERFORM_BUSY_TREATMENT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: The caller hears ringing until they disconnect.
                name: PLAY_RINGING_UNTIL_CALLER_HANGS_UP
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Number where you want to transfer overflow calls.
                name: TRANSFER_TO_PHONE_NUMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: When true, forwards all calls to a voicemail service of an internal
                number. This option is ignored when an external transferNumber is
                entered.
              name: sendToVoicemail
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination number for overflow calls when action is set to TRANSFER_TO_PHONE_NUMBER.
              name: transferNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: After calls wait for the configured number of seconds and no agent
                is available, the overflow treatment is triggered.
              name: overflowAfterWaitEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of seconds to wait before the overflow treatment is triggered
                when no agent is available. The minimum value 0, The maximum value
                is 7200 seconds.
              name: overflowAfterWaitTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicate overflow audio to be played, otherwise, callers will hear
                the hold music until the call is answered by a user.
              name: playOverflowGreetingEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: 'Array of announcement fileName strings to be played as overflow
                greetings. These files are from the list of announcement files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.

                '
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: required
          - doc: "Play a message when callers first reach the queue. For example,\
              \ \u201CThank you for calling. An agent will be with you shortly.\u201D\
              \ It can be set as mandatory. If the mandatory option is not selected\
              \ and a caller reaches the call queue while there is an available agent,\
              \ the caller will not hear this announcement and is transferred to an\
              \ agent. The welcome message feature is enabled by default."
            name: welcomeMessage
            param_attrs:
            - doc: If enabled play entrance message. The default value is true.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Mandatory entrance message. The default value is false.
              name: alwaysEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: 'Array of announcement fileName strings to be played as welcomeMessage
                greetings. These files are from the list of announcement files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.

                '
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Notify the caller with either their estimated wait time or position
              in the queue. If this option is enabled, it plays after the welcome
              message and before the comfort message. By default, it is not enabled.
            name: waitMessage
            param_attrs:
            - doc: If enabled play Wait Message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Estimated wait message operating mode. Supported values TIME and
                POSITION.
              name: waitMode
              param_attrs:
              - doc: Announce the waiting time.
                name: TIME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Announce queue position.
                name: POSITION
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: The number of minutes for which the estimated wait is played. The
                minimum time is 10 minutes. The maximum time is 100 minutes.
              name: handlingTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The default number of call handling minutes. The minimum time is
                1 minutes, The maximum time is 100 minutes.
              name: defaultHandlingTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The number of the position for which the estimated wait is played.
                The minimum positions are 10, The maximum positions are 100.
              name: queuePosition
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Play time / Play position High Volume.
              name: highVolumeMessageEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The number of estimated waiting times in seconds. The minimum time
                is 10 seconds. The maximum time is 600 seconds.
              name: estimatedWaitingTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Callback options enabled/disabled. Default value is false.
              name: callbackOptionEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The minimum estimated callback times in minutes. The default value
                is 30.
              name: minimumEstimatedCallbackTime
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The international numbers for callback is enabled/disabled. The
                default value is false.
              name: internationalCallbackEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Play updated estimated wait message.
              name: playUpdatedEstimatedWaitMessage
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Play a message after the welcome message and before hold music. This
              is typically a CUSTOM announcement that plays information, such as current
              promotions or information about products and services.
            name: comfortMessage
            param_attrs:
            - doc: If enabled play periodic comfort message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The interval in seconds between each repetition of the comfort
                message played to queued users. The minimum time is 10 seconds.The
                maximum time is 600 seconds.
              name: timeBetweenMessages
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: 'Array of announcement fileName strings to be played as comfortMessage
                greetings. These files are from the list of announcement files associated
                with this call queue. These files are from the list of announcements
                files associated with this call queue. For CUSTOM announcement, a
                minimum of 1 fileName is mandatory, and the maximum is 4.

                '
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Play a shorter comfort message instead of the usual Comfort or Music
              On Hold announcement to all the calls that should be answered quickly.
              This feature prevents a caller from hearing a short portion of the standard
              comfort message that abruptly ends when they are connected to an agent.
            name: comfortMessageBypass
            param_attrs:
            - doc: If enabled play comfort bypass message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: The interval in seconds between each repetition of the comfort
                bypass message played to queued users. The minimum time is 1 seconds.
                The maximum time is 120 seconds.
              name: callWaitingAgeThreshold
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: 'Array of announcement fileName strings to be played as comfortMessageBypass
                greetings. These files are from the list of announcements files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.

                '
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Play music after the comforting message in a repetitive loop.
            name: mohMessage
            param_attrs:
            - doc: ''
              name: normalSource
              param_attrs:
              - doc: Enable media on hold for queued calls.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates how to handle new calls when the queue is full.
                name: greeting
                param_attrs:
                - doc: Play the custom announcement specified by the fileName field.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Play default announcement.
                  name: DEFAULT
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: 'Array of announcement fileName strings to be played as mohMessage
                  greetings. These files are from the list of announcement files associated
                  with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                  is mandatory, and the maximum is 4.

                  '
                name: audioFiles
                param_attrs: []
                param_object: []
                type: array[string]
                type_spec: null
              param_object: []
              type: object
              type_spec: required
            - doc: ''
              name: alternateSource
              param_attrs:
              - doc: Enable media on hold for queued calls.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates how to handle new calls when the queue is full.
                name: greeting
                param_attrs:
                - doc: Play the custom announcement specified by the fileName field.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Play default announcement.
                  name: DEFAULT
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: 'Array of announcement fileName strings to be played as mohMessage
                  greetings. These files are from the list of announcement files associated
                  with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                  is mandatory, and the maximum is 4.

                  '
                name: audioFiles
                param_attrs: []
                param_object: []
                type: array[string]
                type_spec: null
              param_object: []
              type: object
              type_spec: required
            param_object: []
            type: object
            type_spec: null
          - doc: Play a message to the agent immediately before the incoming call
              is connected. The message typically announces the identity of the call
              queue from which the call is coming.
            name: whisperMessage
            param_attrs:
            - doc: If enabled play the Whisper Message.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates how to handle new calls when the queue is full.
              name: greeting
              param_attrs:
              - doc: Play the custom announcement specified by the fileName field.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play default announcement.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: 'Array of announcement fileName strings to be played as whisperMessage
                greetings. These files are from the list of announcement files associated
                with this call queue. For CUSTOM announcement, a minimum of 1 fileName
                is mandatory, and the maximum is 4.

                '
              name: audioFiles
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: CallQueueQueueSettingsObject
          type_spec: required
        - doc: Flag to indicate whether call waiting is enabled for agents.
          name: allowCallWaitingForAgentsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: People, workspaces and virtual lines that are eligible to receive calls.
          name: agents
          param_attrs:
          - doc: ID of person, workspace or virtual line.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Weight of person, workspace or virtual line. Only applied when call
              policy is WEIGHTED.
            name: weight
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Skill level of person, workspace or virtual line. Only applied when
              call routing type is SKILL_BASED.
            name: skillLevel
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the join status of the agent for this queue. The default
              value for newly added agents is true.
            name: joinEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[ModifyPersonPlaceVirtualLineCallQueueObject]
          type_spec: null
        - doc: Whether or not to allow agents to join or unjoin a queue.
          name: allowAgentJoinEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When true, indicates that the agent's configuration allows them to
            use the queue's Caller ID for outgoing calls.
          name: phoneNumberForOutgoingCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: Update call queue settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this call queue exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update setting for the call queue with the matching ID.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List file info for all Call Queue announcement files associated with this
        Call Queue.

        Call Queue announcement files contain messages and music that callers hear
        while waiting in the queue. A call queue can be configured to play whatever
        subset of these announcement files is desired.

        Retrieving this list of files requires a full or read-only administrator auth
        token with a scope of spark-admin:telephony_config_read.

        Note that uploading of announcement files via API is not currently supported,
        but is available via Webex Control Hub.'
      documentation:
        doc: Read the List of Call Queue Announcement Files
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-call-queue-announcement-files
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/announcements
        http_method: GET
      header: Read the List of Call Queue Announcement Files
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve announcement files for a call queue from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of announcements for this call queue.
          name: announcements
          param_attrs:
          - doc: Name of greeting file.
            name: fileName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Size of greeting file in bytes.
            name: fileSize
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[GetAnnouncementFileInfo]
          type_spec: null
        URI Parameters:
        - doc: Location in which this call queue exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve anouncement files for the call queue with this identifier.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete an announcement file for the designated Call Queue.

        Call Queue announcement files contain messages and music that callers hear
        while waiting in the queue. A call queue can be configured to play whatever
        subset of these announcement files is desired.

        Deleting an announcement file for a call queue requires a full administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Call Queue Announcement File
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-call-queue-announcement-file
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/announcements/{fileName}
        http_method: DELETE
      header: Delete a Call Queue Announcement File
      parameters_and_response:
        Query Parameters:
        - doc: Delete call queue announcement from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Delete an announcement for a call queue in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete an announcement for the call queue with this identifier.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: ''
          name: fileName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Forwarding settings for the designated Call Queue including
        the list of call forwarding rules.

        Retrieving call forwarding settings for a call queue requires a full or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Call Forwarding Settings for a Call Queue
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-call-forwarding-settings-for-a-call-queue
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/callForwarding
        http_method: GET
      header: Get Call Forwarding Settings for a Call Queue
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call queue forwarding settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Settings related to Always, Busy, and No Answer call forwarding.
          name: callForwarding
          param_attrs: []
          param_object:
          - doc: Settings for forwarding all incoming calls to the destination you
              choose.
            name: always
            param_attrs: []
            param_object:
            - doc: Always call forwarding is enabled or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for "Always" call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Selectively forward calls to a designated number, depending on criteria
              rules. You'll need to have at least one rule for forwarding applied
              for call forwarding to be active.
            name: selective
            param_attrs: []
            param_object:
            - doc: Busy call forwarding is enabled or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for Busy call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Rules for selectively forwarding calls.
            name: rules
            param_attrs:
            - doc: Unique ID for the rule.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Unique name of rule.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Comma-separated list of incoming call numbers that, when matched,
                will not be forwarded. A Limit of 12 numbers is allowed. Use Any private
                Number in the comma-separated value to indicate rules that match incoming
                calls from a private number. Use Any unavailable number in the comma-separated
                value to match incoming calls from an unavailable number.
              name: callFrom
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Comma-separated list of the types of numbers being matched for
                incoming call destination.
              name: callsTo
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Number to which calls will be forwarded if the rule is of type
                "Forward To" and the incoming call is matched.
              name: forwardTo
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Reflects if rule is enabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[CallForwardRulesGet]
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Location in which this call queue exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve the call forwarding settings for this call queue.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update Call Forwarding settings for the designated Call Queue.

        Updating call forwarding settings for a call queue requires a full administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Call Forwarding Settings for a Call Queue
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-call-forwarding-settings-for-a-call-queue
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/callForwarding
        http_method: PUT
      header: Update Call Forwarding Settings for a Call Queue
      parameters_and_response:
        Body Parameters:
        - doc: Settings related to Always, Busy, and No Answer call forwarding.
          name: callForwarding
          param_attrs:
          - doc: Settings for forwarding all incoming calls to the destination you
              choose.
            name: always
            param_attrs:
            - doc: Always call forwarding is enabled or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for Always call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Selectively forward calls to a designated number, depending on criteria
              rules. You'll need to have at least one rule for forwarding applied
              for call forwarding to be active.
            name: selective
            param_attrs:
            - doc: Busy call forwarding is enabled or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for Busy call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Rules for selectively forwarding calls.
            name: rules
            param_attrs:
            - doc: Unique ID for the rule.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Reflects if rule is enabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[CallForwardRulesSet]
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: Update call queue forwarding settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this call queue exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update call forwarding settings for this call queue.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create a Selective Call Forwarding Rule for the designated Call Queue.

        A selective call forwarding rule for a call queue allows calls to be forwarded
        or not forwarded to the designated number, based on the defined criteria.

        Note that the list of existing call forward rules is available in the call
        queue''s call forwarding settings.

        Creating a selective call forwarding rule for a call queue requires a full
        administrator auth token with a scope of spark-admin:telephony_config_write.

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Create a Selective Call Forwarding Rule for a Call Queue
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-selective-call-forwarding-rule-for-a-call-queue
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/callForwarding/selectiveRules
        http_method: POST
      header: Create a Selective Call Forwarding Rule for a Call Queue
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the selective rule in the hunt group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Reflects if rule is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Name of the location's holiday schedule which determines when this
            selective call forwarding rule is in effect.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the location's business schedule which determines when this
            selective call forwarding rule is in effect.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Controls what happens when the rule matches including the destination
            number for the call forwarding.
          name: forwardTo
          param_attrs:
          - doc: Controls what happens when the rule matches.
            name: selection
            param_attrs:
            - doc: When the rule matches, forward to the destination for the hunt
                group.
              name: FORWARD_TO_DEFAULT_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, forward to the destination for this rule.
              name: FORWARD_TO_SPECIFIED_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, do not forward to another number.
              name: DO_NOT_FORWARD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Phone number used if selection is FORWARD_TO_SPECIFIED_NUMBER.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: object
          type_spec: null
        - doc: Settings related to the rule matching based on incoming caller ID.
          name: callsFrom
          param_attrs:
          - doc: If CUSTOM, use customNumbers to specify which incoming caller ID
              values cause this rule to match. ANY means any incoming call matches
              assuming the rule is in effect based on the associated schedules.
            name: selection
            param_attrs:
            - doc: Rule matches for calls from any number.
              name: ANY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Rule matches based on the numbers and options in customNumbers.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Custom rules for matching incoming caller ID information.
            name: customNumbers
            param_attrs:
            - doc: Match if caller ID indicates the call is from a private number.
              name: privateNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Match if caller ID is unavailable.
              name: unavailableNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Array of number strings to be matched against incoming caller ID.
              name: numbers
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: required
          param_object: []
          type: object
          type_spec: required
        - doc: Settings related to the rule matching based on the destination number.
          name: callsTo
          param_attrs:
          - doc: Array of numbers to be matched against the calling destination number.
            name: numbers
            param_attrs:
            - doc: Only return call queues with matching primary phone number or extension.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Primary phone extension of the call queue.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Type of
              name: type
              param_attrs:
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is a primary number or extension.
                name: PRIMARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is an alternate number or extension.
                name: ALTERNATE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: array[CallForwardingNumbers]
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        Query Parameters:
        - doc: Create the call queue rule for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created call queue.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which the call queue exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Create the rule for this call queue.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a Selective Call Forwarding Rule''s settings for the designated
        Call Queue.

        A selective call forwarding rule for a call queue allows calls to be forwarded
        or not forwarded to the designated number, based on the defined criteria.

        Note that the list of existing call forward rules is available in the call
        queue''s call forwarding settings.

        Retrieving a selective call forwarding rule''s settings for a call queue requires
        a full or read-only administrator auth token with a scope of spark-admin:telephony_config_read.

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Get Selective Call Forwarding Rule for a Call Queue
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-selective-call-forwarding-rule-for-a-call-queue
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/callForwarding/selectiveRules/{ruleId}
        http_method: GET
      header: Get Selective Call Forwarding Rule for a Call Queue
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call queue rule settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique name for the selective rule in the hunt group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique ID for the rule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Reflects if rule is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Name of the location's holiday schedule which determines when this
            selective call forwarding rule is in effect.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the location's business schedule which determines when this
            selective call forwarding rule is in effect.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Controls what happens when the rule matches including the destination
            number for the call forwarding.
          name: forwardTo
          param_attrs: []
          param_object:
          - doc: Controls what happens when the rule matches.
            name: selection
            param_attrs:
            - doc: When the rule matches, forward to the destination for the hunt
                group.
              name: FORWARD_TO_DEFAULT_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, forward to the destination for this rule.
              name: FORWARD_TO_SPECIFIED_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, do not forward to another number.
              name: DO_NOT_FORWARD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Phone number used if selection is FORWARD_TO_SPECIFIED_NUMBER.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings related to the rule matching based on incoming caller ID.
          name: callsFrom
          param_attrs: []
          param_object:
          - doc: If CUSTOM, use customNumbers to specify which incoming caller ID
              values cause this rule to match. ANY means any incoming call matches
              assuming the rule is in effect based on the associated schedules.
            name: selection
            param_attrs:
            - doc: Rule matches for calls from any number.
              name: ANY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Rule matches based on the numbers and options in customNumbers.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Custom rules for matching incoming caller ID information.
            name: customNumbers
            param_attrs: []
            param_object:
            - doc: Match if caller ID indicates the call is from a private number.
              name: privateNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Match if caller ID is unavailable.
              name: unavailableNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Array of number strings to be matched against incoming caller ID.
              name: numbers
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings related to the rule matching based on the destination number.
          name: callsTo
          param_attrs: []
          param_object:
          - doc: Array of numbers to be matched against the calling destination number.
            name: numbers
            param_attrs:
            - doc: Only return call queues with matching primary phone number or extension.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Primary phone extension of the call queue.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Type of
              name: type
              param_attrs:
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is a primary number or extension.
                name: PRIMARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is an alternate number or extension.
                name: ALTERNATE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[CallForwardingNumbers]
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Location in which to call queue exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve setting for a rule for this call queue.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Call queue rule you are retrieving settings for.
          name: ruleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update a Selective Call Forwarding Rule''s settings for the designated
        Call Queue.

        A selective call forwarding rule for a call queue allows calls to be forwarded
        or not forwarded to the designated number, based on the defined criteria.

        Note that the list of existing call forward rules is available in the call
        queue''s call forwarding settings.

        Updating a selective call forwarding rule''s settings for a call queue requires
        a full administrator auth token with a scope of spark-admin:telephony_config_write.

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Update a Selective Call Forwarding Rule for a Call Queue
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-selective-call-forwarding-rule-for-a-call-queue
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/callForwarding/selectiveRules/{ruleId}
        http_method: PUT
      header: Update a Selective Call Forwarding Rule for a Call Queue
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the selective rule in the hunt group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Reflects if rule is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Name of the location's holiday schedule which determines when this
            selective call forwarding rule is in effect.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the location's business schedule which determines when this
            selective call forwarding rule is in effect.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Controls what happens when the rule matches including the destination
            number for the call forwarding.
          name: forwardTo
          param_attrs:
          - doc: Controls what happens when the rule matches.
            name: selection
            param_attrs:
            - doc: When the rule matches, forward to the destination for the hunt
                group.
              name: FORWARD_TO_DEFAULT_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, forward to the destination for this rule.
              name: FORWARD_TO_SPECIFIED_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, do not forward to another number.
              name: DO_NOT_FORWARD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Phone number used if selection is FORWARD_TO_SPECIFIED_NUMBER.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Settings related the rule matching based on incoming caller ID.
          name: callsFrom
          param_attrs:
          - doc: If CUSTOM, use customNumbers to specific which incoming caller ID
              values cause this rule to match. ANY means any incoming call matches
              assuming the rule is in effect based on the associated schedules.
            name: selection
            param_attrs:
            - doc: Rule matches for calls from any number.
              name: ANY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Rule matches based on the numbers and options in customNumbers.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Custom rules for matching incoming caller ID information.
            name: customNumbers
            param_attrs:
            - doc: Match if caller ID indicates the call is from a private number.
              name: privateNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Match if caller ID is unavailable.
              name: unavailableNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Array of number strings to be matched against incoming caller ID.
              name: numbers
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Settings related to the rule matching based on the destination number.
          name: callsTo
          param_attrs:
          - doc: Array of numbers to be matched against the calling destination number.
            name: numbers
            param_attrs:
            - doc: Only return call queues with matching primary phone number or extension.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Primary phone extension of the call queue.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Type of
              name: type
              param_attrs:
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is a primary number or extension.
                name: PRIMARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is an alternate number or extension.
                name: ALTERNATE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: array[CallForwardingNumbers]
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: Update call queue rule settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: New ID for the modified rule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this call queue exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update settings for a rule for this call queue.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Call queue rule you are updating settings for.
          name: ruleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete a Selective Call Forwarding Rule for the designated Call Queue.

        A selective call forwarding rule for a call queue allows calls to be forwarded
        or not forwarded to the designated number, based on the defined criteria.

        Note that the list of existing call forward rules is available in the call
        queue''s call forwarding settings.

        Deleting a selective call forwarding rule for a call queue requires a full
        administrator auth token with a scope of spark-admin:telephony_config_write.

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Delete a Selective Call Forwarding Rule for a Call Queue
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-selective-call-forwarding-rule-for-a-call-queue
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/callForwarding/selectiveRules/{ruleId}
        http_method: DELETE
      header: Delete a Selective Call Forwarding Rule for a Call Queue
      parameters_and_response:
        Query Parameters:
        - doc: Delete call queue rule from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this call queue exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the rule for this call queue.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Call queue rule you are deleting.
          name: ruleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Recording settings for the organization.

        Call Recording feature enables authorized agents to record any active call
        that Webex Contact Center manages.

        Retrieving call recording settings requires a full or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Call Recording Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-call-recording-settings
        endpoint: https://webexapis.com/v1/telephony/config/callRecording
        http_method: GET
      header: Get Call Recording Settings
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call recording settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Details of the organization.
          name: organization
          param_attrs: []
          param_object:
          - doc: A unique identifier for the organization.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the organization.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Whether or not the call recording is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A unique identifier for the vendor.
          name: vendorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique name for the vendor.
          name: vendorName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Url where can be found terms of service for the vendor.
          name: termsOfServiceUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Update Call Recording settings for the organization.

        Call Recording feature enables authorized agents to record any active call
        that Webex Contact Center manages.

        Updating call recording settings requires a full administrator auth token
        with a scope of spark-admin:telephony_config_write.

        NOTE: This API is for Cisco partners only.'
      documentation:
        doc: Update Call Recording Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-call-recording-settings
        endpoint: https://webexapis.com/v1/telephony/config/callRecording
        http_method: PUT
      header: Update Call Recording Settings
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not the call recording is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Query Parameters:
        - doc: Retrieve call recording settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Retrieve Call Recording Terms Of Service settings for the organization.

        Call Recording feature enables authorized agents to record any active call
        that Webex Contact Center manages.

        Retrieving call recording terms of service settings requires a full or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Call Recording Terms Of Service Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-call-recording-terms-of-service-settings
        endpoint: https://webexapis.com/v1/telephony/config/callRecording/vendors/{vendorId}/termsOfService
        http_method: GET
      header: Get Call Recording Terms Of Service Settings
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call recording terms of service details from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the vendor.
          name: vendorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique name for the vendor.
          name: vendorName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the call recording terms of service are enabled.
          name: termsOfServiceEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Url where can be found terms of service for the vendor.
          name: termsOfServiceUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Retrieve call recording terms of service details for the given vendor.
          name: vendorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update Call Recording Terms Of Service settings for the given vendor.

        Call Recording feature enables authorized agents to record any active call
        that Webex Contact Center manages.

        Updating call recording terms of service settings requires a full administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Call Recording Terms Of Service Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-call-recording-terms-of-service-settings
        endpoint: https://webexapis.com/v1/telephony/config/callRecording/vendors/{vendorId}/termsOfService
        http_method: PUT
      header: Update Call Recording Terms Of Service Settings
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not the call recording terms of service are enabled.
          name: termsOfServiceEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Query Parameters:
        - doc: Update call recording terms of service settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Update call recording terms of service settings for the given vendor.
          name: vendorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Validates that an incoming call can be routed.

        Dial plans route calls to on-premises destinations by use of trunks or route
        groups.

        They are configured globally for an enterprise and apply to all users, regardless
        of location.

        A dial plan also specifies the routing choice (trunk or route group) for calls
        that match any of its dial patterns.

        Specific dial patterns can be defined as part of your dial plan.

        Test call routing requires a full or write-only administrator auth token with
        a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Test Call Routing
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/test-call-routing
        endpoint: https://webexapis.com/v1/telephony/config/actions/testCallRouting/invoke
        http_method: POST
      header: Test Call Routing
      parameters_and_response:
        Body Parameters:
        - doc: This element is used to identify the originating party.  It can be
            user UUID or trunk UUID.
          name: originatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: USER or TRUNK.
          name: originatorType
          param_attrs:
          - doc: User
            name: USER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Connection between Webex Calling and the premises
            name: TRUNK
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: OriginatorType
          type_spec: required
        - doc: Only used when originatorType is TRUNK. This element could be a phone
            number or URI.
          name: originatorNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: This element specifies called party.  It can be any dialable string,
            for example, an ESN number, E.164 number, hosted user DN, extension, extension
            with location code, URL, FAC code.
          name: destination
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Query Parameters:
        - doc: Organization in which we are validating a call routing.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Only returned when originatorNumber is specified in the request.
          name: callSourceInfo
          param_attrs:
          - doc: The type of call source.
            name: callSourceType
            param_attrs:
            - doc: Indicates that the call source is a route list.
              name: ROUTE_LIST
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that the call source is a dial pattern.
              name: DIAL_PATTERN
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that the call source extension is unknown.
              name: UNKOWN_EXTENSION
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that the call source phone number is unknown.
              name: UNKOWN_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: CallSourceType
            type_spec: null
          - doc: When originatorType is trunk, originatorId is a valid trunk, this
              trunk belongs to a route group which is assigned to a route list with
              the name routeListA and originatorNumber is a number assigned to routeListA.
              routeListA is returned here. This element is returned when callSourceType
              is ROUTE_LIST.
            name: routeListName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Foute list ID.
            name: routeListId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: When originatorType is trunk, originatorId is a valid trunk with
              name trunkA, trunkA belongs to a route group which is assigned to a
              route list with name routeListA,  trunkA is also assigned to dialPlanA
              as routing choice, dialPlanA has dialPattern xxxx assigned. If the originatorNumber
              matches the dialPattern xxxx, dialPlanA is returned. This element is
              returned when callSourceType is DIAL_PATTERN.
            name: dialPlanName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: When originatorType is trunk, originatorId is a valid trunk with
              the name trunkA, trunkA belongs to a route group which is assigned to
              a route list with the name routeListA,  trunkA is also assigned to dialPlanA
              as routing choice, dialPlanA has dialPattern xxxx assigned. If the originatorNumber
              matches the dialPattern xxxx, dialPattern xxxx is returned. This element
              is returned when callSourceType is DIAL_PATTERN.
            name: dialPattern
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Dial plan ID.
            name: dialPlanId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: CallSourceInfo
          type_spec: null
        - doc: Matching destination type for the call.
          name: destinationType
          param_attrs:
          - doc: Matching destination is a person or workspace with details in the
              hostedAgent field.
            name: HOSTED_AGENT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Matching destination is a calling feature like auto-attendant or
              hunt group with details in the hostedFeature field.
            name: HOSTED_FEATURE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Matching destination routes into a separate PBX with details in the
              pbxUser field.
            name: PBX_USER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Matching destination routes into a PSTN phone number with details
              in the pstnNumber field.
            name: PSTN_NUMBER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Matching destination routes into a virtual extension with details
              in the virtualExtension field.
            name: VIRTUAL_EXTENSION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Matching destination routes into a virtual extension range with details
              in the virtualExtensionRange field.
            name: VIRTUAL_EXTENSION_RANGE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Matching destination routes into a route list with details in the
              routeList field.
            name: ROUTE_LIST
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Matching destination routes into a feature access code (FAC) with
              details in the featureAccessCode field.
            name: FAC
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Matching destination routes into an emergency service like Red Sky,
              with details in the emergency field.
            name: EMERGENCY
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The route is in a repair state with routing choice details in the
              repair field.
            name: REPAIR
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Target extension is unknown with routing choice details in the unknownExtension
              field.
            name: UNKNOWN_EXTENSION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The target phone number is unknown with routing choice details in
              the unknownNumber field.
            name: UNKNOWN_NUMBER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: DestinationType
          type_spec: null
        - doc: FAC code if destinationType is FAC. The routing address will be returned
            for all other destination types.
          name: routingAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Outside access code.
          name: outsideAccessCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: true if the call would be rejected.
          name: isRejected
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Returned when destinationType is HOSTED_AGENT.
          name: hostedAgent
          param_attrs:
          - doc: Person or workspace's ID.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type of agent for call destination.
            name: type
            param_attrs:
            - doc: Indicates that this object is a person.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a workspace that is not assigned to a specific person
                such as for a shared device in a common area.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: HostedAgentType
            type_spec: null
          - doc: Person or workspace's first name.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Person or workspace's last name.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of location for a person or workspace.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID for a person or workspace.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Person or workspace's phone number.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Person or workspace's extension.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: HostedAgent
          type_spec: null
        - doc: Returned when destinationType is HOSTED_FEATURE.
          name: hostedFeature
          param_attrs:
          - doc: Service instance type.
            name: type
            param_attrs:
            - doc: Destination is an auto attendant.
              name: AUTO_ATTENDANT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this destination is the Office (Broadworks) Anywhere
                feature.
              name: BROADWORKS_ANYWHERE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this destination is the Call Center feature.
              name: CALL_CENTER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this destination is the Contact Center Link feature.
              name: CONTACT_CENTER_LINK
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this destination is the Group Paging feature.
              name: GROUP_PAGING
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this destination is the Hunt Group feature.
              name: HUNT_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this destination is the Voice Messaging feature.
              name: VOICE_MESSAGING
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this destination is the Voice Mail Group feature.
              name: VOICE_MAIL_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: ServiceType
            type_spec: null
          - doc: Service instance name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Service instance ID.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location of the service instance.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID of the service instance.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: User or place's phone number.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: User or place's extension.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: HostedFeature
          type_spec: null
        - doc: Returned when destinationType is PBX_USER.
          name: pbxUser
          param_attrs:
          - doc: Dial plan name that the called string matches.
            name: dialPlanName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Dial plan ID.
            name: dialPlanId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Dial pattern that the called string matches.
            name: dialPattern
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Trunk name.
            name: trunkName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Trunk ID.
            name: trunkId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group name.
            name: routeGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group ID.
            name: routeGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location of the trunk; required if trunkName is returned.
            name: trunkLocationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID of the trunk; required if trunkName is returned.
            name: trunkLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: PbxUser
          type_spec: null
        - doc: Returned when destinationType is PSTN_NUMBER.
          name: pstnNumber
          param_attrs:
          - doc: Trunk name.
            name: trunkName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Trunk ID.
            name: trunkId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group name.
            name: routeGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group ID.
            name: routeGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location of the trunk; required if trunkName is returned.
            name: trunkLocationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID of the trunk; required if trunkName is returned.
            name: trunkLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: PstnNumber
          type_spec: null
        - doc: Returned when destinationType is VIRTUAL_EXTENSION.
          name: virtualExtension
          param_attrs:
          - doc: Virtual extension ID.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Virtual extension display first name.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Virtual extension display last name.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Virtual extension display name.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Extension that the virtual extension is associated with.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number that the virtual extension is associated with.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location name if the virtual extension is at the location level,
              empty if it is at customer level.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID if the virtual extension is at the location level, empty
              if it is at customer level.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Trunk name.
            name: trunkName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Trunk ID.
            name: trunkId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group name.
            name: routeGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group ID.
            name: routeGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location of the trunk; required if trunkName is returned.
            name: trunkLocationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID of the trunk; required if trunkName is returned.
            name: trunkLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: VirtualExtension
          type_spec: null
        - doc: Returned when destinationType is VIRTUAL_EXTENSION_RANGE.
          name: virtualExtensionRange
          param_attrs:
          - doc: Virtual extension range ID.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Virtual extension range name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Prefix that the virtual extension range is associated with (Note:
              Standard mode must have leading ''+'' in prefix; BCD/Enhanced mode can
              have any valid prefix).'
            name: prefix
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Pattern associated with the virtual extension range.
            name: pattern
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location name if the virtual extension range is at the location level,
              empty if it is at customer level.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID if the virtual extension range is at the location level,
              empty if it is at customer level.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Trunk name.
            name: trunkName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Trunk ID.
            name: trunkId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group name.
            name: routeGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group ID.
            name: routeGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location of the trunk; required if trunkName is returned.
            name: trunkLocationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID of the trunk; required if trunkName is returned.
            name: trunkLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: VirtualExtensionRange
          type_spec: null
        - doc: Returned when destinationType is ROUTE_LIST.
          name: routeList
          param_attrs:
          - doc: Route list ID.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route list name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the route group the route list is associated with.
            name: routeGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ID of the route group the route list is associated with.
            name: routeGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location name of the route list.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID of the route list.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: RouteList
          type_spec: null
        - doc: Returned when destinationType is FAC.
          name: featureAccessCode
          param_attrs:
          - doc: FAC code.
            name: code
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: FAC name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: FeatureAccessCode
          type_spec: null
        - doc: Returned when destinationType is EMERGENCY.
          name: emergency
          param_attrs:
          - doc: Indicates if RedSky is in use.
            name: isRedSky
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Trunk name.
            name: trunkName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Trunk id.
            name: trunkId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group name.
            name: routeGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group ID.
            name: routeGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location of the trunk; required if trunkName is returned.
            name: trunkLocationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID of the trunk; required if trunkName is returned.
            name: trunkLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Emergency
          type_spec: null
        - doc: Returned when destinationType is REPAIR.
          name: repair
          param_attrs:
          - doc: Trunk name.
            name: trunkName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Trunk ID.
            name: trunkId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group name.
            name: routeGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group ID.
            name: routeGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location of the trunk; required if trunkName is returned.
            name: trunkLocationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID of the trunk; required if trunkName is returned.
            name: trunkLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Repair
          type_spec: null
        - doc: Returned when destinationType is UNKNOWN_EXTENSION.
          name: unknownExtension
          param_attrs:
          - doc: Trunk name.
            name: trunkName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Trunk ID.
            name: trunkId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group name.
            name: routeGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group ID.
            name: routeGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location of the trunk; required if trunkName is returned.
            name: trunkLocationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID of the trunk; required if trunkName is returned.
            name: trunkLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: UnknownExtension
          type_spec: null
        - doc: Returned when destinationType is UNKNOWN_NUMBER.
          name: unknownNumber
          param_attrs:
          - doc: Trunk name.
            name: trunkName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Trunk ID.
            name: trunkId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group name.
            name: routeGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route group ID.
            name: routeGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location of the trunk; required if trunkName is returned.
            name: trunkLocationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID of the trunk; required if trunkName is returned.
            name: trunkLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: UnknownNumber
          type_spec: null
    - doc: 'Validate the List of Extensions.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Validate the List of Extensions
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/validate-the-list-of-extensions
        endpoint: https://webexapis.com/v1/telephony/config/actions/validateExtensions/invoke
        http_method: POST
      header: Validate the List of Extensions
      parameters_and_response:
        Body Parameters:
        - doc: 'Array of Strings of IDs of the Extensions.

            Possible values: 12345, 3456'
          name: extensions
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: Validate Extension for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Validate extensions for a specific location.

        Validating extensions requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Validate Extensions
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/validate-extensions
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/actions/validateExtensions/invoke
        http_method: POST
      header: Validate Extensions
      parameters_and_response:
        Body Parameters:
        - doc: Array of extensions that will be validated.
          name: extensions
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        Query Parameters:
        - doc: Validate extensions for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Status of the validated array of extensions
          name: status
          param_attrs:
          - doc: Indicates that all extensions were validated.
            name: OK
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates that not all extensions were validated.
            name: ERRORS
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Array of extensions statuses.
          name: extensionStatus
          param_attrs:
          - doc: Unique extension which will be validated at the location level.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State of the extension after it was validated.
            name: state
            param_attrs:
            - doc: Extension is valid.
              name: VALID
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Extension already assigned to another group.
              name: DUPLICATE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Extension already exists in the request body and was already verified.
              name: DUPLICATE_IN_LIST
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Extension is invalid.
              name: INVALID
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Error code of the state in case extension is not valid.
            name: errorCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Message assigned to the error code.
            name: message
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[ExtensionStatusObject]
          type_spec: null
        URI Parameters:
        - doc: Validate extensions for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all calling Hunt Groups for the organization.

        Hunt groups can route incoming calls to a group of people or workspaces. You
        can even configure a pattern to route to a whole group.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Hunt Groups
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-hunt-groups
        endpoint: https://webexapis.com/v1/telephony/config/huntGroups
        http_method: GET
      header: Read the List of Hunt Groups
      parameters_and_response:
        Query Parameters:
        - doc: List hunt groups for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return hunt groups with matching location ID.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Only return hunt groups with the matching name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only return hunt groups with the matching primary phone number or extension.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of hunt groups.
          name: huntGroups
          param_attrs:
          - doc: A unique identifier for the hunt group.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique name for the hunt group.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the location for the hunt group.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ID of location for hunt group.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Primary phone number of the hunt group.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Primary phone extension of the hunt group.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the hunt group is enabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[ListHuntGroupObject]
          type_spec: null
    - doc: 'Create new Hunt Groups for the given location.

        Hunt groups can route incoming calls to a group of people, workspaces or virtual
        lines. You can even configure a pattern to route to a whole group.

        Creating a hunt group requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Create a Hunt Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-hunt-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/huntGroups
        http_method: POST
      header: Create a Hunt Group
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the hunt group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Primary phone number of the hunt group. Either phone number or extension
            are required.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Primary phone extension of the hunt group. Either phone number or extension
            are required.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language code.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: First name to be shown when calls are forwarded out of this hunt group.
            Defaults to ..
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name to be shown when calls are forwarded out of this hunt group.
            Defaults to the phone number if set, otherwise defaults to call group
            name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Time zone for the hunt group.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Policy controlling how calls are routed to agents.
          name: callPolicies
          param_attrs:
          - doc: Call routing policy to use to dispatch calls to agents.
            name: policy
            param_attrs:
            - doc: This option cycles through all agents after the last agent that
                took a call. It sends calls to the next available agent. This is supported
                for SKILL_BASED.
              name: CIRCULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Send the call through the queue of agents in order, starting from
                the top each time. This is supported for SKILL_BASED.
              name: REGULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to all agents at once
              name: SIMULTANEOUS
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to the agent that has been idle the longest. If they
                don't answer, proceed to the next agent who has been idle the second
                longest, and so on until the call is answered. This is supported for
                SKILL_BASED.
              name: UNIFORM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to idle agents based on percentages you assign to each
                agent (up to 100%).
              name: WEIGHTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: HuntPolicySelection
            type_spec: required
          - doc: 'If false, then the option is treated as "Advance when busy": the
              hunt group won''t ring agents when they''re on a call and will advance
              to the next agent. If a hunt group agent has call waiting enabled and
              the call is advanced to them, then the call will wait until that hunt
              group agent isn''t busy.'
            name: waitingEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Settings for when the call into the hunt group is not answered.
            name: noAnswer
            param_attrs:
            - doc: If enabled, advance to next agent after the nextAgentRings has
                occurred.
              name: nextAgentEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Number of rings before call will be forwarded if unanswered and
                nextAgentEnabled is true.
              name: nextAgentRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: If true, forwards unanswered calls to the destination after the
                number of rings occurs.
              name: forwardEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Number of rings before forwarding calls if forwardEnabled is true.
              name: numberOfRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Destination if forwardEnabled is True.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If forwardEnabled is true, enables and disables sending incoming
                to destination number's voicemail if the destination is an internal
                phone number and that number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            param_object: []
            type: object
            type_spec: required
          - doc: Settings for sending calls to a destination of your choice if your
              phone is not connected to the network for any reason, such as power
              outage, failed Internet connection, or wiring problem.
            name: businessContinuity
            param_attrs:
            - doc: Divert calls when unreachable, unanswered calls divert to a defined
                phone number. This could apply to phone calls that aren't answered
                due to a network outage, or all agents of the hunt group are busy
                and the Advance when the busy option is also enabled. For persons
                only using a mobile device, calls won't be diverted, if there is a
                network outage.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Destination for Business Continuity.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates enabled or disabled state of sending diverted incoming
                calls to the destination number's voicemail if the destination is
                an internal phone number and that number has the voicemail service
                enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            param_object: []
            type: object
            type_spec: required
          param_object: []
          type: PostHuntGroupCallPolicyObject
          type_spec: required
        - doc: People, workspaces and virtual lines that are eligible to  receive
            calls.
          name: agents
          param_attrs:
          - doc: ID of person, workspace or virtual line.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Weight of person, workspace or virtual line. Only applied when call
              policy is WEIGHTED.
            name: weight
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[PostPersonPlaceVirtualLineHuntGroupObject]
          type_spec: required
        - doc: Whether or not the hunt group is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Query Parameters:
        - doc: Create the hunt group for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created hunt group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Create the hunt group for the given location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete the designated Hunt Group.

        Hunt groups can route incoming calls to a group of people or workspaces. You
        can even configure a pattern to route to a whole group.

        Deleting a hunt group requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Hunt Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-hunt-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/huntGroups/{huntGroupId}
        http_method: DELETE
      header: Delete a Hunt Group
      parameters_and_response:
        Query Parameters:
        - doc: Delete the hunt group from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location from which to delete a hunt group.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the hunt group with the matching ID.
          name: huntGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Hunt Group details.

        Hunt groups can route incoming calls to a group of people, workspaces or virtual
        lines. You can even configure a pattern to route to a whole group.

        Retrieving hunt group details requires a full or read-only administrator auth
        token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Details for a Hunt Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-hunt-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/huntGroups/{huntGroupId}
        http_method: GET
      header: Get Details for a Hunt Group
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve hunt group settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the hunt group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique name for the hunt group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the hunt group is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Primary phone number of the hunt group.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Extension of the hunt group.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the hunt group has the distinctive ring option enabled.
          name: distinctiveRing
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The alternate numbers feature allows you to assign multiple phone numbers
            or extensions to a hunt group. Each number will reach the same greeting
            and each menu will function identically to the main number. The alternate
            numbers option enables you to have up to ten (10) phone numbers ring into
            the hunt group.
          name: alternateNumbers
          param_attrs:
          - doc: Alternate phone number for the hunt group.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Ring pattern for when this alternate number is called. Only available
              when distinctiveRing is enabled for the hunt group.
            name: ringPattern
            param_attrs:
            - doc: Normal incoming ring pattern.
              name: NORMAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of two long rings.
              name: LONG_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of two short rings, followed by a short ring.
              name: SHORT_SHORT_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of a short ring, followed by a long ring,
                followed by a short ring.
              name: SHORT_LONG_SHORT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: RingPatternObject
            type_spec: null
          param_object: []
          type: array[AlternateNumbersWithPattern]
          type_spec: null
        - doc: Language for hunt group.
          name: language
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language code for hunt group.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: First name to be shown when calls are forwarded out of this hunt group.
            Defaults to ..
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name to be shown when calls are forwarded out of this hunt group.
            Defaults to phone number if set, otherwise defaults to call group name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Time zone for the hunt group.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Policy controlling how calls are routed to agents.
          name: callPolicies
          param_attrs:
          - doc: Call routing policy to use to dispatch calls to agents.
            name: policy
            param_attrs:
            - doc: This option cycles through all agents after the last agent that
                took a call. It sends calls to the next available agent. This is supported
                for SKILL_BASED.
              name: CIRCULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Send the call through the queue of agents in order, starting from
                the top each time. This is supported for SKILL_BASED.
              name: REGULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to all agents at once
              name: SIMULTANEOUS
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to the agent that has been idle the longest. If they
                don't answer, proceed to the next agent who has been idle the second
                longest, and so on until the call is answered. This is supported for
                SKILL_BASED.
              name: UNIFORM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to idle agents based on percentages you assign to each
                agent (up to 100%).
              name: WEIGHTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: HuntPolicySelection
            type_spec: null
          - doc: 'If false, then the option is treated as "Advance when busy": the
              hunt group won''t ring agents when they''re on a call and will advance
              to the next agent. If a hunt group agent has call waiting enabled and
              the call is advanced to them, then the call will wait until that hunt
              group agent isn''t busy.'
            name: waitingEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Settings for when the call into the hunt group is not answered.
            name: noAnswer
            param_attrs: []
            param_object:
            - doc: If enabled, advance to next agent after the nextAgentRings has
                occurred.
              name: nextAgentEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of rings before call will be forwarded if unanswered and
                nextAgentEnabled is true.
              name: nextAgentRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: If true, forwards unanswered calls to the destination after the
                number of rings occurs.
              name: forwardEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination if forwardEnabled is True.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Number of rings before forwarding calls if forwardEnabled is true.
              name: numberOfRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: System-wide maximum number of rings allowed for numberOfRings setting.
              name: systemMaxNumberOfRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: If destinationVoicemailEnabled is true, enables and disables sending
                incoming to destination number's voicemail if the destination is an
                internal phone number and that number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Settings for sending calls to a destination of your choice if your
              phone is not connected to the network for any reason, such as power
              outage, failed Internet connection, or wiring problem.
            name: businessContinuity
            param_attrs: []
            param_object:
            - doc: Divert calls when unreachable, unanswered calls divert to a defined
                phone number. This could apply to phone calls that aren't answered
                due to a network outage, or all agents of the hunt group are busy
                and the Advance when the busy option is also enabled. For persons
                only using a mobile device, calls won't be diverted, if there is a
                network outage.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for Business Continuity.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates enabled or disabled state of sending diverted incoming
                calls to the destination number's voicemail if the destination is
                an internal phone number and that number has the voicemail service
                enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: GetHuntGroupCallPolicyObject
          type_spec: null
        - doc: People, workspaces and virtual lines that are eligible to  receive
            calls.
          name: agents
          param_attrs:
          - doc: ID of person, workspace or virtual line.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of person, workspace or virtual line.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of person, workspace or virtual line.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number of person, workspace or virtual line.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Extension of person, workspace or virtual line.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Weight of person, workspace or virtual line. Only applied when call
              policy is WEIGHTED.
            name: weight
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[GetPersonPlaceVirtualLineHuntGroupObject]
          type_spec: null
        - doc: Whether or not the hunt group is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Retrieve settings for a hunt group in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for the hunt group with this identifier.
          name: huntGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated Hunt Group.

        Hunt groups can route incoming calls to a group of people, workspaces or virtual
        lines. You can even configure a pattern to route to a whole group.

        Updating a hunt group requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Update a Hunt Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-hunt-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/huntGroups/{huntGroupId}
        http_method: PUT
      header: Update a Hunt Group
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not the hunt group is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Unique name for the hunt group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Primary phone number of the hunt group.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Primary phone extension of the hunt group.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the hunt group has the distinctive ring option enabled.
          name: distinctiveRing
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The alternate numbers feature allows you to assign multiple phone numbers
            or extensions to a hunt group. Each number will reach the same greeting
            and each menu will function identically to the main number. The alternate
            numbers option enables you to have up to ten (10) phone numbers ring into
            the hunt group.
          name: alternateNumbers
          param_attrs:
          - doc: Alternate phone number for the hunt group.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Ring pattern for when this alternate number is called. Only available
              when distinctiveRing is enabled for the hunt group.
            name: ringPattern
            param_attrs:
            - doc: Normal incoming ring pattern.
              name: NORMAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of two long rings.
              name: LONG_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of two short rings, followed by a short ring.
              name: SHORT_SHORT_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming ring pattern of a short ring, followed by a long ring,
                followed by a short ring.
              name: SHORT_LONG_SHORT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: RingPatternObject
            type_spec: null
          param_object: []
          type: array[AlternateNumbersWithPattern]
          type_spec: null
        - doc: Language code.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: First name to be shown when calls are forwarded out of this hunt group.
            Defaults to ..
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name to be shown when calls are forwarded out of this hunt group.
            Defaults to the phone number if set, otherwise defaults to call group
            name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Time zone for the hunt group.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Policy controlling how calls are routed to agents.
          name: callPolicies
          param_attrs:
          - doc: Call routing policy to use to dispatch calls to agents.
            name: policy
            param_attrs:
            - doc: This option cycles through all agents after the last agent that
                took a call. It sends calls to the next available agent. This is supported
                for SKILL_BASED.
              name: CIRCULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Send the call through the queue of agents in order, starting from
                the top each time. This is supported for SKILL_BASED.
              name: REGULAR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to all agents at once
              name: SIMULTANEOUS
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to the agent that has been idle the longest. If they
                don't answer, proceed to the next agent who has been idle the second
                longest, and so on until the call is answered. This is supported for
                SKILL_BASED.
              name: UNIFORM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Sends calls to idle agents based on percentages you assign to each
                agent (up to 100%).
              name: WEIGHTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: HuntPolicySelection
            type_spec: required
          - doc: 'If false, then the option is treated as "Advance when busy": the
              hunt group won''t ring agents when they''re on a call and will advance
              to the next agent. If a hunt group agent has call waiting enabled and
              the call is advanced to them, then the call will wait until that hunt
              group agent isn''t busy.'
            name: waitingEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Settings for when the call into the hunt group is not answered.
            name: noAnswer
            param_attrs:
            - doc: If enabled, advance to next agent after the nextAgentRings has
                occurred.
              name: nextAgentEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Number of rings before call will be forwarded if unanswered and
                nextAgentEnabled is true.
              name: nextAgentRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: If true, forwards unanswered calls to the destination after the
                number of rings occurs.
              name: forwardEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Number of rings before forwarding calls if forwardEnabled is true.
              name: numberOfRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Destination if forwardEnabled is True.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If forwardEnabled is true, enables and disables sending incoming
                to destination number's voicemail if the destination is an internal
                phone number and that number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            param_object: []
            type: object
            type_spec: required
          - doc: Settings for sending calls to a destination of your choice if your
              phone is not connected to the network for any reason, such as power
              outage, failed Internet connection, or wiring problem.
            name: businessContinuity
            param_attrs:
            - doc: Divert calls when unreachable, unanswered calls divert to a defined
                phone number. This could apply to phone calls that aren't answered
                due to a network outage, or all agents of the hunt group are busy
                and the Advance when the busy option is also enabled. For persons
                only using a mobile device, calls won't be diverted, if there is a
                network outage.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Destination for Business Continuity.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates enabled or disabled state of sending diverted incoming
                calls to the destination number's voicemail if the destination is
                an internal phone number and that number has the voicemail service
                enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            param_object: []
            type: object
            type_spec: required
          param_object: []
          type: PostHuntGroupCallPolicyObject
          type_spec: null
        - doc: People, workspaces and virtual lines that are eligible to  receive
            calls.
          name: agents
          param_attrs:
          - doc: ID of person, workspace or virtual line.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Weight of person, workspace or virtual line. Only applied when call
              policy is WEIGHTED.
            name: weight
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[PostPersonPlaceVirtualLineHuntGroupObject]
          type_spec: null
        - doc: Whether or not the hunt group is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: Update hunt group settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Update the hunt group for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update settings for the hunt group with the matching ID.
          name: huntGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Forwarding settings for the designated Hunt Group including
        the list of call forwarding rules.

        Retrieving call forwarding settings for a hunt group requires a full or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Call Forwarding Settings for a Hunt Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-call-forwarding-settings-for-a-hunt-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/huntGroups/{huntGroupId}/callForwarding
        http_method: GET
      header: Get Call Forwarding Settings for a Hunt Group
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve hunt group forwarding settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Settings related to Always, Busy, and No Answer call forwarding.
          name: callForwarding
          param_attrs: []
          param_object:
          - doc: Settings for forwarding all incoming calls to the destination you
              choose.
            name: always
            param_attrs: []
            param_object:
            - doc: Always call forwarding is enabled or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for "Always" call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Selectively forward calls to a designated number, depending on criteria
              rules. You'll need to have at least one rule for forwarding applied
              for call forwarding to be active.
            name: selective
            param_attrs: []
            param_object:
            - doc: Busy call forwarding is enabled or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for Busy call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Rules for selectively forwarding calls.
            name: rules
            param_attrs:
            - doc: Unique ID for the rule.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Unique name of rule.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Comma-separated list of incoming call numbers that, when matched,
                will not be forwarded. A Limit of 12 numbers is allowed. Use Any private
                Number in the comma-separated value to indicate rules that match incoming
                calls from a private number. Use Any unavailable number in the comma-separated
                value to match incoming calls from an unavailable number.
              name: callFrom
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Comma-separated list of the types of numbers being matched for
                incoming call destination.
              name: callsTo
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Number to which calls will be forwarded if the rule is of type
                "Forward To" and the incoming call is matched.
              name: forwardTo
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Reflects if rule is enabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[CallForwardRulesGet]
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Location in which this hunt group exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Read the call forwarding settings for this hunt group.
          name: huntGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update Call Forwarding settings for the designated Hunt Group.

        Updating call forwarding settings for a hunt group requires a full administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Call Forwarding Settings for a Hunt Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-call-forwarding-settings-for-a-hunt-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/huntGroups/{huntGroupId}/callForwarding
        http_method: PUT
      header: Update Call Forwarding Settings for a Hunt Group
      parameters_and_response:
        Body Parameters:
        - doc: Settings related to Always, Busy, and No Answer call forwarding.
          name: callForwarding
          param_attrs:
          - doc: Settings for forwarding all incoming calls to the destination you
              choose.
            name: always
            param_attrs:
            - doc: Always call forwarding is enabled or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for Always call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Selectively forward calls to a designated number, depending on criteria
              rules. You'll need to have at least one rule for forwarding applied
              for call forwarding to be active.
            name: selective
            param_attrs:
            - doc: Busy call forwarding is enabled or disabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for Busy call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Rules for selectively forwarding calls.
            name: rules
            param_attrs:
            - doc: Unique ID for the rule.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Reflects if rule is enabled.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[CallForwardRulesSet]
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: Update hunt group forwarding settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location from which this hunt group exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update call forwarding settings for this hunt group.
          name: huntGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create a Selective Call Forwarding Rule for the designated Hunt Group.

        A selective call forwarding rule for a hunt group allows calls to be forwarded
        or not forwarded to the designated number, based on the defined criteria.

        Note that the list of existing call forward rules is available in the hunt
        group''s call forwarding settings.

        Creating a selective call forwarding rule for a hunt group requires a full
        administrator auth token with a scope of spark-admin:telephony_config_write.

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Create a Selective Call Forwarding Rule for a Hunt Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-selective-call-forwarding-rule-for-a-hunt-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/huntGroups/{huntGroupId}/callForwarding/selectiveRules
        http_method: POST
      header: Create a Selective Call Forwarding Rule for a Hunt Group
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the selective rule in the hunt group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Reflects if rule is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Name of the location's holiday schedule which determines when this
            selective call forwarding rule is in effect.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the location's business schedule which determines when this
            selective call forwarding rule is in effect.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Controls what happens when the rule matches including the destination
            number for the call forwarding.
          name: forwardTo
          param_attrs:
          - doc: Controls what happens when the rule matches.
            name: selection
            param_attrs:
            - doc: When the rule matches, forward to the destination for the hunt
                group.
              name: FORWARD_TO_DEFAULT_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, forward to the destination for this rule.
              name: FORWARD_TO_SPECIFIED_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, do not forward to another number.
              name: DO_NOT_FORWARD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Phone number used if selection is FORWARD_TO_SPECIFIED_NUMBER.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: object
          type_spec: null
        - doc: Settings related to the rule matching based on incoming caller ID.
          name: callsFrom
          param_attrs:
          - doc: If CUSTOM, use customNumbers to specify which incoming caller ID
              values cause this rule to match. ANY means any incoming call matches
              assuming the rule is in effect based on the associated schedules.
            name: selection
            param_attrs:
            - doc: Rule matches for calls from any number.
              name: ANY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Rule matches based on the numbers and options in customNumbers.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Custom rules for matching incoming caller ID information.
            name: customNumbers
            param_attrs:
            - doc: Match if caller ID indicates the call is from a private number.
              name: privateNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Match if caller ID is unavailable.
              name: unavailableNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Array of number strings to be matched against incoming caller ID.
              name: numbers
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: required
          param_object: []
          type: object
          type_spec: required
        - doc: Settings related to the rule matching based on the destination number.
          name: callsTo
          param_attrs:
          - doc: Array of numbers to be matched against the calling destination number.
            name: numbers
            param_attrs:
            - doc: Only return call queues with matching primary phone number or extension.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Primary phone extension of the call queue.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Type of
              name: type
              param_attrs:
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is a primary number or extension.
                name: PRIMARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is an alternate number or extension.
                name: ALTERNATE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: array[CallForwardingNumbers]
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        Query Parameters:
        - doc: Create the hunt group rule for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created hunt group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this hunt group exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Create the rule for this hunt group.
          name: huntGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a Selective Call Forwarding Rule''s settings for the designated
        Hunt Group.

        A selective call forwarding rule for a hunt group allows calls to be forwarded
        or not forwarded to the designated number, based on the defined criteria.

        Note that the list of existing call forward rules is available in the hunt
        group''s call forwarding settings.

        Retrieving a selective call forwarding rule''s settings for a hunt group requires
        a full or read-only administrator auth token with a scope of spark-admin:telephony_config_read.

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Get Selective Call Forwarding Rule for a Hunt Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-selective-call-forwarding-rule-for-a-hunt-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/huntGroups/{huntGroupId}/callForwarding/selectiveRules/{ruleId}
        http_method: GET
      header: Get Selective Call Forwarding Rule for a Hunt Group
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve hunt group rule settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique name for the selective rule in the hunt group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique ID for the rule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Reflects if rule is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Name of the location's holiday schedule which determines when this
            selective call forwarding rule is in effect.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the location's business schedule which determines when this
            selective call forwarding rule is in effect.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Controls what happens when the rule matches including the destination
            number for the call forwarding.
          name: forwardTo
          param_attrs: []
          param_object:
          - doc: Controls what happens when the rule matches.
            name: selection
            param_attrs:
            - doc: When the rule matches, forward to the destination for the hunt
                group.
              name: FORWARD_TO_DEFAULT_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, forward to the destination for this rule.
              name: FORWARD_TO_SPECIFIED_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, do not forward to another number.
              name: DO_NOT_FORWARD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Phone number used if selection is FORWARD_TO_SPECIFIED_NUMBER.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings related to the rule matching based on incoming caller ID.
          name: callsFrom
          param_attrs: []
          param_object:
          - doc: If CUSTOM, use customNumbers to specify which incoming caller ID
              values cause this rule to match. ANY means any incoming call matches
              assuming the rule is in effect based on the associated schedules.
            name: selection
            param_attrs:
            - doc: Rule matches for calls from any number.
              name: ANY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Rule matches based on the numbers and options in customNumbers.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Custom rules for matching incoming caller ID information.
            name: customNumbers
            param_attrs: []
            param_object:
            - doc: Match if caller ID indicates the call is from a private number.
              name: privateNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Match if caller ID is unavailable.
              name: unavailableNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Array of number strings to be matched against incoming caller ID.
              name: numbers
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings related to the rule matching based on the destination number.
          name: callsTo
          param_attrs: []
          param_object:
          - doc: Array of numbers to be matched against the calling destination number.
            name: numbers
            param_attrs:
            - doc: Only return call queues with matching primary phone number or extension.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Primary phone extension of the call queue.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Type of
              name: type
              param_attrs:
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is a primary number or extension.
                name: PRIMARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is an alternate number or extension.
                name: ALTERNATE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: array[CallForwardingNumbers]
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Location in which this hunt group exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for a rule for this hunt group.
          name: huntGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Hunt group rule you are retrieving settings for.
          name: ruleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update a Selective Call Forwarding Rule''s settings for the designated
        Hunt Group.

        A selective call forwarding rule for a hunt group allows calls to be forwarded
        or not forwarded to the designated number, based on the defined criteria.

        Note that the list of existing call forward rules is available in the hunt
        group''s call forwarding settings.

        Updating a selective call forwarding rule''s settings for a hunt group requires
        a full administrator auth token with a scope of spark-admin:telephony_config_write.

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Update a Selective Call Forwarding Rule for a Hunt Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-selective-call-forwarding-rule-for-a-hunt-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/huntGroups/{huntGroupId}/callForwarding/selectiveRules/{ruleId}
        http_method: PUT
      header: Update a Selective Call Forwarding Rule for a Hunt Group
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the selective rule in the hunt group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Reflects if rule is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Name of the location's holiday schedule which determines when this
            selective call forwarding rule is in effect.
          name: holidaySchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the location's business schedule which determines when this
            selective call forwarding rule is in effect.
          name: businessSchedule
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Controls what happens when the rule matches including the destination
            number for the call forwarding.
          name: forwardTo
          param_attrs:
          - doc: Controls what happens when the rule matches.
            name: selection
            param_attrs:
            - doc: When the rule matches, forward to the destination for the hunt
                group.
              name: FORWARD_TO_DEFAULT_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, forward to the destination for this rule.
              name: FORWARD_TO_SPECIFIED_NUMBER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: When the rule matches, do not forward to another number.
              name: DO_NOT_FORWARD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Phone number used if selection is FORWARD_TO_SPECIFIED_NUMBER.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Settings related the rule matching based on incoming caller ID.
          name: callsFrom
          param_attrs:
          - doc: If CUSTOM, use customNumbers to specific which incoming caller ID
              values cause this rule to match. ANY means any incoming call matches
              assuming the rule is in effect based on the associated schedules.
            name: selection
            param_attrs:
            - doc: Rule matches for calls from any number.
              name: ANY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Rule matches based on the numbers and options in customNumbers.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Custom rules for matching incoming caller ID information.
            name: customNumbers
            param_attrs:
            - doc: Match if caller ID indicates the call is from a private number.
              name: privateNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Match if caller ID is unavailable.
              name: unavailableNumberEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Array of number strings to be matched against incoming caller ID.
              name: numbers
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Settings related to the rule matching based on the destination number.
          name: callsTo
          param_attrs:
          - doc: Array of numbers to be matched against the calling destination number.
            name: numbers
            param_attrs:
            - doc: Only return call queues with matching primary phone number or extension.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Primary phone extension of the call queue.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Type of
              name: type
              param_attrs:
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is a primary number or extension.
                name: PRIMARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that the given phoneNumber or extension associated
                  with this rule's containing object is an alternate number or extension.
                name: ALTERNATE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: array[CallForwardingNumbers]
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: Update hunt group rule settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: New ID for the modified rule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this hunt group exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update settings for a rule for this hunt group.
          name: huntGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Hunt group rule you are updating settings for.
          name: ruleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete a Selective Call Forwarding Rule for the designated Hunt Group.

        A selective call forwarding rule for a hunt group allows calls to be forwarded
        or not forwarded to the designated number, based on the defined criteria.

        Note that the list of existing call forward rules is available in the hunt
        group''s call forwarding settings.

        Deleting a selective call forwarding rule for a hunt group requires a full
        administrator auth token with a scope of spark-admin:telephony_config_write.

        NOTE: The Call Forwarding Rule ID will change upon modification of the Call
        Forwarding Rule name.'
      documentation:
        doc: Delete a Selective Call Forwarding Rule for a Hunt Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-selective-call-forwarding-rule-for-a-hunt-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/huntGroups/{huntGroupId}/callForwarding/selectiveRules/{ruleId}
        http_method: DELETE
      header: Delete a Selective Call Forwarding Rule for a Hunt Group
      parameters_and_response:
        Query Parameters:
        - doc: Delete hunt group rule from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this hunt group exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the rule for this hunt group.
          name: huntGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Hunt group rule you are deleting.
          name: ruleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve intercept location details for a customer location.

        Intercept incoming or outgoing calls for persons in your organization. If
        this is enabled, calls are either routed to a designated number the person
        chooses, or to the person''s voicemail.

        Retrieving intercept location details requires a full, user or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Location Intercept
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-location-intercept
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/intercept
        http_method: GET
      header: Get Location Intercept
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve intercept location details for a customer location.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Enable/disable location intercept. Enable this feature to override
            any Location's Call Intercept settings that person configures.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Inbound call details.
          name: incoming
          param_attrs: []
          param_object:
          - doc: Select inbound call options.
            name: type
            param_attrs:
            - doc: Intercept all inbound calls.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Allow all inbound calls.
              name: ALLOW_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Enable/disable to route voice mail.
            name: voicemailEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Announcements details.
            name: announcements
            param_attrs: []
            param_object:
            - doc: Greeting type for location intercept.
              name: greeting
              param_attrs:
              - doc: Play default greeting.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Play custom greeting.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: If set to CUSTOM for greeting, filename of previously uploaded
                file.
              name: fileName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Settings for new number announcement.
              name: newNumber
              param_attrs: []
              param_object:
              - doc: Enable/disable to play new number announcement.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Incoming destination phone number to be announced.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              type: object
              type_spec: null
            - doc: Transfer number details.
              name: zeroTransfer
              param_attrs: []
              param_object:
              - doc: Enable/disable to transfer to phone number.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Transfer phone number to be called when '0' is dialed.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              type: object
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: Outbound Call details
          name: outgoing
          param_attrs: []
          param_object:
          - doc: Outbound call modes
            name: type
            param_attrs:
            - doc: Intercept all outbound calls.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Allow local outbound calls.
              name: ALLOW_LOCAL_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Enable/disable to route all outbound calls to phone number.
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: If enabled, set outgoing destination phone number.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Retrieve intercept details for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modifies the intercept location details for a customer location.

        Intercept incoming or outgoing calls for users in your organization. If this
        is enabled, calls are either routed to a designated number the user chooses,
        or to the user''s voicemail.

        Modifying the intercept location details requires a full, user administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Put Location Intercept
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/put-location-intercept
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/intercept
        http_method: PUT
      header: Put Location Intercept
      parameters_and_response:
        Body Parameters:
        - doc: Enable/disable location intercept. Enable this feature to override
            any location's Call Intercept settings that a person configures.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Inbound call details.
          name: incoming
          param_attrs:
          - doc: Select inbound call options.
            name: type
            param_attrs:
            - doc: Set to INTERCEPT_ALL to intercept all inbound calls.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Set to ALLOW_ALL to allow all inbound calls.
              name: ALLOW_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Set to true to route voice mail.
            name: voicemailEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Announcements details.
            name: announcements
            param_attrs:
            - doc: Greeting type for location intercept.
              name: greeting
              param_attrs:
              - doc: Set to DEFAULT to play default greeting.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Set to CUSTOM to play custom greeting.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: If set to CUSTOM for greeting, filename of previously uploaded
                file.
              name: fileName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Details for new number.
              name: newNumber
              param_attrs:
              - doc: Set to true to play new number announcement.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: If enabled, set destination phone number.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: object
              type_spec: null
            - doc: Transfer number details.
              name: zeroTransfer
              param_attrs:
              - doc: Set to true to transfer to phone number.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Transfer phone number to be called when '0' is dialed.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: object
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Outbound Call details
          name: outgoing
          param_attrs:
          - doc: Outbound call options.
            name: type
            param_attrs:
            - doc: Set to INTERCEPT_ALL to intercept all outbound calls.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Set to ALLOW_LOCAL_ONLY to allow local outbound calls.
              name: ALLOW_LOCAL_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Set to true to route all outbound calls to phone number.
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: If enabled, set valid outgoing destination phone number.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: Modifies the intercept location details for a customer location.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Modifies the intercept details for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get current configuration for routing unknown extensions to the Premises
        as internal calls

        If some users in a location are registered to a PBX, retrieve the setting
        to route unknown extensions (digits that match the extension length) to the
        PBX.

        Retrieving the internal dialing configuration requires a full or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the Internal Dialing configuration for a location
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-internal-dialing-configuration-for-a-location
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/internalDialing
        http_method: GET
      header: Read the Internal Dialing configuration for a location
      parameters_and_response:
        Query Parameters:
        - doc: List route identities for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: When enabled, calls made by users at the location to an unknown extension
            (between 2-6 digits) are routed to the selected route group/trunk as premises
            calls.
          name: enableUnknownExtensionRoutePolicy
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The selected route group/trunk as premises calls.
          name: unknownExtensionRouteIdentity
          param_attrs:
          - doc: ID of the route type.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the route identity.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type associated with the identity.
            name: type
            param_attrs:
            - doc: Route group must include at least one trunk with a maximum of 10
                trunks per route group.
              name: ROUTE_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Connection between Webex Calling and the premises.
              name: TRUNK
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: RouteType
            type_spec: null
          param_object: []
          type: RouteIdentity
          type_spec: null
        URI Parameters:
        - doc: location for which internal calling configuration is being requested
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify current configuration for routing unknown extensions to the premise
        as internal calls

        If some users in a location are registered to a PBX, enable the setting to
        route unknown extensions (digits that match the extension length) to the PBX.

        Editing the internal dialing configuration requires a full administrator auth
        token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Modify the Internal Dialing configuration for a location
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/modify-the-internal-dialing-configuration-for-a-location
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/internalDialing
        http_method: PUT
      header: Modify the Internal Dialing configuration for a location
      parameters_and_response:
        Body Parameters:
        - doc: When enabled, calls made by users at the location to an unknown extension
            (between 2-6 digits) are routed to the selected route group/trunk as premises
            calls.
          name: enableUnknownExtensionRoutePolicy
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Type associated with the identity.
          name: unknownExtensionRouteIdentity
          param_attrs:
          - doc: ID of the route type.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Type associated with the identity.
            name: type
            param_attrs:
            - doc: Route group must include at least one trunk with a maximum of 10
                trunks per route group.
              name: ROUTE_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Connection between Webex Calling and the premises.
              name: TRUNK
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: RouteType
            type_spec: required
          param_object: []
          type: UnknownExtensionRouteIdentity
          type_spec: null
        Query Parameters:
        - doc: List route identities for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: location for which internal calling configuration is being requested
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Shows Webex Calling details for a location, by ID.

        Specifies the location ID in the locationId parameter in the URI.

        Searching and viewing locations in your organization requires an administrator
        auth token with the spark-admin:telephony_config_read scope.'
      documentation:
        doc: Get Location Webex Calling Details
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-location-webex-calling-details
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}
        http_method: GET
      header: Get Location Webex Calling Details
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve Webex Calling location attributes for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The name of the location.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location's phone announcement language.
          name: announcementLanguage
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location calling line information.
          name: callingLineId
          param_attrs: []
          param_object:
          - doc: Group calling line ID name. By default the Org name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Directory Number / Main number in E.164 Format.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Connection details are only returned for local PSTN types of TRUNK
            or ROUTE_GROUP.
          name: connection
          param_attrs: []
          param_object:
          - doc: Webex Calling location only suppports TRUNK and ROUTE_GROUP connection
              type.
            name: type
            param_attrs:
            - doc: Route group must include at least one trunk with a maximum of 10
                trunks per route group.
              name: ROUTE_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Connection between Webex Calling and the premises.
              name: TRUNK
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: RouteType
            type_spec: null
          - doc: A unique identifier of route type.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: External Caller ID Name value. Unicode characters.
          name: externalCallerIdName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit on the number of people at the location, Read-Only.
          name: userLimit
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Emergency Location Identifier for a location. Set this field to provide
            the SIP access network information to the provider which will be used
            to populate the SIP P-Access-Network-Info header. This is helpful to establish
            the location of a device when you make an emergency call.
          name: pAccessNetworkInfo
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Must dial to reach an outside line, default is None.
          name: outsideDialDigit
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Must dial a prefix when calling between locations having same extension
            within same location.
          name: routingPrefix
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: IP Address, hostname, or domain. Read-Only.
          name: defaultDomain
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Chargeable number for the line placing the call. When this is set,
            all calls placed from this location will include a P-Charge-Info header
            with the selected number in the SIP INVITE.
          name: chargeNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Retrieve Webex Calling location attributes for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Enable a location by adding it to Webex Calling. This add Webex Calling
        support to a

        location created created using the POST /v1/locations API.

        Locations are used to support calling features which can be defined at the
        location level.

        This API requires a full administrator auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Enable a Location for Webex Calling
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/enable-a-location-for-webex-calling
        endpoint: https://webexapis.com/v1/telephony/config/locations
        http_method: POST
      header: Enable a Location for Webex Calling
      parameters_and_response:
        Body Parameters:
        - doc: A unique identifier for the location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The name of the location.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Time zone associated with this location. Refer to this link (https://developer.webex.com/docs/api/guides/webex-for-broadworks-developers-guide#webex-meetings-site-timezone)
            for the format.
          name: timeZone
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Default email language.
          name: preferredLanguage
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Location's phone announcement language.
          name: announcementLanguage
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The address of the location.
          name: address
          param_attrs:
          - doc: Address 1 of the location.
            name: address1
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Address 2 of the location.
            name: address2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: City of the location.
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: State code of the location.
            name: state
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Postal code of the location.
            name: postalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: ISO-3166 2-Letter country code of the location.
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: object
          type_spec: required
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Lists Webex Calling locations for an organization with Webex Calling details.

        Searching and viewing locations with Webex Calling details in your

        organization require an administrator auth token with the

        spark-admin:telephony_config_read scope.'
      documentation:
        doc: List Locations Webex Calling Details
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/list-locations-webex-calling-details
        endpoint: https://webexapis.com/v1/telephony/config/locations
        http_method: GET
      header: List Locations Webex Calling Details
      parameters_and_response:
        Query Parameters:
        - doc: List locations for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of locations in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specify the offset from the first result that you want to fetch.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: List locations whose name contains this string.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sort the list of locations based on name, either asc or desc.
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of locations.
          name: locations
          param_attrs:
          - doc: A unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The name of the location.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Must dial to reach an outside line, default is None.
            name: outsideDialDigit
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Must dial a prefix when calling between locations having the same
              extension within the same location.
            name: routingPrefix
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location calling line information.
            name: callingLineId
            param_attrs: []
            param_object:
            - doc: Group calling line ID name. By default the Org name.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Directory Number / Main number in E.164 Format.
              name: phoneNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          - doc: True if E911 setup is required.
            name: e911SetupRequired
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[ListLocationObject]
          type_spec: null
    - doc: 'Update Webex Calling details for a location, by ID.

        Specifies the location ID in the locationId parameter in the URI.

        Modifying the connection via API is only supported for the local PSTN types
        of TRUNK and ROUTE_GROUP.

        Updating a location in your organization requires an administrator auth token
        with the spark-admin:telephony_config_write scope.'
      documentation:
        doc: Update Location Webex Calling Details
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-location-webex-calling-details
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}
        http_method: PUT
      header: Update Location Webex Calling Details
      parameters_and_response:
        Body Parameters:
        - doc: Location's phone announcement language.
          name: announcementLanguage
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location calling line information.
          name: callingLineId
          param_attrs:
          - doc: Group calling line ID name. By default the Org name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Directory Number / Main number in E.164 Format.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Connection details can only be modified to and from local PSTN types
            of TRUNK and ROUTE_GROUP.
          name: connection
          param_attrs:
          - doc: Webex Calling location API only supports setting TRUNK or ROUTE_GROUP.
            name: type
            param_attrs:
            - doc: Route group must include at least one trunk with a maximum of 10
                trunks per route group.
              name: ROUTE_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Connection between Webex Calling and the premises.
              name: TRUNK
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: RouteType
            type_spec: null
          - doc: A unique identifier of route type.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Denve' (string) - External Caller ID Name value. Unicode characters.
          name: externalCallerIdName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location Identifier.
          name: pAccessNetworkInfo
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Must dial to reach an outside line. Default is None.
          name: outsideDialDigit
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Must dial a prefix when calling between locations having same extension
            within same location; should be numeric.
          name: routingPrefix
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Chargeable number for the line placing the call. When this is set,
            all calls placed from this location will include a P-Charge-Info header
            with the selected number in the SIP INVITE.
          name: chargeNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: Updating Webex Calling location attributes for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Updating Webex Calling location attributes for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Generates an example password using the effective password settings for
        the location. If you don''t specify anything in the generate field or don''t
        provide a request body, then you will receive a SIP password by default.

        Used while creating a trunk and shouldn''t be used anywhere else.

        Generating an example password requires a full or write-only administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Generate example password for Location
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/generate-example-password-for-location
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/actions/generatePassword/invoke
        http_method: POST
      header: Generate example password for Location
      parameters_and_response:
        Body Parameters:
        - doc: 'password settings array.

            SIP password setting'
          name: generate
          param_attrs: []
          param_object: []
          type: array[PasswordGenerate]
          type_spec: null
        Query Parameters:
        - doc: Organization to which the location belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Example password.
          name: exampleSipPassword
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location for which example password has to be generated.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve the location''s outgoing call settings.

        A location''s outgoing call settings allow you to determine the types of calls
        the people/workspaces at the location are allowed to make, as well as configure
        the default calling permission for each call type at the location.

        Retrieving a location''s outgoing call settings requires a full, user or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Location Outgoing Permission
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-location-outgoing-permission
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/outgoingPermission
        http_method: GET
      header: Get Location Outgoing Permission
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve outgoing call settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of calling permissions.
          name: callingPermissions
          param_attrs:
          - doc: Below are the call type values.
            name: callType
            param_attrs:
            - doc: Controls calls within your own company.
              name: INTERNAL_CALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls to a telephone number that is billed for all arriving
                calls instead of incurring charges to the originating caller, usually
                free of charge from a landline.
              name: TOLL_FREE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls to locations outside of the Long Distance areas
                that require an international calling code before the number is dialed.
              name: INTERNATIONAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls requiring Operator Assistance.
              name: OPERATOR_ASSISTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls to Directory Assistant companies that require a
                charge to connect the call.
              name: CHARGEABLE_DIRECTORY_ASSISTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls to carrier-specific number assignments to special
                services or destinations.
              name: SPECIAL_SERVICES_I
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls to carrier-specific number assignments to special
                services or destinations.
              name: SPECIAL_SERVICES_II
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls used to provide information or entertainment for
                a fee charged directly to the caller.
              name: PREMIUM_SERVICES_I
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls used to provide information or entertainment for
                a fee charged directly to the caller.
              name: PREMIUM_SERVICES_II
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls that are National.
              name: NATIONAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Allows to configure settings for each call type.
            name: action
            param_attrs:
            - doc: Callers at this location can make these types of calls.
              name: ALLOW
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Callers at this location can't make these types of calls.
              name: BLOCK
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Callers must enter the authorization code that you set before placing
                an outgoing call.
              name: AUTH_CODE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If you select this, then these types of calls are transferred automatically
                to the configured auto transfer number autoTransferNumber1.
              name: TRANSFER_NUMBER_1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If you select this, then these types of calls are transferred automatically
                to the configured auto transfer number autoTransferNumber2.
              name: TRANSFER_NUMBER_2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If you select this, then these types of calls are transferred automatically
                to the configured auto transfer number autoTransferNumber3.
              name: TRANSFER_NUMBER_3
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: If enabled, allow the person to transfer or forward internal calls.
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[CallingPermissionObject]
          type_spec: null
        URI Parameters:
        - doc: Retrieve outgoing call settings for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the location''s outgoing call settings.

        Location''s outgoing call settings allows you to determine the types of calls
        the people/workspaces at this location are allowed to make and configure the
        default calling permission for each call type at a location.

        Updating a location''s outgoing call settings requires a full administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Location Outgoing Permission
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-location-outgoing-permission
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/outgoingPermission
        http_method: PUT
      header: Update Location Outgoing Permission
      parameters_and_response:
        Body Parameters:
        - doc: Array specifying the subset of calling permissions to be updated.
          name: callingPermissions
          param_attrs:
          - doc: Below are the call type values.
            name: callType
            param_attrs:
            - doc: Controls calls within your own company.
              name: INTERNAL_CALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls to a telephone number that is billed for all arriving
                calls instead of incurring charges to the originating caller, usually
                free of charge from a landline.
              name: TOLL_FREE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls to locations outside of the Long Distance areas
                that require an international calling code before the number is dialed.
              name: INTERNATIONAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls requiring Operator Assistance.
              name: OPERATOR_ASSISTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls to Directory Assistant companies that require a
                charge to connect the call.
              name: CHARGEABLE_DIRECTORY_ASSISTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls to carrier-specific number assignments to special
                services or destinations.
              name: SPECIAL_SERVICES_I
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls to carrier-specific number assignments to special
                services or destinations.
              name: SPECIAL_SERVICES_II
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls used to provide information or entertainment for
                a fee charged directly to the caller.
              name: PREMIUM_SERVICES_I
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls used to provide information or entertainment for
                a fee charged directly to the caller.
              name: PREMIUM_SERVICES_II
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Controls calls that are National.
              name: NATIONAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Allows to configure settings for each call type.
            name: action
            param_attrs:
            - doc: Callers at this location can make these types of calls.
              name: ALLOW
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Callers at this location can't make these types of calls.
              name: BLOCK
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Callers must enter the authorization code that you set before placing
                an outgoing call.
              name: AUTH_CODE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If you select this, then these types of calls are transferred automatically
                to the configured auto transfer number autoTransferNumber1.
              name: TRANSFER_NUMBER_1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If you select this, then these types of calls are transferred automatically
                to the configured auto transfer number autoTransferNumber2.
              name: TRANSFER_NUMBER_2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If you select this, then these types of calls are transferred automatically
                to the configured auto transfer number autoTransferNumber3.
              name: TRANSFER_NUMBER_3
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: If enabled, allow the person to transfer or forward internal calls.
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          param_object: []
          type: array[CallingPermissionObject]
          type_spec: null
        Query Parameters:
        - doc: Update outgoing call settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Update outgoing call settings for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get the transfer numbers for the outbound permission in a location.

        Outbound permissions can specify which transfer number an outbound call should
        transfer to via the action field.

        Retrieving an auto transfer number requires a full, user or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Outgoing Permission Auto Transfer Number
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-outgoing-permission-auto-transfer-number
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/outgoingPermission/autoTransferNumbers
        http_method: GET
      header: Get Outgoing Permission Auto Transfer Number
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve auto transfer number for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Calls placed meeting the criteria in an outbound rule whose action
            is TRANSFER_NUMBER_1 will be transferred to this number.
          name: autoTransferNumber1
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Calls placed meeting the criteria in an outbound rule whose action
            is TRANSFER_NUMBER_2 will be transferred to this number.
          name: autoTransferNumber2
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Calls placed meeting the criteria in an outbound rule whose action
            is TRANSFER_NUMBER_3 will be transferred to this number.
          name: autoTransferNumber3
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Retrieve auto transfer number for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modifies the transfer numbers for the outbound permission in a location.

        Outbound permissions can specify which transfer number an outbound call should
        transfer to via the action field.

        Updating auto transfer number requires a full administrator auth token with
        a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Put Outgoing Permission Auto Transfer Number
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/put-outgoing-permission-auto-transfer-number
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/outgoingPermission/autoTransferNumbers
        http_method: PUT
      header: Put Outgoing Permission Auto Transfer Number
      parameters_and_response:
        Body Parameters:
        - doc: Calls placed meeting the criteria in an outbound rule whose action
            is TRANSFER_NUMBER_1 will be transferred to this number.
          name: autoTransferNumber1
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Calls placed meeting the criteria in an outbound rule whose action
            is TRANSFER_NUMBER_2 will be transferred to this number.
          name: autoTransferNumber2
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Calls placed meeting the criteria in an outbound rule whose action
            is TRANSFER_NUMBER_3 will be transferred to this number.
          name: autoTransferNumber3
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: Updating auto transfer number for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Updating auto transfer number for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve access codes details for a customer location.

        Use Access Codes to bypass the set permissions for all persons/workspaces
        at this location.

        Retrieving access codes details requires a full, user or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Outgoing Permission Location Access Code
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-outgoing-permission-location-access-code
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/outgoingPermission/accessCodes
        http_method: GET
      header: Get Outgoing Permission Location Access Code
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve access codes details for a customer location.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Access code details
          name: accessCodes
          param_attrs: []
          param_object:
          - doc: Access code number.
            name: code
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Access code description.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Retrieve access codes details for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Add a new access code for the given location for a customer.

        Use Access Codes to bypass the set permissions for all persons/workspaces
        at this location.

        Creating an access code for the given location requires a full or user administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Create Outgoing Permission a new access code for a customer location
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-outgoing-permission-a-new-access-code-for-a-customer-location
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/outgoingPermission/accessCodes
        http_method: POST
      header: Create Outgoing Permission a new access code for a customer location
      parameters_and_response:
        Body Parameters:
        - doc: Access code details
          name: accessCodes
          param_attrs:
          - doc: Create new access code number.
            name: code
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Set access code description.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: Add new access code for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Add new access code for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes the access code details for a particular location for a customer.

        Use Access Codes to bypass the set permissions for all persons/workspaces
        at this location.

        Modifying the access code location details requires a full administrator auth
        token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete Outgoing Permission Access Code Location
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-outgoing-permission-access-code-location
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/outgoingPermission/accessCodes
        http_method: PUT
      header: Delete Outgoing Permission Access Code Location
      parameters_and_response:
        Body Parameters:
        - doc: Array of string to delete access codes. For example, ["1234","2345"]
          name: deleteCodes
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        Query Parameters:
        - doc: Deletes the access code details for a customer location.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Deletes the access code details for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all Paging Groups for the organization.

        Group Paging allows a person to place a one-way call or group page to up to
        75 people and/or workspaces by

        dialing a number or extension assigned to a specific paging group. The Group
        Paging service makes a simultaneous call to all the assigned targets.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Paging Groups
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-paging-groups
        endpoint: https://webexapis.com/v1/telephony/config/paging
        http_method: GET
      header: Read the List of Paging Groups
      parameters_and_response:
        Query Parameters:
        - doc: List paging groups for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count. Default
            is 2000
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects. Default
            is 0
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Return only paging groups with matching location ID. Default is all
            locations
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return only paging groups with the matching name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return only paging groups with matching primary phone number or extension.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of paging groups.
          name: locationPaging
          param_attrs:
          - doc: A unique identifier for the paging group.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique name for the paging group. Minimum length is 1. Maximum length
              is 30.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Paging group phone number. Minimum length is 1. Maximum length is
              23. Either phoneNumber or extension is mandatory.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Paging group extension. Minimum length is 2. Maximum length is 6.
              Either phoneNumber or extension is mandatory.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of location for paging group.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Id of location for paging group.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Flag to indicate toll free number.
            name: tollFreeNumber
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[ListPagingGroupObject]
          type_spec: null
    - doc: 'Create a new Paging Group for the given location.

        Group Paging allows a one-way call or group page to up to 75 people, workspaces
        and virtual lines by

        dialing a number or extension assigned to a specific paging group. The Group
        Paging service makes a simultaneous call to all the assigned targets.

        Creating a paging group requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Create a new Paging Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-new-paging-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/paging
        http_method: POST
      header: Create a new Paging Group
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the paging group. Minimum length is 1. Maximum length
            is 30.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Paging group phone number. Minimum length is 1. Maximum length is 23.  Either
            phoneNumber or extension is mandatory.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Paging group extension. Minimum length is 2. Maximum length is 6.  Either
            phoneNumber or extension is mandatory.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language code.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: First name that displays when a group page is performed. Minimum length
            is 1. Maximum length is 30.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name that displays when a group page is performed. Minimum length
            is 1. Maximum length is 30.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Determines what is shown on target users caller ID when a group page
            is performed. If true shows page originator ID.
          name: originatorCallerIdEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: An array of people, workspace, and virtual lines IDs who can originate
            pages to this paging group.
          name: originators
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: An array of people, workspaces and virtual lines IDs will add to a
            paging group as paging call targets.
          name: targets
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: Create the paging group for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created paging group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Create the paging group for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete the designated Paging Group.

        Group Paging allows a person to place a one-way call or group page to up to
        75 people and/or workspaces by

        dialing a number or extension assigned to a specific paging group. The Group
        Paging service makes a simultaneous call to all the assigned targets.

        Deleting a paging group requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Paging Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-paging-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/paging/{pagingId}
        http_method: DELETE
      header: Delete a Paging Group
      parameters_and_response:
        Query Parameters:
        - doc: Delete the paging group from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location from which to delete a paging group.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the paging group with the matching ID.
          name: pagingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Paging Group details.

        Group Paging allows a person, place or virtual line a one-way call or group
        page to up to 75 people and/or workspaces and/or virtual line by

        dialing a number or extension assigned to a specific paging group. The Group
        Paging service makes a simultaneous call to all the assigned targets.

        Retrieving paging group details requires a full or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Details for a Paging Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-paging-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/paging/{pagingId}
        http_method: GET
      header: Get Details for a Paging Group
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve paging group settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the paging group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the paging group is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Unique name for the paging group. Minimum length is 1. Maximum length
            is 30.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Paging group phone number. Minimum length is 1. Maximum length is 23.
            Either phoneNumber or extension is mandatory.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Paging group extension. Minimum length is 2. Maximum length is 6. Either
            phoneNumber or extension is mandatory.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Flag to indicate toll free number.
          name: tollFreeNumber
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Paging language. Minimum length is 1. Maximum length is 40.
          name: language
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language code.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: First name that displays when a group page is performed. Minimum length
            is 1. Maximum length is 30.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name that displays when a group page is performed. Minimum length
            is 1. Maximum length is 30.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Determines what is shown on target users caller ID when a group page
            is performed. If true shows page originator ID.
          name: originatorCallerIdEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: An array of people, workspaces and virtual lines ID's who may originate
            pages to this paging group.
          name: originators
          param_attrs:
          - doc: Agents ID.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Agents first name. Minimum length is 1. Maximum length is 30.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Agents last name. Minimum length is 1. Maximum length is 30.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type of the person, workspace or virtual line.
            name: type
            param_attrs:
            - doc: Indicates that this object is a person.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a workspace, formerly known as a
                place.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a virtual line.
              name: VIRTUAL_LINE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Agents phone number. Minimum length is 1. Maximum length is 23.  Either
              phoneNumber or extension is mandatory.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Agents extension. Minimum length is 2. Maximum length is 6.  Either
              phoneNumber or extension is mandatory.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[GetPagingGroupAgentObject]
          type_spec: null
        - doc: An array of people, workspaces and virtual lines ID's that are added
            to paging group as paging call targets.
          name: targets
          param_attrs:
          - doc: Agents ID.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Agents first name. Minimum length is 1. Maximum length is 30.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Agents last name. Minimum length is 1. Maximum length is 30.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type of the person, workspace or virtual line.
            name: type
            param_attrs:
            - doc: Indicates that this object is a person.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a workspace, formerly known as a
                place.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates that this object is a virtual line.
              name: VIRTUAL_LINE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Agents phone number. Minimum length is 1. Maximum length is 23.  Either
              phoneNumber or extension is mandatory.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Agents extension. Minimum length is 2. Maximum length is 6.  Either
              phoneNumber or extension is mandatory.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[GetPagingGroupAgentObject]
          type_spec: null
        URI Parameters:
        - doc: Retrieve settings for a paging group in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for the paging group with this identifier.
          name: pagingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated Paging Group.

        Group Paging allows a person to place a one-way call or group page to up to
        75 people, workspaces and virtual lines by

        dialing a number or extension assigned to a specific paging group. The Group
        Paging service makes a simultaneous call to all the assigned targets.

        Updating a paging group requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Update a Paging Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-paging-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/paging/{pagingId}
        http_method: PUT
      header: Update a Paging Group
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not the paging group is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Unique name for the paging group. Minimum length is 1. Maximum length
            is 30.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Paging group phone number. Minimum length is 1. Maximum length is 23.  Either
            phoneNumber or extension is mandatory.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Paging group extension. Minimum length is 2. Maximum length is 6.  Either
            phoneNumber or extension is mandatory.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language code.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: First name to be shown when calls are forwarded out of this paging
            group. Defaults to ".".
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Last name to be shown when calls are forwarded out of this paging group.
            Defaults to the phone number if set, otherwise defaults to call group
            name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Determines what is shown on target users caller ID when a group page
            is performed. If true shows page originator ID.
          name: originatorCallerIdEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: An array of people and/or workspaces, who may originate pages to this
            paging group.
          name: originators
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: People, including workspaces, that are added to paging group as paging
            call targets.
          name: targets
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: Update paging group settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Update settings for a paging group in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update settings for the paging group with this identifier.
          name: pagingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Adds a specified set of phone numbers to a location for an organization.

        Each location has a set of phone numbers that can be assigned to people, workspaces,
        or features. Phone numbers must follow E.164 format for all countries, except
        for the United States, which can also follow the National format. Active phone
        numbers are in service.

        Adding a phone number to a location requires a full administrator auth token
        with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Add Phone Numbers to a location
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/add-phone-numbers-to-a-location
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/numbers
        http_method: POST
      header: Add Phone Numbers to a location
      parameters_and_response:
        Body Parameters:
        - doc: List of phone numbers that need to be added.
          name: phoneNumbers
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        - doc: State of the phone numbers.
          name: state
          param_attrs:
          - doc: Active state.
            name: '''ACTIVE'''
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Inactive state
            name: '''INACTIVE'''
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: State
          type_spec: required
        Query Parameters:
        - doc: Organization of the Route Group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: LocationId to which numbers should be added.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Activate the specified set of phone numbers in a location for an organization.

        Each location has a set of phone numbers that can be assigned to people, workspaces,
        or features. Phone numbers must follow E.164 format for all countries, except
        for the United States, which can also follow the National format. Active phone
        numbers are in service.

        Activating a phone number in a location requires a full administrator auth
        token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Activate Phone Numbers in a location
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/activate-phone-numbers-in-a-location
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/numbers
        http_method: PUT
      header: Activate Phone Numbers in a location
      parameters_and_response:
        Body Parameters:
        - doc: List of phone numbers that need to be added.
          name: phoneNumbers
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        Query Parameters:
        - doc: Organization of the Route Group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: LocationId to which numbers should be added.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Remove the specified set of phone numbers from a location for an organization.

        Each location has a set of phone numbers that can be assigned to people, workspaces,
        or features. Phone numbers must follow E.164 format for all countries, except
        for the United States, which can also follow the National format. Active phone
        numbers are in service.

        Removing a phone number from a location requires a full administrator auth
        token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Remove phone numbers from a location
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/remove-phone-numbers-from-a-location
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/numbers
        http_method: DELETE
      header: Remove phone numbers from a location
      parameters_and_response:
        Body Parameters:
        - doc: List of phone numbers that need to be added.
          name: phoneNumbers
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        - doc: State of the phone numbers.
          name: state
          param_attrs:
          - doc: Active state.
            name: '''ACTIVE'''
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Inactive state
            name: '''INACTIVE'''
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: State
          type_spec: required
        Query Parameters:
        - doc: Organization of the Route Group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: LocationId to which numbers should be added.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all the phone numbers for the given organization along with the status
        and owner (if any).

        PSTN phone numbers are associated with a specific location and can be active/inactive
        and assigned/unassigned.

        The owner is the person, workspace, or feature to which the number is assigned.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Phone Numbers for an Organization with Given Criterias
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-phone-numbers-for-an-organization-with-given-criterias
        endpoint: https://webexapis.com/v1/telephony/config/numbers
        http_method: GET
      header: Get Phone Numbers for an Organization with Given Criterias
      parameters_and_response:
        Query Parameters:
        - doc: List numbers for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of phone numbers for this location within the given
            organization. The maximum length is 36.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of phone numbers returned to this maximum count. Default
            is 2000.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching phone numbers.
            Default is 0.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Search for this phoneNumber.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Search among the available phone numbers. This parameter cannot be
            used along with ownerType parameter when set to true.
          name: available
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Sort the list of phone numbers based on the following:lastName,dn,extension.
            Default sort will be based on number and extension in an ascending order
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of phone numbers that is owned by given ownerName.
            Maximum length is 255.
          name: ownerName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Returns only the matched number/extension entries assigned to the feature
            with specified uuid/broadsoftId.
          name: ownerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Returns the list of phone numbers that are of given ownerType. Possible
            input values
          name: ownerType
          param_attrs:
          - doc: ''
            name: PEOPLE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: PLACE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: AUTO_ATTENDANT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: CALL_QUEUE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: GROUP_PAGING
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: HUNT_GROUP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: VOICE_MESSAGING
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: BROADWORKS_ANYWHERE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: CONTACT_CENTER_LINK
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: ROUTE_LIST
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: VOICEMAIL_GROUP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Returns the list of PSTN phone numbers with the given extension.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Returns the filtered list of PSTN phone numbers that contains given
            type of numbers. This parameter cannot be used along with available or
            state.
          name: numberType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Returns the filtered list of PSTN phone numbers that are of given phoneNumberType.
          name: phoneNumberType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Returns the list of PSTN phone numbers with matching state.
          name: state
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Returns the overall count of the PSTN phone numbers along with other
            details for given organization.
          name: details
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Returns the list of toll free phone numbers.
          name: tollFreeNumbers
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Returns the list of restricted non geographical numbers.
          name: restrictedNonGeoNumbers
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: Array of phone numbers.
          name: phoneNumbers
          param_attrs:
          - doc: A unique identifier for the PSTN phone number.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Extension for a PSTN phone number.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number's state.
            name: state
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type of phone number.
            name: phoneNumberType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates if the phone number is used as location clid.
            name: mainNumber
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Indicates if a phone number is a toll free number.
            name: tollFreeNumber
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: ''
            name: location
            param_attrs: []
            param_object:
            - doc: ID of location for phone number.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of the location for phone number
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          - doc: ''
            name: owner
            param_attrs: []
            param_object:
            - doc: ID of the owner to which PSTN Phone number is assigned.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Type of the PSTN phone number's owner
              name: type
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: First name of the PSTN phone number's owner
              name: firstName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Last name of the PSTN phone number's owner
              name: lastName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: NumberListGetObject
          type_spec: null
    - doc: 'Lists all Manage Numbers jobs for the given organization in order of most
        recent one to oldest one irrespective of its status.

        The public API only supports initiating jobs which move numbers between locations.

        Via Control Hub they can initiate both the move and delete, so this listing
        can show both.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:telephony_config_read.'
      documentation:
        doc: List Manage Numbers Jobs
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/list-manage-numbers-jobs
        endpoint: https://webexapis.com/v1/telephony/config/jobs/numbers/manageNumbers
        http_method: GET
      header: List Manage Numbers Jobs
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve list of Manage Number jobs for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start at the zero-based offset in the list of jobs. Default is 0.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Limit the number of jobs returned to this maximum count. Default is
            2000.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: Lists all jobs for the customer in order of most recent one to oldest
            one irrespective of its status.
          name: items
          param_attrs:
          - doc: Job name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier of the job.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Job type.
            name: jobType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier to track the flow of HTTP requests.
            name: trackingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier to identify which user has run the job.
            name: sourceUserId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier to identify the customer who has run the job.
            name: sourceCustomerId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier to identify the customer for which the job was
              run.
            name: targetCustomerId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier to identify the instance of the job.
            name: instanceId
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Displays the most recent step's execution status. Contains execution
              statuses of all the steps involved in the execution of the job.
            name: jobExecutionStatus
            param_attrs:
            - doc: Unique identifier that identifies each instance of the job.
              name: id
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Last updated time (in UTC format) post one of the step execution
                completion.
              name: lastUpdated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Displays status for overall steps that are part of the job.
              name: statusMessage
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Exit Code for a job.
              name: exitCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Job creation time in UTC format.
              name: createdTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Time lapsed since the job execution started.
              name: timeElapsed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[JobExecutionStatusObject1]
            type_spec: null
          - doc: Indicates the most recent status (STARTING, STARTED, COMPLETED, FAILED)
              of the job at the time of invocation.
            name: latestExecutionStatus
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates operation type that was carried out.
            name: operationType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique location identifier for which the job was run.
            name: sourceLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique location identifier for which the numbers have been moved.
            name: targetLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Job statistics.
            name: counts
            param_attrs:
            - doc: Indicates the total number of phone numbers requested to be moved.
              name: totalNumbers
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates the total number of phone numbers successfully deleted.
              name: numbersDeleted
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates the total number of phone numbers successfully moved.
              name: numbersMoved
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates the total number of phone numbers failed.
              name: numbersFailed
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            param_object: []
            type: CountObject
            type_spec: null
          param_object: []
          type: array[StartJobResponse]
          type_spec: null
    - doc: 'Starts the numbers move from one location to another location. Although
        jobs can do both MOVE and DELETE actions internally, only MOVE is supported
        publicly.

        In order to move a number,

        For example, you can move from Cisco PSTN to Cisco PSTN, but you cannot move
        from Cisco PSTN to a location with Cloud Connected PSTN.

        This API requires a full administrator auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Initiate Move Number Jobs
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/initiate-move-number-jobs
        endpoint: https://webexapis.com/v1/telephony/config/jobs/numbers/manageNumbers
        http_method: POST
      header: Initiate Move Number Jobs
      parameters_and_response:
        Body Parameters:
        - doc: Indicates the kind of operation to be carried out.
          name: operation
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The target location within organization where the unassigned numbers
            will be moved from the source location.
          name: targetLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Indicates the numbers to be moved from source to target locations.
          name: numberList
          param_attrs:
          - doc: The source location of the numbers to be moved.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Indicates the numbers to be moved from one location to another location.
            name: numbers
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: required
          param_object: []
          type: array[numberItem]
          type_spec: required
        Response Properties:
        - doc: Job name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier of the job.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Job type.
          name: jobType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to track the flow of HTTP requests.
          name: trackingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify which user has run the job.
          name: sourceUserId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the customer who has run the job.
          name: sourceCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the customer for which the job was run.
          name: targetCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the instance of the job.
          name: instanceId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Displays the most recent step's execution status. Contains execution
            statuses of all the steps involved in the execution of the job.
          name: jobExecutionStatus
          param_attrs:
          - doc: Unique identifier that identifies each instance of the job.
            name: id
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Last updated time (in UTC format) post one of the step execution
              completion.
            name: lastUpdated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Displays status for overall steps that are part of the job.
            name: statusMessage
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Exit Code for a job.
            name: exitCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Job creation time in UTC format.
            name: createdTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Time lapsed since the job execution started.
            name: timeElapsed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[JobExecutionStatusObject1]
          type_spec: null
        - doc: Indicates the most recent status (STARTING, STARTED, COMPLETED, FAILED)
            of the job at the time of invocation.
          name: latestExecutionStatus
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates operation type that was carried out.
          name: operationType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique location identifier for which the job was run.
          name: sourceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique location identifier for which the numbers have been moved.
          name: targetLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Job statistics.
          name: counts
          param_attrs:
          - doc: Indicates the total number of phone numbers requested to be moved.
            name: totalNumbers
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers successfully deleted.
            name: numbersDeleted
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers successfully moved.
            name: numbersMoved
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers failed.
            name: numbersFailed
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: CountObject
          type_spec: null
    - doc: 'Returns the status and other details of the job.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Manage Numbers Job Status
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-manage-numbers-job-status
        endpoint: https://webexapis.com/v1/telephony/config/jobs/numbers/manageNumbers/{jobId}
        http_method: GET
      header: Get Manage Numbers Job Status
      parameters_and_response:
        Response Properties:
        - doc: Job name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier of the job.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Job type.
          name: jobType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to track the flow of HTTP requests.
          name: trackingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify which user has run the job.
          name: sourceUserId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the customer who has run the job.
          name: sourceCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the customer for which the job was run.
          name: targetCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the instance of the job.
          name: instanceId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Displays the most recent step's execution status. Contains execution
            statuses of all the steps involved in the execution of the job.
          name: jobExecutionStatus
          param_attrs:
          - doc: Unique identifier that identifies each instance of the job.
            name: id
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Last updated time (in UTC format) post one of the step execution
              completion.
            name: lastUpdated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Displays status for overall steps that are part of the job.
            name: statusMessage
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Exit Code for a job.
            name: exitCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Job creation time in UTC format.
            name: createdTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Time lapsed since the job execution started.
            name: timeElapsed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Status of each step within a job.
            name: stepExecutionStatuses
            param_attrs:
            - doc: Unique identifier that identifies each step in a job.
              name: id
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Step execution start time in UTC format.
              name: startTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Step execution end time in UTC format.
              name: endTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Last updated time for a step in UTC format.
              name: lastUpdated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Displays status for a step.
              name: statusMessage
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Exit Code for a step.
              name: exitCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Step name.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Time lapsed since the step execution started.
              name: timeElapsed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[stepExecutionStatusesObject]
            type_spec: null
          param_object: []
          type: array[JobExecutionStatusObject]
          type_spec: null
        - doc: Indicates the most recent status (STARTING, STARTED, COMPLETED, FAILED)
            of the job at the time of invocation.
          name: latestExecutionStatus
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates the operation type that was carried out.
          name: operationType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique location identifier for which the job was run.
          name: sourceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique location identifier for which the numbers have been moved.
          name: targetLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location name for which the job was run.
          name: sourceLocationName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location name for which the numbers have been moved.
          name: targetLocationName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Job statistics.
          name: counts
          param_attrs:
          - doc: Indicates the total number of phone numbers requested to be moved.
            name: totalNumbers
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers successfully deleted.
            name: numbersDeleted
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers successfully moved.
            name: numbersMoved
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers failed.
            name: numbersFailed
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: CountObject
          type_spec: null
        URI Parameters:
        - doc: Retrieve job details for this jobId.
          name: jobId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Pause the running Manage Numbers Job. A paused job can be resumed or abandoned.

        This API requires a full administrator auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Pause the Manage Numbers Job
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/pause-the-manage-numbers-job
        endpoint: https://webexapis.com/v1/telephony/config/jobs/numbers/manageNumbers/{jobId}/actions/pause/invoke
        http_method: POST
      header: Pause the Manage Numbers Job
      parameters_and_response:
        Query Parameters:
        - doc: Pause the Manage Numbers job for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Pause the Manage Numbers job for this jobId.
          name: jobId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Resume the paused Manage Numbers Job. A paused job can be resumed or abandoned.

        This API requires a full administrator auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Resume the Manage Numbers Job
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/resume-the-manage-numbers-job
        endpoint: https://webexapis.com/v1/telephony/config/jobs/numbers/manageNumbers/{jobId}/actions/resume/invoke
        http_method: POST
      header: Resume the Manage Numbers Job
      parameters_and_response:
        Query Parameters:
        - doc: Resume the Manage Numbers job for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Resume the Manage Numbers job for this jobId.
          name: jobId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Abandon the Manage Numbers Job.

        This API requires a full administrator auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Abandon the Manage Numbers Job
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/abandon-the-manage-numbers-job
        endpoint: https://webexapis.com/v1/telephony/config/jobs/numbers/manageNumbers/{jobId}/actions/abandon/invoke
        http_method: POST
      header: Abandon the Manage Numbers Job
      parameters_and_response:
        Query Parameters:
        - doc: Abandon the Manage Numbers job for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Abandon the Manage Numbers job for this jobId.
          name: jobId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Lists all error details of Manage Numbers job. This will not list any
        errors if exitCode is COMPLETED. If the status is COMPLETED_WITH_ERRORS then
        this lists the cause of failures.

        List of possible Errors:

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:telephony_config_read.'
      documentation:
        doc: List Manage Numbers Job errors
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/list-manage-numbers-job-errors
        endpoint: https://webexapis.com/v1/telephony/config/jobs/numbers/manageNumbers/{jobId}/errors
        http_method: GET
      header: List Manage Numbers Job errors
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve list of jobs for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies the error offset from the first result that you want to fetch.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies the maximum number of records that you want to fetch.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: Phone number
            name: item
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Index of error number.
            name: itemNumber
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Unique identifier to track the HTTP requests.
            name: trackingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: error
            param_attrs:
            - doc: HTTP error code.
              name: key
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Message string with further error information.
              name: message
              param_attrs:
              - doc: Error message.
                name: description
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Internal error code.
                name: code
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Error messages describing the location id in which the error
                  occurs. For a move operation this is the target location ID.
                name: locationId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[ErrorMessageObject]
              type_spec: null
            param_object: []
            type: ErrorObject
            type_spec: null
          param_object: []
          type: array[ItemObject]
          type_spec: null
        URI Parameters:
        - doc: Retrieve the error details for this jobId.
          name: jobId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Retrieve the location''s network connection type.

        Network Connection Type determines if the location''s network connection is
        public or private.

        Retrieving a location''s network connection type requires a full, user or
        read-only administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Private Network Connect
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-private-network-connect
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/privateNetworkConnect
        http_method: GET
      header: Get Private Network Connect
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve the network connection type for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Network Connection Type for the location.
          name: networkConnectionType
          param_attrs:
          - doc: Use public internet for the location's connection type.
            name: PUBLIC_INTERNET
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Use private network connect for the location's connection type.
            name: PRIVATE_NETWORK
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: Retrieve the network connection type for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the location''s network connection type.

        Network Connection Type determines if the location''s network connection is
        public or private.

        Updating a location''s network connection type requires a full administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Private Network Connect
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-private-network-connect
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/privateNetworkConnect
        http_method: PUT
      header: Update Private Network Connect
      parameters_and_response:
        Body Parameters:
        - doc: Network Connection Type for the location.
          name: networkConnectionType
          param_attrs:
          - doc: Use public internet for the location's connection type.
            name: PUBLIC_INTERNET
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Use private network connect for the location's connection type.
            name: PRIVATE_NETWORK
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        Query Parameters:
        - doc: Update network connection type for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Update the network connection type for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all Routes for the organization.

        Trunk and Route Group qualify as Route. Trunks and Route Groups provide you
        the ability to configure Webex Calling to manage calls between Webex Calling
        hosted users and premises PBX users. This solution lets you configure users
        to use Cloud PSTN (CCP or Cisco PSTN) or Premises-based PSTN.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Routing Choices
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-routing-choices
        endpoint: https://webexapis.com/v1/telephony/config/routeChoices
        http_method: GET
      header: Read the List of Routing Choices
      parameters_and_response:
        Query Parameters:
        - doc: List route identities for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of route identities matching the Route group name..
          name: routeGroupName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of route identities matching the Trunk name..
          name: trunkName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: 'Order the route identities according to the designated fields.  Available
            sort fields: routeName, routeType.'
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of route identities.
          name: routeIdentities
          param_attrs:
          - doc: ID of the route type.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the route identity.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type associated with the identity.
            name: type
            param_attrs:
            - doc: Route group must include at least one trunk with a maximum of 10
                trunks per route group.
              name: ROUTE_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Connection between Webex Calling and the premises.
              name: TRUNK
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: RouteType
            type_spec: null
          param_object: []
          type: array[RouteIdentity]
          type_spec: null
    - doc: 'List all schedules for the given location of the organization.

        A time schedule establishes a set of times during the day or holidays in the
        year in which a feature, for example auto attendants, can perform a specific
        action.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Schedules
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-schedules
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/schedules
        http_method: GET
      header: Read the List of Schedules
      parameters_and_response:
        Query Parameters:
        - doc: List schedules for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Type of the schedule.

            * businessHours  - Business hours schedule type.

            * holidays  - Holidays schedule type.'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Only return schedules with the matching name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of schedules.
          name: schedules
          param_attrs:
          - doc: A unique identifier for the schedule.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique name for the schedule.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type of the schedule.
            name: type
            param_attrs:
            - doc: Business hours schedule type.
              name: businessHours
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Holidays schedule type.
              name: holidays
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Name of location for schedule.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ID of the location for the schedule.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[ListScheduleObject]
          type_spec: null
        URI Parameters:
        - doc: Return the list of schedules for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Schedule details.

        A time schedule establishes a set of times during the day or holidays in the
        year in which a feature, for example auto attendants, can perform a specific
        action.

        Retrieving schedule details requires a full or read-only administrator auth
        token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Details for a Schedule
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-schedule
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/schedules/{type}/{scheduleId}
        http_method: GET
      header: Get Details for a Schedule
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve schedule details from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the schedule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique name for the schedule.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Type of the schedule.
          name: type
          param_attrs:
          - doc: Business hours schedule type.
            name: businessHours
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Holidays schedule type.
            name: holidays
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: List of schedule events.
          name: events
          param_attrs:
          - doc: A unique identifier for the schedule event.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name for the event.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start Date of Event.
            name: startDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End Date of Event.
            name: endDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start time of event.
            name: startTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End time of event.
            name: endTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An indication of whether given event is an all-day event or not.
            name: allDayEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Recurrence definition.
            name: recurrence
            param_attrs:
            - doc: Flag to indicate if event will recur forever.
              name: recurForEver
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: End date of recurrence.
              name: recurEndDate
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Weekly recurrence definition.
              name: recurWeekly
              param_attrs:
              - doc: Frequency of occurrence in weeks and select the day - Sunday.
                name: sunday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Monday.
                name: monday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Tuesday.
                name: tuesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Wednesday.
                name: wednesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Thursday.
                name: thursday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Friday.
                name: friday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Saturday.
                name: saturday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              param_object: []
              type: RecurWeeklyObject
              type_spec: null
            - doc: Recurrence definition yearly by date.
              name: recurYearlyByDate
              param_attrs:
              - doc: Schedule the event on a specific day of the month.
                name: dayOfMonth
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Schedule the event on a specific month of the year.
                name: month
                param_attrs:
                - doc: ''
                  name: JANUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FEBRUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MARCH
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: APRIL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JUNE
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JULY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: AUGUST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SEPTEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: OCTOBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: NOVEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: DECEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              param_object: []
              type: RecurYearlyByDateObject
              type_spec: null
            - doc: Recurrence definition yearly by day.
              name: recurYearlyByDay
              param_attrs:
              - doc: Schedule the event on a specific day.
                name: day
                param_attrs:
                - doc: ''
                  name: SUNDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MONDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: TUESDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: WEDNESDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: THURSDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FRIDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SATURDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              - doc: Schedule the event on a specific week.
                name: week
                param_attrs:
                - doc: ''
                  name: FIRST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SECOND
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: THIRD
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FOURTH
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: LAST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              - doc: Schedule the event on a specific month.
                name: month
                param_attrs:
                - doc: ''
                  name: JANUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FEBRUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MARCH
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: APRIL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JUNE
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JULY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: AUGUST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SEPTEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: OCTOBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: NOVEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: DECEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              param_object: []
              type: RecurYearlyByDayObject
              type_spec: null
            param_object: []
            type: RecurrenceObject
            type_spec: null
          param_object: []
          type: array[GetScheduleEventObject]
          type_spec: null
        URI Parameters:
        - doc: Retrieve schedule details in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Type of the schedule.

            * businessHours  - Business hours schedule type.

            * holidays  - Holidays schedule type.'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve the schedule with the matching ID.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create new Schedule for the given location.

        A time schedule establishes a set of times during the day or holidays in the
        year in which a feature, for example auto attendants, can perform a specific
        action.

        Creating a schedule requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Create a Schedule
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-schedule
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/schedules
        http_method: POST
      header: Create a Schedule
      parameters_and_response:
        Body Parameters:
        - doc: Type of the schedule.
          name: type
          param_attrs:
          - doc: Business hours schedule type.
            name: businessHours
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Holidays schedule type.
            name: holidays
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: Unique name for the schedule.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: List of schedule events.
          name: events
          param_attrs:
          - doc: Name for the event.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Start date of event.
            name: startDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: End date of event.
            name: endDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Start time of event. Mandatory if the event is not all day.
            name: startTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End time of event. Mandatory if the event is not all day.
            name: endTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An indication of whether given event is an all-day event or not.
              Mandatory if the startTime and endTime are not defined.
            name: allDayEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Recurrence definition.
            name: recurrence
            param_attrs:
            - doc: Flag to indicate if event will recur forever.
              name: recurForEver
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: End date of recurrence.
              name: recurEndDate
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Weekly recurrence definition.
              name: recurWeekly
              param_attrs:
              - doc: Frequency of occurrence in weeks and select the day - Sunday.
                name: sunday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Monday.
                name: monday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Tuesday.
                name: tuesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Wednesday.
                name: wednesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Thursday.
                name: thursday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Friday.
                name: friday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Saturday.
                name: saturday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              param_object: []
              type: object
              type_spec: null
            - doc: Recurrence definition yearly by date.
              name: recurYearlyByDate
              param_attrs:
              - doc: Schedule the event on a specific day of the month.
                name: dayOfMonth
                param_attrs: []
                param_object: []
                type: number
                type_spec: required
              - doc: Schedule the event on a specific month of the year.
                name: month
                param_attrs:
                - doc: ''
                  name: JANUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FEBRUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MARCH
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: APRIL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JUNE
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JULY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: AUGUST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SEPTEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: OCTOBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: NOVEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: DECEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              param_object: []
              type: object
              type_spec: null
            - doc: Recurrence definition yearly by day.
              name: recurYearlyByDay
              param_attrs:
              - doc: Schedule the event on a specific day.
                name: day
                param_attrs:
                - doc: ''
                  name: SUNDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MONDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: TUESDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: WEDNESDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: THURSDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FRIDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SATURDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: Schedule the event on a specific week.
                name: week
                param_attrs:
                - doc: ''
                  name: FIRST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SECOND
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: THIRD
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FOURTH
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: LAST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: Schedule the event on a specific month.
                name: month
                param_attrs:
                - doc: ''
                  name: JANUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FEBRUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MARCH
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: APRIL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JUNE
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JULY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: AUGUST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SEPTEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: OCTOBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: NOVEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: DECEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              param_object: []
              type: object
              type_spec: null
            param_object: []
            type: RecurrenceObject
            type_spec: null
          param_object: []
          type: array[ScheduleEventObject]
          type_spec: null
        Query Parameters:
        - doc: Create the schedule for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created schedule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Create the schedule for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated schedule.

        A time schedule establishes a set of times during the day or holidays in the
        year in which a feature, for example auto attendants, can perform a specific
        action.

        Updating a schedule requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.

        NOTE: The Schedule ID will change upon modification of the Schedule name.'
      documentation:
        doc: Update a Schedule
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-schedule
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/schedules/{type}/{scheduleId}
        http_method: PUT
      header: Update a Schedule
      parameters_and_response:
        Body Parameters:
        - doc: Unique name for the schedule.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: List of schedule events.
          name: events
          param_attrs:
          - doc: Current name for the event.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: New name for the event.
            name: newName
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Start date of event.
            name: startDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: End date of event.
            name: endDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Start time of event. Mandatory if the event is not all day.
            name: startTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End time of event. Mandatory if the event is not all day.
            name: endTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An indication of whether given event is an all-day event or not.
              Mandatory if the startTime and endTime are not defined.
            name: allDayEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Recurrence definition.
            name: recurrence
            param_attrs:
            - doc: Flag to indicate if event will recur forever.
              name: recurForEver
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: End date of recurrence.
              name: recurEndDate
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Weekly recurrence definition.
              name: recurWeekly
              param_attrs:
              - doc: Frequency of occurrence in weeks and select the day - Sunday.
                name: sunday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Monday.
                name: monday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Tuesday.
                name: tuesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Wednesday.
                name: wednesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Thursday.
                name: thursday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Friday.
                name: friday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Frequency of occurrence in weeks and select the day - Saturday.
                name: saturday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              param_object: []
              type: object
              type_spec: null
            - doc: Recurrence definition yearly by date.
              name: recurYearlyByDate
              param_attrs:
              - doc: Schedule the event on a specific day of the month.
                name: dayOfMonth
                param_attrs: []
                param_object: []
                type: number
                type_spec: required
              - doc: Schedule the event on a specific month of the year.
                name: month
                param_attrs:
                - doc: ''
                  name: JANUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FEBRUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MARCH
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: APRIL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JUNE
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JULY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: AUGUST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SEPTEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: OCTOBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: NOVEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: DECEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              param_object: []
              type: object
              type_spec: null
            - doc: Recurrence definition yearly by day.
              name: recurYearlyByDay
              param_attrs:
              - doc: Schedule the event on a specific day.
                name: day
                param_attrs:
                - doc: ''
                  name: SUNDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MONDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: TUESDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: WEDNESDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: THURSDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FRIDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SATURDAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: Schedule the event on a specific week.
                name: week
                param_attrs:
                - doc: ''
                  name: FIRST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SECOND
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: THIRD
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FOURTH
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: LAST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: Schedule the event on a specific month.
                name: month
                param_attrs:
                - doc: ''
                  name: JANUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: FEBRUARY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MARCH
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: APRIL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: MAY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JUNE
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: JULY
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: AUGUST
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: SEPTEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: OCTOBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: NOVEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: DECEMBER
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              param_object: []
              type: object
              type_spec: null
            param_object: []
            type: RecurrenceObject
            type_spec: null
          param_object: []
          type: array[ModifyScheduleEventListObject]
          type_spec: null
        Query Parameters:
        - doc: Update schedule from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the target schedule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this schedule exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Type of schedule.

            * businessHours  - Business hours schedule type.

            * holidays  - Holidays schedule type.'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update schedule with the matching ID.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete the designated Schedule.

        A time schedule establishes a set of times during the day or holidays in the
        year in which a feature, for example auto attendants, can perform a specific
        action.

        Deleting a schedule requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Schedule
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-schedule
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/schedules/{type}/{scheduleId}
        http_method: DELETE
      header: Delete a Schedule
      parameters_and_response:
        Query Parameters:
        - doc: Delete the schedule from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location from which to delete a schedule.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Type of the schedule.

            * businessHours  - Business hours schedule type.

            * holidays  - Holidays schedule type.'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the schedule with the matching ID.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Schedule Event details.

        A time schedule establishes a set of times during the day or holidays in the
        year in which a feature, for example auto attendants, can perform a specific
        action.

        Retrieving a schedule event''s details requires a full or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Details for a Schedule Event
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-schedule-event
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/schedules/{type}/{scheduleId}/events/{eventId}
        http_method: GET
      header: Get Details for a Schedule Event
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve schedule event details from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the schedule event.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name for the event.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start Date of Event.
          name: startDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End Date of Event.
          name: endDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start time of event.
          name: startTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End time of event.
          name: endTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An indication of whether given event is an all-day event or not.
          name: allDayEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Recurrence definition.
          name: recurrence
          param_attrs:
          - doc: Flag to indicate if event will recur forever.
            name: recurForEver
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: End date of recurrence.
            name: recurEndDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Weekly recurrence definition.
            name: recurWeekly
            param_attrs:
            - doc: Frequency of occurrence in weeks and select the day - Sunday.
              name: sunday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Monday.
              name: monday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Tuesday.
              name: tuesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Wednesday.
              name: wednesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Thursday.
              name: thursday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Friday.
              name: friday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Saturday.
              name: saturday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: RecurWeeklyObject
            type_spec: null
          - doc: Recurrence definition yearly by date.
            name: recurYearlyByDate
            param_attrs:
            - doc: Schedule the event on a specific day of the month.
              name: dayOfMonth
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Schedule the event on a specific month of the year.
              name: month
              param_attrs:
              - doc: ''
                name: JANUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FEBRUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MARCH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: APRIL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JUNE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JULY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: AUGUST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SEPTEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: OCTOBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NOVEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DECEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: RecurYearlyByDateObject
            type_spec: null
          - doc: Recurrence definition yearly by day.
            name: recurYearlyByDay
            param_attrs:
            - doc: Schedule the event on a specific day.
              name: day
              param_attrs:
              - doc: ''
                name: SUNDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MONDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TUESDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: WEDNESDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THURSDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRIDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SATURDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Schedule the event on a specific week.
              name: week
              param_attrs:
              - doc: ''
                name: FIRST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SECOND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRD
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FOURTH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: LAST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Schedule the event on a specific month.
              name: month
              param_attrs:
              - doc: ''
                name: JANUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FEBRUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MARCH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: APRIL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JUNE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JULY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: AUGUST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SEPTEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: OCTOBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NOVEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DECEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            param_object: []
            type: RecurYearlyByDayObject
            type_spec: null
          param_object: []
          type: RecurrenceObject
          type_spec: null
        URI Parameters:
        - doc: Retrieve schedule event details in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Type of schedule.

            * businessHours  - Business hours schedule type.

            * holidays  - Holidays schedule type.'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve the schedule event with the matching schedule ID.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve the schedule event with the matching schedule event ID.
          name: eventId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create new Event for the given location Schedule.

        A time schedule establishes a set of times during the day or holidays in the
        year in which a feature, for example auto attendants, can perform a specific
        action.

        Creating a schedule event requires a full administrator auth token with a
        scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Create a Schedule Event
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-schedule-event
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/schedules/{type}/{scheduleId}/events
        http_method: POST
      header: Create a Schedule Event
      parameters_and_response:
        Body Parameters:
        - doc: Name for the event.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Start Date of Event.
          name: startDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: End Date of Event.
          name: endDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Start time of event. Mandatory if the event is not all day.
          name: startTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End time of event. Mandatory if the event is not all day.
          name: endTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An indication of whether given event is an all-day event or not. Mandatory
            if the startTime and endTime are not defined.
          name: allDayEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Recurrence definition.
          name: recurrence
          param_attrs:
          - doc: Flag to indicate if event will recur forever.
            name: recurForEver
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: End date of recurrence.
            name: recurEndDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Weekly recurrence definition.
            name: recurWeekly
            param_attrs:
            - doc: Frequency of occurrence in weeks and select the day - Sunday.
              name: sunday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Monday.
              name: monday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Tuesday.
              name: tuesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Wednesday.
              name: wednesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Thursday.
              name: thursday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Friday.
              name: friday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Saturday.
              name: saturday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: RecurWeeklyObject
            type_spec: null
          - doc: Recurrence definition yearly by date.
            name: recurYearlyByDate
            param_attrs:
            - doc: Schedule the event on a specific day of the month.
              name: dayOfMonth
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Schedule the event on a specific month of the year.
              name: month
              param_attrs:
              - doc: ''
                name: JANUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FEBRUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MARCH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: APRIL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JUNE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JULY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: AUGUST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SEPTEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: OCTOBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NOVEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DECEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: RecurYearlyByDateObject
            type_spec: null
          - doc: Recurrence definition yearly by day.
            name: recurYearlyByDay
            param_attrs:
            - doc: Schedule the event on a specific day.
              name: day
              param_attrs:
              - doc: ''
                name: SUNDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MONDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TUESDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: WEDNESDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THURSDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRIDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SATURDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Schedule the event on a specific week.
              name: week
              param_attrs:
              - doc: ''
                name: FIRST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SECOND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRD
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FOURTH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: LAST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Schedule the event on a specific month.
              name: month
              param_attrs:
              - doc: ''
                name: JANUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FEBRUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MARCH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: APRIL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JUNE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JULY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: AUGUST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SEPTEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: OCTOBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NOVEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DECEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: RecurYearlyByDayObject
            type_spec: null
          param_object: []
          type: RecurrenceObject
          type_spec: null
        Query Parameters:
        - doc: Create the schedule for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created schedule event.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Create the schedule for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Type of schedule.

            * businessHours  - Business hours schedule type.

            * holidays  - Holidays schedule type.'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Create event for a given schedule ID.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated Schedule Event.

        A time schedule establishes a set of times during the day or holidays in the
        year in which a feature, for example auto attendants, can perform a specific
        action.

        Updating a schedule event requires a full administrator auth token with a
        scope of spark-admin:telephony_config_write.

        NOTE: The schedule event ID will change upon modification of the schedule
        event name.'
      documentation:
        doc: Update a Schedule Event
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-schedule-event
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/schedules/{type}/{scheduleId}/events/{eventId}
        http_method: PUT
      header: Update a Schedule Event
      parameters_and_response:
        Body Parameters:
        - doc: Name for the event.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Start date of event.
          name: startDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: End date of event.
          name: endDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Start time of event. Mandatory if the event is not all day.
          name: startTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End time of event. Mandatory if the event is not all day.
          name: endTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: An indication of whether given event is an all-day event or not. Mandatory
            if the startTime and endTime are not defined.
          name: allDayEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Recurrence definition.
          name: recurrence
          param_attrs:
          - doc: Flag to indicate if event will recur forever.
            name: recurForEver
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: End date of recurrence.
            name: recurEndDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Weekly recurrence definition.
            name: recurWeekly
            param_attrs:
            - doc: Frequency of occurrence in weeks and select the day - Sunday.
              name: sunday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Monday.
              name: monday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Tuesday.
              name: tuesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Wednesday.
              name: wednesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Thursday.
              name: thursday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Friday.
              name: friday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Frequency of occurrence in weeks and select the day - Saturday.
              name: saturday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: RecurWeeklyObject
            type_spec: null
          - doc: Recurrence definition yearly by date.
            name: recurYearlyByDate
            param_attrs:
            - doc: Schedule the event on a specific day of the month.
              name: dayOfMonth
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Schedule the event on a specific month of the year.
              name: month
              param_attrs:
              - doc: ''
                name: JANUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FEBRUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MARCH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: APRIL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JUNE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JULY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: AUGUST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SEPTEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: OCTOBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NOVEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DECEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: RecurYearlyByDateObject
            type_spec: null
          - doc: Recurrence definition yearly by day.
            name: recurYearlyByDay
            param_attrs:
            - doc: Schedule the event on a specific day.
              name: day
              param_attrs:
              - doc: ''
                name: SUNDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MONDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TUESDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: WEDNESDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THURSDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRIDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SATURDAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Schedule the event on a specific week.
              name: week
              param_attrs:
              - doc: ''
                name: FIRST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SECOND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRD
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FOURTH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: LAST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Schedule the event on a specific month.
              name: month
              param_attrs:
              - doc: ''
                name: JANUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FEBRUARY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MARCH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: APRIL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: MAY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JUNE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JULY
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: AUGUST
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SEPTEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: OCTOBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NOVEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DECEMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            param_object: []
            type: RecurYearlyByDayObject
            type_spec: null
          param_object: []
          type: RecurrenceObject
          type_spec: null
        Query Parameters:
        - doc: Update schedule from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the target schedule event.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this schedule event exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Type of schedule.

            * businessHours  - Business hours schedule type.

            * holidays  - Holidays schedule type.'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update schedule event with the matching schedule ID.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update the schedule event with the matching schedule event ID.
          name: eventId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete the designated Schedule Event.

        A time schedule establishes a set of times during the day or holidays in the
        year in which a feature, for example auto attendants, can perform a specific
        action.

        Deleting a schedule event requires a full administrator auth token with a
        scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Schedule Event
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-schedule-event
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/schedules/{type}/{scheduleId}/events/{eventId}
        http_method: DELETE
      header: Delete a Schedule Event
      parameters_and_response:
        Query Parameters:
        - doc: Delete the schedule from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location from which to delete a schedule.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Type of schedule.

            * businessHours  - Business hours schedule type.

            * holidays  - Holidays schedule type.'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the schedule with the matching ID.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the schedule event with the matching schedule event ID.
          name: eventId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all Virtual Lines for the organization.

        Virtual line is a capability in Webex Calling that allows administrators to
        configure multiple lines to Webex Calling users.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Virtual Lines
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-virtual-lines
        endpoint: https://webexapis.com/v1/telephony/config/virtualLines
        http_method: GET
      header: Read the List of Virtual Lines
      parameters_and_response:
        Query Parameters:
        - doc: List virtual lines for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of virtual lines matching these location ids. Example
            for multiple values - ?locationId=locId1&locationId=locId2.
          name: locationId
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Return the list of virtual lines matching these virtualLineIds. Example
            for multiple values - ?id=id1&id=id2.
          name: id
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        - doc: Return the list of virtual lines matching these owner names. Example
            for multiple values - ?ownerName=name1&ownerName=name2.
          name: ownerName
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        - doc: Return the list of virtual lines matching these phone numbers. Example
            for multiple values - ?phoneNumber=number1&phoneNumber=number2.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        - doc: Return the list of virtual lines matching the location names. Example
            for multiple values - ?locationName=loc1&locationName=loc2.
          name: locationName
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        - doc: Return the list of virtual lines based on the order. Default sort will
            be in an Ascending order. Maximum 3 orders allowed at a time. Example
            for multiple values - ?order=order1&order=order2.
          name: order
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        - doc: If true, includes only virtual lines with devices assigned. When not
            explicitly specified, the default includes both virtual lines with devices
            assigned and not assigned.
          name: hasDeviceAssigned
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: If true, includes only virtual lines with an extension assigned. When
            not explicitly specified, the default includes both virtual lines with
            extension assigned and not assigned.
          name: hasExtensionAssigned
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: If true, includes only virtual lines with an assigned directory number,
            also known as a Dn. When not explicitly specified, the default includes
            both virtual lines with a Dn assigned and not assigned.
          name: hasDnAssigned
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: Array of virtual lines.
          name: virtualLines
          param_attrs:
          - doc: A unique identifier for the virtual line.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name for virtual line.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name for virtual line.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: callerIdLastName for virtual line.
            name: callerIdLastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: callerIdFirstName for virtual line.
            name: callerIdFirstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: callerIdNumber for virtual line.
            name: callerIdNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: externalCallerIdNamePolicy for the virtual line.
            name: externalCallerIdNamePolicy
            param_attrs:
            - doc: Shows virtual lines Caller ID name.
              name: DIRECT_LINE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Shows virtual lines location name.
              name: LOCATION
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Allow virtual lines first/last name to be configured.
              name: OTHER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: customExternalCallerIdName for virtual line.
            name: customExternalCallerIdName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calling details of virtual line.
            name: number
            param_attrs: []
            param_object:
            - doc: Virtual Line external.  Either external or extension is mandatory.
              name: external
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Virtual Line extension.  Either external or extension is mandatory.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Number is Primary or Alternative Number.
              name: primary
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Location details of virtual line.
            name: location
            param_attrs: []
            param_object:
            - doc: ID of location associated with virtual line.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of location associated with virtual line.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          - doc: Number of devices assigned to a virtual line.
            name: numberOfDevicesAssigned
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Type of billing plan.
            name: billingPlan
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[ListVirtualLineObject]
          type_spec: null
    - doc: 'Retrieve the organization''s voicemail settings.

        Organizational voicemail settings determines what voicemail features a person
        can configure and automatic message expiration.

        Retrieving organization''s voicemail settings requires a full, user or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Voicemail Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-voicemail-settings
        endpoint: https://webexapis.com/v1/telephony/config/voicemail/settings
        http_method: GET
      header: Get Voicemail Settings
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve voicemail settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: When enabled, you can set the deletion conditions for expired messages.
          name: messageExpiryEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of days after which messages expire.
          name: numberOfDaysForMessageExpiry
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: When enabled, all read and unread voicemail messages will be deleted
            based on the time frame you set. When disabled, all unread voicemail messages
            will be kept.
          name: strictDeletionEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When enabled, people in the organization can configure the email forwarding
            of voicemails.
          name: voiceMessageForwardingEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
    - doc: 'Update the organization''s voicemail settings.

        Organizational voicemail settings determines what voicemail features a person
        can configure and automatic message expiration.

        Updating an organization''s voicemail settings requires a full administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Voicemail Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-voicemail-settings
        endpoint: https://webexapis.com/v1/telephony/config/voicemail/settings
        http_method: PUT
      header: Update Voicemail Settings
      parameters_and_response:
        Body Parameters:
        - doc: Set to true to enable voicemail deletion and set the deletion conditions
            for expired messages.
          name: messageExpiryEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Number of days after which messages expire.
          name: numberOfDaysForMessageExpiry
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: Set to true to delete all read and unread voicemail messages based
            on the time frame you set. Set to false to keep all the unread voicemail
            messages.
          name: strictDeletionEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Set to true to allow people to configure the email forwarding of voicemails.
          name: voiceMessageForwardingEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: Update voicemail settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Retrieve the organization''s voicemail rules.

        Organizational voicemail rules specify the default passcode requirements.
        They are provided for informational purposes only and cannot be modified.

        Retrieving the organization''s voicemail rules requires a full, user or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Voicemail Rules
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-voicemail-rules
        endpoint: https://webexapis.com/v1/telephony/config/voicemail/rules
        http_method: GET
      header: Get Voicemail Rules
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve voicemail rules for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Default voicemail passcode requirements.
          name: defaultVoicemailPinRules
          param_attrs: []
          param_object:
          - doc: If enabled, the passcode should not contain repeated pattern.
            name: blockRepeatedPatternsEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Settings for not allowing single or groups of repeated digits in
              passcode (for example, 22888, 121212, or 408408).
            name: blockRepeatedDigits
            param_attrs: []
            param_object:
            - doc: If enabled, passcode should not contain repeated digits.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Maximum number of repeaed digits. The minimum value is 1. The maximum
                value is 6.
              name: max
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            type: object
            type_spec: null
          - doc: Settings for not allowing numerical sequence in passcode (for example,
              012345 or 987654).
            name: blockContiguousSequences
            param_attrs: []
            param_object:
            - doc: If enabled, passcode should not contain a numerical sequence.
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Number of ascending digits in sequence. The minimum value is 2.
                The maximum value is 5.
              name: numberOfAscendingDigits
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Number of descending digits in sequence. The minimum value is 2.
                The maximum value is 5.
              name: numberOfDescendingDigits
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            type: object
            type_spec: null
          - doc: Length of the passcode.
            name: length
            param_attrs: []
            param_object:
            - doc: The minimum value is 2. The maximum value is 15.
              name: min
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: The minimum value is 3. The maximum value is 30.
              name: max
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            type: object
            type_spec: null
          - doc: If enabled, the default voicemail passcode can be set.
            name: defaultVoicemailPinEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings for passcode expiry.
          name: expirePasscode
          param_attrs: []
          param_object:
          - doc: If enabled, passcode expires after the number of days specified.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of days for password expiry. The minimum value is 15. The
              maximum value is 180.
            name: numberOfDays
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings for passcode changes.
          name: changePasscode
          param_attrs: []
          param_object:
          - doc: If enabled, set minimum number of days between passcode changes.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of days between passcode changes. The minimum value is 1.
              The maximum value is 7.
            name: numberOfDays
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings for previous passcode usage.
          name: blockPreviousPasscodes
          param_attrs: []
          param_object:
          - doc: If enabled, set how many of the previous passcodes are not allowed
              to be re-used.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of previous passcodes. The minimum value is 1. The maximum
              value is 10.
            name: numberOfPasscodes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
    - doc: 'Update the organization''s default voicemail passcode and/or rules.

        Organizational voicemail rules specify the default passcode requirements.

        If you choose to set a default passcode for new people added to your organization,
        communicate to your people what that passcode is, and that it must be reset
        before they can access their voicemail. If this feature is not turned on,
        each new person must initially set their own passcode.

        Updating an organization''s voicemail passcode and/or rules requires a full
        administrator auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Voicemail Rules
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-voicemail-rules
        endpoint: https://webexapis.com/v1/telephony/config/voicemail/rules
        http_method: PUT
      header: Update Voicemail Rules
      parameters_and_response:
        Body Parameters:
        - doc: Set to true to enable the default voicemail passcode.
          name: defaultVoicemailPinEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Default voicemail passcode.
          name: defaultVoicemailPin
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Settings for passcode expiry.
          name: expirePasscode
          param_attrs:
          - doc: Set to true to expire passcode after the number of days specified.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of days for password expiry. The minimum value is 15. The
              maximum value is 100.
            name: numberOfDays
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Settings for passcode changes.
          name: changePasscode
          param_attrs:
          - doc: Set to true to change the minimum number of days between passcode
              changes.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of days between passcode changes. The minimum value is 1.
              The maximum value is 7.
            name: numberOfDays
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Settings for previous passcode usage.
          name: blockPreviousPasscodes
          param_attrs:
          - doc: Set to true to specify how many of the previous passcode are not
              allowed to be re-used.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of previous passcodes. The minimum value is 1. The maximum
              value is 10.
            name: numberOfPasscodes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: Update voicemail rules for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Retrieve voicemail settings for a specific location.

        Location voicemail settings allows you to enable voicemail transcription for
        a specific location.

        Retrieving a location''s voicemail settings requires a full, user or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Location Voicemail
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-location-voicemail
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/voicemail
        http_method: GET
      header: Get Location Voicemail
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve voicemail settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Set to true to enable voicemail transcription.
          name: voicemailTranscriptionEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Retrieve voicemail settings for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the voicemail settings for a specific location.

        Location voicemail settings allows you to enable voicemail transcription for
        a specific location.

        Updating a location''s voicemail settings requires a full administrator auth
        token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Location Voicemail
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-location-voicemail
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/voicemail
        http_method: PUT
      header: Update Location Voicemail
      parameters_and_response:
        Body Parameters:
        - doc: Set to true to enable voicemail transcription.
          name: voicemailTranscriptionEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Query Parameters:
        - doc: Update voicemail settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Update voicemail settings for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Voice portal information for the location.

        Voice portals provide an interactive voice response (IVR)

        system so administrators can manage auto attendant announcements.

        Retrieving voice portal information for an organization requires a full read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get VoicePortal
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-voiceportal
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/voicePortal
        http_method: GET
      header: Get VoicePortal
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the voice portal belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Voice Portal ID
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Voice Portal Name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language for audio announcements.
          name: language
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language code for voicemail group audio announcement.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Extension of incoming call.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Phone Number of incoming call.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Caller ID First Name.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Caller ID Last Name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location to which the voice portal belongs.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update Voice portal information for the location.

        Voice portals provide an interactive voice response (IVR)

        system so administrators can manage auto attendant anouncements.

        Updating voice portal information for an organization and/or rules requires
        a full administrator auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update VoicePortal
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-voiceportal
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/voicePortal
        http_method: PUT
      header: Update VoicePortal
      parameters_and_response:
        Body Parameters:
        - doc: Voice Portal Name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Language code for voicemail group audio announcement.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Extension of incoming call.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Phone Number of incoming call.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Caller ID First Name.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Caller ID Last Name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Voice Portal Admin Passcode.
          name: passcode
          param_attrs:
          - doc: New passcode.
            name: newPasscode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Confirm new passcode.
            name: confirmPasscode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: Update voicemail rules for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location to which the voice portal belongs.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve the voice portal passcode rule for a location.

        Voice portals provide an interactive voice response (IVR) system so administrators
        can manage auto attendant anouncements

        Retrieving the voice portal passcode rule requires a full read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get VoicePortal Passcode Rule
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-voiceportal-passcode-rule
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/voicePortal/passcodeRules
        http_method: GET
      header: Get VoicePortal Passcode Rule
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve voice portal passcode rules for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Settings for passcode expiry.
          name: expirePasscode
          param_attrs: []
          param_object:
          - doc: If enabled, passcode expires after the number of days specified.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of days for passcode expiry. The minimum value is 15. The
              maximum value is 100.
            name: numberOfDays
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        - doc: Number of failed attempts allowed.
          name: failedAttempts
          param_attrs: []
          param_object:
          - doc: If enabled, allows specified number of attempts before locking voice
              portal access.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of failed attempts allowed.
            name: attempts
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings for previous passcode usage.
          name: blockPreviousPasscodes
          param_attrs: []
          param_object:
          - doc: If enabled, the specified number of passcode changes must occur before
              a passcode can be re-used.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of required passcodes changes. The minimum value is 1. The
              maximum value is 10.
            name: numberOfPasscodes
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings for not allowing single or groups of repeated digits in passcode
            (for example, 22888, 121212, or 408408).
          name: blockRepeatedDigits
          param_attrs: []
          param_object: []
          type: object
          type_spec: null
        - doc: Settings for not allowing numerical sequence in passcode (for example,
            012345 or 987654).
          name: blockContiguousSequences
          param_attrs: []
          param_object: []
          type: object
          type_spec: null
        - doc: Allowed length of the passcode.
          name: length
          param_attrs: []
          param_object:
          - doc: The minimum value is 2. The maximum value is 15.
            name: min
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The minimum value is 3. The maximum value is 30.
            name: max
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        - doc: If enabled, the passcode do not contain repeated pattern.
          name: blockRepeatedPatternsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: If enabled, the passcode do not allow user phone number or extension.
          name: blockUserNumberEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: If enabled, the passcode do not allow revered phone number or extension.
          name: blockReversedUserNumberEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: If enabled, the passcode do not allow setting reversed old passcode.
          name: blockReversedOldPasscodeEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Retrieve voice portal passcode rules for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve the location''s music on hold settings.

        Location music on hold settings allows you to play music when a call is placed
        on hold or parked.

        Retrieving a location''s music on hold settings requires a full, user or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Music On Hold
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-music-on-hold
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/musicOnHold
        http_method: GET
      header: Get Music On Hold
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve music on hold settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: If enabled, music will be played when call is placed on hold.
          name: callHoldEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: If enabled, music will be played when call is parked.
          name: callParkEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Greeting type for the location.
          name: greeting
          param_attrs:
          - doc: Play default music when call is placed on hold or parked. The system
              plays music to fill the silence and lets the customer know they are
              still connected.
            name: SYSTEM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Play previously uploaded custom music when call is placed on hold
              or parked.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: Retrieve music on hold settings for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the location''s music on hold settings.

        Location music on hold settings allows you to play music when a call is placed
        on hold or parked.

        Updating a location''s music on hold settings requires a full administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update Music On Hold
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-music-on-hold
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/musicOnHold
        http_method: PUT
      header: Update Music On Hold
      parameters_and_response:
        Body Parameters:
        - doc: If enabled, music will be played when call is placed on hold.
          name: callHoldEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: If enabled, music will be played when call is parked.
          name: callParkEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Greeting type for the location.
          name: greeting
          param_attrs:
          - doc: Play default music when call is placed on hold or parked. The system
              plays music to fill the silence and lets the customer know they are
              still connected.
            name: SYSTEM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Play custom music when call is placed on hold or parked. An audio
              file must already have been successfully uploaded to specify this option.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        Query Parameters:
        - doc: Update music on hold settings for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Update music on hold settings for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List the voicemail group information for the organization.

        You can create a shared voicemail box and inbound FAX box to

        assign to users or call routing features like an auto attendant, call queue,
        or hunt group.

        Retrieving a voicemail group for the organization requires a full read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: List VoicemailGroup
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/list-voicemailgroup
        endpoint: https://webexapis.com/v1/telephony/config/voicemailGroups
        http_method: GET
      header: List VoicemailGroup
      parameters_and_response:
        Query Parameters:
        - doc: Location to which the voicemail group belongs.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Organization to which the voicemail group belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of events in the response. The maximum value
            is 200.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Offset from the first result that you want to fetch.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Search (Contains) based on voicemail group name
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Search (Contains) based on number or extension
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of VoicemailGroups.
          name: voicemailGroups
          param_attrs:
          - doc: Voicemail Group ID.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Voicemail Group Name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location Name.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Extension of the voicemail group.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number of the voicemail group.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If enabled, incoming calls are sent to voicemail.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Flag to indicate if the number is toll free.
            name: tollFreeNumber
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[GetVoicemailGroupObject]
          type_spec: null
    - doc: 'Retrieve voicemail group details for a location.

        Manage your voicemail group settings for a specific location, like when you
        want your voicemail to be active, message storage settings, and how you would
        like to be notified of new voicemail messages.

        Retrieving voicemail group details requires a full, user or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Location Voicemail Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-location-voicemail-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/voicemailGroups/{voicemailGroupId}
        http_method: GET
      header: Get Location Voicemail Group
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve voicemail group details for a customer location.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: UUID of voicemail group of a particular location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of the voicemail group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Voicemail group phone number.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Voicemail group extension number.
          name: extension
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Voicemail group toll free number.
          name: tollFreeNumber
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Voicemail group caller ID first name.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Voicemail group called ID last name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Enable/disable voicemail group.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Language for voicemail group audio announcement.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set voicemail group greeting type.
          name: greeting
          param_attrs:
          - doc: Default voicemail group greeting.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Custom voicemail group greeting.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Enabled if CUSTOM greeting is previously uploaded.
          name: greetingUploaded
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: CUSTOM greeting for previously uploaded.
          name: greetingDescription
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Message storage information
          name: messageStorage
          param_attrs: []
          param_object:
          - doc: Message storage type
            name: storageType
            param_attrs:
            - doc: Store messages in internal mailbox.
              name: INTERNAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Send messages to the email address provided.
              name: EXTERNAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: External email to forward the message.
            name: externalEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Message notifications
          name: notifications
          param_attrs: []
          param_object:
          - doc: Enable/disable messages notification
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Notifications to be sent to provided email to SMS gateway.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Fax message receive settings
          name: faxMessage
          param_attrs: []
          param_object:
          - doc: Enable/disable fax messaging.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Phone number to receive fax messages.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Extension to receive fax messages.
            name: extension
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        - doc: Transfer message information
          name: transferToNumber
          param_attrs: []
          param_object:
          - doc: Enable/disable to transfer message.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Transfer phone number to be called when '0' is dialed.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Message copy information
          name: emailCopyOfMessage
          param_attrs: []
          param_object:
          - doc: Enable/disable to email message copy.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Email message copy to email address provided.
            name: emailId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Enable/disable to forward voice message.
          name: voiceMessageForwardingEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Retrieve voicemail group details for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve voicemail group details for this voicemail group ID.
          name: voicemailGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modifies the voicemail group location details for a particular location
        for a customer.

        Manage your voicemail settings, like when you want your voicemail to be active,
        message storage settings, and how you would like to be notified of new voicemail
        messages.

        Modifying the voicemail group location details requires a full, user administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Modify Location Voicemail Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/modify-location-voicemail-group
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/voicemailGroups/{voicemailGroupId}
        http_method: PUT
      header: Modify Location Voicemail Group
      parameters_and_response:
        Body Parameters:
        - doc: Set the name of the voicemail group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set voicemail group phone number.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set unique voicemail group extension number.
          name: extension
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Set the voicemail group caller ID first name.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set the voicemail group called ID last name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set to true to enable the voicemail group.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Set passcode to access voicemail group when calling.
          name: passcode
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Language code for the voicemail group audio announcement.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Voicemail group greeting type.
          name: greeting
          param_attrs:
          - doc: Set to DEFAULT to play default voicemail group greeting.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Set to CUSTOM to play previously uploaded custom voicemail group
              greeting.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: CUSTOM greeting for previously uploaded.
          name: greetingDescription
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Message storage information
          name: messageStorage
          param_attrs:
          - doc: Message storage type.
            name: storageType
            param_attrs:
            - doc: Set to INTERNAL to store messages in internal mailbox.
              name: INTERNAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Set to EXTERNAL to send messages to the email address provided.
              name: EXTERNAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Set external email to forward the messages.
            name: externalEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Message notifications
          name: notifications
          param_attrs:
          - doc: Set to true to enable message notification.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Set email to SMS gateway to send notifications.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Fax message receive settings
          name: faxMessage
          param_attrs:
          - doc: Set to true to enable FAX messaging.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Set valid phone number to receive FAX messages.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Set FAX messaging extension number.
            name: extension
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Transfer message information
          name: transferToNumber
          param_attrs:
          - doc: Set to true to enable to transfer message.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Set phone number and transfer message to the provided number when
              '0' is dialed.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Message copy information
          name: emailCopyOfMessage
          param_attrs:
          - doc: Set to true to enable email message copy.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Set email to receive message copy to the email address provided.
            name: emailId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: Modifies the voicemail group details for a customer location.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Modifies the voicemail group details for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Modifies the voicemail group details for this voicemail group ID.
          name: voicemailGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create a new voicemail group for the given location for a customer.

        A voicemail group can be created for given location for a customer.

        Creating a voicemail group for the given location requires a full or user
        administrator auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Create a new Voicemail Group for a Location
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-new-voicemail-group-for-a-location
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/voicemailGroups
        http_method: POST
      header: Create a new Voicemail Group for a Location
      parameters_and_response:
        Body Parameters:
        - doc: Set name to create new voicemail group for a particular location for
            a customer.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Set voicemail group phone number for this particular location.
          name: phoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set unique voicemail group extension number for this particular location.
          name: extension
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: Set voicemail group caller ID first name.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set voicemail group called ID last name.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set passcode to access voicemail group when calling.
          name: passcode
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: Language code for voicemail group audio announcement.
          name: languageCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Message storage information
          name: messageStorage
          param_attrs:
          - doc: Message storage type.
            name: storageType
            param_attrs:
            - doc: Set to INTERNAL to store messages in internal mailbox.
              name: INTERNAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Set to EXTERNAL to send messages to the email address provided.
              name: EXTERNAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          - doc: Set external email to forward the messages.
            name: externalEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        - doc: Message notifications
          name: notifications
          param_attrs:
          - doc: Set to true to enable message notification.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Set email to SMS gateway to send notifications.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        - doc: Fax message information
          name: faxMessage
          param_attrs:
          - doc: Set to true to enable fax messaging.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Set valid phone number to receive fax message.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Set fax messaging extension number.
            name: extension
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        - doc: Transfer message information
          name: transferToNumber
          param_attrs:
          - doc: Set to true to enable to transfer message.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Set phone number and dial '0' to transfer message to the provided
              number.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        - doc: Message copy information
          name: emailCopyOfMessage
          param_attrs:
          - doc: Set to true to enable email message copy.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Set email to receive message copy to the email address provided.
            name: emailId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        Query Parameters:
        - doc: Create a new voice mail group for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: UUID of the newly created voice mail group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Create a new voice mail group for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete the designated voicemail group.

        Deleting a voicemail group requires a full administrator auth token with a
        scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Voicemail Group for a Location
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-voicemail-group-for-a-location
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/voicemailGroups/{voicemailGroupId}
        http_method: DELETE
      header: Delete a Voicemail Group for a Location
      parameters_and_response:
        Query Parameters:
        - doc: Delete the voicemail group from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location from which to delete a voicemail group.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Delete the voicemail group with the matching ID.
          name: voicemailGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all calling UC Manager Profiles for the organization.

        UC Manager Profiles are applicable if your organization uses Jabber in Team
        Messaging mode or Calling in Webex (Unified CM).

        The UC Manager Profile has an organization-wide default and may be overridden
        for individual persons, although currently only setting at a user level is
        supported by Webex APIs.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:people_read as this API is designed to be used
        in conjunction with calling behavior at the user level.'
      documentation:
        doc: Read the List of UC Manager Profiles
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-uc-manager-profiles
        endpoint: https://webexapis.com/v1/telephony/config/callingProfiles
        http_method: GET
      header: Read the List of UC Manager Profiles
      parameters_and_response:
        Query Parameters:
        - doc: List manager profiles in this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of manager profiles.
          name: callingProfiles
          param_attrs:
          - doc: A unique identifier for the calling UC Manager Profile.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique name for the calling UC Manager Profile.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[GetManagerProfileObject]
          type_spec: null
    - doc: 'List all Dial Patterns for the organization.

        Dial plans route calls to on-premises destinations by use of trunks or route
        groups.

        They are configured globally for an enterprise and apply to all users, regardless
        of location.

        A dial plan also specifies the routing choice (trunk or route group) for calls
        that match any of its dial patterns.

        Specific dial patterns can be defined as part of your dial plan.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Dial Patterns
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-dial-patterns
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/dialPlans/{dialPlanId}/dialPatterns
        http_method: GET
      header: Read the List of Dial Patterns
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization to which the dial patterns belong.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'An enterprise dial pattern is represented by a sequence of digits
            (1-9), followed by optional wildcard characters.

            Valid wildcard characters are ! (matches any sequence of digits) and X
            (matches a single digit, 0-9).

            The ! wildcard can only occur once at the end and only in an E.164 pattern'
          name: dialPattern
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: 'Order the dial patterns according to the designated fields.  Available
            sort fields: dialPattern.'
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of dial patterns. An enterprise dial pattern is represented by
            a sequence of digits (1-9), followed by optional wildcard characters.
          name: dialPatterns
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        URI Parameters:
        - doc: ID of the dial plan.
          name: dialPlanId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify dial patterns for the Dial Plan.

        Dial plans route calls to on-premises destinations by use of trunks or route
        groups.

        They are configured globally for an enterprise and apply to all users, regardless
        of location.

        A dial plan also specifies the routing choice (trunk or route group) for calls
        that match any of its dial patterns.

        Specific dial patterns can be defined as part of your dial plan.

        Modifying a dial pattern requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Modify Dial Patterns
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/modify-dial-patterns
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/dialPlans/{dialPlanId}/dialPatterns
        http_method: PUT
      header: Modify Dial Patterns
      parameters_and_response:
        Body Parameters:
        - doc: Array of dial patterns to add or delete. Dial Pattern that is not present
            in the request is not modified.
          name: dialPatterns
          param_attrs:
          - doc: A unique dial pattern.
            name: dialPattern
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Action to add or delete a pattern.
            name: action
            param_attrs:
            - doc: Add action, when adding a new dial pattern
              name: ADD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Delete action, when deleting an existing dial pattern
              name: DELETE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: DialPatternAction
            type_spec: null
          param_object: []
          type: array[DialPattern]
          type_spec: null
        - doc: Delete all the dial patterns for a dial plan.
          name: deleteAllDialPatterns
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: Organization to which dial plan belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: ID of the dial plan being modified.
          name: dialPlanId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Validate a Dial Pattern.

        Dial plans route calls to on-premises destinations by use of trunks or route
        groups.

        They are configured globally for an enterprise and apply to all users, regardless
        of location.

        A dial plan also specifies the routing choice (trunk or route group) for calls
        that match any of its dial patterns.

        Specific dial patterns can be defined as part of your dial plan.

        Validating a dial pattern requires a full administrator auth token with a
        scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Validate a Dial Pattern
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/validate-a-dial-pattern
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/actions/validateDialPatterns/invoke
        http_method: POST
      header: Validate a Dial Pattern
      parameters_and_response:
        Body Parameters:
        - doc: 'Array of dial patterns.

            Possible values: +5555,7777'
          name: dialPatterns
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        Query Parameters:
        - doc: Organization to which dial plan belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Overall validation result status.
          name: status
          param_attrs:
          - doc: In case one or more dial pattern validation failed
            name: ERRORS
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: If all the patterns are validated successfully
            name: OK
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: DialPatternValidationStatus
          type_spec: null
        - doc: Patterns validation result.
          name: dialPatternStatus
          param_attrs:
          - doc: Input dial pattern that is being validated.
            name: dialPattern
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Validation status.
            name: patternStatus
            param_attrs:
            - doc: Invalid pattern
              name: INVALID
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Duplicate pattern
              name: DUPLICATE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Duplicate in input
              name: DUPLICATE_IN_LIST
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: DialPatternStatus
            type_spec: null
          - doc: Failure details.
            name: message
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[DialPatternValidate]
          type_spec: null
    - doc: 'List all Dial Plans for the organization.

        Dial plans route calls to on-premises destinations by use of the trunks or
        route groups with which the dial plan is associated. Multiple dial patterns
        can be defined as part of your dial plan.  Dial plans are configured globally
        for an enterprise and apply to all users, regardless of location.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Dial Plans
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-dial-plans
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/dialPlans
        http_method: GET
      header: Read the List of Dial Plans
      parameters_and_response:
        Query Parameters:
        - doc: List dial plans for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of dial plans matching the dial plan name.
          name: dialPlanName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of dial plans matching the Route group name..
          name: routeGroupName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of dial plans matching the Trunk name..
          name: trunkName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: 'Order the dial plans according to the designated fields.  Available
            sort fields: name, routeName, routeType. Sort order is ascending by default'
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of dial plans.
          name: dialPlans
          param_attrs:
          - doc: Unique identifier for the dial plan.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the dial plan.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ID of route type associated with the dial plan.
            name: routeId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of route type associated with the dial plan.
            name: routeName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Route Type associated with the dial plan.
            name: routeType
            param_attrs:
            - doc: Route group must include at least one trunk with a maximum of 10
                trunks per route group.
              name: ROUTE_GROUP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Connection between Webex Calling and the premises.
              name: TRUNK
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: RouteType
            type_spec: null
          param_object: []
          type: array[DialPlan]
          type_spec: null
    - doc: 'Create a Dial Plan for the organization.

        Dial plans route calls to on-premises destinations by use of trunks or route
        groups.

        They are configured globally for an enterprise and apply to all users, regardless
        of location.

        A dial plan also specifies the routing choice (trunk or route group) for calls
        that match any of its dial patterns.

        Specific dial patterns can be defined as part of your dial plan.

        Creating a dial plan requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Create a Dial Plan
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-dial-plan
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/dialPlans
        http_method: POST
      header: Create a Dial Plan
      parameters_and_response:
        Body Parameters:
        - doc: A unique name for the dial plan.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: ID of route type associated with the dial plan.
          name: routeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Route Type associated with the dial plan.
          name: routeType
          param_attrs:
          - doc: Route group must include at least one trunk with a maximum of 10
              trunks per route group.
            name: ROUTE_GROUP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Connection between Webex Calling and the premises.
            name: TRUNK
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: RouteType
          type_spec: required
        - doc: 'An Array of dial patterns.

            Possible values: +5555,+5556'
          name: dialPatterns
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: Organization to which dial plan belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created dial plan.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Get a Dial Plan for the organization.

        Dial plans route calls to on-premises destinations by use of trunks or route
        groups.

        They are configured globally for an enterprise and apply to all users, regardless
        of location.

        A dial plan also specifies the routing choice (trunk or route group) for calls
        that match any of its dial patterns.

        Specific dial patterns can be defined as part of your dial plan.

        Retrieving a dial plan requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get a Dial Plan
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-a-dial-plan
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/dialPlans/{dialPlanId}
        http_method: GET
      header: Get a Dial Plan
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which dial plan belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for the dial plan.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique name for the dial plan.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ID of route type associated with the dial plan.
          name: routeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name of route type associated with the dial plan.
          name: routeName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Route Type associated with the dial plan.
          name: routeType
          param_attrs:
          - doc: Route group must include at least one trunk with a maximum of 10
              trunks per route group.
            name: ROUTE_GROUP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Connection between Webex Calling and the premises.
            name: TRUNK
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: RouteType
          type_spec: null
        - doc: Customer information.
          name: customer
          param_attrs:
          - doc: ID of the customer/organization.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the customer/organization.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Customer
          type_spec: null
        URI Parameters:
        - doc: ID of the dial plan.
          name: dialPlanId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify a Dial Plan for the organization.

        Dial plans route calls to on-premises destinations by use of trunks or route
        groups.

        They are configured globally for an enterprise and apply to all users, regardless
        of location.

        A dial plan also specifies the routing choice (trunk or route group) for calls
        that match any of its dial patterns.

        Specific dial patterns can be defined as part of your dial plan.

        Modifying a dial plan requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Modify a Dial Plan
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/modify-a-dial-plan
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/dialPlans/{dialPlanId}
        http_method: PUT
      header: Modify a Dial Plan
      parameters_and_response:
        Body Parameters:
        - doc: A unique name for the dial plan.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: ID of route type associated with the dial plan.
          name: routeId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Route Type associated with the dial plan.
          name: routeType
          param_attrs:
          - doc: Route group must include at least one trunk with a maximum of 10
              trunks per route group.
            name: ROUTE_GROUP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Connection between Webex Calling and the premises.
            name: TRUNK
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: RouteType
          type_spec: required
        Query Parameters:
        - doc: Organization to which dial plan belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: ID of the dial plan being modified.
          name: dialPlanId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete a Dial Plan for the organization.

        Dial plans route calls to on-premises destinations by use of trunks or route
        groups.

        They are configured globally for an enterprise and apply to all users, regardless
        of location.

        A dial plan also specifies the routing choice (trunk or route group) for calls
        that match any of its dial patterns.

        Specific dial patterns can be defined as part of your dial plan.

        Deleting a dial plan requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Dial Plan
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-dial-plan
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/dialPlans/{dialPlanId}
        http_method: DELETE
      header: Delete a Dial Plan
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which dial plan belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: ID of the dial plan.
          name: dialPlanId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Validate Local Gateway FQDN and Domain for the organization trunks.

        A Trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group - a group of trunks that allow
        Webex Calling to distribute calls over multiple trunks or to provide redundancy.

        Validating Local Gateway FQDN and Domain requires a full administrator auth
        token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Validate Local Gateway FQDN and Domain for a Trunk
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/validate-local-gateway-fqdn-and-domain-for-a-trunk
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks/actions/fqdnValidation/invoke
        http_method: POST
      header: Validate Local Gateway FQDN and Domain for a Trunk
      parameters_and_response:
        Body Parameters:
        - doc: FQDN or SRV address of the trunk.
          name: address
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Domain name of the trunk.
          name: domain
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: FQDN port of the trunk.
          name: port
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Query Parameters:
        - doc: Organization to which trunk types belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'List all Trunks for the organization.

        A Trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group - a group of trunks that allow
        Webex Calling to distribute calls over multiple trunks or to provide redundancy.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Trunks
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-trunks
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks
        http_method: GET
      header: Read the List of Trunks
      parameters_and_response:
        Query Parameters:
        - doc: List trunks for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of trunks matching the local gateway names.
          name: name
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        - doc: Return the list of trunks matching the location names.
          name: locationName
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        - doc: Return the list of trunks matching the trunk type.
          name: trunkType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: 'Order the trunks according to the designated fields.  Available sort
            fields: name, locationName. Sort order is ascending by default'
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of trunks.
          name: trunks
          param_attrs:
          - doc: Unique identifier for the trunk.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the trunk.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location associated with the trunk.
            name: location
            param_attrs:
            - doc: Unique identifier for the location.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A unique name for the location.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Location
            type_spec: null
          - doc: Trunk in use flag.
            name: inUse
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Trunk Type associated with the trunk.
            name: trunkType
            param_attrs:
            - doc: For Cisco CUBE Local Gateway.
              name: REGISTERING
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: For Cisco Unified Border Element, Oracle ACME Session Border Controller,
                AudioCodes Session Border Controller, Ribbon Session Border Controller.
              name: CERTIFICATE_BASED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: TrunkType
            type_spec: null
          param_object: []
          type: array[Trunk]
          type_spec: null
    - doc: 'Create a Trunk for the organization.

        A Trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group which is a group of trunks that
        allow Webex Calling to distribute calls over multiple trunks or to provide
        redundancy.

        Creating a trunk requires a full administrator auth token with a scope of
        spark-admin:telephony_config_write.'
      documentation:
        doc: Create a Trunk
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-trunk
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks
        http_method: POST
      header: Create a Trunk
      parameters_and_response:
        Body Parameters:
        - doc: A unique name for the trunk.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: ID of location associated with the trunk.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A password to use on the trunk.
          name: password
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Dual Identity Support setting impacts the handling of the From header
            and P-Asserted-Identity header when sending an initial SIP INVITE to the
            trunk for an outbound call.
          name: dualIdentitySupportEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Trunk Type associated with the trunk.
          name: trunkType
          param_attrs:
          - doc: For Cisco CUBE Local Gateway.
            name: REGISTERING
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: For Cisco Unified Border Element, Oracle ACME Session Border Controller,
              AudioCodes Session Border Controller, Ribbon Session Border Controller.
            name: CERTIFICATE_BASED
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: TrunkType
          type_spec: required
        - doc: Device type assosiated with trunk.
          name: deviceType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: FQDN or SRV address. Required to create a static certificate-based
            trunk.
          name: address
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Domain name. Required to create a static certificate based trunk.
          name: domain
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: FQDN port. Required to create a static certificate-based trunk.
          name: port
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Max Concurrent call. Required to create a static certificate based
            trunk.
          name: maxConcurrentCalls
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Query Parameters:
        - doc: Organization to which trunk belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly created trunk.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Get a Trunk for the organization.

        A Trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group - a group of trunks that allow
        Webex Calling to distribute calls over multiple trunks or to provide redundancy.

        Retrieving a trunk requires a full or read-only administrator auth token with
        a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get a Trunk
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-a-trunk
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks/{trunkId}
        http_method: GET
      header: Get a Trunk
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which trunk belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique name for the trunk.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Customer associated with the trunk.
          name: customer
          param_attrs:
          - doc: ID of the customer/organization.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the customer/organization.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Customer
          type_spec: null
        - doc: Location associated with the trunk.
          name: location
          param_attrs:
          - doc: Unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the location.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Location
          type_spec: null
        - doc: Unique Outgoing and Destination trunk group associated with the dial
            plan.
          name: otgDtgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Line/Port identifies a device endpoint in standalone mode or a
            SIP URI public identity in IMS mode.
          name: linePort
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Locations using trunk.
          name: locationsUsingTrunk
          param_attrs:
          - doc: Unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the location.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Location]
          type_spec: null
        - doc: User ID.
          name: pilotUserId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Contains the body of the HTTP response received following the request
            to Console API and will not be set if the response has no body.
          name: outboundProxy
          param_attrs: []
          param_object: []
          type: object
          type_spec: null
        - doc: User's authentication service information.
          name: sipAuthenticationUserName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Device status.
          name: status
          param_attrs:
          - doc: Device is online
            name: ONLINE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Device is offline
            name: OFFLINE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unknown. Default
            name: UNKNOWN
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: DeviceStatus
          type_spec: null
        - doc: Error codes.
          name: errorCodes
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: Present partial error/warning status information included when the
            http response is 206.
          name: responseStatus
          param_attrs:
          - doc: Error Code. 25013 for error retrieving the outbound proxy. 25014
              for error retrieving the status
            name: code
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Status type.
            name: type
            param_attrs:
            - doc: Error
              name: ERROR
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Warning
              name: WARNING
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: ResponseStatusType
            type_spec: null
          - doc: Error summary in English.
            name: summaryEnglish
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Error Details.
            name: detail
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Error Tracking ID.
            name: trackingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: ResponseStatus
          type_spec: null
        - doc: Determines the behavior of the From and PAI headers on outbound calls.
          name: dualIdentitySupportEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Trunk Type associated with the trunk.
          name: trunkType
          param_attrs:
          - doc: For Cisco CUBE Local Gateway.
            name: REGISTERING
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: For Cisco Unified Border Element, Oracle ACME Session Border Controller,
              AudioCodes Session Border Controller, Ribbon Session Border Controller.
            name: CERTIFICATE_BASED
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: TrunkType
          type_spec: null
        - doc: Device type assosiated with trunk.
          name: deviceType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: FQDN or SRV address. Required to create a static certificate-based
            trunk.
          name: address
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Domain name. Required to create a static certificate based trunk.
          name: domain
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: FQDN port. Required to create a static certificate-based trunk.
          name: port
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Max Concurrent call. Required to create a static certificate based
            trunk.
          name: maxConcurrentCalls
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: ID of the trunk.
          name: trunkId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify a Trunk for the organization.

        A Trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group - a group of trunks that allow
        Webex Calling to distribute calls over multiple trunks or to provide redundancy.

        Modifying a trunk requires a full administrator auth token with a scope of
        spark-admin:telephony_config_write.'
      documentation:
        doc: Modify a Trunk
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/modify-a-trunk
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks/{trunkId}
        http_method: PUT
      header: Modify a Trunk
      parameters_and_response:
        Body Parameters:
        - doc: A unique name for the dial plan.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A password to use on the trunk.
          name: password
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Determines the behavior of the From and PAI headers on outbound calls.
          name: dualIdentitySupportEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Max Concurrent call. Required to create a static certificate-based
            trunk.
          name: maxConcurrentCalls
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Query Parameters:
        - doc: Organization to which trunk belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: ID of the trunk being modified.
          name: trunkId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete a Trunk for the organization.

        A Trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group - a group of trunks that allow
        Webex Calling to distribute calls over multiple trunks or to provide redundancy.

        Deleting a trunk requires a full administrator auth token with a scope of
        spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Trunk
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-trunk
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks/{trunkId}
        http_method: DELETE
      header: Delete a Trunk
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which trunk belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: ID of the trunk.
          name: trunkId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all Trunk Types with Device Types for the organization.

        A Trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group which is a group of trunks that
        allow Webex Calling to distribute calls over multiple trunks or to provide
        redundancy. Trunk Types are Registering or Certificate Based and are configured
        in Call Manager.

        Retrieving trunk types requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Trunk Types
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-trunk-types
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks/trunkTypes
        http_method: GET
      header: Read the List of Trunk Types
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the trunk types belong.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Trunk type with device types.
          name: trunkTypes
          param_attrs:
          - doc: Trunk Type associated with the trunk.
            name: trunkType
            param_attrs:
            - doc: For Cisco CUBE Local Gateway.
              name: REGISTERING
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: For Cisco Unified Border Element, Oracle ACME Session Border Controller,
                AudioCodes Session Border Controller, Ribbon Session Border Controller.
              name: CERTIFICATE_BASED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: TrunkType
            type_spec: null
          - doc: Device types for trunk configuration.
            name: deviceTypes
            param_attrs:
            - doc: Device type assosiated with trunk configuration.
              name: deviceType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Minimum number of concurrent calls. Required for static certificate
                based trunk.
              name: minConcurrentCalls
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Maximum number of concurrent calls. Required for static certificate
                based trunk.
              name: maxConcurrentCalls
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            param_object: []
            type: array[DeviceType]
            type_spec: null
          param_object: []
          type: array[TrunkTypeWithDeviceType]
          type_spec: null
    - doc: 'List all Route Groups for an organization. A Route Group is a group of
        trunks that allows further scale and redundancy with the connection to the
        premises.

        Retrieving this route group list requires a full or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Routing Groups
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-routing-groups
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeGroups
        http_method: GET
      header: Read the List of Routing Groups
      parameters_and_response:
        Query Parameters:
        - doc: List route groups for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of route groups matching the Route group name..
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Order the route groups according to designated fields.  Available sort
            orders are asc and desc.
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of route groups.
          name: routeGroups
          param_attrs:
          - doc: Route group ID the Route list is associated with.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the Route group the Route list associated with.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Flag to indicate if the route group is used.
            name: inUse
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[RouteGroup]
          type_spec: null
    - doc: 'Creates a Route Group for the organization.

        A Route Group is a collection of trunks that allows further scale and redundancy
        with the connection to the premises. Route groups can include up to 10 trunks
        from different locations.

        Creating a Route Group requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Create Route Group for a Organization
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-route-group-for-a-organization
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeGroups
        http_method: POST
      header: Create Route Group for a Organization
      parameters_and_response:
        Body Parameters:
        - doc: A unique name for the Route Group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Local Gateways that are part of this Route Group.
          name: localGateways
          param_attrs:
          - doc: ID of type local gateway.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Name of the local gateway.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID to which local gateway belongs.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Prioritizes local gateways based on these numbers; the lowest number
              gets the highest priority.
            name: priority
            param_attrs: []
            param_object: []
            type: number
            type_spec: required
          param_object: []
          type: array[LocalGateways]
          type_spec: required
        Query Parameters:
        - doc: Organization to which the Route Group belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the Route Group.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Reads a Route Group for the organization based on id.

        A Route Group is a collection of trunks that allows further scale and redundancy
        with the connection to the premises. Route groups can include up to 10 trunks
        from different locations.

        Reading a Route Group requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read a Route Group for a Organization
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-a-route-group-for-a-organization
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeGroups/{routeGroupId}
        http_method: GET
      header: Read a Route Group for a Organization
      parameters_and_response:
        Query Parameters:
        - doc: Organization of the Route Group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Name of the route group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Organization details.
          name: organization
          param_attrs:
          - doc: Name of the organization.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ID of the organization.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Organization
          type_spec: null
        - doc: Local Gateways that are part of this Route Group.
          name: localGateways
          param_attrs:
          - doc: ID of type local gateway.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the local gateway.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID to which local gateway belongs.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Prioritizes local gateways based on these numbers; the lowest number
              gets the highest priority.
            name: priority
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: array[LocalGateways]
          type_spec: null
        URI Parameters:
        - doc: Route Group for which details are being requested.
          name: routeGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modifies an existing Route Group for an organization based on id.

        A Route Group is a collection of trunks that allows further scale and redundancy
        with the connection to the premises. Route groups can include up to 10 trunks
        from different locations.

        Modifying a Route Group requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Modify a Route Group for a Organization
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/modify-a-route-group-for-a-organization
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeGroups/{routeGroupId}
        http_method: PUT
      header: Modify a Route Group for a Organization
      parameters_and_response:
        Body Parameters:
        - doc: A unique name for the Route Group.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Local Gateways that are part of this Route Group.
          name: localGateways
          param_attrs:
          - doc: ID of type local gateway.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Name of the local gateway.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location ID to which local gateway belongs.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Prioritizes local gateways based on these numbers; the lowest number
              gets the highest priority.
            name: priority
            param_attrs: []
            param_object: []
            type: number
            type_spec: required
          param_object: []
          type: array[LocalGateways]
          type_spec: required
        Query Parameters:
        - doc: Organization of the Route Group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Route Group for which details are being requested.
          name: routeGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Remove a Route Group from an Organization based on id.

        A Route Group is a collection of trunks that allows further scale and redundancy
        with the connection to the premises. Route groups can include up to 10 trunks
        from different locations.

        Removing a Route Group requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Remove a Route Group from an Organization
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/remove-a-route-group-from-an-organization
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeGroups/{routeGroupId}
        http_method: DELETE
      header: Remove a Route Group from an Organization
      parameters_and_response:
        Query Parameters:
        - doc: Organization of the Route Group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Route Group for which details are being requested.
          name: routeGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List the number of "Call to" on-premises Extensions, Dial Plans, PSTN
        Connections, and Route Lists used by a specific Route Group.

        Users within Call to Extension locations are registered to a PBX which allows
        you to route unknown extensions (calling number length of 2-6 digits) to the
        PBX using an existing Trunk or Route Group.

        PSTN Connections may be a Cisco PSTN, a cloud-connected PSTN, or a premises-based
        PSTN (local gateway).

        Dial Plans allow you to route calls to on-premises extensions via your trunk
        or route group.

        Route Lists are a list of numbers that can be reached via a route group and
        can be used to provide cloud PSTN connectivity to Webex Calling Dedicated
        Instance.

        Retrieving usage information requires a full or read-only administrator auth
        token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the Usage of a Routing Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-usage-of-a-routing-group
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeGroups/{routeGroupId}/usage
        http_method: GET
      header: Read the Usage of a Routing Group
      parameters_and_response:
        Query Parameters:
        - doc: Organization associated with the specific route group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Number of PSTN connection locations associated to this route group.
          name: pstnConnectionCount
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Number of call to extension locations associated to this route group.
          name: callToExtensionCount
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Number of dial plan locations associated to this route group.
          name: dialPlanCount
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Number of route list locations associated to this route group.
          name: routeListCount
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: ID of the requested Route group.
          name: routeGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List "Call to" on-premises Extension Locations for a specific route group.
        Users within these locations are registered to a PBX which allows you to route
        unknown extensions (calling number length of 2-6 digits) to the PBX using
        an existing trunk or route group.

        Retrieving this location list requires a full or read-only administrator auth
        token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the Call to Extension Locations of a Routing Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-call-to-extension-locations-of-a-routing-group
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeGroups/{routeGroupId}/usageCallToExtension
        http_method: GET
      header: Read the Call to Extension Locations of a Routing Group
      parameters_and_response:
        Query Parameters:
        - doc: Organization associated with specific route group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of locations matching the location name.
          name: locationName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Order the locations according to designated fields.  Available sort
            orders are asc, and desc.
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of locations.
          name: locations
          param_attrs:
          - doc: Unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the location.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Location]
          type_spec: null
        URI Parameters:
        - doc: ID of the requested Route group.
          name: routeGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List Dial Plan Locations for a specific route group.

        Dial Plans allow you to route calls to on-premises destinations by use of
        trunks or route groups. They are configured globally for an enterprise and
        apply to all users, regardless of location.

        A Dial Plan also specifies the routing choice (trunk or route group) for calls
        that match any of its dial patterns. Specific dial patterns can be defined
        as part of your dial plan.

        Retrieving this location list requires a full or read-only administrator auth
        token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the Dial Plan Locations of a Routing Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-dial-plan-locations-of-a-routing-group
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeGroups/{routeGroupId}/usageDialPlan
        http_method: GET
      header: Read the Dial Plan Locations of a Routing Group
      parameters_and_response:
        Query Parameters:
        - doc: Organization associated with specific route group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of locations matching the location name.
          name: locationName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Order the locations according to designated fields.  Available sort
            orders are asc, and desc.
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of locations.
          name: locations
          param_attrs:
          - doc: Unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the location.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Location]
          type_spec: null
        URI Parameters:
        - doc: ID of the requested Route group.
          name: routeGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List PSTN Connection Locations for a specific route group. This solution
        lets you configure users to use Cloud PSTN (CCP or Cisco PSTN) or Premises-based
        PSTN.

        Retrieving this Location list requires a full or read-only administrator auth
        token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the PSTN Connection Locations of a Routing Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-pstn-connection-locations-of-a-routing-group
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeGroups/{routeGroupId}/usagePstnConnection
        http_method: GET
      header: Read the PSTN Connection Locations of a Routing Group
      parameters_and_response:
        Query Parameters:
        - doc: Organization associated with specific route group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of locations matching the location name.
          name: locationName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Order the locations according to designated fields.  Available sort
            orders are asc, and desc.
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of locations.
          name: locations
          param_attrs:
          - doc: Unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the location.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Location]
          type_spec: null
        URI Parameters:
        - doc: ID of the requested Route group.
          name: routeGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List Route Lists for a specific route group. Route Lists are a list of
        numbers that can be reached via a Route Group. It can be used to provide cloud
        PSTN connectivity to Webex Calling Dedicated Instance.

        Retrieving this list of Route Lists requires a full or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the Route Lists of a Routing Group
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-route-lists-of-a-routing-group
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeGroups/{routeGroupId}/usageRouteList
        http_method: GET
      header: Read the Route Lists of a Routing Group
      parameters_and_response:
        Query Parameters:
        - doc: Organization associated with specific route group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of locations matching the location name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Order the locations according to designated fields.  Available sort
            orders are asc, and desc.
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of route lists.
          name: routeGroupUsageRouteListGet
          param_attrs:
          - doc: List of route lists for this route group.
            name: routeLists
            param_attrs:
            - doc: Route list ID.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Route list name.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Location ID for route list.
              name: locationId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Location name for route list.
              name: locationName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[RouteGroupUsageRouteListItem]
            type_spec: null
          param_object: []
          type: array[RouteGroupUsageRouteListGet]
          type_spec: null
        URI Parameters:
        - doc: ID of the requested Route group.
          name: routeGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all Route Lists for the organization.

        A Route List is a list of numbers that can be reached via a Route Group. It
        can be used to provide cloud PSTN connectivity to Webex Calling Dedicated
        Instance.

        Retrieving the Route List requires a full or read-only administrator auth
        token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Route Lists
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-route-lists
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeLists
        http_method: GET
      header: Read the List of Route Lists
      parameters_and_response:
        Query Parameters:
        - doc: List all Route List for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of Route List matching the route list name.
          name: name
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        - doc: Return the list of Route Lists matching the location id.
          name: locationId
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Order the Route List according to the designated fields. Available
            sort fields are name, and locationId. Sort order is ascending by default
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of route lists.
          name: routeLists
          param_attrs:
          - doc: ID of the Route List.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the Route List.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location associated with the Route List.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location associated with the Route List.
            name: locationName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ID of the route group associated with Route List.
            name: routeGroupId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the Route Group associated with Route List.
            name: routeGroupName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[RouteListListGet]
          type_spec: null
    - doc: 'Create a Route List for the organization.

        A Route List is a list of numbers that can be reached via a Route Group. It
        can be used to provide cloud PSTN connectivity to Webex Calling Dedicated
        Instance.

        Creating a Route List requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Create a Route List
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-route-list
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeLists
        http_method: POST
      header: Create a Route List
      parameters_and_response:
        Body Parameters:
        - doc: Name of the Route List
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Location associated with the Route List.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: ID of the route group associated with Route List.
          name: routeGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Query Parameters:
        - doc: Organization to which the Route List belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ID of the newly route list created.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Delete a route list for a customer.

        A Route List is a list of numbers that can be reached via a Route Group. It
        can be used to provide cloud PSTN connectivity to Webex Calling Dedicated
        Instance.

        Deleting a Route List requires a full administrator auth token with a scope
        of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Route List
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-route-list
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeLists/{routeListId}
        http_method: DELETE
      header: Delete a Route List
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the Route List belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: ID of the Route List.
          name: routeListId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get a rout list details.

        A Route List is a list of numbers that can be reached via a Route Group. It
        can be used to provide cloud PSTN connectivity to Webex Calling Dedicated
        Instance.

        Retrieving a Route List requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get a Route List
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-a-route-list
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeLists/{routeListId}
        http_method: GET
      header: Get a Route List
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the Route List belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Route list name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location associated with the Route List.
          name: location
          param_attrs:
          - doc: Unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the location.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Location
          type_spec: null
        - doc: Route group associated with the Route list.
          name: routeGroup
          param_attrs:
          - doc: Route group ID the Route list is associated with.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the Route group the Route list associated with.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Flag to indicate if the route group is used.
            name: inUse
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: RouteGroup
          type_spec: null
        URI Parameters:
        - doc: ID of the Route List.
          name: routeListId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify the details for a Route List.

        A Route List is a list of numbers that can be reached via a Route Group. It
        can be used to provide cloud PSTN connectivity to Webex Calling Dedicated
        Instance.

        Retrieving a Route List requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Modify a Route List
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/modify-a-route-list
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeLists/{routeListId}
        http_method: PUT
      header: Modify a Route List
      parameters_and_response:
        Body Parameters:
        - doc: Route List new name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: New route group ID.
          name: routeGroupId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: Organization to which the Route List belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: ID of the Route List.
          name: routeListId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify numbers for a specific Route List of a Customer.

        A Route List is a list of numbers that can be reached via a Route Group. It
        can be used to provide cloud PSTN connectivity to Webex Calling Dedicated
        Instance.

        Retrieving a Route List requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Modify Numbers for Route List
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/modify-numbers-for-route-list
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeLists/{routeListId}/numbers
        http_method: PUT
      header: Modify Numbers for Route List
      parameters_and_response:
        Body Parameters:
        - doc: Array of the numbers to be deleted/added.
          name: numbers
          param_attrs:
          - doc: Number to be deleted/added.
            name: number
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Possible value, ADD or DELETE.
            name: action
            param_attrs:
            - doc: Add a phone number to the Route List.
              name: ADD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Delete a phone number from the Route List.
              name: DELETE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: ActionOnRouteList
            type_spec: required
          param_object: []
          type: array[RouteListNumberPatch]
          type_spec: null
        - doc: If present, the numbers array is ignored and all numbers in the route
            list are deleted.
          name: deleteAllNumbers
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: Organization to which the Route List belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of number statuses.
          name: numberStatus
          param_attrs:
          - doc: Phone Number whose status is being reported.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Status of the number. Possible values are INVALID, DUPLICATE, DUPLICATE_IN_LIST,
              or UNAVAILABLE.
            name: numberStatus
            param_attrs:
            - doc: ''
              name: INVALID
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: DUPLICATE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: DUPLICATE_IN_LIST
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: UNAVAILABLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: NumberStatus
            type_spec: null
          - doc: Message of the number add status.
            name: message
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[RouteListNumberPatchResponse]
          type_spec: null
        URI Parameters:
        - doc: ID of the Route List.
          name: routeListId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get numbers assigned to a Route List

        A Route List is a list of numbers that can be reached via a Route Group. It
        can be used to provide cloud PSTN connectivity to Webex Calling Dedicated
        Instance.

        Retrieving a Route List requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Get Numbers assigned to a Route List
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-numbers-assigned-to-a-route-list
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/routeLists/{routeListId}/numbers
        http_method: GET
      header: Get Numbers assigned to a Route List
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the Route List belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Order the Route Lists according to number, ascending or descending.
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Number assigned to the route list.
          name: number
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Number assigned to the Route list.
          name: phoneNumbers
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: ID of the Route List.
          name: routeListId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get local gateway call to on-premises extension usage for a trunk.

        A trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group which is a group of trunks that
        allow Webex Calling to distribute calls over multiple trunks or to provide
        redundancy.

        Retrieving this information requires a full administrator auth token with
        a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Local Gateway Call to On-Premises Extension Usage for a Trunk
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-local-gateway-call-to-on-premises-extension-usage-for-a-trunk
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks/{trunkId}/usageCallToExtension
        http_method: GET
      header: Get Local Gateway Call to On-Premises Extension Usage for a Trunk
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the trunk belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Order the trunks according to the designated fields.  Available sort
            fields are name, and locationName. Sort order is ascending by default
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of trunks matching the local gateway names
          name: name
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        Response Properties:
        - doc: Location associated with the trunk.
          name: location
          param_attrs:
          - doc: Unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the location.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Location
          type_spec: null
        URI Parameters:
        - doc: ID of the trunk.
          name: trunkId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get Local Gateway Dial Plan Usage for a Trunk.

        A trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group which is a group of trunks that
        allow Webex Calling to distribute calls over multiple trunks or to provide
        redundancy.

        Retrieving this information requires a full administrator auth token with
        a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Local Gateway Dial Plan Usage for a Trunk
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-local-gateway-dial-plan-usage-for-a-trunk
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks/{trunkId}/usageDialPlan
        http_method: GET
      header: Get Local Gateway Dial Plan Usage for a Trunk
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the trunk belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the number of objects returned to this maximum count.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Start at the zero-based offset in the list of matching objects.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Order the trunks according to the designated fields.  Available sort
            fields are name, and locationName. Sort order is ascending by default
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return the list of trunks matching the local gateway names
          name: name
          param_attrs: []
          param_object: []
          type: string array
          type_spec: null
        Response Properties:
        - doc: Array of dial Plans.
          name: dialPlans
          param_attrs:
          - doc: Unique identifier for the dial plan.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of a dial plan.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[DialPlanUsageGetResponse]
          type_spec: null
        URI Parameters:
        - doc: ID of the trunk.
          name: trunkId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get Locations Using the Local Gateway as PSTN Connection Routing.

        A trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group which is a group of trunks that
        allow Webex Calling to distribute calls over multiple trunks or to provide
        redundancy.

        Retrieving this information requires a full administrator auth token with
        a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Locations Using the Local Gateway as PSTN Connection Routing
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-locations-using-the-local-gateway-as-pstn-connection-routing
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks/{trunkId}/usagePstnConnection
        http_method: GET
      header: Get Locations Using the Local Gateway as PSTN Connection Routing
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the trunk belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Location associated with the trunk.
          name: location
          param_attrs:
          - doc: Unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique name for the location.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Location
          type_spec: null
        URI Parameters:
        - doc: ID of the trunk.
          name: trunkId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get Route Groups Using the Local Gateway.

        A trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group which is a group of trunks that
        allow Webex Calling to distribute calls over multiple trunks or to provide
        redundancy.

        Retrieving this information requires a full administrator auth token with
        a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Route Groups Using the Local Gateway
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-route-groups-using-the-local-gateway
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks/{trunkId}/usageRouteGroup
        http_method: GET
      header: Get Route Groups Using the Local Gateway
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the trunk belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of route Groups.
          name: routeGroup
          param_attrs:
          - doc: UUID of the route group associated with the Trunk.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of the Route Group associated with the Trunk.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: In use flag.
            name: inUse
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[RouteGroupUsageGetResponse]
          type_spec: null
        URI Parameters:
        - doc: ID of the trunk.
          name: trunkId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get Local Gateway Usage Count

        A trunk is a connection between Webex Calling and the premises, which terminates
        on the premises with a local gateway or other supported device.

        The trunk can be assigned to a Route Group which is a group of trunks that
        allow Webex Calling to distribute calls over multiple trunks or to provide
        redundancy.

        Retrieving this information requires a full administrator auth token with
        a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Local Gateway Usage Count
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-local-gateway-usage-count
        endpoint: https://webexapis.com/v1/telephony/config/premisePstn/trunks/{trunkId}/usage
        http_method: GET
      header: Get Local Gateway Usage Count
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the trunk belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: The count where the local gateway is used as a PSTN Connection setting.
          name: pstnConnectionCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The count where the given local gateway is used as call to extension
            setting.
          name: callToExtensionCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The count where the given local gateway is used by the dial plan.
          name: dialPlanCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The count where the given local gateway is used by the route group.
          name: routeGroupCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: ID of the trunk.
          name: trunkId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Queue Holiday Service details.

        Configure the call queue to route calls differently during the holidays.

        Retrieving call queue holiday service details requires a full or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Details for a Call Queue Holiday Service
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-call-queue-holiday-service
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/holidayService
        http_method: GET
      header: Get Details for a Call Queue Holiday Service
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call queue settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Whether or not the call queue holiday service routing policy is enabled.
          name: holidayServiceEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Specifies call processing action type.
          name: action
          param_attrs:
          - doc: The caller hears a fast-busy tone.
            name: BUSY
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Transfers the call to number specified in transferPhoneNumber.
            name: TRANSFER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Specifies whether the schedule mentioned in holidayScheduleName is
            org or location specific. (Must be from holidaySchedules list)
          name: holidayScheduleLevel
          param_attrs:
          - doc: Specifies this Schedule is configured across location.
            name: LOCATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Specifies this Schedule is configured across organization.
            name: ORGANIZATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Name of the schedule configured for a holiday service as one of from
            holidaySchedules list.
          name: holidayScheduleName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Call gets transferred to this number when action is set to TRANSFER.
            This can also be an extension.
          name: transferPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies if an announcement plays to callers before applying the action.
          name: playAnnouncementBeforeEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Specifies what type of announcement to be played.
          name: audioMessageSelection
          param_attrs:
          - doc: Default Audio Message Selection.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Custom Audio Message Selection.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: List of Announcement Audio Files when audioMessageSelection is CUSTOM.
          name: audioFiles
          param_attrs:
          - doc: Name of the file.
            name: fileName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Media Type of the audio file.
            name: mediaFileType
            param_attrs:
            - doc: WMA File Extension.
              name: WMA
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: WAV File Extension.
              name: WAV
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 3GP File Extension.
              name: 3GP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[CallQueueAudioFilesObject]
          type_spec: null
        - doc: Lists the pre-configured holiday schedules.
          name: holidaySchedules
          param_attrs:
          - doc: Name of the schedule configured for a holiday service.
            name: scheduleName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Specifies whether the schedule mentioned in scheduleName is org or
              location specific.
            name: scheduleLevel
            param_attrs:
            - doc: Specifies this Schedule is configured across location.
              name: LOCATION
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Specifies this Schedule is configured across organization.
              name: ORGANIZATION
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[CallQueueHolidaySchedulesObject]
          type_spec: null
        URI Parameters:
        - doc: Retrieve settings for a call queue in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for the call queue with this identifier.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated Call Queue Holiday Service.

        Configure the call queue to route calls differently during the holidays.

        Updating a call queue holiday service requires a full administrator auth token
        with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update a Call Queue Holiday Service
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-call-queue-holiday-service
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/holidayService
        http_method: PUT
      header: Update a Call Queue Holiday Service
      parameters_and_response:
        Body Parameters:
        - doc: Enable or Disable the call queue holiday service routing policy.
          name: holidayServiceEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Specifies call processing action type.
          name: action
          param_attrs:
          - doc: The caller hears a fast-busy tone.
            name: BUSY
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Transfers the call to number specified in transferPhoneNumber.
            name: TRANSFER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: Specifies whether the schedule mentioned in holidayScheduleName is
            org or location specific. (Must be from holidaySchedules list)
          name: holidayScheduleLevel
          param_attrs:
          - doc: Specifies this Schedule is configured across location.
            name: LOCATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Specifies this Schedule is configured across organization.
            name: ORGANIZATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: Name of the schedule configured for a holiday service as one of from
            holidaySchedules list.
          name: holidayScheduleName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Call gets transferred to this number when action is set to TRANSFER.
            This can also be an extension.
          name: transferPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies if an announcement plays to callers before applying the action.
          name: playAnnouncementBeforeEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Specifies what type of announcement to be played.
          name: audioMessageSelection
          param_attrs:
          - doc: Default Audio Message Selection.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Custom Audio Message Selection.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: List of pre-configured Announcement Audio Files when audioMessageSelection
            is CUSTOM.
          name: audioFiles
          param_attrs:
          - doc: Name of the file.
            name: fileName
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Media Type of the audio file.
            name: mediaFileType
            param_attrs:
            - doc: WMA File Extension.
              name: WMA
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: WAV File Extension.
              name: WAV
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 3GP File Extension.
              name: 3GP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: array[CallQueueAudioFilesObject]
          type_spec: null
        Query Parameters:
        - doc: Update call queue settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this call queue exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update setting for the call queue with the matching ID.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Queue Night service details.

        Configure the call queue to route calls differently during the hours when
        the queue is not in service. This is

        determined by a schedule that defines the business hours of the queue.

        Retrieving call queue details requires a full or read-only administrator auth
        token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Details for a Call Queue Night Service
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-call-queue-night-service
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/nightService
        http_method: GET
      header: Get Details for a Call Queue Night Service
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call queue night service settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Whether or not the call queue night service routing policy is enabled.
          name: nightServiceEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Specifies call processing action type.
          name: action
          param_attrs:
          - doc: The caller hears a fast busy tone.
            name: BUSY
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Transfers the call to number specified in transferPhoneNumber.
            name: TRANSFER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Call gets transferred to this number when action is set to TRANSFER.
            This can also be an extension.
          name: transferPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies if an announcement plays to callers before applying the action.
          name: playAnnouncementBeforeEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Specifies the type of announcements to played.
          name: announcementMode
          param_attrs:
          - doc: Plays announcement as per audioMessageSelection.
            name: NORMAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Plays announcement as per manualAudioMessageSelection.
            name: MANUAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Specifies what type of announcements to be played when announcementMode
            is NORMAL.
          name: audioMessageSelection
          param_attrs:
          - doc: Default Audio Message Selection.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Custom Audio Message Selection.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: List of Announcement Audio Files when audioMessageSelection is CUSTOM.
          name: audioFiles
          param_attrs:
          - doc: Name of the file.
            name: fileName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Media Type of the audio file.
            name: mediaFileType
            param_attrs:
            - doc: WMA File Extension.
              name: WMA
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: WAV File Extension.
              name: WAV
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 3GP File Extension.
              name: 3GP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[CallQueueAudioFilesObject]
          type_spec: null
        - doc: Name of the schedule configured for a night service as one of from
            businessHourSchedules list.
          name: businessHoursName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies whether the above mentioned schedule is org or location specific.
            (Must be from businessHourSchedules list).
          name: businessHoursLevel
          param_attrs:
          - doc: Specifies this Schedule is configured across organization.
            name: ORGANIZATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Specifies this Schedule is configured across location.
            name: LOCATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Lists the pre-configured business hour schedules.
          name: businessHourSchedules
          param_attrs:
          - doc: Name of the schedule configured for a night service.
            name: scheduleName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Specifies whether the schedule mentioned in scheduleName is org or
              location specific.
            name: scheduleLevel
            param_attrs:
            - doc: Specifies this Schedule is configured across organization.
              name: LOCATION
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Specifies this Schedule is configured across location.
              name: ORGANIZATION
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[CallQueueNightSchedulesObject]
          type_spec: null
        - doc: Force night service regardless of business hour schedule.
          name: forceNightServiceEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Specifies what type of announcement to be played when announcementMode
            is MANUAL.
          name: manualAudioMessageSelection
          param_attrs:
          - doc: Default Audio Message Selection.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Custom Audio Message Selection.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: List Of Audio Files.
          name: manualAudioFiles
          param_attrs:
          - doc: Name of the file.
            name: fileName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Media Type of the audio file.
            name: mediaFileType
            param_attrs:
            - doc: WMA File Extension.
              name: WMA
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: WAV File Extension.
              name: WAV
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 3GP File Extension.
              name: 3GP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[CallQueueAudioFilesObject]
          type_spec: null
        URI Parameters:
        - doc: Retrieve settings for a call queue in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for the call queue night service with this identifier.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update Call Queue Night Service details.

        Configure the call queue to route calls differently during the hours when
        the queue is not in service. This is

        determined by a schedule that defines the business hours of the queue.

        Updating call queue night service details requires a full administrator auth
        token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update a Call Queue Night Service
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-call-queue-night-service
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/nightService
        http_method: PUT
      header: Update a Call Queue Night Service
      parameters_and_response:
        Body Parameters:
        - doc: Enable or disable call queue night service routing policy.
          name: nightServiceEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Specifies call processing action type.
          name: action
          param_attrs:
          - doc: The caller hears a fast busy tone.
            name: BUSY
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Transfers the call to number specified in transferPhoneNumber.
            name: TRANSFER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Call gets transferred to this number when action is set to TRANSFER.
            This can also be an extension.
          name: transferPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies if an announcement plays to callers before applying the action.
          name: playAnnouncementBeforeEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Specifies the type of announcements to played.
          name: announcementMode
          param_attrs:
          - doc: Plays announcement as per audioMessageSelection.
            name: NORMAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Plays announcement as per manualAudioMessageSelection.
            name: MANUAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: Specifies what type of announcements to be played when announcementMode
            is NORMAL.
          name: audioMessageSelection
          param_attrs:
          - doc: Default Audio Message Selection.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Custom Audio Message Selection.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: List of pre-configured Announcement Audio Files when audioMessageSelection
            is CUSTOM.
          name: audioFiles
          param_attrs:
          - doc: Name of the file.
            name: fileName
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Media Type of the audio file.
            name: mediaFileType
            param_attrs:
            - doc: WMA File Extension.
              name: WMA
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: WAV File Extension.
              name: WAV
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 3GP File Extension.
              name: 3GP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: array[CallQueueAudioFilesObject]
          type_spec: null
        - doc: Name of the schedule configured for a night service as one of from
            businessHourSchedules list.
          name: businessHoursName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies whether the above mentioned schedule is org or location specific.
            (Must be from businessHourSchedules list)
          name: businessHoursLevel
          param_attrs:
          - doc: Specifies this Schedule is configured across organization.
            name: ORGANIZATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Specifies this Schedule is configured across location.
            name: LOCATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Force night service regardless of business hour schedule.
          name: forceNightServiceEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Specifies what type of announcement to be played when announcementMode
            is MANUAL.
          name: manualAudioMessageSelection
          param_attrs:
          - doc: Default Audio Message Selection.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Custom Audio Message Selection.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: List Of pre-configured Audio Files.
          name: manualAudioFiles
          param_attrs:
          - doc: Name of the file.
            name: fileName
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Media Type of the audio file.
            name: mediaFileType
            param_attrs:
            - doc: WMA File Extension.
              name: WMA
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: WAV File Extension.
              name: WAV
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 3GP File Extension.
              name: 3GP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: array[CallQueueAudioFilesObject]
          type_spec: null
        Query Parameters:
        - doc: Retrieve call queue night service settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Retrieve settings for a call queue in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for the call queue night service with this identifier.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Queue policy Forced Forward details.

        This policy allows calls to be temporarily diverted to a configured destination.

        Retrieving call queue Forced Forward details requires a full or read-only
        administrator auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Details for a Call Queue Forced Forward
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-call-queue-forced-forward
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/forcedForward
        http_method: GET
      header: Get Details for a Call Queue Forced Forward
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call queue settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Whether or not the call queue forced forward routing policy setting
            is enabled.
          name: forcedForwardEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Call gets transferred to this number when action is set to TRANSFER.
            This can also be an extension.
          name: transferPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies if an announcement plays to callers before applying the action.
          name: playAnnouncementBeforeEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Specifies what type of announcement to be played.
          name: audioMessageSelection
          param_attrs:
          - doc: Default Audio Message Selection.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Custom Audio Message Selection.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: List of Announcement Audio Files when audioMessageSelection is CUSTOM.
          name: audioFiles
          param_attrs:
          - doc: Name of the file.
            name: fileName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Media Type of the audio file.
            name: mediaFileType
            param_attrs:
            - doc: WMA File Extension.
              name: WMA
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: WAV File Extension.
              name: WAV
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 3GP File Extension.
              name: 3GP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[CallQueueAudioFilesObject]
          type_spec: null
        URI Parameters:
        - doc: Retrieve settings for a call queue in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for the call queue with this identifier.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated Forced Forward Service.

        If the option is enabled, then incoming calls to the queue are forwarded to
        the configured destination. Calls that are already in the queue remain queued.

        The policy can be configured to play an announcement prior to proceeding with
        the forward.

        Updating a call queue Forced Forward service requires a full administrator
        auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update a Call Queue Forced Forward service
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-call-queue-forced-forward-service
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/forcedForward
        http_method: PUT
      header: Update a Call Queue Forced Forward service
      parameters_and_response:
        Body Parameters:
        - doc: Enable or disable call forced forward service routing policy.
          name: forcedForwardEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Call gets transferred to this number when action is set to TRANSFER.
            This can also be an extension.
          name: transferPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies if an announcement plays to callers before applying the action.
          name: playAnnouncementBeforeEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Specifies what type of announcement to be played.
          name: audioMessageSelection
          param_attrs:
          - doc: Default Audio Message Selection.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Custom Audio Message Selection.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: List of pre-configured Announcement Audio Files when audioMessageSelection
            is CUSTOM.
          name: audioFiles
          param_attrs:
          - doc: Name of the file.
            name: fileName
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Media Type of the audio file.
            name: mediaFileType
            param_attrs:
            - doc: WMA File Extension.
              name: WMA
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: WAV File Extension.
              name: WAV
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 3GP File Extension.
              name: 3GP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: array[CallQueueAudioFilesObject]
          type_spec: null
        Query Parameters:
        - doc: Update call queue settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this call queue exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update setting for the call queue with the matching ID.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: "Allow admin to view default/configured Stranded Calls settings.\nStranded-All\
        \ agents logoff Policy: If the last agent staffing a queue \u201Cunjoins\u201D\
        \ the queue or signs out, then all calls in the queue become stranded.\nStranded-Unavailable\
        \ Policy: This policy allows for the configuration of the processing of calls\
        \ that are in a staffed queue when all agents are unavailable.\nRetrieving\
        \ call queue Stranded Calls details requires a full or read-only administrator\
        \ auth token with a scope of spark-admin:telephony_config_read."
      documentation:
        doc: Get Details for a Call Queue Stranded Calls
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-details-for-a-call-queue-stranded-calls
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/strandedCalls
        http_method: GET
      header: Get Details for a Call Queue Stranded Calls
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve call queue settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Specifies call processing action type.
          name: action
          param_attrs:
          - doc: Call remains in the queue.
            name: NONE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are removed from the queue and are provided with the Busy treatment.
              If the queue is configured with the Call Forwarding Busy or the Voice
              Messaging service, then the call is handled accordingly.
            name: BUSY
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are removed from the queue and are transferred to the configured
              transferPhoneNumber.
            name: TRANSFER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are handled according to the Night Service configuration. If
              the Night Service action is set to none, then this is equivalent to
              this policy being set to none (that is, calls remain in the queue).
            name: NIGHT_SERVICE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are removed from the queue and are provided with ringing until
              the caller releases the call. The ringback tone played to the caller
              is localized according to the country code of the caller.
            name: RINGING
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are removed from the queue and are provided with an announcement
              that is played in a loop until the caller releases the call.
            name: ANNOUNCEMENT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Call gets transferred to this number when action is set to TRANSFER.
            This can also be an extension.
          name: transferPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies what type of announcement to be played.
          name: audioMessageSelection
          param_attrs:
          - doc: Default Audio Message Selection.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Custom Audio Message Selection.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: List of Announcement Audio Files when audioMessageSelection is CUSTOM.
          name: audioFiles
          param_attrs:
          - doc: Name of the file.
            name: fileName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Media Type of the audio file.
            name: mediaFileType
            param_attrs:
            - doc: WMA File Extension.
              name: WMA
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: WAV File Extension.
              name: WAV
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 3GP File Extension.
              name: 3GP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[CallQueueAudioFilesObject]
          type_spec: null
        URI Parameters:
        - doc: Retrieve settings for a call queue in this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Retrieve settings for the call queue with this identifier.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the designated Call Stranded Calls Service.

        Allow admin to modify configured Stranded Calls settings.

        Updating a call queue stranded calls requires a full administrator auth token
        with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Update a Call Queue Stranded Calls service
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/update-a-call-queue-stranded-calls-service
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/queues/{queueId}/strandedCalls
        http_method: PUT
      header: Update a Call Queue Stranded Calls service
      parameters_and_response:
        Body Parameters:
        - doc: Specifies call processing action type.
          name: action
          param_attrs:
          - doc: Call remains in the queue.
            name: NONE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are removed from the queue and are provided with the Busy treatment.
              If the queue is configured with the Call Forwarding Busy or the Voice
              Messaging service, then the call is handled accordingly.
            name: BUSY
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are removed from the queue and are transferred to the configured
              transferPhoneNumber.
            name: TRANSFER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are handled according to the Night Service configuration. If
              the Night Service action is set to none, then this is equivalent to
              this policy being set to none (that is, calls remain in the queue).
            name: NIGHT_SERVICE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are removed from the queue and are provided with ringing until
              the caller releases the call. The ringback tone played to the caller
              is localized according to the country code of the caller.
            name: RINGING
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are removed from the queue and are provided with an announcement
              that is played in a loop until the caller releases the call.
            name: ANNOUNCEMENT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: Call gets transferred to this number when action is set to TRANSFER.
            This can also be an extension.
          name: transferPhoneNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies what type of announcement to be played.
          name: audioMessageSelection
          param_attrs:
          - doc: Default Audio Message Selection.
            name: DEFAULT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Custom Audio Message Selection.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: List of pre-configured Announcement Audio Files when audioMessageSelection
            is CUSTOM.
          name: audioFiles
          param_attrs:
          - doc: Name of the file.
            name: fileName
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Media Type of the audio file.
            name: mediaFileType
            param_attrs:
            - doc: WMA File Extension.
              name: WMA
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: WAV File Extension.
              name: WAV
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 3GP File Extension.
              name: 3GP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: required
          param_object: []
          type: array[CallQueueAudioFilesObject]
          type_spec: null
        Query Parameters:
        - doc: Update call queue settings from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Location in which this call queue exists.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Update setting for the call queue with the matching ID.
          name: queueId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get device override settings for a location.

        This requires a full or read-only administrator auth token with a scope of
        spark-admin:telephony_config_read.'
      documentation:
        doc: Get Location Device Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-location-device-settings
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/devices/settings
        http_method: GET
      header: Get Location Device Settings
      parameters_and_response:
        Query Parameters:
        - doc: Organization in which the device resides.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Indicates the customization object of the device settings.
          name: customizations
          param_attrs:
          - doc: Applicable device settings for an ATA device.
            name: ata
            param_attrs:
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of an Audio Codec Priority Object.
                name: selection
                param_attrs:
                - doc: Indicates the regional selection type for audio codec priority.
                  name: REGIONAL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Indicates the custom selection type for audio codec priority.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: SelectionType
                type_spec: null
              - doc: Indicates the primary Audio Codec.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the secondary Audio Codec.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the tertiary Audio Codec.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AudioCodecPriorityObject
              type_spec: null
            - doc: DTMF Detection Tx Mode selection for Cisco ATA devices.
              name: ataDtmfMode
              param_attrs:
              - doc: A DTMF digit requires an extra hold time after detection and
                  the DTMF level threshold is raised to -20 dBm.
                name: STRICT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Normal threshold mode.
                name: NORMAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AtaDtmfModeObject
              type_spec: null
            - doc: Method for transmitting DTMF signals to the far end.
              name: ataDtmfMethod
              param_attrs:
              - doc: Sends DTMF by using the audio path.
                name: INBAND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Audio video transport. Sends DTMF as AVT events.
                name: AVT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Uses InBand or AVT based on the outcome of codec negotiation.
                name: AUTO
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AtaDtmfMethodObject
              type_spec: null
            - doc: Enable/disable Cisco Discovery Protocol for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Enable/disable quality of service tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Denotes whether the VLAN object of an ATA is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: The value of the VLAN Object of DECT.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: VlanObject
              type_spec: null
            param_object: []
            type: ataObject
            type_spec: null
          - doc: Applicable device settings for an MPP device.
            name: mpp
            param_attrs:
            - doc: Indicates whether the PNAC of MPP object is enabled or not.
              name: pnacEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of the Audio Codec Priority Object for
                  an MPP object.
                name: selection
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the primary Audio Codec for an MPP object.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the secondary Audio Codec for an MPP object.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the tertiary Audio Codec for an MPP object.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: MppAudioCodecPriorityObject
              type_spec: null
            - doc: Choose the length of time (in minutes) for the phone's backlight
                to remain on.
              name: backlightTimer
              param_attrs:
              - doc: ''
                name: ONE_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FIVE_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRTY_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ALWAYS_ON
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: 'OFF'
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TEN_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TWENTY_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRTY_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: BacklightTimerObject
              type_spec: null
            - doc: Holds the background object of MPP Object.
              name: background
              param_attrs:
              - doc: Indicates that there will be no background image set for the
                  devices.
                name: NONE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that dark blue background image will be set for the
                  devices.
                name: DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that Cisco themed dark blue background image will be
                  set for the devices.
                name: CISCO_DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that Cisco Webex dark blue background image will be
                  set for the devices.
                name: WEBEX_DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that a custom background image will be set for the
                  devices.
                name: CUSTOM_BACKGROUND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: When this option is selected, a field 'Custom Background URL'
                  needs to be added with the image url. URLs provided must link directly
                  to an image file and be in HTTP, HTTPS, or filepath format.
                name: customUrl
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: BackgroundImage
              type_spec: null
            - doc: The display name that appears on the phone screen.
              name: displayNameFormat
              param_attrs:
              - doc: Indicates that devices will display the person's phone number,
                  or if a person doesn't have a phone number, the location number
                  will be displayed.
                name: PERSON_NUMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in first name then
                  last name format.
                name: PERSON_FIRST_THEN_LAST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in last name then
                  first name format.
                name: PERSON_LAST_THEN_FIRST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: DisplayNameSelection
              type_spec: null
            - doc: Allows you to enable/disable CDP for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Choose the desired logging level for an MPP devices.
              name: defaultLoggingLevel
              param_attrs:
              - doc: Enables standard logging.
                name: STANDARD
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Enables detailed debugging logging.
                name: DEBUGGING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: DefaultLoggingLevelObject
              type_spec: null
            - doc: Enable/disable Do-Not-Disturb capabilities for Multi-Platform Phones.
              name: dndServicesEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Chooses the location of the Call Queue Agent Login/Logout softkey
                on Multi-Platform Phones.
              name: displayCallqueueAgentSoftkeys
              param_attrs:
              - doc: ''
                name: FRONT_PAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: LAST_PAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: DisplayCallqueueAgentSoftkeysObject
              type_spec: null
            - doc: Choose the duration (in hours) of Hoteling guest login.
              name: hotelingGuestAssociationTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Holds the Acd object value.
              name: acd
              param_attrs:
              - doc: Indicates whether the ACD object is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates the call queue agent soft key value of an ACD object.
                name: displayCallqueueAgentSoftkeys
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AcdObject
              type_spec: null
            - doc: Indicates the short inter digit timer value.
              name: shortInterdigitTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates the long inter digit timer value..
              name: longInterdigitTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Line key labels define the format of what's shown next to line
                keys.
              name: lineKeyLabelFormat
              param_attrs:
              - doc: This will display the person extension, or if a person doesn't
                  have an extension, the person's first name will be displayed.
                name: PERSON_EXTENSION
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in first name then
                  last name format.
                name: PERSON_FIRST_THEN_LAST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in last name then
                  first name format.
                name: PERSON_LAST_THEN_FIRST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: LineKeyLabelSelection
              type_spec: null
            - doc: LED patterns define lighting schemes for the line keys on the MPP
                devices. Note that this parameter is not supported on the MPP 8875
              name: lineKeyLEDPattern
              param_attrs:
              - doc: ''
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: PRESET_1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: LineKeyLEDPattern
              type_spec: null
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Enable/disable user-level access to the web interface of Multi-Platform
                Phones.
              name: mppUserWebAccessEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Select up to 10 Multicast Group URLs (each with a unique Listening
                Port).
              name: multicast
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            - doc: Specify the amount of time (in seconds) that a phone can remain
                off-hook.
              name: offHookTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Select the language for your MPP phone. Setting this overrides
                the default language setting in place for your provisioned location.
              name: phoneLanguage
              param_attrs:
              - doc: Indicates a person's announcement language.
                name: PERSON_LANGUAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ARABIC
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: BULGARIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CATALAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CHINESE_SIMPLIFIED
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CHINESE_TRADITIONAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CROATIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CZECH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DANISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DUTCH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ENGLISH_UNITED_STATES
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ENGLISH_UNITED_KINGDOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FINNISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRENCH_CANADA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRENCH_FRANCE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: GERMAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: GREEK
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: HEBREW
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: HUNGARIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ITALIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JAPANESE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: KOREAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NORWEGIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: POLISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: PORTUGUESE_PORTUGAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: RUSSIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SPANISH_COLOMBIA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SPANISH_SPAIN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SLOVAK
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SWEDISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SLOVENIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TURKISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: UKRAINE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: PhoneLanguage
              type_spec: null
            - doc: Enable/disable the Power-Over-Ethernet mode for Multi-Platform
                Phones.
              name: poeMode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Allows you to enable/disable tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify the amount of inactive time needed (in seconds) before
                the phone's screen saver activates.
              name: screenTimeout
              param_attrs:
              - doc: Indicates whether the Screen Time object is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates the value of screen timeout.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: ScreenTimeoutObject
              type_spec: null
            - doc: Enable/disable the use of the USB ports on Multi-Platform phones.
              name: usbPortsEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Indicates whether the VLAN object of an MPP is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates the value of a VLAN object for an MPP object.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Indicates the PC port value of a VLAN object for an MPP object.
                name: pcPort
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: MppVlanObject
              type_spec: null
            - doc: Specify the Wi-Fi SSID and password for wireless-enabled MPP phones.
              name: wifiNetwork
              param_attrs:
              - doc: Indicates whether the wifi network is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Authentication method of wifi network.
                name: authenticationMethod
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: SSID name of the wifi network.
                name: ssidName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: User Id of the wifi network.
                name: userId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: WifiNetworkObject
              type_spec: null
            param_object: []
            type: mppObject
            type_spec: null
          param_object: []
          type: CustomizationDeviceLevelObject
          type_spec: null
        - doc: Indicates if customization is allowed at a location level. If true,
            customized at a location level. If false, not customized; uses customer-level
            configuration.
          name: customEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Customer devices setting update status. If true, an update is in progress
            (no further changes are allowed). If false, no update in progress (changes
            are allowed).
          name: updateInProgress
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of devices that will be updated.
          name: deviceCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Indicates the last updated time.
          name: lastUpdateTime
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Gets the list of supported devices for an organization.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Supported Devices
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-supported-devices
        endpoint: https://webexapis.com/v1/telephony/config/supportedDevices
        http_method: GET
      header: Read the List of Supported Devices
      parameters_and_response:
        Query Parameters:
        - doc: List supported devices for an organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: List of supported devices.
          name: devices
          param_attrs:
          - doc: Model name of the device.
            name: model
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of the device.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type of the device.
            name: type
            param_attrs:
            - doc: Cisco Multiplatform Phone
              name: MPP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Analog Telephone Adapters
              name: ATA
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: GENERIC Session Initiation Protocol
              name: GENERIC_SIP
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Esim Supported Webex Go
              name: ESIM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: TypeObject
            type_spec: null
          - doc: Manufacturer of the device.
            name: manufacturer
            param_attrs:
            - doc: Devices manufactured by Cisco.
              name: CISCO
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Devices manufactured by a third-party that are approved by a Cisco
                account manager to be enabled for provisioning in the control hub.
              name: THIRD_PARTY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: ManufacturerObject
            type_spec: null
          - doc: Users who manage the device.
            name: managedBy
            param_attrs:
            - doc: Devices managed by Cisco.
              name: CISCO
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Devices managed by a customer that are approved by a Cisco account
                manager to be enabled for provisioning in the control hub.
              name: CUSTOMER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: ManagedByObject
            type_spec: null
          - doc: List of places the device is supported for.
            name: supportedFor
            param_attrs:
            - doc: ''
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[SupportedForObject]
            type_spec: null
          - doc: Onboarding method.
            name: onboardingMethod
            param_attrs:
            - doc: ''
              name: MAC_ADDRESS
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: ACTIVATION_CODE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: NONE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[OnboardingMethodObject]
            type_spec: null
          - doc: Enables / Disables layout configuration for devices.
            name: allowConfigureLayoutEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of port lines.
            name: numberOfLinePorts
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates whether Kem support is enabled or not.
            name: kemSupportEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Module count.
            name: kemModuleCount
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Key expansion module type of the device.
            name: kemModuleType
            param_attrs:
            - doc: ''
              name: KEM_14_KEYS
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: KEM_18_KEYS
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[KemModuleTypeObject]
            type_spec: null
          - doc: Enables / Disables the upgrade channel.
            name: upgradeChannelEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The default upgrade channel.
            name: defaultUpgradeChannel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Enables / disables the additional primary line appearances.
            name: additionalPrimaryLineAppearancesEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Enables / disables Basic emergency nomadic.
            name: basicEmergencyNomadicEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Enables / disables customized behavior support on devices.
            name: customizedBehaviorsEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Enables / disables configuring port support on device.
            name: allowConfigurePortsEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Enables / disables customizable line label.
            name: customizableLineLabelEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[DeviceObject]
          type_spec: null
    - doc: 'Get device override settings for an organization.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the device override settings for a organization
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-device-override-settings-for-a-organization
        endpoint: https://webexapis.com/v1/telephony/config/devices/settings
        http_method: GET
      header: Read the device override settings for a organization
      parameters_and_response:
        Query Parameters:
        - doc: List supported devices for an organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Customization object of the device settings.
          name: customizations
          param_attrs:
          - doc: Settings that are applicable to ATA devices.
            name: ata
            param_attrs:
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of an Audio Codec Priority Object.
                name: selection
                param_attrs:
                - doc: Indicates the regional selection type for audio codec priority.
                  name: REGIONAL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Indicates the custom selection type for audio codec priority.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: SelectionType
                type_spec: null
              - doc: Indicates the primary Audio Codec.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the secondary Audio Codec.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the tertiary Audio Codec.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AudioCodecPriorityObject
              type_spec: null
            - doc: DTMF Detection Tx Mode selection for Cisco ATA devices.
              name: ataDtmfMode
              param_attrs:
              - doc: A DTMF digit requires an extra hold time after detection and
                  the DTMF level threshold is raised to -20 dBm.
                name: STRICT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Normal threshold mode.
                name: NORMAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AtaDtmfModeObject
              type_spec: null
            - doc: Method for transmitting DTMF signals to the far end.
              name: ataDtmfMethod
              param_attrs:
              - doc: Sends DTMF by using the audio path.
                name: INBAND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Audio video transport. Sends DTMF as AVT events.
                name: AVT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Uses InBand or AVT based on the outcome of codec negotiation.
                name: AUTO
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AtaDtmfMethodObject
              type_spec: null
            - doc: Enable/disable Cisco Discovery Protocol for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Enable/disable quality of service tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Denotes whether the VLAN object of an ATA is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: The value of the VLAN Object of DECT.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: VlanObject
              type_spec: null
            param_object: []
            type: ataObject
            type_spec: null
          - doc: Settings that are applicable to DECT devices.
            name: dect
            param_attrs:
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of an Audio Codec Priority Object.
                name: selection
                param_attrs:
                - doc: Indicates the regional selection type for audio codec priority.
                  name: REGIONAL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Indicates the custom selection type for audio codec priority.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: SelectionType
                type_spec: null
              - doc: Indicates the primary Audio Codec.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the secondary Audio Codec.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the tertiary Audio Codec.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: DectAudioCodecPriorityObject
              type_spec: null
            - doc: Enable/disable Cisco Discovery Protocol for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify the destination number to be dialled from the DECT Handset
                top button when pressed.
              name: dect6825HandsetEmergencyNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify up to 3 multicast group URLs each with a unique listening
                port.
              name: multicast
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Enable/disable quality of service tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Denotes whether the VLAN object of DECT is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Value of the VLAN Object of DECT.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: DectVlanObject
              type_spec: null
            param_object: []
            type: dectObject
            type_spec: null
          - doc: Settings that are applicable to MPP devices.
            name: mpp
            param_attrs:
            - doc: Indicates whether the PNAC of MPP object is enabled or not.
              name: pnacEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of the Audio Codec Priority Object for
                  an MPP object.
                name: selection
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the primary Audio Codec for an MPP object.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the secondary Audio Codec for an MPP object.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the tertiary Audio Codec for an MPP object.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: MppAudioCodecPriorityObject
              type_spec: null
            - doc: Choose the length of time (in minutes) for the phone's backlight
                to remain on.
              name: backlightTimer
              param_attrs:
              - doc: ''
                name: ONE_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FIVE_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRTY_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ALWAYS_ON
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: 'OFF'
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TEN_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TWENTY_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRTY_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: BacklightTimerObject
              type_spec: null
            - doc: Holds the background object of MPP Object.
              name: background
              param_attrs:
              - doc: Indicates that there will be no background image set for the
                  devices.
                name: NONE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that dark blue background image will be set for the
                  devices.
                name: DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that Cisco themed dark blue background image will be
                  set for the devices.
                name: CISCO_DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that Cisco Webex dark blue background image will be
                  set for the devices.
                name: WEBEX_DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that a custom background image will be set for the
                  devices.
                name: CUSTOM_BACKGROUND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: When this option is selected, a field 'Custom Background URL'
                  needs to be added with the image url. URLs provided must link directly
                  to an image file and be in HTTP, HTTPS, or filepath format.
                name: customUrl
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: BackgroundImage
              type_spec: null
            - doc: The display name that appears on the phone screen.
              name: displayNameFormat
              param_attrs:
              - doc: Indicates that devices will display the person's phone number,
                  or if a person doesn't have a phone number, the location number
                  will be displayed.
                name: PERSON_NUMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in first name then
                  last name format.
                name: PERSON_FIRST_THEN_LAST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in last name then
                  first name format.
                name: PERSON_LAST_THEN_FIRST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: DisplayNameSelection
              type_spec: null
            - doc: Allows you to enable/disable CDP for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Choose the desired logging level for an MPP devices.
              name: defaultLoggingLevel
              param_attrs:
              - doc: Enables standard logging.
                name: STANDARD
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Enables detailed debugging logging.
                name: DEBUGGING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: DefaultLoggingLevelObject
              type_spec: null
            - doc: Enable/disable Do-Not-Disturb capabilities for Multi-Platform Phones.
              name: dndServicesEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Chooses the location of the Call Queue Agent Login/Logout softkey
                on Multi-Platform Phones.
              name: displayCallqueueAgentSoftkeys
              param_attrs:
              - doc: ''
                name: FRONT_PAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: LAST_PAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: DisplayCallqueueAgentSoftkeysObject
              type_spec: null
            - doc: Choose the duration (in hours) of Hoteling guest login.
              name: hotelingGuestAssociationTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Holds the Acd object value.
              name: acd
              param_attrs:
              - doc: Indicates whether the ACD object is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates the call queue agent soft key value of an ACD object.
                name: displayCallqueueAgentSoftkeys
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: AcdObject
              type_spec: null
            - doc: Indicates the short inter digit timer value.
              name: shortInterdigitTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates the long inter digit timer value..
              name: longInterdigitTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Line key labels define the format of what's shown next to line
                keys.
              name: lineKeyLabelFormat
              param_attrs:
              - doc: This will display the person extension, or if a person doesn't
                  have an extension, the person's first name will be displayed.
                name: PERSON_EXTENSION
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in first name then
                  last name format.
                name: PERSON_FIRST_THEN_LAST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in last name then
                  first name format.
                name: PERSON_LAST_THEN_FIRST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: LineKeyLabelSelection
              type_spec: null
            - doc: LED patterns define lighting schemes for the line keys on the MPP
                devices. Note that this parameter is not supported on the MPP 8875
              name: lineKeyLEDPattern
              param_attrs:
              - doc: ''
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: PRESET_1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: LineKeyLEDPattern
              type_spec: null
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Enable/disable user-level access to the web interface of Multi-Platform
                Phones.
              name: mppUserWebAccessEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Select up to 10 Multicast Group URLs (each with a unique Listening
                Port).
              name: multicast
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: null
            - doc: Specify the amount of time (in seconds) that a phone can remain
                off-hook.
              name: offHookTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Select the language for your MPP phone. Setting this overrides
                the default language setting in place for your provisioned location.
              name: phoneLanguage
              param_attrs:
              - doc: Indicates a person's announcement language.
                name: PERSON_LANGUAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ARABIC
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: BULGARIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CATALAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CHINESE_SIMPLIFIED
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CHINESE_TRADITIONAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CROATIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CZECH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DANISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DUTCH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ENGLISH_UNITED_STATES
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ENGLISH_UNITED_KINGDOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FINNISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRENCH_CANADA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRENCH_FRANCE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: GERMAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: GREEK
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: HEBREW
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: HUNGARIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ITALIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JAPANESE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: KOREAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NORWEGIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: POLISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: PORTUGUESE_PORTUGAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: RUSSIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SPANISH_COLOMBIA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SPANISH_SPAIN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SLOVAK
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SWEDISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SLOVENIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TURKISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: UKRAINE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: PhoneLanguage
              type_spec: null
            - doc: Enable/disable the Power-Over-Ethernet mode for Multi-Platform
                Phones.
              name: poeMode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Allows you to enable/disable tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify the amount of inactive time needed (in seconds) before
                the phone's screen saver activates.
              name: screenTimeout
              param_attrs:
              - doc: Indicates whether the Screen Time object is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates the value of screen timeout.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: ScreenTimeoutObject
              type_spec: null
            - doc: Enable/disable the use of the USB ports on Multi-Platform phones.
              name: usbPortsEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Indicates whether the VLAN object of an MPP is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates the value of a VLAN object for an MPP object.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Indicates the PC port value of a VLAN object for an MPP object.
                name: pcPort
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: MppVlanObject
              type_spec: null
            - doc: Specify the Wi-Fi SSID and password for wireless-enabled MPP phones.
              name: wifiNetwork
              param_attrs:
              - doc: Indicates whether the wifi network is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Authentication method of wifi network.
                name: authenticationMethod
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: SSID name of the wifi network.
                name: ssidName
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: User Id of the wifi network.
                name: userId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: WifiNetworkObject
              type_spec: null
            param_object: []
            type: mppObject
            type_spec: null
          param_object: []
          type: CustomizationObject
          type_spec: null
        - doc: Progress of the device update.
          name: updateInProgress
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Device count.
          name: deviceCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Last updated time.
          name: lastUpdateTime
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
    - doc: 'Get DECT device type list with base stations and line ports supported
        count. This is a static list.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the DECT device type list
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-dect-device-type-list
        endpoint: https://webexapis.com/v1/telephony/config/devices/dects/supportedDevices
        http_method: GET
      header: Read the DECT device type list
      parameters_and_response:
        Query Parameters:
        - doc: ''
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Contains a list of devices.
          name: devices
          param_attrs:
          - doc: Model name of the device.
            name: model
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of the device.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates number of base stations.
            name: numberOfBaseStations
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates number of port lines,
            name: numberOfLinePorts
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates number of supported registrations.
            name: numberOfRegistrationsSupported
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: array[DectDeviceList]
          type_spec: null
    - doc: 'Validate a list of MAC addresses.

        Validating this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Validate a list of MAC address
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/validate-a-list-of-mac-address
        endpoint: https://webexapis.com/v1/telephony/config/devices/actions/validateMacs/invoke
        http_method: POST
      header: Validate a list of MAC address
      parameters_and_response:
        Body Parameters:
        - doc: 'MAC addresses to be validated.

            Possible values: {["ab125678cdef", "00005E0053B4"]}'
          name: macs
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        Query Parameters:
        - doc: Validate the mac address(es) for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Status of MAC address.
          name: status
          param_attrs:
          - doc: ''
            name: OK
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: ERRORS
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Contains an array of all the MAC address provided and their statuses.
          name: macStatus
          param_attrs:
          - doc: MAC address.
            name: mac
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State of the MAC address.
            name: state
            param_attrs:
            - doc: The requested MAC address is available.
              name: AVAILABLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The requested MAC address is unavailable.
              name: UNAVAILABLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The requested MAC address is duplicated.
              name: DUPLICATE_IN_LIST
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The requested MAC address is invalid.
              name: INVALID
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: MAC address validation error code.
            name: errorCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Provides a status message about the MAC address.
            name: message
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[MacStatusObject]
          type_spec: null
    - doc: 'Change device settings across organization or locations jobs.

        Performs bulk and asynchronous processing for all types of device settings
        initiated by organization and system admins in a stateful persistent manner.
        This job will modify the requested device settings across all the devices.
        Whenever a location ID is specified in the request, it will modify the requested
        device settings only for the devices that are part of the provided location
        within an organization.

        Returns a unique job ID which can then be utilized further to retrieve status
        and errors for the same.

        Only one job per customer can be running at any given time within the same
        organization. An attempt to run multiple jobs at the same time will result
        in a 409 error response.

        Running a job requires a full or read-only administrator auth token with a
        scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Change Device Settings Across Organization Or Location Job
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/change-device-settings-across-organization-or-location-job
        endpoint: https://webexapis.com/v1/telephony/config/jobs/devices/callDeviceSettings
        http_method: POST
      header: Change Device Settings Across Organization Or Location Job
      parameters_and_response:
        Body Parameters:
        - doc: Location within an organization where changes of device setings will
            be applied to all the devices within it.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates if all the devices within this location will be customized
            with new requested customizations(if set to true) or will be overridden
            with the one at organization level (if set to false or any other value).
            This field has no effect when the job is being triggered at organization
            level.
          name: locationCustomizationsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Indicates the settings for ATA devices, DECT devices and MPP devices.
          name: customizations
          param_attrs:
          - doc: Settings that are applicable to ATA devices.
            name: ata
            param_attrs:
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of an Audio Codec Priority Object.
                name: selection
                param_attrs:
                - doc: Indicates the regional selection type for audio codec priority.
                  name: REGIONAL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Indicates the custom selection type for audio codec priority.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: Indicates the primary Audio Codec.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the secondary Audio Codec.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the tertiary Audio Codec.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            - doc: DTMF Detection Tx Mode selection for Cisco ATA devices.
              name: ataDtmfMode
              param_attrs:
              - doc: A DTMF digit requires an extra hold time after detection and
                  the DTMF level threshold is raised to -20 dBm.
                name: STRICT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Normal threshold mode.
                name: NORMAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Method for transmitting DTMF signals to the far end.
              name: ataDtmfMethod
              param_attrs:
              - doc: Sends DTMF by using the audio path.
                name: INBAND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Audio video transport. Sends DTMF as AVT events.
                name: AVT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Uses InBand or AVT based on the outcome of codec negotiation.
                name: AUTO
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Enable/disable Cisco Discovery Protocol for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Enable/disable quality of service tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Denotes whether the VLAN object of an ATA is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: required
              - doc: The value of the VLAN Object of DECT.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            param_object: []
            type: ataObject
            type_spec: null
          - doc: Settings that are applicable to DECT devices.
            name: dect
            param_attrs:
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of an Audio Codec Priority Object.
                name: selection
                param_attrs:
                - doc: Indicates the regional selection type for audio codec priority.
                  name: REGIONAL
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Indicates the custom selection type for audio codec priority.
                  name: CUSTOM
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: required
              - doc: Indicates the primary Audio Codec.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the secondary Audio Codec.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the tertiary Audio Codec.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            - doc: Enable/disable Cisco Discovery Protocol for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Specify the destination number to be dialled from the DECT Handset
                top button when pressed.
              name: dect6825HandsetEmergencyNumber
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Specify up to 3 multicast group URLs each with a unique listening
                port.
              name: multicast
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Enable/disable quality of service tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Denotes whether the VLAN object of DECT is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: required
              - doc: Value of the VLAN Object of DECT.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            param_object: []
            type: dectObject
            type_spec: null
          - doc: Settings that are applicable to MPP devices.
            name: mpp
            param_attrs:
            - doc: Indicates whether the PNAC of MPP object is enabled or not.
              name: pnacEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Choose up to three predefined codec priority options available
                for your region.
              name: audioCodecPriority
              param_attrs:
              - doc: Indicates the selection of the Audio Codec Priority Object for
                  an MPP object.
                name: selection
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the primary Audio Codec for an MPP object.
                name: primary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the secondary Audio Codec for an MPP object.
                name: secondary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Indicates the tertiary Audio Codec for an MPP object.
                name: tertiary
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            - doc: Choose the length of time (in minutes) for the phone's backlight
                to remain on.
              name: backlightTimer
              param_attrs:
              - doc: ''
                name: ONE_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FIVE_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRTY_M
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ALWAYS_ON
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: 'OFF'
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TEN_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TWENTY_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: THIRTY_S
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Holds the background object of MPP Object.
              name: background
              param_attrs:
              - doc: Indicates that there will be no background image set for the
                  devices.
                name: NONE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that dark blue background image will be set for the
                  devices.
                name: DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that Cisco themed dark blue background image will be
                  set for the devices.
                name: CISCO_DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that Cisco Webex dark blue background image will be
                  set for the devices.
                name: WEBEX_DARK_BLUE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that a custom background image will be set for the
                  devices.
                name: CUSTOM_BACKGROUND
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: When this option is selected, a field 'Custom Background URL'
                  needs to be added with the image url. URLs provided must link directly
                  to an image file and be in HTTP, HTTPS, or filepath format.
                name: customUrl
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: The display name that appears on the phone screen.
              name: displayNameFormat
              param_attrs:
              - doc: Indicates that devices will display the person's phone number,
                  or if a person doesn't have a phone number, the location number
                  will be displayed.
                name: PERSON_NUMBER
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in first name then
                  last name format.
                name: PERSON_FIRST_THEN_LAST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in last name then
                  first name format.
                name: PERSON_LAST_THEN_FIRST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Allows you to enable/disable CDP for local devices.
              name: cdpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Choose the desired logging level for an MPP devices.
              name: defaultLoggingLevel
              param_attrs:
              - doc: Enables standard logging.
                name: STANDARD
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Enables detailed debugging logging.
                name: DEBUGGING
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Enable/disable Do-Not-Disturb capabilities for Multi-Platform Phones.
              name: dndServicesEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Chooses the location of the Call Queue Agent Login/Logout softkey
                on Multi-Platform Phones.
              name: displayCallqueueAgentSoftkeys
              param_attrs:
              - doc: ''
                name: FRONT_PAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: LAST_PAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Choose the duration (in hours) of Hoteling guest login.
              name: hotelingGuestAssociationTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Holds the Acd object value.
              name: acd
              param_attrs:
              - doc: Indicates whether the ACD object is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: required
              - doc: Indicates the call queue agent soft key value of an ACD object.
                name: displayCallqueueAgentSoftkeys
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            - doc: Indicates the short inter digit timer value.
              name: shortInterdigitTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Indicates the long inter digit timer value..
              name: longInterdigitTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Line key labels define the format of what's shown next to line
                keys.
              name: lineKeyLabelFormat
              param_attrs:
              - doc: This will display the person extension, or if a person doesn't
                  have an extension, the person's first name will be displayed.
                name: PERSON_EXTENSION
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in first name then
                  last name format.
                name: PERSON_FIRST_THEN_LAST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates that devices will display the name in last name then
                  first name format.
                name: PERSON_LAST_THEN_FIRST_NAME
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: LED patterns define lighting schemes for the line keys on the MPP
                devices. Note that this parameter is not supported on the MPP 8875
              name: lineKeyLEDPattern
              param_attrs:
              - doc: ''
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: PRESET_1
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Enable/disable Link Layer Discovery Protocol for local devices.
              name: lldpEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Enable/disable user-level access to the web interface of Multi-Platform
                Phones.
              name: mppUserWebAccessEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: 'Select up to 10 Multicast Group URLs (each with a unique Listening
                Port).

                '
              name: multicast
              param_attrs: []
              param_object: []
              type: array[string]
              type_spec: required
            - doc: Specify the amount of time (in seconds) that a phone can remain
                off-hook.
              name: offHookTimer
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Select the language for your MPP phone. Setting this overrides
                the default language setting in place for your provisioned location.
              name: phoneLanguage
              param_attrs:
              - doc: Indicates a person's announcement language.
                name: PERSON_LANGUAGE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ARABIC
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: BULGARIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CATALAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CHINESE_SIMPLIFIED
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CHINESE_TRADITIONAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CROATIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: CZECH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DANISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: DUTCH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ENGLISH_UNITED_STATES
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ENGLISH_UNITED_KINGDOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FINNISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRENCH_CANADA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: FRENCH_FRANCE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: GERMAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: GREEK
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: HEBREW
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: HUNGARIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: ITALIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: JAPANESE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: KOREAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: NORWEGIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: POLISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: PORTUGUESE_PORTUGAL
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: RUSSIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SPANISH_COLOMBIA
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SPANISH_SPAIN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SLOVAK
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SWEDISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: SLOVENIAN
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: TURKISH
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: UKRAINE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: required
            - doc: Enable/disable the Power-Over-Ethernet mode for Multi-Platform
                Phones.
              name: poeMode
              param_attrs: []
              param_object: []
              type: string
              type_spec: required
            - doc: Allows you to enable/disable tagging of packets from the local
                device to the Webex Calling platform.
              name: qosEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Specify the amount of inactive time needed (in seconds) before
                the phone's screen saver activates.
              name: screenTimeout
              param_attrs:
              - doc: Indicates whether the Screen Time object is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: required
              - doc: Indicates the value of screen timeout.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            - doc: Enable/disable the use of the USB ports on Multi-Platform phones.
              name: usbPortsEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Specify a numeric Virtual LAN ID for devices.
              name: vlan
              param_attrs:
              - doc: Indicates whether the VLAN object of an MPP is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: required
              - doc: Indicates the value of a VLAN object for an MPP object.
                name: value
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Indicates the PC port value of a VLAN object for an MPP object.
                name: pcPort
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: object
              type_spec: required
            - doc: Specify the Wi-Fi SSID and password for wireless-enabled MPP phones.
              name: wifiNetwork
              param_attrs:
              - doc: Indicates whether the wifi network is enabled.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: required
              - doc: Authentication method of wifi network.
                name: authenticationMethod
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: SSID name of the wifi network.
                name: ssidName
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: User Id of the wifi network.
                name: userId
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              param_object: []
              type: object
              type_spec: required
            param_object: []
            type: mppObject
            type_spec: null
          param_object: []
          type: CustomizationObject
          type_spec: null
        Query Parameters:
        - doc: Apply change device settings for all the devices under this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Job name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier of the job.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Job type.
          name: jobType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to track the flow of HTTP requests.
          name: trackingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify which user has run the job.
          name: sourceUserId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the customer who has run the job.
          name: sourceCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the customer for which the job was run.
          name: targetCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the instance of the job.
          name: instanceId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Displays the most recent step's execution status. Contains execution
            statuses of all the steps involved in the execution of the job.
          name: jobExecutionStatus
          param_attrs:
          - doc: Unique identifier that identifies each instance of the job.
            name: id
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Last updated time (in UTC format) post one of the step execution
              completion.
            name: lastUpdated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Displays status for overall steps that are part of the job.
            name: statusMessage
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Exit Code for a job.
            name: exitCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Job creation time in UTC format.
            name: createdTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Time lapsed since the job execution started.
            name: timeElapsed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[JobExecutionStatusObject1]
          type_spec: null
        - doc: Indicates the most recent status (STARTING, STARTED, COMPLETED, FAILED)
            of the job at the time of invocation.
          name: latestExecutionStatus
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates operation type that was carried out.
          name: operationType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique location identifier for which the job was run.
          name: sourceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique location identifier for which the numbers have been moved.
          name: targetLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Job statistics.
          name: counts
          param_attrs:
          - doc: Indicates the total number of phone numbers requested to be moved.
            name: totalNumbers
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers successfully deleted.
            name: numbersDeleted
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers successfully moved.
            name: numbersMoved
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers failed.
            name: numbersFailed
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: CountObject
          type_spec: null
    - doc: 'List change device settings jobs.

        Lists all the jobs for jobType calldevicesettings for the given organization
        in order of most recent one to oldest one irrespective of its status.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:telephony_config_read.'
      documentation:
        doc: List Change Device Settings Jobs
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/list-change-device-settings-jobs
        endpoint: https://webexapis.com/v1/telephony/config/jobs/devices/callDeviceSettings
        http_method: GET
      header: List Change Device Settings Jobs
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve list of 'calldevicesettings' jobs for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start at the zero-based offset in the list of jobs. Default is 0.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Limit the number of jobs returned to this maximum count. Default is
            2000.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: Lists all jobs for the customer in order of most recent one to oldest
            one irrespective of its status.
          name: items
          param_attrs:
          - doc: Job name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier of the job.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Job type.
            name: jobType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier to track the flow of HTTP requests.
            name: trackingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier to identify which user has run the job.
            name: sourceUserId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier to identify the customer who has run the job.
            name: sourceCustomerId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier to identify the customer for which the job was
              run.
            name: targetCustomerId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier to identify the instance of the job.
            name: instanceId
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Displays the most recent step's execution status. Contains execution
              statuses of all the steps involved in the execution of the job.
            name: jobExecutionStatus
            param_attrs:
            - doc: Unique identifier that identifies each instance of the job.
              name: id
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Last updated time (in UTC format) post one of the step execution
                completion.
              name: lastUpdated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Displays status for overall steps that are part of the job.
              name: statusMessage
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Exit Code for a job.
              name: exitCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Job creation time in UTC format.
              name: createdTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Time lapsed since the job execution started.
              name: timeElapsed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[JobExecutionStatusObject1]
            type_spec: null
          - doc: Indicates the most recent status (STARTING, STARTED, COMPLETED, FAILED)
              of the job at the time of invocation.
            name: latestExecutionStatus
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates operation type that was carried out.
            name: operationType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique location identifier for which the job was run.
            name: sourceLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique location identifier for which the numbers have been moved.
            name: targetLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Job statistics.
            name: counts
            param_attrs:
            - doc: Indicates the total number of phone numbers requested to be moved.
              name: totalNumbers
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates the total number of phone numbers successfully deleted.
              name: numbersDeleted
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates the total number of phone numbers successfully moved.
              name: numbersMoved
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates the total number of phone numbers failed.
              name: numbersFailed
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            param_object: []
            type: CountObject
            type_spec: null
          param_object: []
          type: array[StartJobResponse]
          type_spec: null
    - doc: 'Get change device settings job status.

        Provides details of the job with jobId of jobType calldevicesettings.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:telephony_config_read.'
      documentation:
        doc: Get Change Device Settings Job Status
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/get-change-device-settings-job-status
        endpoint: https://webexapis.com/v1/telephony/config/jobs/devices/callDeviceSettings/{jobId}
        http_method: GET
      header: Get Change Device Settings Job Status
      parameters_and_response:
        Response Properties:
        - doc: Job name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier of the job.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Job type.
          name: jobType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to track the flow of HTTP requests.
          name: trackingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify which user has run the job.
          name: sourceUserId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the customer who has run the job.
          name: sourceCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the customer for which the job was run.
          name: targetCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier to identify the instance of the job.
          name: instanceId
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Displays the most recent step's execution status. Contains execution
            statuses of all the steps involved in the execution of the job.
          name: jobExecutionStatus
          param_attrs:
          - doc: Unique identifier that identifies each instance of the job.
            name: id
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Last updated time (in UTC format) post one of the step execution
              completion.
            name: lastUpdated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Displays status for overall steps that are part of the job.
            name: statusMessage
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Exit Code for a job.
            name: exitCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Job creation time in UTC format.
            name: createdTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Time lapsed since the job execution started.
            name: timeElapsed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Status of each step within a job.
            name: stepExecutionStatuses
            param_attrs:
            - doc: Unique identifier that identifies each step in a job.
              name: id
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Step execution start time in UTC format.
              name: startTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Step execution end time in UTC format.
              name: endTime
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Last updated time for a step in UTC format.
              name: lastUpdated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Displays status for a step.
              name: statusMessage
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Exit Code for a step.
              name: exitCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Step name.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Time lapsed since the step execution started.
              name: timeElapsed
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[stepExecutionStatusesObject]
            type_spec: null
          param_object: []
          type: array[JobExecutionStatusObject]
          type_spec: null
        - doc: Indicates the most recent status (STARTING, STARTED, COMPLETED, FAILED)
            of the job at the time of invocation.
          name: latestExecutionStatus
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates the operation type that was carried out.
          name: operationType
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique location identifier for which the job was run.
          name: sourceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique location identifier for which the numbers have been moved.
          name: targetLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location name for which the job was run.
          name: sourceLocationName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location name for which the numbers have been moved.
          name: targetLocationName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Job statistics.
          name: counts
          param_attrs:
          - doc: Indicates the total number of phone numbers requested to be moved.
            name: totalNumbers
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers successfully deleted.
            name: numbersDeleted
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers successfully moved.
            name: numbersMoved
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Indicates the total number of phone numbers failed.
            name: numbersFailed
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: CountObject
          type_spec: null
        URI Parameters:
        - doc: Retrieve job details for this jobId.
          name: jobId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List change device settings job errors.

        Lists all error details of the job with jobId of jobType calldevicesettings.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:telephony_config_read.'
      documentation:
        doc: List Change Device Settings Job Errors
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/list-change-device-settings-job-errors
        endpoint: https://webexapis.com/v1/telephony/config/jobs/devices/callDeviceSettings/{jobId}/errors
        http_method: GET
      header: List Change Device Settings Job Errors
      parameters_and_response:
        Query Parameters:
        - doc: Retrieve list of jobs for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies the offset from the first result that you want to fetch.
            Default is 0.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies the maximum number of records that you want to fetch. Default
            is 2000
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: Phone number
            name: item
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Index of error number.
            name: itemNumber
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Unique identifier to track the HTTP requests.
            name: trackingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: error
            param_attrs:
            - doc: HTTP error code.
              name: key
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Message string with further error information.
              name: message
              param_attrs:
              - doc: Error message.
                name: description
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Internal error code.
                name: code
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Error messages describing the location id in which the error
                  occurs. For a move operation this is the target location ID.
                name: locationId
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[ErrorMessageObject]
              type_spec: null
            param_object: []
            type: ErrorObject
            type_spec: null
          param_object: []
          type: array[ItemObject]
          type_spec: null
        URI Parameters:
        - doc: Retrieve job details for this jobId.
          name: jobId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all languages supported by Webex Calling for announcements and voice
        prompts.

        Retrieving announcement languages requires a full or read-only administrator
        auth token with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read the List of Announcement Languages
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-the-list-of-announcement-languages
        endpoint: https://webexapis.com/v1/telephony/config/announcementLanguages
        http_method: GET
      header: Read the List of Announcement Languages
      parameters_and_response:
        Response Properties:
        - doc: Array of Languages.
          name: languages
          param_attrs:
          - doc: Language name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Language code.
            name: code
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Language]
          type_spec: null
    - doc: 'Creates a new Receptionist Contact Directory for a location.

        Receptionist Contact Directories can be used to create named directories of
        users.

        Adding a directory requires a full or write-only administrator auth token
        with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Create a Receptionist Contact Directory
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/create-a-receptionist-contact-directory
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/receptionistContacts/directories
        http_method: POST
      header: Create a Receptionist Contact Directory
      parameters_and_response:
        Body Parameters:
        - doc: Receptionist Contact Directory name.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Array of users assigned to this Receptionist Contact Directory.

            Person ID.'
          name: contacts
          param_attrs: []
          param_object: []
          type: array[PersonId]
          type_spec: required
        Query Parameters:
        - doc: Add a Receptionist Contact Directory to this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Receptionist Contact Directory ID.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Add a Receptionist Contact Directory to this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List all Receptionist Contact Directories for a location.

        Receptionist Contact Directories can be used to create named directories of
        users.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Read list of Receptionist Contact Directories
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/read-list-of-receptionist-contact-directories
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/receptionistContacts/directories
        http_method: GET
      header: Read list of Receptionist Contact Directories
      parameters_and_response:
        Query Parameters:
        - doc: List Receptionist Contact Directories for this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of Receptionist Contact Directories.
          name: directories
          param_attrs:
          - doc: ID of Receptionist Contact Directory
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name of Receptionist Contact Directory.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Directory]
          type_spec: null
        URI Parameters:
        - doc: List Receptionist Contact Directories for this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete a Receptionist Contact Directory from a location.

        Receptionist Contact Directories can be used to create named directories of
        users.

        Deleting a directory requires a full or write-only administrator auth token
        with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Delete a Receptionist Contact Directory
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-organization-settings/delete-a-receptionist-contact-directory
        endpoint: https://webexapis.com/v1/telephony/config/locations/{locationId}/receptionistContacts/directories/{directoryId}
        http_method: DELETE
      header: Delete a Receptionist Contact Directory
      parameters_and_response:
        Query Parameters:
        - doc: Delete a Receptionist Contact Directory from this organization.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Delete a Receptionist Contact Directory from this location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Add a Receptionist Contact Directory ID.
          name: directoryId
          param_attrs: []
          param_object: []
          type: optional
          type_spec: required
  Webex Calling Person Settings:
    doc: 'Not supported for Webex for Government (FedRAMP)

      Webex Calling Person Settings supports modifying Webex Calling settings for
      a specific person.

      Viewing People requires a full, user, or read-only administrator auth token
      with a scope of spark-admin:people_read or, for select APIs, a user auth token
      with spark:people_read scope can be used by a person to read their own settings.

      Configuring People settings requires a full or user administrator auth token
      with the spark-admin:people_write scope or, for select APIs, a user auth token
      with spark:people_write scope can be used by a person to update their own settings.'
    header: Webex Calling Person Settings
    methods:
    - doc: 'Get members available for shared-line assignment to a Webex Calling Apps
        Desktop device.

        This API requires a full or user administrator auth token with the spark-admin:people_read
        scope.'
      documentation:
        doc: Search Shared-Line Appearance Members
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/search-shared-line-appearance-members
        endpoint: https://webexapis.com/v1/telephony/config/people/{personId}/applications/{applicationId}/availableMembers
        http_method: GET
      header: Search Shared-Line Appearance Members
      parameters_and_response:
        Body Parameters:
        - doc: Number of records per page.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Page number.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Location ID for the user.
          name: location
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Search for users with names that match the query.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Search for users with numbers that match the query.
          name: number
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sort by first name (fname) or last name (lname).
          name: order
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Search for users with extensions that match the query.
          name: extension
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: members
          param_attrs:
          - doc: A unique member identifier.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of member.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of member.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number of member. Currently, E.164 format is not supported.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone extension of member.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates if the line is acting as a primary line or a shared line
              for this device.
            name: lineType
            param_attrs:
            - doc: Primary line for the member.
              name: PRIMARY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Shared line for the member. A shared line allows users to receive
                and place calls to and from another user's extension, using their
                own device.
              name: SHARED_CALL_APPEARANCE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: LineType
            type_spec: null
          - doc: Location object having a unique identifier for the location and its
              name.
            name: location
            param_attrs:
            - doc: Location identifier associated with the members.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Location name associated with the member.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: location
            type_spec: null
          param_object: []
          type: array[Available Shared Line Member Item]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A unique identifier for the application.
          name: applicationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get primary and secondary members assigned to a shared line on a Webex
        Calling Apps Desktop device.

        This API requires a full or user administrator auth token with the spark-admin:people_read
        scope.'
      documentation:
        doc: Get Shared-Line Appearance Members
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/get-shared-line-appearance-members
        endpoint: https://webexapis.com/v1/telephony/config/people/{personId}/applications/{applicationId}/members
        http_method: GET
      header: Get Shared-Line Appearance Members
      parameters_and_response:
        Response Properties:
        - doc: Model name of device.
          name: model
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List of members.
          name: members
          param_attrs:
          - doc: Unique identifier for the member.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of person or workspace.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of person or workspace.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone number of a person or workspace. Currently, E.164 format is
              not supported. This will be supported in the future update.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Phone extension of a person or workspace.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Device port number assigned to a person or workspace.
            name: port
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: T.38 Fax Compression setting. Valid only for ATA Devices. Overrides
              user level compression options.
            name: t38FaxCompressionEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: If true the person or the workspace is the owner of the device. Points
              to primary line/port of the device.
            name: primaryOwner
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates if the line is acting as a primary line or a shared line
              for this device.
            name: lineType
            param_attrs:
            - doc: Primary line for the member.
              name: PRIMARY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Shared line for the member. A shared line allows users to receive
                and place calls to and from another user's extension, using their
                own device.
              name: SHARED_CALL_APPEARANCE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: LineType
            type_spec: null
          - doc: Number of lines that have been configured for the person on the device.
            name: lineWeight
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Registration home IP for the line port.
            name: hostIP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Registration remote IP for the line port.
            name: remoteIP
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Configure this line to automatically call a predefined number whenever
              taken off-hook. Once enabled, the line can only make calls to the predefined
              number set in hotlineDestination.
            name: hotlineEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Preconfigured number for the hotline. Required only if hotlineEnabled
              is set to true.
            name: hotlineDestination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Set how a device behaves when a call is declined. When set to true,
              a call decline request is extended to all the endpoints on the device.
              When set to false, a call decline request is only declined at the current
              endpoint.
            name: allowCallDeclineEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Device line label.
            name: lineLabel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates if the member is of type PEOPLE or PLACE.
            name: memberType
            param_attrs:
            - doc: The associated member is a person.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The associated member is a workspace.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: UserType
            type_spec: null
          - doc: Location object having a unique identifier for the location and its
              name.
            name: location
            param_attrs:
            - doc: Location identifier associated with the members.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Location name associated with the member.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: location
            type_spec: null
          param_object: []
          type: array[Get Shared Line Member Item]
          type_spec: null
        - doc: Maximum number of device ports.
          name: maxLineCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A unique identifier for the application.
          name: applicationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Add or modify primary and secondary users assigned to shared-lines on
        a Webex Calling Apps Desktop device.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Put Shared-Line Appearance Members
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/put-shared-line-appearance-members
        endpoint: https://webexapis.com/v1/telephony/config/people/{personId}/applications/{applicationId}/members
        http_method: PUT
      header: Put Shared-Line Appearance Members
      parameters_and_response:
        Body Parameters:
        - doc: ''
          name: members
          param_attrs:
          - doc: Unique identifier for the person or workspace.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Device port number assigned to person or workspace.
            name: port
            param_attrs: []
            param_object: []
            type: number
            type_spec: required
          - doc: T.38 Fax Compression setting. Valid only for ATA Devices. Overrides
              user level compression options.
            name: t38FaxCompressionEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: If true the person or the workspace is the owner of the device. Points
              to primary line/port of the device.
            name: primaryOwner
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Indicates if the line is acting as a primary line or a shared line
              for this device.
            name: lineType
            param_attrs:
            - doc: Primary line for the member.
              name: PRIMARY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Shared line for the member. A shared line allows users to receive
                and place calls to and from another user's extension, using their
                own device.
              name: SHARED_CALL_APPEARANCE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: LineType
            type_spec: required
          - doc: Number of lines that have been configured for the person on the device.
            name: lineWeight
            param_attrs: []
            param_object: []
            type: number
            type_spec: required
          - doc: Configure this line to automatically call a predefined number whenever
              taken off-hook. Once enabled, the line can only make calls to the predefined
              number set in hotlineDestination.
            name: hotlineEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Preconfigured number for the hotline. Required only if hotlineEnabled
              is set to true.
            name: hotlineDestination
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Set how a device behaves when a call is declined. When set to true,
              a call decline request is extended to all the endpoints on the device.
              When set to false, a call decline request is only declined at the current
              endpoint.
            name: allowCallDeclineEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Device line label.
            name: lineLabel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Put Shared Line Member Item]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A unique identifier for the application.
          name: applicationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieves the calling behavior and UC Manager Profile settings for the
        person which includes overall calling behavior and calling UC Manager Profile
        ID.

        Webex Calling Behavior controls which Webex telephony application and which
        UC Manager Profile is to be used for a person.

        An organization has an organization-wide default Calling Behavior that may
        be overridden for individual persons.

        UC Manager Profiles are applicable if your organization uses Jabber in Team
        Messaging mode or Calling in Webex (Unified CM).

        The UC Manager Profile also has an organization-wide default and may be overridden
        for individual persons.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Read Person's Calling Behavior
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-person's-calling-behavior
        endpoint: https://webexapis.com/v1/people/{personId}/features/callingBehavior
        http_method: GET
      header: Read Person's Calling Behavior
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: The current Calling Behavior setting for the person. If null, the effective
            Calling Behavior will be the Organization's current default.
          name: behaviorType
          param_attrs:
          - doc: Calling in Webex or Hybrid Calling.
            name: NATIVE_WEBEX_TEAMS_CALLING
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Cisco Jabber app
            name: CALL_WITH_APP_REGISTERED_FOR_CISCOTEL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Third-Party app
            name: CALL_WITH_APP_REGISTERED_FOR_TEL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Webex Calling app
            name: CALL_WITH_APP_REGISTERED_FOR_WEBEXCALLTEL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calling in Webex (Unified CM)
            name: NATIVE_SIP_CALL_TO_UCM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Using the non-string value of null results in the organization-wide
              default calling behavior being in effect.
            name: 'null'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The effective Calling Behavior setting for the person, will be the
            organization's default Calling Behavior if the user's behaviorType is
            set to null.
          name: effectiveBehaviorType
          param_attrs:
          - doc: Calling in Webex or Hybrid Calling.
            name: NATIVE_WEBEX_TEAMS_CALLING
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Cisco Jabber app
            name: CALL_WITH_APP_REGISTERED_FOR_CISCOTEL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Third-Party app
            name: CALL_WITH_APP_REGISTERED_FOR_TEL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Webex Calling app
            name: CALL_WITH_APP_REGISTERED_FOR_WEBEXCALLTEL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calling in Webex (Unified CM)
            name: NATIVE_SIP_CALL_TO_UCM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The UC Manager Profile ID.
          name: profileId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modifies the calling behavior settings for the person which includes calling
        behavior and UC Manager Profile ID.

        Webex Calling Behavior controls which Webex telephony application and which
        UC Manager Profile is to be used for a person.

        An organization has an organization-wide default Calling Behavior that may
        be overridden for individual persons.

        UC Manager Profiles are applicable if your organization uses Jabber in Team
        Messaging mode or Calling in Webex (Unified CM).

        The UC Manager Profile also has an organization-wide default and may be overridden
        for individual persons.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Configure a person's Calling Behavior
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-a-person's-calling-behavior
        endpoint: https://webexapis.com/v1/people/{personId}/features/callingBehavior
        http_method: PUT
      header: Configure a person's Calling Behavior
      parameters_and_response:
        Body Parameters:
        - doc: The new Calling Behavior setting for the person (case-insensitive).
            If null, the effective Calling Behavior will be the Organization's current
            default.
          name: behaviorType
          param_attrs:
          - doc: Calling in Webex or Hybrid Calling.
            name: NATIVE_WEBEX_TEAMS_CALLING
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Cisco Jabber app
            name: CALL_WITH_APP_REGISTERED_FOR_CISCOTEL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Third-Party app
            name: CALL_WITH_APP_REGISTERED_FOR_TEL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Webex Calling app
            name: CALL_WITH_APP_REGISTERED_FOR_WEBEXCALLTEL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calling in Webex (Unified CM)
            name: NATIVE_SIP_CALL_TO_UCM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The non-string value of null results in the organization-wide default
              calling behavior being in effect.
            name: 'null'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The UC Manager Profile ID. Specifying null results in the organizational
            default being applied.
          name: profileId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s Barge In settings.

        The Barge In feature enables you to use a Feature Access Code (FAC) to answer
        a call that was directed to another subscriber, or barge-in on the call if
        it was already answered. Barge In can be used across locations.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read or a user auth token with spark:people_read
        scope can be used by a person to read their own settings.'
      documentation:
        doc: Read Barge In Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-barge-in-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/bargeIn
        http_method: GET
      header: Read Barge In Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Indicates if the Barge In feature is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Indicates that a stutter dial tone will be played when a person is
            barging in on the active call.
          name: toneEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Barge In settings.

        The Barge In feature enables you to use a Feature Access Code (FAC) to answer
        a call that was directed to another subscriber, or barge-in on the call if
        it was already answered. Barge In can be used across locations.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope or a user auth token with spark:people_write scope can be used by a
        person to update their own settings.'
      documentation:
        doc: Configure Barge In Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-barge-in-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/bargeIn
        http_method: PUT
      header: Configure Barge In Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: Set to enable or disable the Barge In feature.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Set to enable or disable a stutter dial tone being played when a person
            is barging in on the active call.
          name: toneEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s Call Forwarding settings.

        Three types of call forwarding are supported:

        In addition, the Business Continuity feature will send calls to a destination
        of your choice if your phone is not connected to the network for any reason,
        such as a power outage, failed Internet connection, or wiring problem.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read or a user auth token with spark:people_read
        scope can be used by a person to read their own settings.'
      documentation:
        doc: Read Forwarding Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-forwarding-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/callForwarding
        http_method: GET
      header: Read Forwarding Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Settings related to "Always", "Busy", and "No Answer" call forwarding.
          name: callForwarding
          param_attrs: []
          param_object:
          - doc: Settings for forwarding all incoming calls to the destination you
              choose.
            name: always
            param_attrs: []
            param_object:
            - doc: '"Always" call forwarding is enabled or disabled.'
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for "Always" call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates enabled or disabled state of sending incoming calls to
                voicemail when the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Settings for forwarding all incoming calls to the destination you
              chose while the phone is in use or the person is busy.
            name: busy
            param_attrs: []
            param_object:
            - doc: '"Busy" call forwarding is enabled or disabled.'
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for "Busy" call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the enabled or disabled state of sending incoming calls
                to voicemail when the destination is an internal phone number and
                that number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          - doc: Settings for forwarding which only occurs when you are away or not
              answering your phone.
            name: noAnswer
            param_attrs: []
            param_object:
            - doc: '"No Answer" call forwarding is enabled or disabled.'
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for "No Answer" call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Number of rings before the call will be forwarded if unanswered.
              name: numberOfRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: System-wide maximum number of rings allowed for numberOfRings setting.
              name: systemMaxNumberOfRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates the enabled or disabled state of sending incoming calls
                to destination number's voicemail if the destination is an internal
                phone number and that number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings for sending calls to a destination of your choice if your
            phone is not connected to the network for any reason, such as power outage,
            failed Internet connection, or wiring problem.
          name: businessContinuity
          param_attrs: []
          param_object:
          - doc: Business Continuity is enabled or disabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Destination for Business Continuity.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates enabled or disabled state of sending incoming calls to
              the destination number's voicemail if the destination is an internal
              phone number and that number has the voicemail service enabled.
            name: destinationVoicemailEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Call Forwarding settings.

        Three types of call forwarding are supported:

        In addition, the Business Continuity feature will send calls to a destination
        of your choice if your phone is not connected to the network for any reason,
        such as a power outage, failed Internet connection, or wiring problem.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope or a user auth token with spark:people_write scope can be used by a
        person to update their settings.'
      documentation:
        doc: Configure Call Forwarding Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-call-forwarding-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/callForwarding
        http_method: PUT
      header: Configure Call Forwarding Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: Settings related to "Always", "Busy", and "No Answer" call forwarding.
          name: callForwarding
          param_attrs:
          - doc: Settings for forwarding all incoming calls to the destination you
              choose.
            name: always
            param_attrs:
            - doc: '"Always" call forwarding is enabled or disabled.'
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Destination for "Always" call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If true, a brief tone will be played on the person's phone when
                a call has been forwarded.
              name: ringReminderEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Enables and disables sending incoming calls to voicemail when the
                destination is an internal phone number and that number has the voicemail
                service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Settings for forwarding all incoming calls to the destination you
              chose while the phone is in use or the person is busy.
            name: busy
            param_attrs:
            - doc: '"Busy" call forwarding is enabled or disabled.'
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for "Busy" call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Enables and disables sending incoming to the destination number's
                voicemail if the destination is an internal phone number and that
                number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          - doc: Settings for forwarding which only occurs when you are away or not
              answering your phone.
            name: noAnswer
            param_attrs:
            - doc: '"No Answer" call forwarding is enabled or disabled.'
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for "No Answer" call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Number of rings before the call will be forwarded if unanswered.
              name: numberOfRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Enables and disables sending incoming to destination number's voicemail
                if the destination is an internal phone number and that number has
                the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Settings for sending calls to a destination of your choice if your
            phone is not connected to the network for any reason, such as a power
            outage, failed Internet connection, or wiring problem.
          name: businessContinuity
          param_attrs:
          - doc: Business Continuity is enabled or disabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Destination for Business Continuity.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Enables and disables sending incoming to destination number's voicemail
              if the destination is an internal phone number and that number has the
              voicemail service enabled.
            name: destinationVoicemailEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get all devices for a person.

        This requires a full or read-only administrator auth token with a scope of
        spark-admin:telephony_config_read.'
      documentation:
        doc: Get User Devices
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/get-user-devices
        endpoint: https://webexapis.com/v1/telephony/config/people/{personId}/devices
        http_method: GET
      header: Get User Devices
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the person belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of devices available to person.
          name: devices
          param_attrs:
          - doc: Unique identifier for a device.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Comma separated array of tags used to describe device.
            name: description
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Identifier for device model.
            name: model
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: MAC address of device.
            name: mac
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: IP address of device.
            name: ipAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates whether the person or the workspace is the owner of the
              device, and points to a primary Line/Port of the device.
            name: primaryOwner
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Indicates if the line is acting as a primary line or a shared line
              for this device.
            name: type
            param_attrs:
            - doc: Primary line for the member.
              name: PRIMARY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Shared line for the member. A shared line allows users to receive
                and place calls to and from another user's extension, using their
                own device.
              name: SHARED_CALL_APPEARANCE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: LineType
            type_spec: null
          - doc: Owner of device.
            name: owner
            param_attrs:
            - doc: Unique identifier of a person or a workspace.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Enumeration that indicates if the member is of type PEOPLE or PLACE.
              name: type
              param_attrs:
              - doc: Indicates the associated member is a person.
                name: PEOPLE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the associated member is a workspace.
                name: PLACE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: MemberType
              type_spec: null
            - doc: First name of device owner.
              name: firstName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Last name of device owner.
              name: lastName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: deviceOwner
            type_spec: null
          - doc: Activation state of device.
            name: activationState
            param_attrs:
            - doc: Indicates a device is activating.
              name: ACTIVATING
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a device is activated.
              name: ACTIVATED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a device is deactivated.
              name: DEACTIVATED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: ActivationStates
            type_spec: null
          param_object: []
          type: array[devices]
          type_spec: null
        - doc: Maximum number of devices a person can be assigned to.
          name: maxDeviceCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: Person for whom to retrieve devices.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieves Person''s Call Intercept settings.

        The intercept feature gracefully takes a person''s phone out of service, while
        providing callers with informative announcements and alternative routing options.
        Depending on the service configuration, none, some, or all incoming calls
        to the specified person are intercepted. Also depending on the service configuration,
        outgoing calls are intercepted or rerouted to another location.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Read Call Intercept Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-call-intercept-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/intercept
        http_method: GET
      header: Read Call Intercept Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: true if call intercept is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Settings related to how incoming calls are handled when the intercept
            feature is enabled.
          name: incoming
          param_attrs: []
          param_object:
          - doc: INTERCEPT_ALL indicated incoming calls are intercepted.
            name: type
            param_attrs:
            - doc: Incoming calls are routed as the destination and voicemail specify.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming calls are not intercepted.
              name: ALLOW_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: If true, the destination will be the person's voicemail.
            name: voicemailEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Settings related to how incoming calls are handled when the intercept
              feature is enabled.
            name: announcements
            param_attrs: []
            param_object:
            - doc: DEFAULT indicates that a system default message will be placed
                when incoming calls are intercepted.
              name: greeting
              param_attrs:
              - doc: A custom greeting is played when incoming calls are intercepted.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: A System default greeting will be played when incoming calls
                  are intercepted.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Filename of custom greeting; will be an empty string if no custom
                greeting has been uploaded.
              name: filename
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Information about the new number announcement.
              name: newNumber
              param_attrs: []
              param_object:
              - doc: If true, the caller will hear this new number when the call is
                  intercepted.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: New number caller will hear announced.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              type: object
              type_spec: null
            - doc: Information about how the call will be handled if zero (0) is pressed.
              name: zeroTransfer
              param_attrs: []
              param_object:
              - doc: If true, the caller will be transferred to destination of when
                  zero (0) is pressed.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Destination to which caller will be transferred when zero is
                  pressed.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              type: object
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings related to how outgoing calls are handled when the intercept
            feature is enabled.
          name: outgoing
          param_attrs: []
          param_object:
          - doc: INTERCEPT_ALL indicated all outgoing calls are intercepted.
            name: type
            param_attrs:
            - doc: Outgoing calls are routed as the destination and voicemail specify.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only non-local calls are intercepted.
              name: ALLOW_LOCAL_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: If true, when the person attempts to make an outbound call, a system
              default message is played and the call is made to the destination phone
              number
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number to which the outbound call be transferred.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configures a person''s Call Intercept settings.

        The intercept feature gracefully takes a person''s phone out of service, while
        providing callers with informative announcements and alternative routing options.
        Depending on the service configuration, none, some, or all incoming calls
        to the specified person are intercepted. Also depending on the service configuration,
        outgoing calls are intercepted or rerouted to another location.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Configure Call Intercept Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-call-intercept-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/intercept
        http_method: PUT
      header: Configure Call Intercept Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: true if the intercept feature is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Settings related to how incoming calls are handled when the intercept
            feature is enabled.
          name: incoming
          param_attrs:
          - doc: INTERCEPT_ALL indicated incoming calls are intercepted.
            name: type
            param_attrs:
            - doc: Incoming calls are routed as the destination and voicemail specify.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming calls are not intercepted.
              name: ALLOW_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: If true, the destination will be the person's voicemail.
            name: voicemailEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Settings related to how incoming calls are handled when the intercept
              feature is enabled.
            name: announcements
            param_attrs:
            - doc: DEFAULT indicates that a system default message will be placed
                when incoming calls are intercepted.
              name: greeting
              param_attrs:
              - doc: A custom greeting is played when incoming calls are intercepted.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: A System default greeting is played when incoming calls are intercepted.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Information about the new number announcement.
              name: newNumber
              param_attrs:
              - doc: If true, the caller will hear this new number when a call is
                  intercepted.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: New number caller will hear announced.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: object
              type_spec: null
            - doc: Information about how call will be handled if zero (0) is pressed.
              name: zeroTransfer
              param_attrs:
              - doc: If true, the caller will be transferred to destination of when
                  zero (0) is pressed.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Destination to which caller will be transferred when zero is
                  pressed.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: object
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Settings related to how outgoing calls are handled when the intercept
            feature is enabled.
          name: outgoing
          param_attrs:
          - doc: INTERCEPT_ALL indicated all outgoing calls are intercepted.
            name: type
            param_attrs:
            - doc: Outgoing calls are routed as the destination and voicemail specify.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only non-local calls are intercepted.
              name: ALLOW_LOCAL_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: If true, when the person attempts to make an outbound call, a system
              default message is played and the call is made to the destination phone
              number
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number to which the outbound call will be transferred.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Call Intercept Greeting by uploading a Waveform
        Audio File Format, .wav, encoded audio file.

        Your request will need to be a multipart/form-data request rather than JSON,
        using the audio/wav Content-Type.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope or a user auth token with spark:people_write scope can be used by a
        person to update their settings.'
      documentation:
        doc: Configure Call Intercept Greeting for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-call-intercept-greeting-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/intercept/actions/announcementUpload/invoke
        http_method: POST
      header: Configure Call Intercept Greeting for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s Call Recording settings.

        The Call Recording feature provides a hosted mechanism to record the calls
        placed and received on the Carrier platform for replay and archival. This
        feature is helpful for quality assurance, security, training, and more.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Read Call Recording Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-call-recording-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/callRecording
        http_method: GET
      header: Read Call Recording Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: true if call recording is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Call recording scenario.
          name: record
          param_attrs:
          - doc: Incoming and outgoing calls will be recorded with no control to start,
              stop, pause, or resume.
            name: Always
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls will not be recorded.
            name: Never
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are always recorded, but user can pause or resume the recording.
              Stop recording is not supported.
            name: Always with Pause/Resume
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Records only the portion of the call after the recording start (*44)
              has been entered. Pause, resume, and stop controls are supported.
            name: On Demand with User Initiated Start
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: When true, voicemail messages are also recorded.
          name: recordVoicemailEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When enabled, an announcement is played when call recording starts
            and an announcement is played when call recording ends.
          name: startStopAnnouncementEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Pause/resume notification settings.
          name: notification
          param_attrs: []
          param_object:
          - doc: Type of pause/resume notification.
            name: type
            param_attrs:
            - doc: No notification sound played when call recording is paused or resumed.
              name: None
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A beep sound is played when call recording is paused or resumed.
              name: Beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A verbal announcement is played when call recording is paused or
                resumed.
              name: Play Announcement
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: true when the notification feature is in effect. false indicates
              notification is disabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Beep sound plays periodically.
          name: repeat
          param_attrs: []
          param_object:
          - doc: Interval at which warning tone "beep" will be played. This interval
              is an integer from 10 to 1800 seconds
            name: interval
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: true when ongoing call recording tone will be played at the designated
              interval. false indicates no warning tone will be played.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Name of the service provider providing call recording service.
          name: serviceProvider
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Group utilized by the service provider providing call recording service.
          name: externalGroup
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique person identifier utilized by the service provider providing
            call recording service.
          name: externalIdentifier
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Call Recording settings.

        The Call Recording feature provides a hosted mechanism to record the calls
        placed and received on the Carrier platform for replay and archival. This
        feature is helpful for quality assurance, security, training, and more.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Configure Call Recording Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-call-recording-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/callRecording
        http_method: PUT
      header: Configure Call Recording Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: true if call recording is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Call recording scenario.
          name: record
          param_attrs:
          - doc: Incoming and outgoing calls will be recorded with no control to start,
              stop, pause, or resume.
            name: Always
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls will not be recorded.
            name: Never
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calls are always recorded, but user can pause or resume the recording.
              Stop recording is not supported.
            name: Always with Pause/Resume
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Records only the portion of the call after the recording start (*44)
              has been entered. Pause, resume, and stop controls are supported.
            name: On Demand with User Initiated Start
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: When true, voicemail messages are also recorded.
          name: recordVoicemailEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When enabled, an announcement is played when call recording starts
            and an announcement is played when call recording ends.
          name: startStopAnnouncementEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Pause/resume notification settings.
          name: notification
          param_attrs:
          - doc: Type of pause/resume notification.
            name: type
            param_attrs:
            - doc: A beep sound is played when call recording is paused or resumed.
              name: Beep
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A verbal announcement is played when call recording is paused or
                resumed.
              name: Play Announcement
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: true when notification feature is in effect. false indicates notification
              is disabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Beep sound plays periodically.
          name: repeat
          param_attrs:
          - doc: Interval at which warning tone "beep" will be played. This interval
              is an integer from 10 to 1800 seconds
            name: interval
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: true when ongoing call recording tone will be played at the designated
              interval. false indicates no warning tone will be played.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s Caller ID settings.

        Caller ID settings control how a person''s information is displayed when making
        outgoing calls.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Read Caller ID Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-caller-id-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/callerId
        http_method: GET
      header: Read Caller ID Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Allowed types for the selected field.
          name: types
          param_attrs:
          - doc: Outgoing caller ID will show the caller's direct line number and/or
              extension.
            name: DIRECT_LINE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the main number for the location.
            name: LOCATION_NUMBER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the mobile number for this person.
            name: MOBILE_NUMBER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the value from the customNumber field.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[CallerIdSelectedType]
          type_spec: null
        - doc: Which type of outgoing Caller ID will be used.
          name: selected
          param_attrs:
          - doc: Outgoing caller ID will show the caller's direct line number and/or
              extension.
            name: DIRECT_LINE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the main number for the location.
            name: LOCATION_NUMBER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the mobile number for this person.
            name: MOBILE_NUMBER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the value from the customNumber field.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: CallerIdSelectedType
          type_spec: null
        - doc: Direct number which will be shown if DIRECT_LINE is selected.
          name: directNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Extension number which will be shown if DIRECT_LINE is selected.
          name: extensionNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location number which will be shown if LOCATION_NUMBER is selected.
          name: locationNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Mobile number which will be shown if MOBILE_NUMBER is selected.
          name: mobileNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Flag to indicate if the location number is toll-free number.
          name: tollFreeLocationNumber
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: This value must be an assigned number from the person's location.
          name: customNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's Caller ID first name.  Characters of %,  +, ``, " and Unicode
            characters are not allowed.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's Caller ID last name.  Characters of %,  +, ``, " and Unicode
            characters are not allowed.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: true if the person's identity is blocked when receiving a transferred
            or forwarded call.
          name: blockInForwardCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Designates which type of External Caller Id Name policy is used. Default
            is DIRECT_LINE.
          name: externalCallerIdNamePolicy
          param_attrs:
          - doc: Outgoing caller ID will show the caller's direct line name.
            name: DIRECT_LINE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the Site Name for the location.
            name: LOCATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the value from the customExternalCallerIdName
              field.
            name: OTHER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Custom External Caller Name, which will be shown if External Caller
            Id Name is OTHER.
          name: customExternalCallerIdName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location's caller ID.
          name: locationExternalCallerIdName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Caller ID settings.

        Caller ID settings control how a person''s information is displayed when making
        outgoing calls.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Configure Caller ID Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-caller-id-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/callerId
        http_method: PUT
      header: Configure Caller ID Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: 'Which type of outgoing Caller ID will be used.

            Possible values: DIRECT_LINE'
          name: selected
          param_attrs: []
          param_object: []
          type: CallerIdSelectedType
          type_spec: null
        - doc: This value must be an assigned number from the person's location.
          name: customNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's Caller ID first name.  Characters of %,  +, ``, " and Unicode
            characters are not allowed.
          name: firstName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Person's Caller ID last name.  Characters of %,  +, ``, " and Unicode
            characters are not allowed.
          name: lastName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: true if person's identity has to be blocked when receiving a transferred
            or forwarded call.
          name: blockInForwardCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Designates which type of External Caller Id Name policy is used. Default
            is DIRECT_LINE.
          name: externalCallerIdNamePolicy
          param_attrs:
          - doc: Outgoing caller ID will show the caller's direct line name.
            name: DIRECT_LINE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the Site Name for the location.
            name: LOCATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the value from the customExternalCallerIdName
              field.
            name: OTHER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Person's custom External Caller ID last name.  Characters of %,  +,
            ``, " and Unicode characters are not allowed.
          name: customExternalCallerIdName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s Do Not Disturb settings.

        When enabled, this feature will give all incoming calls the busy treatment.
        Optionally, you can enable a Ring Reminder to play a brief tone on your desktop
        phone when you receive incoming calls.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read or a user auth token with spark:people_read
        scope can be used by a person to read their settings.'
      documentation:
        doc: Read Do Not Disturb Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-do-not-disturb-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/doNotDisturb
        http_method: GET
      header: Read Do Not Disturb Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: true if the Do Not Disturb feature is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Enables a Ring Reminder to play a brief tone on your desktop phone
            when you receive incoming calls.
          name: ringSplashEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Do Not Disturb settings.

        When enabled, this feature will give all incoming calls the busy treatment.
        Optionally, you can enable a Ring Reminder to play a brief tone on your desktop
        phone when you receive incoming calls.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope or a user auth token with spark:people_write scope can be used by a
        person to update their settings.'
      documentation:
        doc: Configure Do Not Disturb Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-do-not-disturb-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/doNotDisturb
        http_method: PUT
      header: Configure Do Not Disturb Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: true if the Do Not Disturb feature is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Enables a Ring Reminder to play a brief tone on your desktop phone
            when you receive incoming calls.
          name: ringSplashEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s Voicemail settings.

        The voicemail feature transfers callers to voicemail based on your settings.
        You can then retrieve voice messages via Voicemail. Voicemail audio is sent
        in Waveform Audio File Format, .wav, format.

        Optionally, notifications can be sent to a mobile phone via text or email.
        These notifications will not include the voicemail files.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read or a user auth token with spark:people_read
        scope can be used by a person to read their settings.'
      documentation:
        doc: Read Voicemail Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-voicemail-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/voicemail
        http_method: GET
      header: Read Voicemail Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Voicemail is enabled or disabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Settings for sending all calls to voicemail.
          name: sendAllCalls
          param_attrs: []
          param_object:
          - doc: All calls will be sent to voicemail.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings for sending calls to voicemail when the line is busy.
          name: sendBusyCalls
          param_attrs: []
          param_object:
          - doc: Calls will be sent to voicemail when busy.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: DEFAULT indicates the default greeting will be played. CUSTOM indicates
              a custom .wav file will be played.
            name: greeting
            param_attrs:
            - doc: The default greeting will be played.
              name: DEFAULT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Designates that a custom .wav file will be played.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Indicates a custom greeting has been uploaded.
            name: greetingUploaded
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          type: object
          type_spec: null
        - doc: ''
          name: sendUnansweredCalls
          param_attrs: []
          param_object:
          - doc: Enables and disables sending unanswered calls to voicemail.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: DEFAULT indicates the default greeting will be played. CUSTOM indicates
              a custom .wav file will be played.
            name: greeting
            param_attrs:
            - doc: The default greeting will be played.
              name: DEFAULT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Designates that a custom .wav file will be played.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Indicates a custom greeting has been uploaded
            name: greetingUploaded
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of rings before unanswered call will be sent to voicemail.
            name: numberOfRings
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: System-wide maximum number of rings allowed for numberOfRings setting.
            name: systemMaxNumberOfRings
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings for notifications when there are any new voicemails.
          name: notifications
          param_attrs: []
          param_object:
          - doc: Send of unanswered calls to voicemail is enabled or disabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Email address to which the notification will be sent. For text messages,
              use an email to text message gateway like 2025551212@txt.example.net.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings for voicemail caller to transfer to a different number by
            pressing zero (0).
          name: transferToNumber
          param_attrs: []
          param_object:
          - doc: Indicates enable or disabled state of giving caller option to transfer
              to destination when pressing zero (0).
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number voicemail caller will be transferred to when they press zero
              (0).
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Settings for sending a copy of new voicemail message audio via email.
          name: emailCopyOfMessage
          param_attrs: []
          param_object:
          - doc: When true copy of new voicemail message audio will be sent to the
              designated email.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Email address to which the new voicemail audio will be sent.
            name: emailId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: ''
          name: messageStorage
          param_attrs: []
          param_object:
          - doc: When true desktop phone will indicate there are new voicemails.
            name: mwiEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Designates which type of voicemail message storage is used.
            name: storageType
            param_attrs:
            - doc: For message access via phone or the Calling User Portal.
              name: INTERNAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: For sending all messages to the person's email.
              name: EXTERNAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: External email address to which the new voicemail audio will be sent.  A
              value for this field must be provided in the request if a storageType
              of EXTERNAL is given in the request.
            name: externalEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: ''
          name: faxMessage
          param_attrs: []
          param_object:
          - doc: When true FAX messages for new voicemails will be sent to the designated
              number.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Designates phone number for the FAX. A value for this field must
              be provided in the request if faxMessage enabled field is given as true
              in the request.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Designates optional extension for the FAX.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Voicemail settings.

        The voicemail feature transfers callers to voicemail based on your settings.
        You can then retrieve voice messages via Voicemail. Voicemail audio is sent
        in Waveform Audio File Format, .wav, format.

        Optionally, notifications can be sent to a mobile phone via text or email.
        These notifications will not include the voicemail files.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope or a user auth token with spark:people_write scope can be used by a
        person to update their settings.'
      documentation:
        doc: Configure Voicemail Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-voicemail-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/voicemail
        http_method: PUT
      header: Configure Voicemail Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: Voicemail is enabled or disabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: 'Settings for sending all calls to voicemail.

            All calls will be sent to voicemail.'
          name: sendAllCalls
          param_attrs: []
          param_object: []
          type: object
          type_spec: null
        - doc: Settings for sending calls to voicemail when the line is busy.
          name: sendBusyCalls
          param_attrs:
          - doc: Calls will be sent to voicemail when busy.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: DEFAULT indicates the default greeting will be played. CUSTOM indicates
              a custom .wav file will be played.
            name: greeting
            param_attrs:
            - doc: The default greeting will be played.
              name: DEFAULT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Designates that a custom .wav file will be played.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: ''
          name: sendUnansweredCalls
          param_attrs:
          - doc: Unanswered call sending to voicemail is enabled or disabled.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: DEFAULT indicates the default greeting will be played. CUSTOM indicates
              a custom .wav file will be played.
            name: greeting
            param_attrs:
            - doc: The default greeting will be played.
              name: DEFAULT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Designates that a custom .wav file will be played.
              name: CUSTOM
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Number of rings before an unanswered call will be sent to voicemail.
            name: numberOfRings
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Settings for notifications when there are any new voicemails.
          name: notifications
          param_attrs:
          - doc: Notifications for voicemails will be sent.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Email address to which the notification will be sent. For text messages,
              use an email to text message gateway like 2025551212@txt.att.net.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        - doc: Settings for voicemail caller to transfer to a different number by
            pressing zero (0).
          name: transferToNumber
          param_attrs:
          - doc: Enable or disable  voicemail caller transfer to a destination by
              pressing zero (0).
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number voicemail caller will be transferred to when they press zero
              (0).
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        - doc: Settings for sending a copy of new voicemail message audio via email.
          name: emailCopyOfMessage
          param_attrs:
          - doc: When true copy of new voicemail message audio will be sent to the
              designated email.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Email address to which the new voicemail audio will be sent.
            name: emailId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: ''
          name: messageStorage
          param_attrs:
          - doc: When true desktop phone will indicate there are new voicemails.
            name: mwiEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Designates which type of voicemail message storage is used.
            name: storageType
            param_attrs:
            - doc: 'Internal mailbox storage has the following limitations: Single
                message limit of 10 minutes and total mailbox limit of 100 minutes."'
              name: INTERNAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: If EXTERNAL is selected, all messages will be sent to the email
                address entered. Messages will not be accessible via phone, clients,
                or the end user's calling portal.
              name: EXTERNAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: External email address to which the new voicemail audio will be sent.
            name: externalEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: ''
          name: faxMessage
          param_attrs:
          - doc: When true fax messages for new voicemails will be sent to the designated
              number.
            name: enabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Designates phone number for fax.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Designates optional extension for fax.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Busy Voicemail Greeting by uploading a Waveform
        Audio File Format, .wav, encoded audio file.

        Your request will need to be a multipart/form-data request rather than JSON,
        using the audio/wav Content-Type.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope or a user auth token with spark:people_write scope can be used by a
        person to update their settings.'
      documentation:
        doc: Configure Busy Voicemail Greeting for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-busy-voicemail-greeting-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/voicemail/actions/uploadBusyGreeting/invoke
        http_method: POST
      header: Configure Busy Voicemail Greeting for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s No Answer Voicemail Greeting by uploading a Waveform
        Audio File Format, .wav, encoded audio file.

        Your request will need to be a multipart/form-data request rather than JSON,
        using the audio/wav Content-Type.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope or a user auth token with spark:people_write scope can be used by a
        person to update their settings.'
      documentation:
        doc: Configure No Answer Voicemail Greeting for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-no-answer-voicemail-greeting-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/voicemail/actions/uploadNoAnswerGreeting/invoke
        http_method: POST
      header: Configure No Answer Voicemail Greeting for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List schedules for a person in an organization.

        Schedules are used to support calling features and can be defined at the location
        or person level. businessHours schedules allow you to apply specific call
        settings at different times of the day or week by defining one or more events.
        holidays schedules define exceptions to normal business hours by defining
        one or more events.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: List of Schedules for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/list-of-schedules-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/schedules
        http_method: GET
      header: List of Schedules for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies the offset from the first result that you want to fetch.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies the maximum number of records that you want to fetch.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Specifies the case insensitive substring to be matched against the
            schedule names. The maximum length is 40.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specifies the schedule event type to be matched on the given type.
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Indicates a list of schedules.
          name: schedules
          param_attrs:
          - doc: Identifier for a schedule.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Name for the schedule.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates the schedule type whether businessHours or holidays.
            name: type
            param_attrs:
            - doc: Indicates the schedule type that specifies the business or working
                hours during the day.
              name: businessHours
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the schedule type that specifies the day when your organization
                is not open.
              name: holidays
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: ScheduleType
            type_spec: null
          param_object: []
          type: array[ScheduleShortDetails]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create a new schedule for a person.

        Schedules are used to support calling features and can be defined at the location
        or person level. businessHours schedules allow you to apply specific call
        settings at different times of the day or week by defining one or more events.
        holidays schedules define exceptions to normal business hours by defining
        one or more events.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Create Schedule for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/create-schedule-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/schedules
        http_method: POST
      header: Create Schedule for a Person
      parameters_and_response:
        Body Parameters:
        - doc: Name for the schedule.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Indicates the schedule type whether businessHours or holidays.
          name: type
          param_attrs:
          - doc: Indicates the schedule type that specifies the business or working
              hours during the day.
            name: businessHours
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates the schedule type that specifies the day when your organization
              is not open.
            name: holidays
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: ScheduleType
          type_spec: required
        - doc: Indicates a list of events.
          name: events
          param_attrs:
          - doc: Name for the event.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Start date of the event, or first occurrence if repeating, in the
              format of YYYY-MM-DD.  This field is required if the allDayEnabled field
              is present.
            name: startDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: End date of the event, or first occurrence if repeating, in the format
              of YYYY-MM-DD.  This field is required if the allDayEnabled field is
              present.
            name: endDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Start time of the event in the format of HH:MM (24 hours format).  This
              field is required if the allDayEnabled field is false or omitted.
            name: startTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: End time of the event in the format of HH:MM (24 hours format).  This
              field is required if the allDayEnabled field is false or omitted.
            name: endTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: True if it is all-day event.
            name: allDayEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Recurrance scheme for an event.
            name: recurrence
            param_attrs:
            - doc: True if the event repeats forever. Requires either recurDaily or
                recurWeekly to be specified.
              name: recurForEver
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: End date for the recurring event in the format of YYYY-MM-DD. Requires
                either recurDaily or recurWeekly to be specified.
              name: recurEndDate
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: End recurrence after the event has repeated the specified number
                of times. Requires either recurDaily or recurWeekly to be specified.
              name: recurEndOccurrence
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: 'Specifies the number of days between the start of each recurrence.
                Not allowed with recurWeekly.

                Recurring interval in days. The number of days after the start when
                an event will repeat.  Repetitions cannot overlap.'
              name: recurDaily
              param_attrs: []
              param_object: []
              type: object
              type_spec: null
            - doc: Specifies the event recur weekly on the designated days of the
                week. Not allowed with recurDaily.
              name: recurWeekly
              param_attrs:
              - doc: Specifies the number of weeks between the start of each recurrence.
                name: recurInterval
                param_attrs: []
                param_object: []
                type: number
                type_spec: required
              - doc: Indicates event occurs weekly on Sunday.
                name: sunday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Monday.
                name: monday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Tuesday.
                name: tuesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Wednesday.
                name: wednesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Thursday.
                name: thursday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Friday.
                name: friday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Saturday.
                name: saturday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              param_object: []
              type: object
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: array[EventLongDetails]
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Identifier for a schedule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a schedule by its schedule ID.

        Schedules are used to support calling features and can be defined at the location
        or person level. businessHours schedules allow you to apply specific call
        settings at different times of the day or week by defining one or more events.
        holidays schedules define exceptions to normal business hours by defining
        one or more events.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Get a Schedule Details
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/get-a-schedule-details
        endpoint: https://webexapis.com/v1/people/{personId}/features/schedules/{scheduleType}/{scheduleId}
        http_method: GET
      header: Get a Schedule Details
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Identifier for a schedule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name for the schedule.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates the schedule type whether businessHours or holidays.
          name: type
          param_attrs:
          - doc: Indicates the schedule type that specifies the business or working
              hours during the day.
            name: businessHours
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates the schedule type that specifies the day when your organization
              is not open.
            name: holidays
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: ScheduleType
          type_spec: null
        - doc: Indicates a list of events.
          name: events
          param_attrs:
          - doc: Name for the event.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start date of the event, or first occurrence if repeating, in the
              format of YYYY-MM-DD.  This field is required if the allDayEnabled field
              is present.
            name: startDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End date of the event, or first occurrence if repeating, in the format
              of YYYY-MM-DD.  This field is required if the allDayEnabled field is
              present.
            name: endDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Start time of the event in the format of HH:MM (24 hours format).  This
              field is required if the allDayEnabled field is false or omitted.
            name: startTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End time of the event in the format of HH:MM (24 hours format).  This
              field is required if the allDayEnabled field is false or omitted.
            name: endTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: True if it is all-day event.
            name: allDayEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Recurrance scheme for an event.
            name: recurrence
            param_attrs: []
            param_object:
            - doc: True if the event repeats forever. Requires either recurDaily or
                recurWeekly to be specified.
              name: recurForEver
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: End date for the recurring event in the format of YYYY-MM-DD. Requires
                either recurDaily or recurWeekly to be specified.
              name: recurEndDate
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: End recurrence after the event has repeated the specified number
                of times. Requires either recurDaily or recurWeekly to be specified.
              name: recurEndOccurrence
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Specifies the number of days between the start of each recurrence.
                Not allowed with recurWeekly.
              name: recurDaily
              param_attrs: []
              param_object:
              - doc: Recurring interval in days. The number of days after the start
                  when an event will repeat.  Repetitions cannot overlap.
                name: recurInterval
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              type: object
              type_spec: null
            - doc: Specifies the event recur weekly on the designated days of the
                week. Not allowed with recurDaily.
              name: recurWeekly
              param_attrs: []
              param_object:
              - doc: Specifies the number of weeks between the start of each recurrence.
                name: recurInterval
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: Indicates event occurs weekly on Sunday.
                name: sunday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Monday.
                name: monday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Tuesday.
                name: tuesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Wednesday.
                name: wednesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Thursday.
                name: thursday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Friday.
                name: friday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Saturday.
                name: saturday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              type: object
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: array[EventLongDetails]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Type of schedule, either businessHours or holidays.
          name: scheduleType
          param_attrs: []
          param_object: []
          type: ScheduleType
          type_spec: required
        - doc: Unique identifier for the schedule.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify a schedule by its schedule ID.

        Schedules are used to support calling features and can be defined at the location
        or person level. businessHours schedules allow you to apply specific call
        settings at different times of the day or week by defining one or more events.
        holidays schedules define exceptions to normal business hours by defining
        one or more events.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Update a Schedule
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/update-a-schedule
        endpoint: https://webexapis.com/v1/people/{personId}/features/schedules/{scheduleType}/{scheduleId}
        http_method: PUT
      header: Update a Schedule
      parameters_and_response:
        Body Parameters:
        - doc: New name for the schedule.
          name: newName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Name for the schedule.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Indicates the schedule type whether businessHours or holidays.
          name: type
          param_attrs:
          - doc: Indicates the schedule type that specifies the business or working
              hours during the day.
            name: businessHours
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates the schedule type that specifies the day when your organization
              is not open.
            name: holidays
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: ScheduleType
          type_spec: required
        - doc: Indicates a list of events.
          name: events
          param_attrs:
          - doc: Name for the event.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Start date of the event, or first occurrence if repeating, in the
              format of YYYY-MM-DD.  This field is required if the allDayEnabled field
              is present.
            name: startDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: End date of the event, or first occurrence if repeating, in the format
              of YYYY-MM-DD.  This field is required if the allDayEnabled field is
              present.
            name: endDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Start time of the event in the format of HH:MM (24 hours format).  This
              field is required if the allDayEnabled field is false or omitted.
            name: startTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: End time of the event in the format of HH:MM (24 hours format).  This
              field is required if the allDayEnabled field is false or omitted.
            name: endTime
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: True if it is all-day event.
            name: allDayEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Recurrance scheme for an event.
            name: recurrence
            param_attrs:
            - doc: True if the event repeats forever. Requires either recurDaily or
                recurWeekly to be specified.
              name: recurForEver
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: End date for the recurring event in the format of YYYY-MM-DD. Requires
                either recurDaily or recurWeekly to be specified.
              name: recurEndDate
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: End recurrence after the event has repeated the specified number
                of times. Requires either recurDaily or recurWeekly to be specified.
              name: recurEndOccurrence
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: 'Specifies the number of days between the start of each recurrence.
                Not allowed with recurWeekly.

                Recurring interval in days. The number of days after the start when
                an event will repeat.  Repetitions cannot overlap.'
              name: recurDaily
              param_attrs: []
              param_object: []
              type: object
              type_spec: null
            - doc: Specifies the event recur weekly on the designated days of the
                week. Not allowed with recurDaily.
              name: recurWeekly
              param_attrs:
              - doc: Specifies the number of weeks between the start of each recurrence.
                name: recurInterval
                param_attrs: []
                param_object: []
                type: number
                type_spec: required
              - doc: Indicates event occurs weekly on Sunday.
                name: sunday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Monday.
                name: monday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Tuesday.
                name: tuesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Wednesday.
                name: wednesday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Thursday.
                name: thursday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Friday.
                name: friday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Indicates event occurs weekly on Saturday.
                name: saturday
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              param_object: []
              type: object
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: array[EventLongDetails]
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Identifier for a schedule.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Type of schedule, either businessHours or holidays.
          name: scheduleType
          param_attrs: []
          param_object: []
          type: ScheduleType
          type_spec: required
        - doc: Unique identifier for the schedule.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Delete a schedule by its schedule ID.

        Schedules are used to support calling features and can be defined at the location
        or person level. businessHours schedules allow you to apply specific call
        settings at different times of the day or week by defining one or more events.
        holidays schedules define exceptions to normal business hours by defining
        one or more events.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Delete a Schedule
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/delete-a-schedule
        endpoint: https://webexapis.com/v1/people/{personId}/features/schedules/{scheduleType}/{scheduleId}
        http_method: DELETE
      header: Delete a Schedule
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Type of schedule, either businessHours or holidays.
          name: scheduleType
          param_attrs: []
          param_object: []
          type: ScheduleType
          type_spec: required
        - doc: Unique identifier for the schedule.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'People can use shared location schedules or define personal schedules
        containing events.

        businessHours schedules allow you to apply specific call settings at different
        times of the day or week by defining one or more events. holidays schedules
        define exceptions to normal business hours by defining one or more events.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Fetch Event for a person's Schedule
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/fetch-event-for-a-person's-schedule
        endpoint: https://webexapis.com/v1/people/{personId}/features/schedules/{scheduleType}/{scheduleId}/events/{eventId}
        http_method: GET
      header: Fetch Event for a person's Schedule
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Identifier for a event.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Name for the event.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start date of the event, or first occurrence if repeating, in the format
            of YYYY-MM-DD.  This field is required if the allDayEnabled field is present.
          name: startDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End date of the event, or first occurrence if repeating, in the format
            of YYYY-MM-DD.  This field is required if the allDayEnabled field is present.
          name: endDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Start time of the event in the format of HH:MM (24 hours format).  This
            field is required if the allDayEnabled field is false or omitted.
          name: startTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: End time of the event in the format of HH:MM (24 hours format).  This
            field is required if the allDayEnabled field is false or omitted.
          name: endTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: True if it is all-day event.
          name: allDayEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Recurrance scheme for an event.
          name: recurrence
          param_attrs: []
          param_object:
          - doc: True if the event repeats forever. Requires either recurDaily or
              recurWeekly to be specified.
            name: recurForEver
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: End date for the recurring event in the format of YYYY-MM-DD. Requires
              either recurDaily or recurWeekly to be specified.
            name: recurEndDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End recurrence after the event has repeated the specified number
              of times. Requires either recurDaily or recurWeekly to be specified.
            name: recurEndOccurrence
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Specifies the number of days between the start of each recurrence
              and is not allowed with recurWeekly.
            name: recurDaily
            param_attrs: []
            param_object:
            - doc: Recurring interval in days. The number of days after the start
                when an event will repeat.  Repetitions cannot overlap.
              name: recurInterval
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            type: object
            type_spec: null
          - doc: Specifies the event recur weekly on the designated days of the week
              and is not allowed with recurDaily.
            name: recurWeekly
            param_attrs: []
            param_object:
            - doc: Specifies the number of weeks between the start of each recurrence.
              name: recurInterval
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Indicates event occurs weekly on Sunday.
              name: sunday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Monday.
              name: monday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Tuesday.
              name: tuesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Wednesday.
              name: wednesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Thursday.
              name: thursday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Friday.
              name: friday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Saturday.
              name: saturday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Type of schedule, either businessHours or holidays.
          name: scheduleType
          param_attrs: []
          param_object: []
          type: ScheduleType
          type_spec: required
        - doc: Unique identifier for the schedule.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique identifier for the event.
          name: eventId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'People can use shared location schedules or define personal schedules
        containing events.

        businessHours schedules allow you to apply specific call settings at different
        times of the day or week by defining one or more events. holidays schedules
        define exceptions to normal business hours by defining one or more events.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Add a New Event for Person's Schedule
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/add-a-new-event-for-person's-schedule
        endpoint: https://webexapis.com/v1/people/{personId}/features/schedules/{scheduleType}/{scheduleId}/events
        http_method: POST
      header: Add a New Event for Person's Schedule
      parameters_and_response:
        Body Parameters:
        - doc: Name for the event.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Start date of the event, or first occurrence if repeating, in the format
            of YYYY-MM-DD.  This field is required if the allDayEnabled field is present.
          name: startDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: End date of the event, or first occurrence if repeating, in the format
            of YYYY-MM-DD.  This field is required if the allDayEnabled field is present.
          name: endDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Start time of the event in the format of HH:MM (24 hours format).  This
            field is required if the allDayEnabled field is false or omitted.
          name: startTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: End time of the event in the format of HH:MM (24 hours format).  This
            field is required if the allDayEnabled field is false or omitted.
          name: endTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: True if it is all-day event.
          name: allDayEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Recurrance scheme for an event.
          name: recurrence
          param_attrs:
          - doc: True if the event repeats forever. Requires either recurDaily or
              recurWeekly to be specified.
            name: recurForEver
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: End date for the recurring event in the format of YYYY-MM-DD. Requires
              either recurDaily or recurWeekly to be specified.
            name: recurEndDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End recurrence after the event has repeated the specified number
              of times. Requires either recurDaily or recurWeekly to be specified.
            name: recurEndOccurrence
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: 'Specifies the number of days between the start of each recurrence.
              Not allowed with recurWeekly.

              Recurring interval in days. The number of days after the start when
              an event will repeat.  Repetitions cannot overlap.'
            name: recurDaily
            param_attrs: []
            param_object: []
            type: object
            type_spec: null
          - doc: Specifies the event recur weekly on the designated days of the week.
              Not allowed with recurDaily.
            name: recurWeekly
            param_attrs:
            - doc: Specifies the number of weeks between the start of each recurrence.
              name: recurInterval
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Indicates event occurs weekly on Sunday.
              name: sunday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Monday.
              name: monday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Tuesday.
              name: tuesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Wednesday.
              name: wednesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Thursday.
              name: thursday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Friday.
              name: friday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Saturday.
              name: saturday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Identifier for a event.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Type of schedule, either businessHours or holidays.
          name: scheduleType
          param_attrs: []
          param_object: []
          type: ScheduleType
          type_spec: required
        - doc: Unique identifier for the schedule.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'People can use shared location schedules or define personal schedules
        containing events.

        businessHours schedules allow you to apply specific call settings at different
        times of the day or week by defining one or more events. holidays schedules
        define exceptions to normal business hours by defining one or more events.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Update an Event for a person's Schedule
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/update-an-event-for-a-person's-schedule
        endpoint: https://webexapis.com/v1/people/{personId}/features/schedules/{scheduleType}/{scheduleId}/events/{eventId}
        http_method: PUT
      header: Update an Event for a person's Schedule
      parameters_and_response:
        Body Parameters:
        - doc: New name for the event.
          name: newName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Name for the event.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Start date of the event, or first occurrence if repeating, in the format
            of YYYY-MM-DD.  This field is required if the allDayEnabled field is present.
          name: startDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: End date of the event, or first occurrence if repeating, in the format
            of YYYY-MM-DD.  This field is required if the allDayEnabled field is present.
          name: endDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Start time of the event in the format of HH:MM (24 hours format).  This
            field is required if the allDayEnabled field is false or omitted.
          name: startTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: End time of the event in the format of HH:MM (24 hours format).  This
            field is required if the allDayEnabled field is false or omitted.
          name: endTime
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: True if it is all-day event.
          name: allDayEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Recurrance scheme for an event.
          name: recurrence
          param_attrs:
          - doc: True if the event repeats forever. Requires either recurDaily or
              recurWeekly to be specified.
            name: recurForEver
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: End date for the recurring event in the format of YYYY-MM-DD. Requires
              either recurDaily or recurWeekly to be specified.
            name: recurEndDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: End recurrence after the event has repeated the specified number
              of times. Requires either recurDaily or recurWeekly to be specified.
            name: recurEndOccurrence
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: 'Specifies the number of days between the start of each recurrence
              and is not allowed with recurWeekly.

              Recurring interval in days. The number of days after the start when
              an event will repeat.  Repetitions cannot overlap.'
            name: recurDaily
            param_attrs: []
            param_object: []
            type: object
            type_spec: null
          - doc: Specifies the event recurs weekly on the designated days of the week
              and is not allowed with recurDaily.
            name: recurWeekly
            param_attrs:
            - doc: Specifies the number of weeks between the start of each recurrence.
              name: recurInterval
              param_attrs: []
              param_object: []
              type: number
              type_spec: required
            - doc: Indicates event occurs weekly on Sunday.
              name: sunday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Monday.
              name: monday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Tuesday.
              name: tuesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Wednesday.
              name: wednesday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Thursday.
              name: thursday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Friday.
              name: friday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Indicates event occurs weekly on Saturday.
              name: saturday
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Identifier for a event.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Type of schedule, either businessHours or holidays.
          name: scheduleType
          param_attrs: []
          param_object: []
          type: ScheduleType
          type_spec: required
        - doc: Unique identifier for the schedule.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique identifier for the event.
          name: eventId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'People can use shared location schedules or define personal schedules
        containing events.

        businessHours schedules allow you to apply specific call settings at different
        times of the day or week by defining one or more events. holidays schedules
        define exceptions to normal business hours by defining one or more events.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Delete an Event for a person's Schedule
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/delete-an-event-for-a-person's-schedule
        endpoint: https://webexapis.com/v1/people/{personId}/features/schedules/{scheduleType}/{scheduleId}/events/{eventId}
        http_method: DELETE
      header: Delete an Event for a person's Schedule
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Type of schedule, either businessHours or holidays.
          name: scheduleType
          param_attrs: []
          param_object: []
          type: ScheduleType
          type_spec: required
        - doc: Unique identifier for the schedule.
          name: scheduleId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Unique identifier for the event.
          name: eventId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s Call Waiting settings.

        With this feature, a person can place an active call on hold and answer an
        incoming call.  When enabled, while you are on an active call, a tone alerts
        you of an incoming call and you can choose to answer or ignore the call.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Read Call Waiting Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-call-waiting-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/callWaiting
        http_method: GET
      header: Read Call Waiting Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: true if the Call Waiting feature is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Call Waiting settings.

        With this feature, a person can place an active call on hold and answer an
        incoming call.  When enabled, while you are on an active call, a tone alerts
        you of an incoming call and you can choose to answer or ignore the call.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Configure Call Waiting Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-call-waiting-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/callWaiting
        http_method: PUT
      header: Configure Call Waiting Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: true if the Call Waiting feature is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieves the monitoring settings of the person, which shows specified
        people, places, virtual lines or call park extenions that are being monitored.

        Monitors the line status which indicates if a person, place or virtual line
        is on a call and if a call has been parked on that extension.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Retrieve a person's Monitoring Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/retrieve-a-person's-monitoring-settings
        endpoint: https://webexapis.com/v1/people/{personId}/features/monitoring
        http_method: GET
      header: Retrieve a person's Monitoring Settings
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Call park notification is enabled or disabled.
          name: callParkNotificationEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Settings of monitored elements which can be person, place, virtual
            line or call park extension.
          name: monitoredElements
          param_attrs:
          - doc: ''
            name: member
            param_attrs: []
            param_object:
            - doc: The identifier of the monitored person.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The last name of the monitored person, place or virtual line.
              name: lastName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The first name of the monitored person, place or virtual line.
              name: firstName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The display name of the monitored person, place or virtual line.
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates whether the type is PEOPLE, PLACE or VIRTUAL_LINE.
              name: type
              param_attrs:
              - doc: Indicates a person or list of people.
                name: PEOPLE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates a workspace that is not assigned to a specific person
                  such as for a shared device in a common area.
                name: PLACE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates a virtual line or list of virtual lines.
                name: VIRTUAL_LINE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: PeopleOrPlaceOrVirtualLineType
              type_spec: null
            - doc: The email address of the monitored person, place or virtual line.
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The list of phone numbers of the monitored person, place or virtual
                line.
              name: numbers
              param_attrs:
              - doc: External phone number of the monitored person, workspace or virtual
                  line.
                name: external
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Extension number of the monitored person, workspace or virtual
                  line.
                name: extension
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates whether phone number is a primary number.
                name: primary
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              param_object: []
              type: array[MonitoredNumberObject]
              type_spec: null
            - doc: The location name where the call park extension is.
              name: location
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The ID for the location.
              name: locationId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          - doc: ''
            name: callparkextension
            param_attrs: []
            param_object:
            - doc: The identifier of the call park extension.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The name used to describe the call park extension.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The extension number for the call park extension.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The location name where the call park extension is.
              name: location
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The ID for the location.
              name: locationId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: array[GetMonitoredElementsObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modifies the monitoring settings of the person.

        Monitors the line status of specified people, places, virtual lines or call
        park extension. The line status indicates if a person, place or virtual line
        is on a call and if a call has been parked on that extension.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Modify a person's Monitoring Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/modify-a-person's-monitoring-settings
        endpoint: https://webexapis.com/v1/people/{personId}/features/monitoring
        http_method: PUT
      header: Modify a person's Monitoring Settings
      parameters_and_response:
        Body Parameters:
        - doc: Enable or disable call park notification.
          name: enableCallParkNotification
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: 'Identifiers of monitored elements whose monitoring settings will be
            modified.

            Possible values: Y2lzY29zcGFyazovL3VzL1BFT1BMRS85OWNlZjRmYS03YTM5LTQ1ZDItOTNmNi1jNjA5YTRiMjgzODY'
          name: monitoredElements
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get a person''s phone numbers including alternate numbers.

        A person can have one or more phone numbers and/or extensions via which they
        can be called.

        This API requires a full or user administrator auth token with the spark-admin:people_read
        scope.'
      documentation:
        doc: Get a List of Phone Numbers for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/get-a-list-of-phone-numbers-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/numbers
        http_method: GET
      header: Get a List of Phone Numbers for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Return phone numbers in E.164 format.
          name: preferE164Format
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: Enable/disable a distinctive ring pattern that identifies calls coming
            from a specific phone number.
          name: distinctiveRingEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Information about the number.
          name: phoneNumbers
          param_attrs:
          - doc: 'Flag to indicate if the number is primary or not.

              Possible values: '
            name: primary
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: 'Phone number.

              Possible values: 2143456789'
            name: directNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Extension.

              Possible values: 1234'
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Optional ring pattern. Applicable only for alternate numbers.

              Possible values: NORMAL, LONG_LONG, SHORT_SHORT_LONG, SHORT_LONG_SHORT'
            name: ringPattern
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Application services let you determine the ringing behavior for calls
        made to people in certain scenarios. You can also specify which devices can
        download the Webex Calling app.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Retrieve a person's Application Services Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/retrieve-a-person's-application-services-settings
        endpoint: https://webexapis.com/v1/people/{personId}/features/applications
        http_method: GET
      header: Retrieve a person's Application Services Settings
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: When true, indicates to ring devices for outbound Click to Dial calls.
          name: ringDevicesForClickToDialCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When true, indicates to ring devices for inbound Group Pages.
          name: ringDevicesForGroupPageEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When true, indicates to ring devices for Call Park recalled.
          name: ringDevicesForCallParkEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Indicates that the browser Webex Calling application is enabled for
            use.
          name: browserClientEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Device ID of WebRTC client. Returns only if browserClientEnabled is
            true.
          name: browserClientId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates that the desktop Webex Calling application is enabled for
            use.
          name: desktopClientEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Device ID of Desktop client. Returns only if desktopClientEnabled is
            true.
          name: desktopClientId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates that the tablet Webex Calling application is enabled for
            use.
          name: tabletClientEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Indicates that the mobile Webex Calling application is enabled for
            use.
          name: mobileClientEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Number of available device licenses for assigning devices/apps.
          name: availableLineCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Application services let you determine the ringing behavior for calls
        made to users in certain scenarios. You can also specify which devices users
        can download the Webex Calling app on.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Modify a person's Application Services Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/modify-a-person's-application-services-settings
        endpoint: https://webexapis.com/v1/people/{personId}/features/applications
        http_method: PUT
      header: Modify a person's Application Services Settings
      parameters_and_response:
        Body Parameters:
        - doc: When true, indicates to ring devices for outbound Click to Dial calls.
          name: ringDevicesForClickToDialCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When true, indicates to ring devices for inbound Group Pages.
          name: ringDevicesForGroupPageEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When true, indicates to ring devices for Call Park recalled.
          name: ringDevicesForCallParkEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Indicates that the browser Webex Calling application is enabled for
            use.
          name: browserClientEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Indicates that the desktop Webex Calling application is enabled for
            use.
          name: desktopClientEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Indicates that the tablet Webex Calling application is enabled for
            use.
          name: tabletClientEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Indicates that the mobile Webex Calling application is enabled for
            use.
          name: mobileClientEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get a person''s privacy settings for the specified person ID.

        The privacy feature enables the person''s line to be monitored by others and
        determine if they can be reached by Auto Attendant services.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Get a person's Privacy Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/get-a-person's-privacy-settings
        endpoint: https://webexapis.com/v1/people/{personId}/features/privacy
        http_method: GET
      header: Get a person's Privacy Settings
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: When true auto attendant extension dialing will be enabled.
          name: aaExtensionDialingEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When true auto attendant dailing by first or last name will be enabled.
          name: aaNamingDialingEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When true phone status directory privacy will be enabled.
          name: enablePhoneStatusDirectoryPrivacy
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: List of people that are being monitored.
          name: monitoringAgents
          param_attrs:
          - doc: Unique identifier of the person.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of the person.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of the person.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of the person.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type usually indicates PEOPLE, PLACE or VIRTUAL_LINE. Push-to-Talk
              and Privacy features only supports PEOPLE.
            name: type
            param_attrs:
            - doc: Indicates a person or list of people.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a workspace that is not assigned to a specific person
                such as for a shared device in a common area.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a virtual line or list of virtual lines.
              name: VIRTUAL_LINE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: PeopleOrPlaceOrVirtualLineType
            type_spec: null
          - doc: Email address of the person.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: List of phone numbers of the person.
            name: numbers
            param_attrs:
            - doc: External phone number of the person.
              name: external
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Extension number of the person.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates whether phone number is primary number.
              name: primary
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[PushToTalkNumberObject]
            type_spec: null
          param_object: []
          type: array[MonitoredPersonObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s privacy settings for the specified person ID.

        The privacy feature enables the person''s line to be monitored by others and
        determine if they can be reached by Auto Attendant services.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Configure a person's Privacy Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-a-person's-privacy-settings
        endpoint: https://webexapis.com/v1/people/{personId}/features/privacy
        http_method: PUT
      header: Configure a person's Privacy Settings
      parameters_and_response:
        Body Parameters:
        - doc: When true auto attendant extension dialing is enabled.
          name: aaExtensionDialingEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When true auto attendant dailing by first or last name is enabled.
          name: aaNamingDialingEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: When true phone status directory privacy is enabled.
          name: enablePhoneStatusDirectoryPrivacy
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: List of monitoring person IDs.
          name: monitoringAgents
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve the executive assistant settings for the specified personId.

        People with the executive service enabled, can select from a pool of assistants
        who have been assigned the executive assistant service and who can answer
        or place calls on their behalf. Executive assistants can set the call forward
        destination and join or leave an executive''s pool.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Retrieve Executive Assistant Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/retrieve-executive-assistant-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/executiveAssistant
        http_method: GET
      header: Retrieve Executive Assistant Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Indicates the Executive Assistant type.
          name: type
          param_attrs:
          - doc: Indicates the feature is not enabled.
            name: UNASSIGNED
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates the feature is enabled and the person is an Executive.
            name: EXECUTIVE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates the feature is enabled and the person is an Executive Assistant.
            name: EXECUTIVE_ASSISTANT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify the executive assistant settings for the specified personId.

        People with the executive service enabled, can select from a pool of assistants
        who have been assigned the executive assistant service and who can answer
        or place calls on their behalf. Executive assistants can set the call forward
        destination and join or leave an executive''s pool.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Modify Executive Assistant Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/modify-executive-assistant-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/executiveAssistant
        http_method: PUT
      header: Modify Executive Assistant Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: executive assistant type
          name: type
          param_attrs:
          - doc: Indicates the feature is not enabled.
            name: UNASSIGNED
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates the feature is enabled and the person is an Executive.
            name: EXECUTIVE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates the feature is enabled and the person is an Executive Assistant.
            name: EXECUTIVE_ASSISTANT
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s Receptionist Client settings.

        To help support the needs of your front-office personnel, you can set up people,
        workspaces or virtual lines as telephone attendants so that they can screen
        all incoming calls to certain numbers within your organization.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Read Receptionist Client Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-receptionist-client-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/reception
        http_method: GET
      header: Read Receptionist Client Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Set to true to enable the Receptionist Client feature.
          name: receptionEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: List of people, workspaces or virtual lines to monitor.
          name: monitoredMembers
          param_attrs:
          - doc: Unique identifier of the person, workspace or virtual line to be
              monitored.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of the monitored person, workspace or virtual line.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of the monitored person, workspace or virtual line.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of the monitored person, workspace or virtual line.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates whether type is person, workspace or virtual line.
            name: type
            param_attrs:
            - doc: Indicates a person or list of people.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a workspace that is not assigned to a specific person
                such as for a shared device in a common area.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a virtual line or list of virtual lines.
              name: VIRTUAL_LINE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: PeopleOrPlaceOrVirtualLineType
            type_spec: null
          - doc: Email address of the monitored person, workspace or virtual line.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: List of phone numbers of the monitored person, workspace or virtual
              line.
            name: numbers
            param_attrs:
            - doc: External phone number of the monitored person, workspace or virtual
                line.
              name: external
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Extension number of the monitored person, workspace or virtual
                line.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates whether phone number is a primary number.
              name: primary
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[MonitoredNumberObject]
            type_spec: null
          param_object: []
          type: array[MonitoredMemberObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Receptionist Client settings.

        To help support the needs of your front-office personnel, you can set up people,
        workspaces or virtual lines as telephone attendants so that they can screen
        all incoming calls to certain numbers within your organization.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Configure Receptionist Client Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-receptionist-client-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/reception
        http_method: PUT
      header: Configure Receptionist Client Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: true if the Receptionist Client feature is enabled.
          name: receptionEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: 'List of members'' unique identifiers to monitor.

            Possible values: Y2lzY29zcGFyazovL3VzL1BFT1BMRS82MWU3MDlkNy1hM2IxLTQ2MDctOTBiOC04NmE5MDgxYWFkNmE'
          name: monitoredMembers
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s Push-to-Talk settings.

        Push-to-Talk allows the use of desk phones as either a one-way or two-way
        intercom that connects people in different parts of your organization.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Read Push-to-Talk Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-push-to-talk-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/pushToTalk
        http_method: GET
      header: Read Push-to-Talk Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Set to true to enable the Push-to-Talk feature.  When enabled, a person
            receives a Push-to-Talk call and answers the call automatically.
          name: allowAutoAnswer
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Specifies the connection type to be used.
          name: connectionType
          param_attrs:
          - doc: Push-to-Talk initiators can chat with this person but only in one
              direction. The person you enable Push-to-Talk for cannot respond.
            name: ONE_WAY
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Push-to-Talk initiators can chat with this person in a two-way conversation.
              The person you enable Push-to-Talk for can respond.
            name: TWO_WAY
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: PushToTalkConnectionType
          type_spec: null
        - doc: Specifies the access type to be applied when evaluating the member
            list.
          name: accessType
          param_attrs:
          - doc: List of people that are allowed to use the Push-to-Talk feature to
              interact with the person being configured.
            name: ALLOW_MEMBERS
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: List of people that are disallowed to interact using the Push-to-Talk
              feature with the person being configured.
            name: BLOCK_MEMBERS
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: PushToTalkAccessType
          type_spec: null
        - doc: List of people that are allowed or disallowed to interact using the
            Push-to-Talk feature.
          name: members
          param_attrs:
          - doc: Unique identifier of the person.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Last name of the person.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: First name of the person.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Display name of the person.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Type usually indicates PEOPLE, PLACE or VIRTUAL_LINE. Push-to-Talk
              and Privacy features only supports PEOPLE.
            name: type
            param_attrs:
            - doc: Indicates a person or list of people.
              name: PEOPLE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a workspace that is not assigned to a specific person
                such as for a shared device in a common area.
              name: PLACE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a virtual line or list of virtual lines.
              name: VIRTUAL_LINE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: PeopleOrPlaceOrVirtualLineType
            type_spec: null
          - doc: Email address of the person.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: List of phone numbers of the person.
            name: numbers
            param_attrs:
            - doc: External phone number of the person.
              name: external
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Extension number of the person.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates whether phone number is primary number.
              name: primary
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: array[PushToTalkNumberObject]
            type_spec: null
          param_object: []
          type: array[MonitoredPersonObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Push-to-Talk settings.

        Push-to-Talk allows the use of desk phones as either a one-way or two-way
        intercom that connects people in different parts of your organization.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Configure Push-to-Talk Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-push-to-talk-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/pushToTalk
        http_method: PUT
      header: Configure Push-to-Talk Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: true if Push-to-Talk feature is enabled.
          name: allowAutoAnswer
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Specifies the connection type to be used.
          name: connectionType
          param_attrs:
          - doc: Push-to-Talk initiators can chat with this person but only in one
              direction. The person you enable Push-to-Talk for cannot respond.
            name: ONE_WAY
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Push-to-Talk initiators can chat with this person in a two-way conversation.
              The person you enable Push-to-Talk for can respond.
            name: TWO_WAY
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: PushToTalkConnectionType
          type_spec: null
        - doc: Specifies the access type to be applied when evaluating the member
            list.
          name: accessType
          param_attrs:
          - doc: List of people that are allowed to use the Push-to-Talk feature to
              interact with the person being configured.
            name: ALLOW_MEMBERS
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: List of people that are disallowed to interact using the Push-to-Talk
              feature with the person being configured.
            name: BLOCK_MEMBERS
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: PushToTalkAccessType
          type_spec: null
        - doc: 'List of people that are allowed or disallowed to interact using the
            Push-to-Talk feature.

            Possible values: Y2lzY29zcGFyazovL3VzL1BFT1BMRS82MWU3MDlkNy1hM2IxLTQ2MDctOTBiOC04NmE5MDgxYWFkNmE'
          name: members
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s hoteling settings.

        As an administrator, you can enable hoteling for people so that their phone
        profile (phone number, features, and calling plan) is temporarily loaded onto
        a shared (host) phone.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Read Hoteling Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-hoteling-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/hoteling
        http_method: GET
      header: Read Hoteling Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: When true, allow this person to connect to a Hoteling host device.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s hoteling settings.

        As an administrator, you can enable hoteling for people so that their phone
        profile (phone number, features, and calling plan) is temporarily loaded onto
        a shared (host) phone.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Configure Hoteling Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-hoteling-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/hoteling
        http_method: PUT
      header: Configure Hoteling Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: When true, allow this person to connect to a Hoteling host device.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Reset a voicemail PIN for a person.

        The voicemail feature transfers callers to voicemail based on your settings.
        You can then retrieve voice messages via Voicemail.  A voicemail PIN is used
        to retrieve your voicemail messages.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.

        NOTE: This API is expected to have an empty request body and Content-Type
        header should be set to application/json.'
      documentation:
        doc: Reset Voicemail PIN
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/reset-voicemail-pin
        endpoint: https://webexapis.com/v1/people/{personId}/features/voicemail/actions/resetPin/invoke
        http_method: POST
      header: Reset Voicemail PIN
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s Incoming Permission settings.

        You can change the incoming calling permissions for a person if you want them
        to be different from your organization''s default.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Read Incoming Permission Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/read-incoming-permission-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/incomingPermission
        http_method: GET
      header: Read Incoming Permission Settings for a Person
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: When true, indicates that this person uses the specified calling permissions
            for receiving inbound calls rather than the organizational defaults.
          name: useCustomEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Specifies the transfer behavior for incoming, external calls.
          name: externalTransfer
          param_attrs:
          - doc: Allow transfer and forward for all external calls including those
              which were transferred.
            name: ALLOW_ALL_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only allow transferred calls to be transferred or forwarded and disallow
              transfer of other external calls.
            name: ALLOW_ONLY_TRANSFERRED_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Block all external calls from being transferred or forwarded.
            name: BLOCK_ALL_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Internal calls are allowed to be received.
          name: internalCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Collect calls are allowed to be received.
          name: collectCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configure a person''s Incoming Permission settings.

        You can change the incoming calling permissions for a person if you want them
        to be different from your organization''s default.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Configure Incoming Permission Settings for a Person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/configure-incoming-permission-settings-for-a-person
        endpoint: https://webexapis.com/v1/people/{personId}/features/incomingPermission
        http_method: PUT
      header: Configure Incoming Permission Settings for a Person
      parameters_and_response:
        Body Parameters:
        - doc: When true, indicates that this person uses the specified calling permissions
            for receiving inbound calls rather than the organizational defaults.
          name: useCustomEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Specifies the transfer behavior for incoming, external calls.
          name: externalTransfer
          param_attrs:
          - doc: Allow transfer and forward for all external calls including those
              which were transferred.
            name: ALLOW_ALL_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only allow transferred calls to be transferred or forwarded and disallow
              transfer of other external calls.
            name: ALLOW_ONLY_TRANSFERRED_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Block all external calls from being transferred or forwarded.
            name: BLOCK_ALL_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: Internal calls are allowed to be received.
          name: internalCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Collect calls are allowed to be received.
          name: collectCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a person''s Outgoing Calling Permissions settings.

        You can change the outgoing calling permissions for a person if you want them
        to be different from your organization''s default.

        This API requires a full, user, or read-only administrator auth token with
        a scope of spark-admin:people_read.'
      documentation:
        doc: Retrieve a person's Outgoing Calling Permissions Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/retrieve-a-person's-outgoing-calling-permissions-settings
        endpoint: https://webexapis.com/v1/people/{personId}/features/outgoingPermission
        http_method: GET
      header: Retrieve a person's Outgoing Calling Permissions Settings
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: When true, indicates that this user uses the specified calling permissions
            when placing outbound calls.
          name: useCustomEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Specifies the outbound calling permissions settings.
          name: callingPermissions
          param_attrs:
          - doc: 'Designates the action to be taken for each call type and if transferring
              the call type is allowed.

              Possible values: INTERNAL_CALL, TOLL_FREE, INTERNATIONAL, OPERATOR_ASSISTED,
              CHARGEABLE_DIRECTORY_ASSISTED, SPECIAL_SERVICES_I, SPECIAL_SERVICES_II,
              PREMIUM_SERVICES_I, PREMIUM_SERVICES_II, NATIONAL'
            name: callType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Action on the given callType.

              Possible values: ALLOW, BLOCK, AUTH_CODE, TRANSFER_NUMBER_1, TRANSFER_NUMBER_2,
              TRANSFER_NUMBER_3'
            name: action
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Allow the person to transfer or forward a call of the specified
              call type.

              Possible values: '
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify a person''s Outgoing Calling Permissions settings.

        You can change the outgoing calling permissions for a person if you want them
        to be different from your organization''s default.

        This API requires a full or user administrator auth token with the spark-admin:people_write
        scope.'
      documentation:
        doc: Modify a person's Outgoing Calling Permissions Settings
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/modify-a-person's-outgoing-calling-permissions-settings
        endpoint: https://webexapis.com/v1/people/{personId}/features/outgoingPermission
        http_method: PUT
      header: Modify a person's Outgoing Calling Permissions Settings
      parameters_and_response:
        Body Parameters:
        - doc: When true, indicates that this user uses the specified calling permissions
            when placing outbound calls.
          name: useCustomEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Specifies the outbound calling permissions settings.
          name: callingPermissions
          param_attrs:
          - doc: 'Designates the action to be taken for each call type and if transferring
              the call type is allowed.

              Possible values: INTERNAL_CALL, TOLL_FREE, INTERNATIONAL, OPERATOR_ASSISTED,
              CHARGEABLE_DIRECTORY_ASSISTED, SPECIAL_SERVICES_I, SPECIAL_SERVICES_II,
              PREMIUM_SERVICES_I, PREMIUM_SERVICES_II, NATIONAL'
            name: callType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Action on the given callType.

              Possible values: ALLOW, BLOCK, AUTH_CODE, TRANSFER_NUMBER_1, TRANSFER_NUMBER_2,
              TRANSFER_NUMBER_3'
            name: action
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: 'Allow the person to transfer or forward a call of the specified
              call type.

              Possible values: '
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[object]
          type_spec: required
        Query Parameters:
        - doc: ID of the organization in which the person resides. Only admin users
            of another organization (such as partners) may use this parameter as the
            default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Assign or unassign alternate phone numbers to a person.

        Each location has a set of phone numbers that can be assigned to people, workspaces,
        or features. Phone numbers must follow the E.164 format for all countries,
        except for the United States, which can also follow the National format. Active
        phone numbers are in service.

        Assigning or unassigning an alternate phone number to a person requires a
        full administrator auth token with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Assign or Unassign numbers to a person
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/assign-or-unassign-numbers-to-a-person
        endpoint: https://webexapis.com/v1/telephony/config/people/{personId}/numbers
        http_method: PUT
      header: Assign or Unassign numbers to a person
      parameters_and_response:
        Body Parameters:
        - doc: Enables a distinctive ring pattern for the person.
          name: enableDistinctiveRingPattern
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: List of phone numbers that are assigned to a person.
          name: phoneNumbers
          param_attrs:
          - doc: If true marks the phone number as primary.
            name: primary
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: required
          - doc: Either 'ADD' to add phone numbers or 'DELETE' to remove phone numbers.
            name: action
            param_attrs:
            - doc: Add action.
              name: ADD
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Delete action.
              name: DELETE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Action
            type_spec: required
          - doc: Phone numbers that are assigned.
            name: directNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Extension that is assigned.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Ring Pattern of this number.
            name: ringPattern
            param_attrs:
            - doc: Normal ring pattern.
              name: NORMAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Long ring pattern.
              name: LONG_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Short and short ring pattern.
              name: SHORT_SHORT_LONG
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Short and long ring pattern.
              name: SHORT_LONG_SHORT
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: RingPattern
            type_spec: null
          param_object: []
          type: array[PhoneNumber]
          type_spec: required
        Query Parameters:
        - doc: Organization of the Route Group.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identitfier of the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve the list of the person''s available call queues and the associated
        Caller ID information.

        If the Agent is to enable queueCallerIdEnabled, they must choose which queue
        to use as the source for outgoing Caller ID.  This API returns a list of Call
        Queues from which the person must select.  If this setting is disabled or
        the Agent does not belong to any queue, this list will be empty.

        This API requires a full admin or read-only administrator auth token with
        a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Retrieve List of Call Queue Caller ID information
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/retrieve-list-of-call-queue-caller-id-information
        endpoint: https://webexapis.com/v1/telephony/config/people/{personId}/queues/availableCallerIds
        http_method: GET
      header: Retrieve List of Call Queue Caller ID information
      parameters_and_response:
        Response Properties:
        - doc: Indicates a list of Call Queues that the agent belongs and are available
            to be selected as the Caller ID for outgoing calls. It is empty when the
            agent's Call Queues have disabled the Call Queue outgoing phone number
            setting to be used as Caller ID. In the case where this setting is enabled
            the array will be populated.
          name: availableQueues
          param_attrs:
          - doc: Indicates the Call Queue's unique identifier.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates the Call Queue's name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: When not null, indicates the Call Queue's phone number.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: When not null, indicates the Call Queue's extension number.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[CallQueueObject]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve a call queue agent''s Caller ID information.

        Each agent in the Call Queue will be able to set their outgoing Caller ID
        as either the Call Queue''s phone number or their own configured Caller ID.
        This API fetches the configured Caller ID for the agent in the system.

        This API requires a full admin or read-only administrator auth token with
        a scope of spark-admin:telephony_config_read.'
      documentation:
        doc: Retrieve a Call Queue Agent's Caller ID information
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/retrieve-a-call-queue-agent's-caller-id-information
        endpoint: https://webexapis.com/v1/telephony/config/people/{personId}/queues/callerId
        http_method: GET
      header: Retrieve a Call Queue Agent's Caller ID information
      parameters_and_response:
        Response Properties:
        - doc: When true, indicates that this agent is using the selectedQueue for
            its Caller ID. When false, indicates that it is using the agent's configured
            Caller ID.
          name: queueCallerIdEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Indicates agent's choice of using this queue's Caller ID for outgoing
            calls. It is empty object when queueCallerIdEnabled is false. When queueCallerIdEnabled
            is true this data must be populated.
          name: selectedQueue
          param_attrs:
          - doc: Indicates the Call Queue's unique identifier.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates the Call Queue's name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: When not null, indicates the Call Queue's phone number.
            name: phoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: When not null, indicates the Call Queue's extension number.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: CallQueueObject
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify a call queue agent''s Caller ID information.

        Each Agent in the Call Queue will be able to set their outgoing Caller ID
        as either the designated Call Queue''s phone number or their own configured
        Caller ID. This API modifies the configured Caller ID for the agent in the
        system.

        This API requires a full or user administrator auth token with the spark-admin:telephony_config_write
        scope.'
      documentation:
        doc: Modify a Call Queue Agent's Caller ID information
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-person-settings/modify-a-call-queue-agent's-caller-id-information
        endpoint: https://webexapis.com/v1/telephony/config/people/{personId}/queues/callerId
        http_method: PUT
      header: Modify a Call Queue Agent's Caller ID information
      parameters_and_response:
        Body Parameters:
        - doc: When true, indicates that this agent is using the selectedQueue for
            its Caller ID. When false, indicates that it is using the agent's configured
            Caller ID.
          name: queueCallerIdEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Indicates agent's choice of using this queue's Caller ID for outgoing
            calls. It is empty object when queueCallerIdEnabled is false. When queueCallerIdEnabled
            is true this data must be populated.
          name: selectedQueue
          param_attrs:
          - doc: Indicates the Call Queue's unique identifier.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Indicates the Call Queue's name.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: object
          type_spec: required
        URI Parameters:
        - doc: Unique identifier for the person.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Webex Calling Voice Messaging:
    doc: Voice Messaging APIs provide support for handling voicemail and message waiting
      indicators in Webex Calling.  The APIs are limited to user access (no admin
      access), and all GET commands require the spark:calls_read scope, while the
      other commands require the spark:calls_write scope.
    header: Webex Calling Voice Messaging
    methods:
    - doc: Get a summary of the voicemail messages for the user.
      documentation:
        doc: Get Message Summary
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-voice-messaging/get-message-summary
        endpoint: https://webexapis.com/v1/telephony/voiceMessages/summary
        http_method: GET
      header: Get Message Summary
      parameters_and_response:
        Response Properties:
        - doc: The number of new (unread) voicemail messages.
          name: newMessages
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The number of old (read) voicemail messages.
          name: oldMessages
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The number of new (unread) urgent voicemail messages.
          name: newUrgentMessages
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The number of old (read) urgent voicemail messages.
          name: oldUrgentMessages
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
    - doc: Get the list of all voicemail messages for the user.
      documentation:
        doc: List Messages
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-voice-messaging/list-messages
        endpoint: https://webexapis.com/v1/telephony/voiceMessages
        http_method: GET
      header: List Messages
      parameters_and_response:
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The message identifier of the voicemail message.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ' The duration (in seconds) of the voicemail message.  Duration is
              not present for a FAX message.'
            name: duration
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The calling party's details. For example, if user A calls user B
              and leaves a voicemail message, then A is the calling party.
            name: callingParty
            param_attrs:
            - doc: The party's name. Only present when the name is available and privacy
                is not enabled.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: 'The party''s number. Only present when the number is available
                and privacy is not enabled. The number can be digits or a URI. Some
                examples for number include: 1234, 2223334444, +12223334444, *73,
                and user@company.domain.'
              name: number
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The party's person ID. Only present when the person ID is available
                and privacy is not enabled.
              name: personId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The party's place ID. Only present when the place ID is available
                and privacy is not enabled.
              name: placeId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates whether privacy is enabled for the name, number and personId/placeId.
              name: privacyEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: VoiceMailPartyInformation
            type_spec: null
          - doc: true if the voicemail message is urgent.
            name: urgent
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: true if the voicemail message is confidential.
            name: confidential
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: true if the voicemail message has been read.
            name: read
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number of pages for the FAX.  Only set for a FAX.
            name: faxPageCount
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The date and time the voicemail message was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[VoiceMessageDetails]
          type_spec: null
    - doc: Delete a specfic voicemail message for the user.
      documentation:
        doc: Delete Message
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-voice-messaging/delete-message
        endpoint: https://webexapis.com/v1/telephony/voiceMessages/{messageId}
        http_method: DELETE
      header: Delete Message
      parameters_and_response:
        URI Parameters:
        - doc: The message identifer of the voicemail message to delete
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Update the voicemail message(s) as read for the user.

        If the messageId is provided, then only mark that message as read.  Otherwise,
        all messages for the user are marked as read.'
      documentation:
        doc: Mark As Read
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-voice-messaging/mark-as-read
        endpoint: https://webexapis.com/v1/telephony/voiceMessages/markAsRead
        http_method: POST
      header: Mark As Read
      parameters_and_response:
        Body Parameters:
        - doc: The voicemail message identifier of the message to mark as read.  If
            the messageId is not provided, then all voicemail messages for the user
            are marked as read.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Update the voicemail message(s) as unread for the user.

        If the messageId is provided, then only mark that message as unread.  Otherwise,
        all messages for the user are marked as unread.'
      documentation:
        doc: Mark As Unread
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-voice-messaging/mark-as-unread
        endpoint: https://webexapis.com/v1/telephony/voiceMessages/markAsUnread
        http_method: POST
      header: Mark As Unread
      parameters_and_response:
        Body Parameters:
        - doc: The voicemail message identifier of the message to mark as unread.  If
            the messageId is not provided, then all voicemail messages for the user
            are marked as unread.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
  Webex Calling Workspace Settings:
    doc: "Workspaces represent places where people work, such as conference rooms,\
      \ meeting spaces, lobbies, and lunchrooms. Devices may be associated with workspaces.\n\
      Webex Calling Workspace Settings support reading and writing of Webex Calling\
      \ settings for a specific workspace within the organization.\nViewing the list\
      \ of settings in a workspace requires an administrator auth token with the spark-admin:workspaces_read\
      \ scope. \nAdding, updating, or deleting settings in a workspace requires an\
      \ administrator auth token with the spark-admin:workspaces_write scope.\nThis\
      \ API can also be used by partner administrators acting as administrators of\
      \ a different organization than their own. In those cases, an orgId must be\
      \ supplied, as indicated in the reference documentation for the relevant endpoints.\n\
      A partner administrator can retrieve or change settings in a customer's organization\
      \ using the optional OrgId query parameter."
    header: Webex Calling Workspace Settings
    methods:
    - doc: 'Retrieve Call Forwarding Settings for a Workspace.

        Two types of call forwarding are supported:

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:workspaces_read or a user auth token with spark:workspaces_read
        scope can be used to read workspace settings.'
      documentation:
        doc: Retrieve Call Forwarding Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/retrieve-call-forwarding-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/callForwarding
        http_method: GET
      header: Retrieve Call Forwarding Settings for a Workspace
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Call forwarding settings for a Workspace.
          name: callForwarding
          param_attrs:
          - doc: Settings for forwarding all incoming calls to the destination you
              chose while the phone is in use or the workspace is busy.
            name: busy
            param_attrs:
            - doc: '"Busy" call forwarding is enabled or disabled.'
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for "Busy" call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the enabled or disabled state of sending incoming calls
                to voicemail when the destination is an internal phone number and
                that number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: CallForwardingBusyGet
            type_spec: null
          - doc: Settings for forwarding which only occurs when you are away or not
              answering your phone.
            name: noAnswer
            param_attrs:
            - doc: '"No Answer" call forwarding is enabled or disabled.'
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for "No Answer" call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Number of rings before the call will be forwarded if unanswered.
              name: numberOfRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: System-wide maximum number of rings allowed for numberOfRings setting.
              name: systemMaxNumberOfRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Enables and disables sending incoming to destination number's voicemail
                if the destination is an internal phone number and that number has
                the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: CallForwardingNoAnswerGet
            type_spec: null
          param_object: []
          type: CallForwardingPlaceSettingGet
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify call forwarding settings for a Workspace.

        Two types of call forwarding are supported:

        This API requires a full or user administrator auth token with the spark-admin:workspaces_write
        scope or a user auth token with spark:workspaces_write scope can be used to
        update workspace settings.'
      documentation:
        doc: Modify Call Forwarding Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/modify-call-forwarding-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/callForwarding
        http_method: PUT
      header: Modify Call Forwarding Settings for a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: Call forwarding settings for a Workspace.
          name: callForwarding
          param_attrs:
          - doc: Settings for forwarding all incoming calls to the destination you
              chose while the phone is in use or the workspace is busy.
            name: busy
            param_attrs:
            - doc: '"Busy" call forwarding is enabled or disabled.'
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            - doc: Destination for "Busy" call forwarding.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the enabled or disabled state of sending incoming calls
                to voicemail when the destination is an internal phone number and
                that number has the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: required
            param_object: []
            type: CallForwardingBusyGet
            type_spec: null
          - doc: Settings for forwarding which only occurs when you are away or not
              answering your phone.
            name: noAnswer
            param_attrs:
            - doc: '"No Answer" call forwarding is enabled or disabled.'
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Destination for "No Answer" call forwarding. If enabled true, destination
                is required.
              name: destination
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Number of rings before the call will be forwarded if unanswered.
              name: numberOfRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Max number of rings before the call will be forwarded if unanswered.
              name: systemMaxNumberOfRings
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: Enables and disables sending incoming to destination number's voicemail
                if the destination is an internal phone number and that number has
                the voicemail service enabled.
              name: destinationVoicemailEnabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: ModifyCallForwardingNoAnswer
            type_spec: null
          param_object: []
          type: CallForwardingPlaceSettingPatch
          type_spec: required
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Call Waiting Settings for a Workspace.

        Call Waiting allows workspaces to handle multiple simultaneous calls. Workspaces
        with Call Waiting enabled can place a call on hold to answer or initiate another
        call.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:workspaces_read or a user auth token with spark:workspaces_read
        scope can be used to read workspace settings.'
      documentation:
        doc: Retrieve Call Waiting Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/retrieve-call-waiting-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/callWaiting
        http_method: GET
      header: Retrieve Call Waiting Settings for a Workspace
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Call Waiting state.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify Call Waiting Settings for a Workspace.

        Call Waiting allows workspaces to handle multiple simultaneous calls. Workspaces
        with Call Waiting enabled can place a call on hold to answer or initiate another
        call.

        This API requires a full or user administrator auth token with the spark-admin:workspaces_write
        scope or a user auth token with spark:workspaces_write scope can be used to
        update workspace settings.'
      documentation:
        doc: Modify Call Waiting Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/modify-call-waiting-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/callWaiting
        http_method: PUT
      header: Modify Call Waiting Settings for a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: Call Waiting state.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Caller ID Settings for a Workspace.

        Caller ID settings control how a workspace''s information is displayed when
        making outgoing calls.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:workspaces_read or a user auth token with spark:workspaces_read
        scope can be used to read workspace settings.'
      documentation:
        doc: Retrieve Caller ID Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/retrieve-caller-id-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/callerId
        http_method: GET
      header: Retrieve Caller ID Settings for a Workspace
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Allowed types for the selected field.
          name: types
          param_attrs:
          - doc: Outgoing caller ID will show the caller's direct line number and/or
              extension.
            name: DIRECT_LINE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the main number for the location.
            name: LOCATION_NUMBER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the value from the customNumber field.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[CLIDPolicySelection]
          type_spec: null
        - doc: Which type of outgoing Caller ID will be used.
          name: selected
          param_attrs:
          - doc: Outgoing caller ID will show the caller's direct line number and/or
              extension.
            name: DIRECT_LINE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the main number for the location.
            name: LOCATION_NUMBER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the value from the customNumber field.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Direct number which will be shown if DIRECT_LINE is selected.
          name: directNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location number which will be shown if LOCATION_NUMBER is selected
          name: locationNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Flag for specifying a toll-free number.
          name: tollFreeLocationNumber
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: This value must be an assigned number from the person's location.
          name: customNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Workspace's caller ID display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Workspace's caller ID display details. Default is ..
          name: displayDetail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Flag to block call forwarding.
          name: blockInForwardCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Designates which type of External Caller ID Name policy is used. Default
            is DIRECT_LINE.
          name: externalCallerIdNamePolicy
          param_attrs:
          - doc: Outgoing caller ID will show the caller's direct line name.
            name: DIRECT_LINE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the Site Name for the location.
            name: LOCATION
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the value from the customExternalCallerIdName
              field.
            name: OTHER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Custom External Caller Name, which will be shown if External Caller
            ID Name is OTHER.
          name: customExternalCallerIdName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: External Caller Name, which will be shown if External Caller ID Name
            is OTHER.
          name: locationExternalCallerIdName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify Caller ID settings for a Workspace.

        Caller ID settings control how a workspace''s information is displayed when
        making outgoing calls.

        This API requires a full or user administrator auth token with the spark-admin:workspaces_write
        scope or a user auth token with spark:workspaces_write scope can be used to
        update workspace settings.'
      documentation:
        doc: Modify Caller ID Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/modify-caller-id-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/callerId
        http_method: PUT
      header: Modify Caller ID Settings for a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: Which type of outgoing Caller ID will be used.
          name: selected
          param_attrs:
          - doc: Outgoing caller ID will show the caller's direct line number and/or
              extension.
            name: DIRECT_LINE
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the main number for the location.
            name: LOCATION_NUMBER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Outgoing caller ID will show the value from the customNumber field.
            name: CUSTOM
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: This value must be an assigned number from the workspace's location.
          name: customNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Workspace's caller ID display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Workspace's caller ID display details.
          name: displayDetail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Flag to block call forwarding.
          name: blockInForwardCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: 'Designates which type of External Caller ID Name policy is used. Default
            is DIRECT_LINE.

            Possible values: DIRECT_LINE'
          name: externalCallerIdNamePolicy
          param_attrs: []
          param_object: []
          type: ExternalCallerIdNamePolicy
          type_spec: null
        - doc: Custom External Caller Name, which will be shown if External Caller
            ID Name is OTHER.
          name: customExternalCallerIdName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: External Caller Name, which will be shown if External Caller ID Name
            is OTHER.
          name: locationExternalCallerIdName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Get all devices for a workspace.

        This requires a full or read-only administrator auth token with a scope of
        spark-admin:telephony_config_read.'
      documentation:
        doc: Get Workspace Devices
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/get-workspace-devices
        endpoint: https://webexapis.com/v1/telephony/config/workspaces/{workspaceId}/devices
        http_method: GET
      header: Get Workspace Devices
      parameters_and_response:
        Query Parameters:
        - doc: Organization to which the workspace belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Array of devices associated to a workspace.
          name: devices
          param_attrs:
          - doc: Unique identifier for a device.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Comma separated array of tags used to describe device.
            name: description
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: Identifier for device model.
            name: model
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: MAC address of device.
            name: mac
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: IP address of device.
            name: ipAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates whether the person or the workspace is the owner of the
              device and points to a primary Line/Port of the device.
            name: primaryOwner
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Indicates if the line is acting as a primary line or a shared line
              for this device.
            name: type
            param_attrs:
            - doc: Indicates a Primary line for the member.
              name: PRIMARY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a Shared line for the member. Shared line appearance
                allows users to receive and place calls to and from another user's
                extension, using their device.
              name: SHARED_CALL_APPEARANCE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: LineType
            type_spec: null
          - doc: Indicates Hoteling details of a device.
            name: hoteling
            param_attrs:
            - doc: 'Enable/Disable hoteling Host. Enabling the device for hoteling
                means that a guest(end user) can log into this host(workspace device)
                and use this device

                as if it were their own. This is useful when traveling to a remote
                office but still needing to place/receive calls with their telephone
                number and access features normally available to them on their office
                phone.'
              name: enabled
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Enable limiting the time a guest can use the device. The time limit
                is configured via guestHoursLimit.
              name: limitGuestUse
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Time Limit in hours until hoteling is enabled. Mandatory if limitGuestUse
                is enabled.
              name: guestHoursLimit
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            param_object: []
            type: Hoteling
            type_spec: null
          - doc: Owner of the device.
            name: owner
            param_attrs:
            - doc: Unique identifier of a person or a workspace.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Enumeration that indicates if the member is of type PEOPLE or PLACE.
              name: type
              param_attrs:
              - doc: Indicates the associated member is a person.
                name: PEOPLE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Indicates the associated member is a workspace.
                name: PLACE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: MemberType
              type_spec: null
            - doc: First name of device owner.
              name: firstName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Last name of device owner.
              name: lastName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: deviceOwner
            type_spec: null
          - doc: Activation state of a device.
            name: activationState
            param_attrs:
            - doc: Indicates a device is activating.
              name: ACTIVATING
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a device is activated.
              name: ACTIVATED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates a device is deactivated.
              name: DEACTIVATED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: ActivationStates
            type_spec: null
          param_object: []
          type: array[placeDevices]
          type_spec: null
        - doc: Maximum number of devices a workspace can be assigned to.
          name: maxDeviceCount
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        URI Parameters:
        - doc: ID of the workspace for which to retrieve devices.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify devices for a workspace.

        Modifying devices for a workspace requires a full administrator auth token
        with a scope of spark-admin:telephony_config_write.'
      documentation:
        doc: Modify Workspace Devices
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/modify-workspace-devices
        endpoint: https://webexapis.com/v1/telephony/config/workspaces/{workspaceId}/devices
        http_method: PUT
      header: Modify Workspace Devices
      parameters_and_response:
        Body Parameters:
        - doc: 'Enable/Disable hoteling Host. Enabling the device for hoteling means
            that a guest(end user) can log into this host(workspace device) and use
            this device

            as if it were their own. This is useful when traveling to a remote office
            but still needing to place/receive calls with their telephone number and
            access features normally available to them on their office phone.'
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: Enable limiting the time a guest can use the device. The time limit
            is configured via guestHoursLimit.
          name: limitGuestUse
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Time Limit in hours until hoteling is enabled. Mandatory if limitGuestUse
            is enabled.
          name: guestHoursLimit
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Query Parameters:
        - doc: Organization to which the workspace belongs.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: ID of the workspace for which to modify devices.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieves Monitoring settings for a Workspace.

        Allow workspaces to monitor the line status of specified agents, workspaces,
        or call park extensions. The line status indicates if a monitored agent or
        a workspace is on a call, or if a call has been parked on the monitored call
        park extension.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:workspaces_read or a user auth token with spark:workspaces_read
        scope can be used to read workspace settings.'
      documentation:
        doc: Retrieve Monitoring Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/retrieve-monitoring-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/monitoring
        http_method: GET
      header: Retrieve Monitoring Settings for a Workspace
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Call park notification enabled or disabled.
          name: callParkNotificationEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Monitored element items.
          name: monitoredElements
          param_attrs:
          - doc: Monitored Call Park extension.
            name: callparkextension
            param_attrs:
            - doc: ID of call park extension.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of call park extension.
              name: name
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Extension of call park extension.
              name: extension
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Name of location for call park extension.
              name: location
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ID of location for call park extension.
              name: locationId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: MonitoredElementCallParkExtension
            type_spec: null
          - doc: Monitored member for this workspace.
            name: member
            param_attrs:
            - doc: ID of person or workspace.
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: First name of person or workspace.
              name: firstName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Last name of person or workspace.
              name: lastName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Display name of person or workspace.
              name: displayName
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Type of the person or workspace.
              name: type
              param_attrs:
              - doc: Object is a user.
                name: PEOPLE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Object is a workspace.
                name: PLACE
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Email of the person or workspace.
              name: email
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: List of phone numbers of the person or workspace.
              name: numbers
              param_attrs:
              - doc: Phone number of person or workspace. Either phoneNumber or extension
                  is mandatory.
                name: external
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Extension of person or workspace. Either phoneNumber or extension
                  is mandatory.
                name: extension
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Flag to indicate primary phone.
                name: primary
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: Flag to indicate toll free number.
                name: tollFreeNumber
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              param_object: []
              type: array[UserNumberItem]
              type_spec: null
            - doc: Name of location for call park.
              name: location
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ID of the location for call park.
              name: locationId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: MonitoredElementUser
            type_spec: null
          param_object: []
          type: MonitoredElementItem
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify Monitoring settings for a Workspace.

        Allow workspaces to monitor the line status of specified agents, workspaces,
        or call park extensions. The line status indicates if a monitored agent or
        a workspace is on a call, or if a call has been parked on the monitored call
        park extension.

        This API requires a full or user administrator auth token with the spark-admin:workspaces_write
        scope or a user auth token with spark:workspaces_write scope can be used to
        update workspace settings.'
      documentation:
        doc: Modify Monitoring Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/modify-monitoring-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/monitoring
        http_method: PUT
      header: Modify Monitoring Settings for a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: Call park notification is enabled or disabled.
          name: enableCallParkNotification
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Array of ID strings of monitored elements.
          name: monitoredElements
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'List the PSTN phone numbers associated with a specific workspace, by ID,
        within the organization. Also shows the location and organization associated
        with the workspace.

        Retrieving this list requires a full or read-only administrator auth token
        with a scope of spark-admin:workspaces_read.'
      documentation:
        doc: List numbers associated with a specific workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/list-numbers-associated-with-a-specific-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/numbers
        http_method: GET
      header: List numbers associated with a specific workspace
      parameters_and_response:
        Query Parameters:
        - doc: Workspace is in this organization. Only admin users of another organization
            (such as partners) can use this parameter as the default is the same organization
            as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: List numbers for this workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Incoming Permission settings for a Workspace.

        Incoming permission settings allow modifying permissions for a workspace that
        can be different from the organization''s default to manage different call
        types.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:workspaces_read or a user auth token with spark:workspaces_read
        scope can be used to read workspace settings.'
      documentation:
        doc: Retrieve Incoming Permission Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/retrieve-incoming-permission-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/incomingPermission
        http_method: GET
      header: Retrieve Incoming Permission Settings for a Workspace
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Incoming Permission state. If disabled, the default settings are used.
          name: useCustomEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Indicate call transfer setting.
          name: externalTransfer
          param_attrs:
          - doc: All external calls are allowed.
            name: ALLOW_ALL_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only externally transferred external calls are allowed.
            name: ALLOW_ONLY_TRANSFERRED_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: All external calls are blocked.
            name: BLOCK_ALL_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Flag to indicate if workspace can receive internal calls.
          name: internalCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Flag to indicate if workspace can receive collect calls.
          name: collectCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify Incoming Permission settings for a Workspace.

        Incoming permission settings allow modifying permissions for a workspace that
        can be different from the organization''s default to manage different call
        types.

        This API requires a full or user administrator auth token with the spark-admin:workspaces_write
        scope or a user auth token with spark:workspaces_write scope can be used to
        update workspace settings.'
      documentation:
        doc: Modify Incoming Permission Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/modify-incoming-permission-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/incomingPermission
        http_method: PUT
      header: Modify Incoming Permission Settings for a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: Incoming Permission state. If disabled, the default settings are used.
          name: useCustomEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Indicate call transfer setting.
          name: externalTransfer
          param_attrs:
          - doc: All external calls are allowed.
            name: ALLOW_ALL_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Only externally transferred external calls are allowed.
            name: ALLOW_ONLY_TRANSFERRED_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: All external calls are blocked.
            name: BLOCK_ALL_EXTERNAL
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Flag to indicate if the workspace can receive internal calls.
          name: internalCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Flag to indicate if the workspace can receive collect calls.
          name: collectCallsEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Outgoing Permission settings for a Workspace.

        Turn on outgoing call settings for this workspace to override the calling
        settings from the location that are used by default.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:workspaces_read or a user auth token with spark:workspaces_read
        scope can be used to read workspace settings.'
      documentation:
        doc: Retrieve Outgoing Permission Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/retrieve-outgoing-permission-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/outgoingPermission
        http_method: GET
      header: Retrieve Outgoing Permission Settings for a Workspace
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Outgoing Permission state. If disabled, the default settings are used.
          name: useCustomEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Workspace's list of outgoing permissions.
          name: callingPermissions
          param_attrs:
          - doc: Type of the outgoing call.
            name: callType
            param_attrs:
            - doc: Indicates the internal call type.
              name: INTERNAL_CALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the toll free call type.
              name: TOLL_FREE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the international call type.
              name: INTERNATIONAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the operator assisted call type.
              name: OPERATOR_ASSISTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the chargeable directory assisted call type.
              name: CHARGEABLE_DIRECTORY_ASSISTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the special services I call type.
              name: SPECIAL_SERVICES_I
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the special services II call type.
              name: SPECIAL_SERVICES_II
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the premium services I call type.
              name: PREMIUM_SERVICES_I
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the premium services II call type.
              name: PREMIUM_SERVICES_II
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the national call type.
              name: NATIONAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Indicates permission for call types.
            name: action
            param_attrs:
            - doc: The call type is allowed.
              name: ALLOW
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The call type is blocked.
              name: BLOCK
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates access code action for the specified call type.
              name: AUTH_CODE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates transfer number 1 for the specified call type.
              name: TRANSFER_NUMBER_1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates transfer number 2 for the specified call type.
              name: TRANSFER_NUMBER_2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates transfer number 3 for the specified call type.
              name: TRANSFER_NUMBER_3
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Indicate calling permission for call type enable status.
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[CallingPermission]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify Outgoing Permission settings for a Place.

        Turn on outgoing call settings for this workspace to override the calling
        settings from the location that are used by default.

        This API requires a full or user administrator auth token with the spark-admin:workspaces_write
        scope or a user auth token with spark:workspaces_write scope can be used to
        update workspace settings.'
      documentation:
        doc: Modify Outgoing Permission Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/modify-outgoing-permission-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/outgoingPermission
        http_method: PUT
      header: Modify Outgoing Permission Settings for a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: Outgoing Permission state. If disabled, the default settings are used.
          name: useCustomEnabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Workspace's list of outgoing permissions.
          name: callingPermissions
          param_attrs:
          - doc: Indicates types for outgoing calls.
            name: callType
            param_attrs:
            - doc: Indicates the internal call type.
              name: INTERNAL_CALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the toll free call type.
              name: TOLL_FREE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the international call type.
              name: INTERNATIONAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the operator assisted call type.
              name: OPERATOR_ASSISTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the chargeable directory assisted call type.
              name: CHARGEABLE_DIRECTORY_ASSISTED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the special services I call type.
              name: SPECIAL_SERVICES_I
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the special services II call type.
              name: SPECIAL_SERVICES_II
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the premium services I call type.
              name: PREMIUM_SERVICES_I
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the premium services II call type.
              name: PREMIUM_SERVICES_II
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates the national call type.
              name: NATIONAL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Indicates permission for call types.
            name: action
            param_attrs:
            - doc: The call type is allowed.
              name: ALLOW
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The call type is blocked.
              name: BLOCK
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates access code action for the specified call type.
              name: AUTH_CODE
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates transfer number 1 for the specified call type.
              name: TRANSFER_NUMBER_1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates transfer number 2 for the specified call type.
              name: TRANSFER_NUMBER_2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Indicates transfer number 3 for the specified call type.
              name: TRANSFER_NUMBER_3
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Indicate calling permission for call type enable status.
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          param_object: []
          type: array[ModifyCallingPermission]
          type_spec: null
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Access codes for a Workspace.

        Access codes are used to bypass permissions.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:workspaces_read or a user auth token with spark:workspaces_read
        scope can be used to read workspace settings.'
      documentation:
        doc: Retrieve Access Codes for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/retrieve-access-codes-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/outgoingPermission/accessCodes
        http_method: GET
      header: Retrieve Access Codes for a Workspace
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Indicates the set of activation codes and description.
          name: accessCodes
          param_attrs:
          - doc: Indicates an access code.
            name: code
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates the description of the access code.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[AuthorizationCode]
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify Access codes for a workspace.

        Access codes are used to bypass permissions.

        This API requires a full or user administrator auth token with the spark-admin:workspaces_write
        scope or a user auth token with spark:workspaces_write scope can be used to
        update workspace settings.'
      documentation:
        doc: Modify Access Codes for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/modify-access-codes-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/outgoingPermission/accessCodes
        http_method: PUT
      header: Modify Access Codes for a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: Indicates access codes to delete.
          name: deleteCodes
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Create new Access codes for the given workspace.

        Access codes are used to bypass permissions.

        This API requires a full or user administrator auth token with the spark-admin:workspaces_write
        scope or a user auth token with spark:workspaces_write scope can be used to
        update workspace settings.'
      documentation:
        doc: Create Access Codes for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/create-access-codes-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/outgoingPermission/accessCodes
        http_method: POST
      header: Create Access Codes for a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: Indicates an access code.
          name: code
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Indicates the description of the access code.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieves Workspace''s Call Intercept Settings

        The intercept feature gracefully takes a workspace''s phone out of service,
        while providing callers with informative announcements and alternative routing
        options. Depending on the service configuration, none, some, or all incoming
        calls to the specified workspace are intercepted. Also depending on the service
        configuration, outgoing calls are intercepted or rerouted to another location.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:workspaces_read or a user auth token with spark:workspaces_read
        scope can be used to read workspace settings.'
      documentation:
        doc: Read Call Intercept Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/read-call-intercept-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/intercept
        http_method: GET
      header: Read Call Intercept Settings for a Workspace
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: true if call intercept is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Settings related to how incoming calls are handled when the intercept
            feature is enabled.
          name: incoming
          param_attrs:
          - doc: Indicated incoming calls are intercepted.
            name: type
            param_attrs:
            - doc: All incoming calls are intercepted.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming calls are not intercepted.
              name: ALLOW_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Indicates enabled or disabled state of sending incoming calls to
              voicemail when the destination is an internal phone number and that
              number has the voicemail service enabled.
            name: voicemailEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Settings related to how incoming calls are handled when the intercept
              feature is enabled.
            name: announcements
            param_attrs:
            - doc: Indicates that a system default message will be placed when incoming
                calls are intercepted.
              name: greeting
              param_attrs:
              - doc: A custom greeting is played when incoming calls are intercepted.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: A System default greeting is played when incoming calls are intercepted.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Filename of the custom greeting; this is an empty string if no
                custom greeting has been uploaded.
              name: filename
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Information about the new number announcement.
              name: newNumber
              param_attrs:
              - doc: If true, the caller hears this new number when the call is intercepted.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: New number the caller hears announced.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: InterceptNumberGet
              type_spec: null
            - doc: Information about how the call will be handled if zero (0) is pressed.
              name: zeroTransfer
              param_attrs:
              - doc: If true, the caller hears this new number when the call is intercepted.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: New number the caller hears announced.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: InterceptNumberGet
              type_spec: null
            param_object: []
            type: InterceptAnnouncementsGet
            type_spec: null
          param_object: []
          type: InterceptIncomingGet
          type_spec: null
        - doc: Settings related to how outgoing calls are handled when the intercept
            feature is enabled.
          name: outgoing
          param_attrs:
          - doc: Indicated all outgoing calls are intercepted.
            name: type
            param_attrs:
            - doc: Outgoing calls are intercepted.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only non-local calls are intercepted.
              name: ALLOW_LOCAL_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: If true, when the person attempts to make an outbound call, a system
              default message is played and the call is made to the destination phone
              number.
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number to which the outbound call be transferred.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: InterceptOutGoingGet
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Configures a Workspace''s Call Intercept Settings

        The intercept feature gracefully takes a workspace''s phone out of service,
        while providing callers with informative announcements and alternative routing
        options. Depending on the service configuration, none, some, or all incoming
        calls to the specified person are intercepted. Also depending on the service
        configuration, outgoing calls are intercepted or rerouted to another location.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:workspaces_write or a user auth token with spark:workspaces_read
        scope can be used by a person to read their settings.'
      documentation:
        doc: Configure Call Intercept Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/configure-call-intercept-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/intercept
        http_method: PUT
      header: Configure Call Intercept Settings for a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: true if call interception is enabled.
          name: enabled
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Settings related to how incoming calls are handled when the intercept
            feature is enabled.
          name: incoming
          param_attrs:
          - doc: Indicated incoming calls are intercepted.
            name: type
            param_attrs:
            - doc: Incoming calls are intercepted.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Incoming calls are not intercepted.
              name: ALLOW_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Indicates enabled or disabled state of sending incoming calls to
              voicemail when the destination is an internal phone number and that
              number has the voicemail service enabled.
            name: voicemailEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Settings related to how incoming calls are handled when the intercept
              feature is enabled.
            name: announcements
            param_attrs:
            - doc: Indicates that a system default message will be placed when incoming
                calls are intercepted.
              name: greeting
              param_attrs:
              - doc: A custom greeting is played when incoming calls are intercepted.
                name: CUSTOM
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: A System default greeting is played when incoming calls are intercepted.
                name: DEFAULT
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Information about the new number announcement.
              name: newNumber
              param_attrs:
              - doc: If true, the caller hears this new number when the call is intercepted.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: New number the caller hears announced.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: object
              type_spec: null
            - doc: Information about how the call will be handled if zero (0) is pressed.
              name: zeroTransfer
              param_attrs:
              - doc: If true, the caller hears this new number when the call is intercepted.
                name: enabled
                param_attrs: []
                param_object: []
                type: boolean
                type_spec: null
              - doc: New number the caller hears announced.
                name: destination
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: object
              type_spec: null
            param_object: []
            type: InterceptAnnouncementsPatch
            type_spec: null
          param_object: []
          type: InterceptIncomingPatch
          type_spec: null
        - doc: Settings related to how outgoing calls are handled when the intercept
            feature is enabled.
          name: outgoing
          param_attrs:
          - doc: All outgoing calls are intercepted.
            name: type
            param_attrs:
            - doc: Outgoing calls are intercepted.
              name: INTERCEPT_ALL
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Only non-local calls are intercepted.
              name: ALLOW_LOCAL_ONLY
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: If true, when the person attempts to make an outbound call, a system
              default message is played and the call is made to the destination phone
              number.
            name: transferEnabled
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Number to which the outbound call be transferred.
            name: destination
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: InterceptOutGoingPatch
          type_spec: null
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Retrieve Transfer Numbers Settings for a Workspace.

        When calling a specific call type, this workspace will be automatically transferred
        to another number. The person assigned the Auto Transfer Number can then approve
        the call and send it through or reject the call type. You can add up to 3
        numbers.

        This API requires a full or read-only administrator auth token with a scope
        of spark-admin:workspaces_read or a user auth token with spark:workspaces_read
        scope can be used to read workspace settings.'
      documentation:
        doc: Retrieve Transfer Numbers Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/retrieve-transfer-numbers-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/outgoingPermission/autoTransferNumbers
        http_method: GET
      header: Retrieve Transfer Numbers Settings for a Workspace
      parameters_and_response:
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: When calling a specific call type, this workspace will be automatically
            transferred to another number.
          name: autoTransferNumber1
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: When calling a specific call type, this workspace will be automatically
            transferred to another number.
          name: autoTransferNumber2
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: When calling a specific call type, this workspace will be automatically
            transferred to another number.
          name: autoTransferNumber3
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Modify Transfer Numbers Settings for a place.

        When calling a specific call type, this workspace will be automatically transferred
        to another number. The person assigned the Auto Transfer Number can then approve
        the call and send it through or reject the call type. You can add up to 3
        numbers.

        This API requires a full or user administrator auth token with the spark-admin:workspaces_write
        scope or a user auth token with spark:workspaces_write scope can be used to
        update workspace settings.'
      documentation:
        doc: Modify Transfer Numbers Settings for a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/webex-calling-workspace-settings/modify-transfer-numbers-settings-for-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/features/outgoingPermission/autoTransferNumbers
        http_method: PUT
      header: Modify Transfer Numbers Settings for a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: When calling a specific call type, this workspace will be automatically
            transferred to another number.
          name: autoTransferNumber1
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: When calling a specific call type, this workspace will be automatically
            transferred to another number.
          name: autoTransferNumber2
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: When calling a specific call type, this workspace will be automatically
            transferred to another number.
          name: autoTransferNumber3
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Query Parameters:
        - doc: ID of the organization within which the workspace resides. Only admin
            users of another organization (such as partners) may use this parameter
            as the default is the same organization as the token used to access API.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: Unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Webhooks:
    doc: 'For Webex for Government (FedRAMP), the following resource types are not
      available for Webhooks: meetings, recordings, meetingParticipants, and meetingTranscripts.

      Webhooks allow your app to be notified via HTTP when a specific event occurs
      in Webex. For example, your app can register a webhook to be notified when a
      new message is posted into a specific room.

      Events trigger in near real-time allowing your app and backend IT systems to
      stay in sync with new content and room activity.

      Check The Webhooks Guide and our blog regularly for announcements of additional
      webhook resources and event types.

      Long result sets will be split into pages.'
    header: Webhooks
    methods:
    - doc: List all of your webhooks.
      documentation:
        doc: List Webhooks
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/list-webhooks
        endpoint: https://webexapis.com/v1/webhooks
        http_method: GET
      header: List Webhooks
      parameters_and_response:
        Query Parameters:
        - doc: Limit the maximum number of webhooks in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Limit the result list to org wide webhooks. Only allowed value is org.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the webhook.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A user-friendly name for the webhook.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The URL that receives POST requests for each event.
            name: targetUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The resource type for the webhook. Creating a webhook requires 'read'
              scope on the resource the webhook is for.
            name: resource
            param_attrs:
            - doc: The Attachment Actions resource.
              name: attachmentActions
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Memberships resource.
              name: memberships
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Messages resource.
              name: messages
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Rooms resource.
              name: rooms
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Meetings resource.
              name: meetings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Recordings resource.
              name: recordings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Meeting Participants resource.
              name: meetingParticipants
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Meeting Transcripts resource.
              name: meetingTranscripts
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The event type for the webhook.
            name: event
            param_attrs:
            - doc: An object was created.
              name: created
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An object was updated.
              name: updated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An object was deleted.
              name: deleted
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A meeting was started.
              name: started
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A meeting was ended.
              name: ended
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A participant joined.
              name: joined
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A participant left.
              name: left
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A room was migrated to a different geography. The roomId has changed.
              name: migrated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The filter that defines the webhook scope.
            name: filter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The secret used to generate payload signature.
            name: secret
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The status of the webhook. Use active to reactivate a disabled webhook.
            name: status
            param_attrs:
            - doc: The webhook is active.
              name: active
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The webhook is inactive.
              name: inactive
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The date and time the webhook was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Specified when creating an org/admin level webhook.
            name: ownedBy
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Webhook]
          type_spec: null
    - doc: 'Creates a webhook.

        To learn more about how to create and use webhooks, see The Webhooks Guide.'
      documentation:
        doc: Create a Webhook
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/create-a-webhook
        endpoint: https://webexapis.com/v1/webhooks
        http_method: POST
      header: Create a Webhook
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object is created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object is updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object is deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting is started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting is ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A room was migrated to a different geography. The roomId has changed.
            name: migrated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: The filter that defines the webhook scope. See Filtering Webhooks for
            more information.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook. Supported for meetings,
            recordings, meetingParticipants, and meetingTranscripts resources.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the webhook.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A room was migrated to a different geography. The roomId has changed.
            name: migrated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The filter that defines the webhook scope.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use active to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: The webhook is active.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The webhook is inactive.
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The date and time the webhook was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a webhook, by ID.

        Specify the webhook ID in the webhookId parameter in the URI.'
      documentation:
        doc: Get Webhook Details
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/get-webhook-details
        endpoint: https://webexapis.com/v1/webhooks/{webhookId}
        http_method: GET
      header: Get Webhook Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the webhook.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A room was migrated to a different geography. The roomId has changed.
            name: migrated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The filter that defines the webhook scope.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use active to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: The webhook is active.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The webhook is inactive.
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The date and time the webhook was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the webhook.
          name: webhookId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: "Updates a webhook, by ID. You cannot use this call to deactivate a webhook,\
        \ only to activate a webhook that was auto deactivated. \nThe fields that\
        \ can be updated are name, targetURL, secret and status. All other fields,\
        \ if supplied, are ignored.\nSpecify the webhook ID in the webhookId parameter\
        \ in the URI."
      documentation:
        doc: Update a Webhook
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/update-a-webhook
        endpoint: https://webexapis.com/v1/webhooks/{webhookId}
        http_method: PUT
      header: Update a Webhook
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook. Supported for meetings,
            recordings, meetingParticipants and meetingTranscripts resources.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use "active" to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: ''
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the webhook.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A room was migrated to a different geography. The roomId has changed.
            name: migrated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The filter that defines the webhook scope.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use active to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: The webhook is active.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The webhook is inactive.
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The date and time the webhook was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the webhook.
          name: webhookId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a webhook, by ID.

        Specify the webhook ID in the webhookId parameter in the URI.'
      documentation:
        doc: Delete a Webhook
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/delete-a-webhook
        endpoint: https://webexapis.com/v1/webhooks/{webhookId}
        http_method: DELETE
      header: Delete a Webhook
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the webhook.
          name: webhookId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Wholesale Billing Reports:
    doc: 'The Wholesale Billing Report APIs are targeted at Service Providers who
      sign up for the Webex for Wholesale solution. These APIs provides customer and
      user breakdown reports to the service providers or partners. Service providers
      can use these reports to reconcile their monthly invoices.

      Viewing Webex for Wholesale billing reports information requires a partner administrator
      auth token with the spark-admin:wholesale_billing_reports_read scope. Creating,
      Deleting billing reports require a partner administrator auth token with the
      spark-admin:wholesale_billing_reports_write scope.

      Each Webex Developer Sandbox for Webex Wholesale use is limited to a maximum
      of 10 account users for validation and test purposes only. Cisco may from time
      to time audit Webex Developer Sandbox accounts and reserves the right to remove
      users in excess of 10 account users, or terminate the Webex Developer Sandbox
      environment for any Developer resource misuse.'
    header: Wholesale Billing Reports
    methods:
    - doc: Search for associated wholesale billing reconciliation reports.
      documentation:
        doc: List Wholesale Billing Reports
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-billing-reports/list-wholesale-billing-reports
        endpoint: https://webexapis.com/v1/wholesale/billing/reports
        http_method: GET
      header: List Wholesale Billing Reports
      parameters_and_response:
        Query Parameters:
        - doc: Only include billing reports having this billing startDate.
          name: billingStartDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only include billing reports having this billing endDate.
          name: billingEndDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Sort the reports.

            Possible values: id, billingStartDate, billingEndDate, status'
          name: sortBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Only include reports of this type.

            Possible values: PARTNER, CUSTOMER, USER'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The status of the billing report

            Possible values: IN_PROGRESS, COMPLETED, FAILED'
          name: status
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of reports returned in the response, up to
            100 per page. Refer to the Pagination section of Webex REST API Basics.
          name: max
          param_attrs: []
          param_object: []
          type: integer
          type_spec: null
        - doc: The Organization ID of the sub partner on Cisco Webex.
          name: subPartnerOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of report objects.
          name: items
          param_attrs:
          - doc: A unique report id that corresponds to a billing report.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Billing report startDate.
            name: billingStartDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Billing report endDate.
            name: billingEndDate
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The status of the billing report
            name: status
            param_attrs:
            - doc: Report generation is in progress.
              name: IN_PROGRESS
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Report generation is complete.
              name: COMPLETED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Report generation failed.
              name: FAILED
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Billing Report Type.
            name: type
            param_attrs:
            - doc: ''
              name: USER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: CUSTOMER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: PARTNER
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[ListReport]
          type_spec: null
    - doc: Retrieve a specific wholesale billing reconciliation report.
      documentation:
        doc: Get a Wholesale Billing Report
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-billing-reports/get-a-wholesale-billing-report
        endpoint: https://webexapis.com/v1/wholesale/billing/reports/{id}
        http_method: GET
      header: Get a Wholesale Billing Report
      parameters_and_response:
        Response Properties:
        - doc: A unique report ID that corresponds to a billing report.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Billing report startDate.
          name: billingStartDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Billing report endDate.
          name: billingEndDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Billing Report Type
          name: type
          param_attrs:
          - doc: ''
            name: USER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: CUSTOMER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: PARTNER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The date and time the report was generated.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the partner administrator who created the report.
          name: createdBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the billing report.
          name: status
          param_attrs:
          - doc: Report generation is in progress
            name: IN_PROGRESS
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Report generation is complete
            name: COMPLETED
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Report generation failed
            name: FAILED
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The URL for partners to download the billing report.
          name: tempDownloadURL
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List of errors that occurred during report generation.

            Note:

            * This list captures errors that occurred during asynchronous or background
            report generation, after the request has been accepted and a  202 OK  response
            is returned.'
          name: errors
          param_attrs:
          - doc: An error code that identifies the reason for the error.
            name: code
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A textual representation of the error code.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Report Error]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the report being requested.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Generate a wholesale billing reconciliation report.
      documentation:
        doc: Create a Wholesale Billing Report
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-billing-reports/create-a-wholesale-billing-report
        endpoint: https://webexapis.com/v1/wholesale/billing/reports
        http_method: POST
      header: Create a Wholesale Billing Report
      parameters_and_response:
        Body Parameters:
        - doc: The startDate (YYYY-MM-DD) for which the partner requests the billing
            report.
          name: billingStartDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The endDate (YYYY-MM-DD) for which the partner requests the billing
            report.
          name: billingEndDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Create report of the given type, PARTNER, CUSTOMER, or USER. Default:
            PARTNER.'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Organization ID of the sub partner on Cisco Webex.
          name: subPartnerOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique report ID that corresponds to a billing report.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Billing report startDate.
          name: billingStartDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Billing report endDate.
          name: billingEndDate
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Billing Report Type
          name: type
          param_attrs:
          - doc: ''
            name: USER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: CUSTOMER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: PARTNER
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
    - doc: Delete a monthly reconciliation report by report ID.
      documentation:
        doc: Delete a Wholesale Billing Report
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-billing-reports/delete-a-wholesale-billing-report
        endpoint: https://webexapis.com/v1/wholesale/billing/reports/{id}
        http_method: DELETE
      header: Delete a Wholesale Billing Report
      parameters_and_response:
        URI Parameters:
        - doc: A unique report ID that corresponds to a billing report.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Wholesale Customers:
    doc: 'These are a set of APIs that are specifically targeted at Service Providers
      who sign up for Webex Wholesale. They enable Service Providers to provision
      Webex Services for their Customers.

      Viewing Webex Wholesale customer information requires an administrator API access
      token with spark-admin:wholesale_customers_read scope. Provisioning, updating,
      and removing customers requires an administrator API token with the spark-admin:wholesale_customers_write
      scope.

      Additional information codes are given for all success cases. To learn more
      about the error and info codes used in Wholesale Customer Provisioning Precheck
      APIs, see the Provisioning Precheck API Error Codes guide.

      Each Webex Developer Sandbox for Webex Wholesale use is limited to a maximum
      of 10 account users for validation and test purposes only. Cisco may from time
      to time audit Webex Developer Sandbox accounts and reserves the right to remove
      users in excess of 10 account users, or terminate the Webex Developer Sandbox
      environment for any Developer resource misuse.'
    header: Wholesale Customers
    methods:
    - doc: This API allows a Service Provider to search for their customers. There
        are a number of filter options, which can be combined in a single request.
      documentation:
        doc: List Wholesale Customers
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-customers/list-wholesale-customers
        endpoint: https://webexapis.com/v1/wholesale/customers
        http_method: GET
      header: List Wholesale Customers
      parameters_and_response:
        Query Parameters:
        - doc: Customer external ID.
          name: externalId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Customer API status.
          name: status
          param_attrs: []
          param_object: []
          type: list
          type_spec: null
        - doc: Offset value for implementing pagination.
          name: offset
          param_attrs: []
          param_object: []
          type: int
          type_spec: null
        - doc: The maximum number of customers returned in the response.
          name: max
          param_attrs: []
          param_object: []
          type: int
          type_spec: null
        Response Properties:
        - doc: An array of Customer objects.
          name: items
          param_attrs:
          - doc: A unique Cisco identifier for the customer. This value should be
              used for the customerId parameter in the Wholesale Customers and Wholesale
              Subscribers API.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Organization ID of the enterprise on Cisco Webex, to be used
              when referencing this customer on other Cisco Webex APIs. Only presented
              when status is provisioned.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: External ID of the Customer.
            name: externalId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: address
            param_attrs:
            - doc: Address Line 1.
              name: addressLine1
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Address Line 2.
              name: addressLine2
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: City of the customer.
              name: city
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State or Province of the customer.
              name: stateOrProvince
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Postal/Zip code of the customer.
              name: zipOrPostalCode
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ISO2 country code of the customer size = 2.
              name: country
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Address
            type_spec: null
          - doc: The provisioning status of the customer.
            name: status
            param_attrs:
            - doc: Customer is fully provisioned on Cisco Webex.
              name: provisioned
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Customer is provisioned with errors.
              name: provisioned_with_errors
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Customer is provisioning.
              name: provisioning
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Customer is updating.
              name: updating
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Customer is being deleted.
              name: deleting
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An error occurred provisioning the customer on Cisco Webex.
              name: error
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The customer is pending a Denied Party List compliance check.
              name: pending_rpl_review
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: List of package names provisioned
            name: packages
            param_attrs: []
            param_object: []
            type: array[string]
            type_spec: null
          - doc: ''
            name: resourceDetails
            param_attrs:
            - doc: ''
              name: packages
              param_attrs:
              - doc: The Webex Wholesale Packages assigned to the customer.
                name: name
                param_attrs:
                - doc: Webex Common Area Calling Package.
                  name: common_area_calling
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Webex Calling Package.
                  name: webex_calling
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Webex Meetings Package.
                  name: webex_meetings
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Webex Suite Package.
                  name: webex_suite
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Webex Voice Package.
                  name: webex_voice
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              - doc: The provisioning status of the a particular package.
                name: status
                param_attrs:
                - doc: Customer is fully provisioned on Cisco Webex.
                  name: provisioned
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Customer is provisioning.
                  name: provisioning
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Customer is being deleted.
                  name: deleting
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: An error occurred provisioning the customer on Cisco Webex.
                  name: error
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: enum
                type_spec: null
              - doc: "List of warnings that occurred during that last attempt to provision/update\
                  \ this customer.\n Note:\n* This list captures errors that occurred\
                  \ during  asynchronous or background  provisioning of the customer,\
                  \  after  the API has been accepted and 202 response returned.\n\
                  * Any errors that occur during initial API request validation will\
                  \ be captured directly in error response with appropriate HTTP status\
                  \ code."
                name: warnings
                param_attrs:
                - doc: An error code that identifies the reason for the error
                  name: errorCode
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: A textual representation of the error code.
                  name: description
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[Error]
                type_spec: null
              - doc: "List of errors that occurred during that last attempt to provision/update\
                  \ this customer.\n Note:\n* This list captures errors that occurred\
                  \ during  asynchronous or background  provisioning of the customer,\
                  \  after  the API has been accepted and 202 response returned.\n\
                  * Any errors that occur during initial API request validation will\
                  \ be captured directly in error response with appropriate HTTP status\
                  \ code."
                name: errors
                param_attrs:
                - doc: An error code that identifies the reason for the error
                  name: errorCode
                  param_attrs: []
                  param_object: []
                  type: number
                  type_spec: null
                - doc: A textual representation of the error code.
                  name: description
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[Error]
                type_spec: null
              param_object: []
              type: array[Package]
              type_spec: null
            param_object: []
            type: ResourceDetails
            type_spec: null
          - doc: "List of errors that occurred during that last attempt to provision/update\
              \ this customer.\n Note:\n* This list captures errors that occurred\
              \ during  asynchronous or background  provisioning of the customer,\
              \  after  the API has been accepted and 202 response returned.\n* Any\
              \ errors that occur during initial API request validation will be captured\
              \ directly in error response with appropriate HTTP status code."
            name: errors
            param_attrs:
            - doc: An error code that identifies the reason for the error
              name: errorCode
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: A textual representation of the error code.
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[Error]
            type_spec: null
          param_object: []
          type: array[Customer]
          type_spec: null
    - doc: 'Provision a Wholesale customer for Cisco Webex services.

        This API will allow a Service Provider to map the Wholesale customer and assign
        the required licenses and entitlements for Webex, Calling and Meetings.

        The Wholesale customer provisioning is asynchronous and thus a background
        task is created when this endpoint is invoked.'
      documentation:
        doc: Provision a Wholesale Customer
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-customers/provision-a-wholesale-customer
        endpoint: https://webexapis.com/v1/wholesale/customers
        http_method: POST
      header: Provision a Wholesale Customer
      parameters_and_response:
        Body Parameters:
        - doc: 'This Provisioning ID defines how this customer is to be provisioned
            for Webex Services.

            Each Customer Template will have their own unique Provisioning ID. This
            ID will be displayed under the chosen Customer Template

            on Webex Control Hub.'
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'The complete list of Webex Wholesale packages to be assigned to the
            customer.

            Possible values: common_area_calling, webex_calling, webex_meetings, webex_suite,
            webex_voice'
          name: packages
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        - doc: The Organization ID of the enterprise on Webex. Mandatory for existing
            customer.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: External ID of the Wholesale customer.
          name: externalId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Billing Address of the customer.
          name: address
          param_attrs:
          - doc: Address Line 1.
            name: addressLine1
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: Address Line 2.
            name: addressLine2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: City of the customer.
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: State or Province of the customer. This attribute may be required
              in specific geographies, please refer to address section in the admin
              guide for more information.
            name: stateOrProvince
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Postal/Zip code of the customer. This attribute may be required in
              specific geographies, please refer to address section in the admin guide
              for more information.
            name: zipOrPostalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ISO2 country code of the customer size = 2. This attribute is used
              to determine the default Dial In number for the Webex Meeting Sites.
              Refer to the Address section of help page for more information.
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: object
          type_spec: required
        - doc: Mandatory for new customer. Optional if Organization ID is provided.
          name: customerInfo
          param_attrs:
          - doc: The name of the Wholesale customer.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: The primary email address of the customer.
            name: primaryEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: The {ISO-639-1}_{ISO-3166} or {ISO-639-1} locale or language code
              used as preferred language for organization and Webex Meeting Sites.
              Refer to the help page for more information.
            name: language
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: ''
          name: provisioningParameters
          param_attrs:
          - doc: ''
            name: calling
            param_attrs:
            - doc: ''
              name: location
              param_attrs:
              - doc: Name of the wholesale customer office.
                name: name
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Address of the wholesale customer.
                name: address
                param_attrs:
                - doc: ''
                  name: addressLine1
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: required
                - doc: ''
                  name: addressLine2
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: city
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: required
                - doc: State or Province of the customer. This attribute may be required
                    in specific geographies, please refer to address section in the
                    admin guide for more information.
                  name: stateOrProvince
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Postal/Zip code of the customer. This attribute may be required
                    in specific geographies, please refer to address section in the
                    admin guide for more information.
                  name: zipOrPostalCode
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: country
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: required
                param_object: []
                type: object
                type_spec: required
              - doc: Customer timezone for calling package.
                name: timezone
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Determine language for all generated emails and voice announcements.
                name: language
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: SIP Header for any emergency calls from this location.
                name: emergencyLocationIdentifier
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: List of numbers to be assigned to the location.
                name: numbers
                param_attrs:
                - doc: ''
                  name: '+17205557878'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: '+17205557879'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: '+17205557880'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: '+17205557881'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[string]
                type_spec: null
              - doc: Main number of the Wholesale customer.
                name: mainNumber
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: object
              type_spec: required
            param_object: []
            type: object
            type_spec: null
          - doc: '

              Customer timezone for meetings package.'
            name: meetings
            param_attrs: []
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Response Properties:
        - doc: A URL which points to the Get a Wholesale Customer endpoint for the
            provisioned customer.
          name: url
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: This API will allow a Service Provider to retrieve details of a provisioned
        Wholesale customer on Cisco Webex.
      documentation:
        doc: Get a Wholesale Customer
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-customers/get-a-wholesale-customer
        endpoint: https://webexapis.com/v1/wholesale/customers/{customerId}
        http_method: GET
      header: Get a Wholesale Customer
      parameters_and_response:
        Response Properties:
        - doc: A unique Cisco identifier for the customer. This value should be used
            for the customerId parameter in the Wholesale Customers and Wholesale
            Subscribers API.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Organization ID of the enterprise on Cisco Webex, to be used when
            referencing this customer on other Cisco Webex APIs. Only presented when
            status is provisioned.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: External ID of the Customer.
          name: externalId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: address
          param_attrs:
          - doc: Address Line 1.
            name: addressLine1
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Address Line 2.
            name: addressLine2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: City of the customer.
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State or Province of the customer.
            name: stateOrProvince
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Postal/Zip code of the customer.
            name: zipOrPostalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ISO2 country code of the customer size = 2.
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Address
          type_spec: null
        - doc: The provisioning status of the customer.
          name: status
          param_attrs:
          - doc: Customer is fully provisioned on Cisco Webex.
            name: provisioned
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Customer is provisioned with errors.
            name: provisioned_with_errors
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Customer is provisioning.
            name: provisioning
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Customer is updating.
            name: updating
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Customer is being deleted.
            name: deleting
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An error occurred provisioning the customer on Cisco Webex.
            name: error
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The customer is pending a Denied Party List compliance check.
            name: pending_rpl_review
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: List of package names provisioned
          name: packages
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: ''
          name: resourceDetails
          param_attrs:
          - doc: ''
            name: packages
            param_attrs:
            - doc: The Webex Wholesale Packages assigned to the customer.
              name: name
              param_attrs:
              - doc: Webex Common Area Calling Package.
                name: common_area_calling
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Webex Calling Package.
                name: webex_calling
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Webex Meetings Package.
                name: webex_meetings
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Webex Suite Package.
                name: webex_suite
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Webex Voice Package.
                name: webex_voice
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The provisioning status of the a particular package.
              name: status
              param_attrs:
              - doc: Customer is fully provisioned on Cisco Webex.
                name: provisioned
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Customer is provisioning.
                name: provisioning
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Customer is being deleted.
                name: deleting
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: An error occurred provisioning the customer on Cisco Webex.
                name: error
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: "List of warnings that occurred during that last attempt to provision/update\
                \ this customer.\n Note:\n* This list captures errors that occurred\
                \ during  asynchronous or background  provisioning of the customer,\
                \  after  the API has been accepted and 202 response returned.\n*\
                \ Any errors that occur during initial API request validation will\
                \ be captured directly in error response with appropriate HTTP status\
                \ code."
              name: warnings
              param_attrs:
              - doc: An error code that identifies the reason for the error
                name: errorCode
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: A textual representation of the error code.
                name: description
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[Error]
              type_spec: null
            - doc: "List of errors that occurred during that last attempt to provision/update\
                \ this customer.\n Note:\n* This list captures errors that occurred\
                \ during  asynchronous or background  provisioning of the customer,\
                \  after  the API has been accepted and 202 response returned.\n*\
                \ Any errors that occur during initial API request validation will\
                \ be captured directly in error response with appropriate HTTP status\
                \ code."
              name: errors
              param_attrs:
              - doc: An error code that identifies the reason for the error
                name: errorCode
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              - doc: A textual representation of the error code.
                name: description
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: array[Error]
              type_spec: null
            param_object: []
            type: array[Package]
            type_spec: null
          param_object: []
          type: ResourceDetails
          type_spec: null
        - doc: "List of errors that occurred during that last attempt to provision/update\
            \ this customer.\n Note:\n* This list captures errors that occurred during\
            \  asynchronous or background  provisioning of the customer,  after  the\
            \ API has been accepted and 202 response returned.\n* Any errors that\
            \ occur during initial API request validation will be captured directly\
            \ in error response with appropriate HTTP status code."
          name: errors
          param_attrs:
          - doc: An error code that identifies the reason for the error
            name: errorCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A textual representation of the error code.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Error]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the customer in question.
          name: customerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'This API allows a Service Provider to update certain details of a provisioned
        Wholesale customer.

        The Wholesale customer provisioning is asynchronous and thus a background
        task is created when this endpoint is invoked.'
      documentation:
        doc: Update a Wholesale Customer
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-customers/update-a-wholesale-customer
        endpoint: https://webexapis.com/v1/wholesale/customers/{customerId}
        http_method: PUT
      header: Update a Wholesale Customer
      parameters_and_response:
        Body Parameters:
        - doc: External ID of the Wholesale customer.
          name: externalId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The complete list of Webex Wholesale packages to be assigned to the
            customer, including any packages already provisioned. If a package has
            already been assigned to this customer and is not present in this list,
            then that package will be removed.

            Possible values: common_area_calling, webex_calling, webex_meetings, webex_suite,
            webex_voice'
          name: packages
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: required
        - doc: Billing Address of the customer.
          name: address
          param_attrs:
          - doc: AddressLine1.
            name: addressLine1
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: AddressLine2.
            name: addressLine2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: City of the customer.
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: State or Province of the customer. This attribute may be required
              in specific geographies, please refer to address section in the admin
              guide for more information.
            name: stateOrProvince
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Postal/Zip code of the customer. This attribute may be required in
              specific geographies, please refer to address section in the admin guide
              for more information.
            name: zipOrPostalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ISO2 country code of the customer size = 2.
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: object
          type_spec: null
        - doc: Provisioning parameters are required when updating an existing package.
          name: provisioningParameters
          param_attrs:
          - doc: ''
            name: calling
            param_attrs:
            - doc: ''
              name: location
              param_attrs:
              - doc: Name of the wholesale customer office.
                name: name
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Address of the wholesale customer.
                name: address
                param_attrs:
                - doc: ''
                  name: addressLine1
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: required
                - doc: ''
                  name: addressLine2
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: city
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: required
                - doc: State or Province of the customer. This attribute may be required
                    in specific geographies, please refer to address section in the
                    admin guide for more information.
                  name: stateOrProvince
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Postal/Zip code of the customer. This attribute may be required
                    in specific geographies, please refer to address section in the
                    admin guide for more information.
                  name: zipOrPostalCode
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: country
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: required
                param_object: []
                type: object
                type_spec: required
              - doc: Customer timezone for calling package.
                name: timezone
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Determine language for all generated emails and voice announcements.
                name: language
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: SIP Header for any emergency calls from this location.
                name: emergencyLocationIdentifier
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: List of numbers to be assigned to the location.
                name: numbers
                param_attrs:
                - doc: ''
                  name: '+17205557878'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: '+17205557879'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: '+17205557880'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: '+17205557881'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[string]
                type_spec: null
              - doc: Main number of the Wholesale customer.
                name: mainNumber
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: object
              type_spec: required
            param_object: []
            type: object
            type_spec: null
          - doc: '

              Customer timezone for meetings package.'
            name: meetings
            param_attrs: []
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Response Properties:
        - doc: A URL which points to the Get a Wholesale Customer endpoint for the
            provisioned customer.
          name: url
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the customer to be updated.
          name: customerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Allows a Service Provider to remove the mapping between a Wholesale Customer
        and a Cisco Webex organization.
      documentation:
        doc: Remove a Wholesale Customer
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-customers/remove-a-wholesale-customer
        endpoint: https://webexapis.com/v1/wholesale/customers/{customerId}
        http_method: DELETE
      header: Remove a Wholesale Customer
      parameters_and_response:
        URI Parameters:
        - doc: A unique identifier for the customer in question.
          name: customerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: This API will allow the Partner sales team to verify likely success of
        provisioning a Wholesale customer.
      documentation:
        doc: Precheck a Wholesale Customer Provisioning
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-customers/precheck-a-wholesale-customer-provisioning
        endpoint: https://webexapis.com/v1/wholesale/customers/validate
        http_method: POST
      header: Precheck a Wholesale Customer Provisioning
      parameters_and_response:
        Body Parameters:
        - doc: 'This Provisioning ID defines how this wholesale customer is to be
            provisioned for Cisco Webex Services.

            Each Customer Template will have its unique Provisioning ID. This ID will
            be displayed under the chosen Customer Template

            on Cisco Webex Control Hub.'
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The complete list of Webex Wholesale packages to be assigned to the
            Wholesale customer.

            Possible values: common_area_calling, webex_calling, webex_meetings, webex_suite,
            webex_voice'
          name: packages
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
        - doc: The Organization ID of the enterprise on Cisco Webex.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: External ID of the Wholesale customer.
          name: externalId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Billing Address of the Wholesale customer.
          name: address
          param_attrs:
          - doc: AddressLine1.
            name: addressLine1
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: AddressLine2.
            name: addressLine2
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: City of the Wholesale customer.
            name: city
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          - doc: State or Province of the Wholesale customer. This attribute may be
              required in specific geographies. Please refer to Wholesale Customer
              Address Requirement for more information.
            name: stateOrProvince
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Postal/Zip code of the Wholesale customer. This attribute may be
              required in specific geographies. Please refer to Wholesale Customer
              Address Requirement for more information.
            name: zipOrPostalCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ISO2 country code of the Wholesale customer size = 2.
            name: country
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: object
          type_spec: required
        - doc: ''
          name: customerInfo
          param_attrs:
          - doc: The name of the Wholesale customer.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The primary email address of the Wholesale customer.
            name: primaryEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: required
          param_object: []
          type: object
          type_spec: null
        - doc: ''
          name: provisioningParameters
          param_attrs:
          - doc: ''
            name: calling
            param_attrs:
            - doc: ''
              name: location
              param_attrs:
              - doc: Name of the wholesale customer office.
                name: name
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Address of the wholesale customer.
                name: address
                param_attrs:
                - doc: ''
                  name: addressLine1
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: required
                - doc: ''
                  name: addressLine2
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: city
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: required
                - doc: State or Province of the Wholesale customer. This attribute
                    may be required in specific geographies. Please refer to Wholesale
                    Customer Address Requirement for more information.
                  name: stateOrProvince
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: Postal/Zip code of the Wholesale customer. This attribute may
                    be required in specific geographies. Please refer to Wholesale
                    Customer Address Requirement for more information.
                  name: zipOrPostalCode
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: country
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: required
                param_object: []
                type: object
                type_spec: required
              - doc: Wholesale Customer timezone for calling package.
                name: timezone
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: Determine language for all generated emails and voice announcements.
                name: language
                param_attrs: []
                param_object: []
                type: string
                type_spec: required
              - doc: SIP Header for any emergency calls from this location.
                name: emergencyLocationIdentifier
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: List of numbers to be assigned to the location.
                name: numbers
                param_attrs:
                - doc: ''
                  name: '+17205557878'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: '+17205557879'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: '+17205557880'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                - doc: ''
                  name: '+17205557881'
                  param_attrs: []
                  param_object: []
                  type: string
                  type_spec: null
                param_object: []
                type: array[string]
                type_spec: null
              - doc: Main number of the Wholesale customer.
                name: mainNumber
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: object
              type_spec: required
            param_object: []
            type: object
            type_spec: null
          - doc: '

              Wholesale Customer timezone for meetings package.'
            name: meetings
            param_attrs: []
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Response Properties:
        - doc: A textual representation of the Precheck response message containing
            the infoCode object in the case of a success response and the errorCode
            object in the case of failure.
          name: message
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A list of ProvisioningPreCheckResponseInfo object.
          name: info
          param_attrs: []
          param_object:
          - doc: Provisioning Precheck infoCode.
            name: infoCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A textual description of the infoCode.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
  Wholesale Subscribers:
    doc: 'These are a set of APIs that are specifically targeted at Service Providers
      who sign up for Webex Wholesale. They enable Service Providers to provision
      Cisco Webex Services for their subscribers.

      Viewing Webex Wholesale subscriber information requires an administrator auth
      token with spark-admin:wholesale_subscribers_read scope. Provisioning, updating,
      and removing subscribers requires an administrator auth token with the spark-admin:wholesale_subscribers_write
      scope.

      Additional information codes are given for all success cases. To learn more
      about the error and info codes used in Wholesale Subscriber Provisioning Precheck
      APIs, see the Provisioning Precheck API Error Codes guide.

      Each Webex Developer Sandbox for Webex Wholesale use is limited to a maximum
      of 10 account users for validation and test purposes only. Cisco may from time
      to time audit Webex Developer Sandbox accounts and reserves the right to remove
      users in excess of 10 account users, or terminate the Webex Developer Sandbox
      environment for any Developer resource misuse.'
    header: Wholesale Subscribers
    methods:
    - doc: This API allows a Service Provider to search for their associated subscribers.
        There are a number of filter options, which can be combined in a single request.
      documentation:
        doc: List Wholesale Subscribers
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-subscribers/list-wholesale-subscribers
        endpoint: https://webexapis.com/v1/wholesale/subscribers
        http_method: GET
      header: List Wholesale Subscribers
      parameters_and_response:
        Query Parameters:
        - doc: Limit the maximum number of subscribers returned in the search response,
            up to 100 per page. Refer to the Pagination section of Webex REST API
            Basics.
          name: max
          param_attrs: []
          param_object: []
          type: integer
          type_spec: null
        - doc: Offset value to implement pagination.
          name: offset
          param_attrs: []
          param_object: []
          type: integer
          type_spec: null
        - doc: Wholesale customer ID.
          name: customerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the subscriber used in the /v1/people API.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Customer external ID.
          name: externalCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the subscriber.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The provisioning status of the subscriber.
          name: status
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only include subscribers created after this date and time. Epoch time
            (in milliseconds) preferred, but ISO 8601 date format also accepted.
          name: after
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Only include subscribers with a provisioning status change after this
            date and time. Epoch time (in milliseconds) preferred, but ISO 8601 date
            format also accepted.
          name: lastStatusChange
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Supported sortBy attributes are created and lastStatusChange. Default
            is created.
          name: sortBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sort by ASC (ascending) or DESC (descending).
          name: sortOrder
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of Subscriber objects.
          name: items
          param_attrs:
          - doc: A unique Cisco identifier for the subscriber.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person id of the subscriber used in the /people API. Only presented
              when status is provisioned.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the subscriber.
            name: email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the customer.
            name: customerId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: External ID of the Wholesale customer.
            name: externalCustomerId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Webex Wholesale Package assigned to the subscriber.
            name: package
            param_attrs:
            - doc: Calling Basic Package.
              name: webex_calling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Meetings Package.
              name: webex_meetings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Suite Package.
              name: webex_suite
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Voice Package.
              name: webex_voice
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The provisioning status of the user.
            name: status
            param_attrs:
            - doc: The subscriber is fully provisioned on Cisco Webex.
              name: provisioned
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The subscriber user migration is pending.
              name: pending_user_migration
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: "List of errors that occurred during that last attempt to provision/update\
              \ this subscriber.\n Note:\n* This list captures errors that occurred\
              \ during provisioning of the subscriber.\n* Any errors that occur during\
              \ initial API request validation will be captured directly in error\
              \ response with appropriate HTTP status code."
            name: errors
            param_attrs:
            - doc: An error code that identifies the reason for the error.
              name: errorCode
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            - doc: A textual representation of the error code.
              name: description
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: array[Error]
            type_spec: null
          - doc: The date and time the subscriber was provisioned.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the provisioning status of the subscriber last
              changed.
            name: lastStatusChange
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Subscriber]
          type_spec: null
    - doc: 'Provision a new Wholesale subscriber for Cisco Webex services.

        This API allows a Service Provider to map the Wholesale subscriber to a Cisco
        Webex Wholesale customer and assign the required licenses and entitlements
        for Webex, Calling and Meetings.'
      documentation:
        doc: Provision a Wholesale Subscriber
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-subscribers/provision-a-wholesale-subscriber
        endpoint: https://webexapis.com/v1/wholesale/subscribers
        http_method: POST
      header: Provision a Wholesale Subscriber
      parameters_and_response:
        Body Parameters:
        - doc: ID of the Provisioned Customer for Webex Wholesale.
          name: customerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The email address of the subscriber (mandatory for the trusted email
            provisioning flow).
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The Webex Wholesale package to be assigned to the subscriber.
          name: package
          param_attrs:
          - doc: Calling Basic Package.
            name: webex_calling
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meetings Package.
            name: webex_meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Suite Package.
            name: webex_suite
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Voice Package.
            name: webex_voice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: ''
          name: provisioningParameters
          param_attrs:
          - doc: The first name of the subscriber.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The last name of the subscriber.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The primary phone number configured for the subscriber. A primary
              phone number, extension, or both must be supplied when creating a subscriber.
            name: primaryPhoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The extension configured for the subscriber. An extension, primary
              phone number or both must be supplied when creating a subscriber.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the location. This ID should be retrieved
              via the [List Locations](/docs/api/v1/locations/list-locations API.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        Response Properties:
        - doc: A unique Cisco identifier for the subscriber.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person id of the subscriber used in the /people API. Only presented
            when status is provisioned.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the subscriber.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the customer.
          name: customerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: External ID of the Wholesale customer.
          name: externalCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex Wholesale Package assigned to the subscriber.
          name: package
          param_attrs:
          - doc: Calling Basic Package.
            name: webex_calling
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meetings Package.
            name: webex_meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Suite Package.
            name: webex_suite
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Voice Package.
            name: webex_voice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The provisioning status of the user.
          name: status
          param_attrs:
          - doc: The subscriber is fully provisioned on Cisco Webex.
            name: provisioned
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The subscriber user migration is pending.
            name: pending_user_migration
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: "List of errors that occurred during that last attempt to provision/update\
            \ this subscriber.\n Note:\n* This list captures errors that occurred\
            \ during provisioning of the subscriber.\n* Any errors that occur during\
            \ initial API request validation will be captured directly in error response\
            \ with appropriate HTTP status code."
          name: errors
          param_attrs:
          - doc: An error code that identifies the reason for the error.
            name: errorCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A textual representation of the error code.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Error]
          type_spec: null
        - doc: The date and time the subscriber was provisioned.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the provisioning status of the subscriber last changed.
          name: lastStatusChange
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: This API allow a Service Provider to retrieve details of a provisioned
        Wholesale subscriber on Cisco Webex.
      documentation:
        doc: Get a Wholesale Subscriber
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-subscribers/get-a-wholesale-subscriber
        endpoint: https://webexapis.com/v1/wholesale/subscribers/{subscriberId}
        http_method: GET
      header: Get a Wholesale Subscriber
      parameters_and_response:
        Response Properties:
        - doc: A unique Cisco identifier for the subscriber.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person id of the subscriber used in the /people API. Only presented
            when status is provisioned.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the subscriber.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the customer.
          name: customerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: External ID of the Wholesale customer.
          name: externalCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex Wholesale Package assigned to the subscriber.
          name: package
          param_attrs:
          - doc: Calling Basic Package.
            name: webex_calling
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meetings Package.
            name: webex_meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Suite Package.
            name: webex_suite
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Voice Package.
            name: webex_voice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The provisioning status of the user.
          name: status
          param_attrs:
          - doc: The subscriber is fully provisioned on Cisco Webex.
            name: provisioned
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The subscriber user migration is pending.
            name: pending_user_migration
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: "List of errors that occurred during that last attempt to provision/update\
            \ this subscriber.\n Note:\n* This list captures errors that occurred\
            \ during provisioning of the subscriber.\n* Any errors that occur during\
            \ initial API request validation will be captured directly in error response\
            \ with appropriate HTTP status code."
          name: errors
          param_attrs:
          - doc: An error code that identifies the reason for the error.
            name: errorCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A textual representation of the error code.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Error]
          type_spec: null
        - doc: The date and time the subscriber was provisioned.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the provisioning status of the subscriber last changed.
          name: lastStatusChange
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the subscriber in question.
          name: subscriberId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'This API allows a Service Provider to update certain details of a provisioned
        Wholesale subscriber.

        Note: The locationId cannot be updated with this API.'
      documentation:
        doc: Update a Wholesale Subscriber
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-subscribers/update-a-wholesale-subscriber
        endpoint: https://webexapis.com/v1/wholesale/subscribers/{subscriberId}
        http_method: PUT
      header: Update a Wholesale Subscriber
      parameters_and_response:
        Body Parameters:
        - doc: The Webex Wholesale package to be assigned to the subscriber.
          name: package
          param_attrs:
          - doc: Calling Basic Package.
            name: webex_calling
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meetings Package.
            name: webex_meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Suite Package.
            name: webex_suite
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Voice Package.
            name: webex_voice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: The following attributes should only be supplied when changing from
            the Meetings Package to a package that requires calling-specific attributes.
          name: provisioningParameters
          param_attrs:
          - doc: The primary phone number configured for the subscriber.
            name: primaryPhoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The extension configured for the subscriber.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the location. This id should be retrieved
              via the List Locations API.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Response Properties:
        - doc: A unique Cisco identifier for the subscriber.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person id of the subscriber used in the /people API. Only presented
            when status is provisioned.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the subscriber.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the customer.
          name: customerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: External ID of the Wholesale customer.
          name: externalCustomerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex Wholesale Package assigned to the subscriber.
          name: package
          param_attrs:
          - doc: Calling Basic Package.
            name: webex_calling
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meetings Package.
            name: webex_meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Suite Package.
            name: webex_suite
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Voice Package.
            name: webex_voice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The provisioning status of the user.
          name: status
          param_attrs:
          - doc: The subscriber is fully provisioned on Cisco Webex.
            name: provisioned
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The subscriber user migration is pending.
            name: pending_user_migration
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: "List of errors that occurred during that last attempt to provision/update\
            \ this subscriber.\n Note:\n* This list captures errors that occurred\
            \ during provisioning of the subscriber.\n* Any errors that occur during\
            \ initial API request validation will be captured directly in error response\
            \ with appropriate HTTP status code."
          name: errors
          param_attrs:
          - doc: An error code that identifies the reason for the error.
            name: errorCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A textual representation of the error code.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Error]
          type_spec: null
        - doc: The date and time the subscriber was provisioned.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the provisioning status of the subscriber last changed.
          name: lastStatusChange
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the subscriber in question.
          name: subscriberId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: This API allows a Service Provider to remove the mapping between Wholesale
        Subscriber and a Webex user.
      documentation:
        doc: Remove a Wholesale Subscriber
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-subscribers/remove-a-wholesale-subscriber
        endpoint: https://webexapis.com/v1/wholesale/subscribers/{subscriberId}
        http_method: DELETE
      header: Remove a Wholesale Subscriber
      parameters_and_response:
        URI Parameters:
        - doc: A unique identifier for the subscriber in question.
          name: subscriberId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: This API will allow the Partner sales team to verify likely success of
        provisioning a wholesale subscriber.
      documentation:
        doc: Precheck a Wholesale Subscriber Provisioning
        doc_link: https://developer.webex.com/docs/api/v1/wholesale-subscribers/precheck-a-wholesale-subscriber-provisioning
        endpoint: https://webexapis.com/v1/wholesale/subscribers/validate
        http_method: POST
      header: Precheck a Wholesale Subscriber Provisioning
      parameters_and_response:
        Body Parameters:
        - doc: 'This Provisioning ID defines how this wholesale subscriber is to be
            provisioned for Cisco Webex Services.

            Each Customer template has its unique provisioning ID. This ID is displayed
            under the chosen customer template on Cisco Webex Control Hub.'
          name: provisioningId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ID of the Provisioned Customer for Webex Wholesale.
          name: customerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the subscriber.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The Webex Wholesale package to be assigned to the subscriber.
          name: package
          param_attrs:
          - doc: Calling Basic Package.
            name: webex_calling
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Meetings Package.
            name: webex_meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Suite Package.
            name: webex_suite
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Voice Package.
            name: webex_voice
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: ''
          name: provisioningParameters
          param_attrs:
          - doc: The first name of the subscriber.
            name: firstName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The last name of the subscriber.
            name: lastName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The primary phone number configured for the subscriber.
            name: primaryPhoneNumber
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The extension configured for the subscriber. An extension, primary
              phone number or both must be supplied when creating a subscriber.
            name: extension
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the location. This ID should be retrieved
              via the Locations API - List Locations.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: '

            The primary email address of the customer.'
          name: customerInfo
          param_attrs: []
          param_object: []
          type: object
          type_spec: null
        Response Properties:
        - doc: A textual representation of the Precheck response message containing
            the infoCode object in the case of a success response and the errorCode
            object in the case of failure.
          name: message
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A list of ProvisioningPreCheckResponseInfo object.
          name: info
          param_attrs: []
          param_object:
          - doc: Provisioning Precheck infoCode.
            name: infoCode
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: A textual description of the infoCode.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
  Workspace Locations:
    doc: 'A Workspace Location is a physical location with a name, address, country,
      city, latitude and longitude.

      Viewing the list of locations in an organization requires an administrator auth
      token with the spark-admin:workspace_locations_read scope. Adding, updating,
      or deleting workspace locations in an organization requires an administrator
      auth token with the spark-admin:workspace_locations_write scope.

      The Workspace Locations API can also be used by partner administrators acting
      as administrators of a different organization than their own. In those cases
      an orgId value must be supplied, as indicated in the reference documentation
      for the relevant endpoints.'
    header: Workspace Locations
    methods:
    - doc: List workspace locations.
      documentation:
        doc: List Workspace Locations
        doc_link: https://developer.webex.com/docs/api/v1/workspace-locations/list-workspace-locations
        endpoint: https://webexapis.com/v1/workspaceLocations
        http_method: GET
      header: List Workspace Locations
      parameters_and_response:
        Query Parameters:
        - doc: Location display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location address.
          name: address
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location country code (ISO 3166-1).
          name: countryCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location city name.
          name: cityName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of location objects.
          name: items
          param_attrs:
          - doc: Unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the location org ID.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A friendly name for the location.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The location address.
            name: address
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The location country code (ISO 3166-1).
            name: countryCode
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The location city name.
            name: cityName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The location latitude.
            name: latitude
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The location longitude.
            name: longitude
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: Notes associated with the location.
            name: notes
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Location]
          type_spec: null
    - doc: Create a location. The cityName and notes parameters are optional, and
        omitting them will result in the creation of a location without values for
        those attributes.
      documentation:
        doc: Create a Workspace Location
        doc_link: https://developer.webex.com/docs/api/v1/workspace-locations/create-a-workspace-location
        endpoint: https://webexapis.com/v1/workspaceLocations
        http_method: POST
      header: Create a Workspace Location
      parameters_and_response:
        Body Parameters:
        - doc: A friendly name for the location.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The location address.
          name: address
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The location country code (ISO 3166-1).
          name: countryCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The location city name.
          name: cityName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location latitude.
          name: latitude
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: The location longitude.
          name: longitude
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: Notes associated with the location.
          name: notes
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for the location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the location org ID.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A friendly name for the location.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location address.
          name: address
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location country code (ISO 3166-1).
          name: countryCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location city name.
          name: cityName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location latitude.
          name: latitude
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The location longitude.
          name: longitude
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Notes associated with the location.
          name: notes
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Shows details for a location, by ID. Specify the location ID in the locationId
        parameter in the URI.
      documentation:
        doc: Get a Workspace Location Details
        doc_link: https://developer.webex.com/docs/api/v1/workspace-locations/get-a-workspace-location-details
        endpoint: https://webexapis.com/v1/workspaceLocations/{locationId}
        http_method: GET
      header: Get a Workspace Location Details
      parameters_and_response:
        Response Properties:
        - doc: Unique identifier for the location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the location org ID.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A friendly name for the location.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location address.
          name: address
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location country code (ISO 3166-1).
          name: countryCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location city name.
          name: cityName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location latitude.
          name: latitude
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The location longitude.
          name: longitude
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Notes associated with the location.
          name: notes
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Updates details for a location, by ID. Specify the location ID in the locationId
        parameter in the URI. The request should include all details for the location
        returned in a previous call to Get Workspace Location Details. Omitting the
        optional cityName or notes fields will result in those fields no longer being
        defined for the location.
      documentation:
        doc: Update a Workspace Location
        doc_link: https://developer.webex.com/docs/api/v1/workspace-locations/update-a-workspace-location
        endpoint: https://webexapis.com/v1/workspaceLocations/{locationId}
        http_method: PUT
      header: Update a Workspace Location
      parameters_and_response:
        Body Parameters:
        - doc: Unique identifier for the location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A friendly name for the location.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The location address.
          name: address
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The location country code (ISO 3166-1).
          name: countryCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The location city name.
          name: cityName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location latitude.
          name: latitude
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: The location longitude.
          name: longitude
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: Notes associated with the location.
          name: notes
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for the location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the location org ID.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A friendly name for the location.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location address.
          name: address
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location country code (ISO 3166-1).
          name: countryCode
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location city name.
          name: cityName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The location latitude.
          name: latitude
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The location longitude.
          name: longitude
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Notes associated with the location.
          name: notes
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Deletes a location, by ID. The workspaces associated to that location will
        no longer have a location, but a new location can be reassigned to them.
      documentation:
        doc: Delete a Workspace Location
        doc_link: https://developer.webex.com/docs/api/v1/workspace-locations/delete-a-workspace-location
        endpoint: https://webexapis.com/v1/workspaceLocations/{locationId}
        http_method: DELETE
      header: Delete a Workspace Location
      parameters_and_response:
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: List workspace location floors.
      documentation:
        doc: List Workspace Location Floors
        doc_link: https://developer.webex.com/docs/api/v1/workspace-locations/list-workspace-location-floors
        endpoint: https://webexapis.com/v1/workspaceLocations/{locationId}/floors
        http_method: GET
      header: List Workspace Location Floors
      parameters_and_response:
        Response Properties:
        - doc: An array of floor objects.
          name: items
          param_attrs:
          - doc: Unique identifier for the location.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unique identifier for the location org ID.
            name: locationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The floor number.
            name: floorNumber
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The floor display name.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Floor]
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Create a new floor in the given location. The displayName parameter is
        optional, and omitting it will result in the creation of a floor without that
        value set.
      documentation:
        doc: Create a Workspace Location Floor
        doc_link: https://developer.webex.com/docs/api/v1/workspace-locations/create-a-workspace-location-floor
        endpoint: https://webexapis.com/v1/workspaceLocations/{locationId}/floors
        http_method: POST
      header: Create a Workspace Location Floor
      parameters_and_response:
        Body Parameters:
        - doc: The floor number.
          name: floorNumber
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: The floor display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for the location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the location org ID.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The floor number.
          name: floorNumber
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The floor display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Shows details for a floor, by ID. Specify the floor ID in the floorId parameter
        in the URI.
      documentation:
        doc: Get a Workspace Location Floor Details
        doc_link: https://developer.webex.com/docs/api/v1/workspace-locations/get-a-workspace-location-floor-details
        endpoint: https://webexapis.com/v1/workspaceLocations/{locationId}/floors/{floorId}
        http_method: GET
      header: Get a Workspace Location Floor Details
      parameters_and_response:
        Response Properties:
        - doc: Unique identifier for the location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the location org ID.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The floor number.
          name: floorNumber
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The floor display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A unique identifier for the floor.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Updates details for a floor, by ID. Specify the floor ID in the floorId
        parameter in the URI. Include all details for the floor returned by a previous
        call to Get Workspace Location Floor Details. Omitting the optional displayName
        field will result in that field no longer being defined for the floor.
      documentation:
        doc: Update a Workspace Location Floor
        doc_link: https://developer.webex.com/docs/api/v1/workspace-locations/update-a-workspace-location-floor
        endpoint: https://webexapis.com/v1/workspaceLocations/{locationId}/floors/{floorId}
        http_method: PUT
      header: Update a Workspace Location Floor
      parameters_and_response:
        Body Parameters:
        - doc: The floor number.
          name: floorNumber
          param_attrs: []
          param_object: []
          type: number
          type_spec: required
        - doc: The floor display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: Unique identifier for the location.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Unique identifier for the location org ID.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The floor number.
          name: floorNumber
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The floor display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A unique identifier for the floor.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Deletes a floor, by ID.
      documentation:
        doc: Delete a Workspace Location Floor
        doc_link: https://developer.webex.com/docs/api/v1/workspace-locations/delete-a-workspace-location-floor
        endpoint: https://webexapis.com/v1/workspaceLocations/{locationId}/floors/{floorId}
        http_method: DELETE
      header: Delete a Workspace Location Floor
      parameters_and_response:
        URI Parameters:
        - doc: A unique identifier for the location.
          name: locationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: A unique identifier for the floor.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Workspace Metrics:
    doc: 'Workspace metrics contain various measurements, such as sound level or temperature,
      collected by devices in a workspace.

      Getting the workspace metrics in an organization requires an administrator auth
      token with the spark-admin:workspace_metrics_read scope.'
    header: Workspace Metrics
    methods:
    - doc: Get metric data for the specified workspace and metric name, optionally
        aggregated over a specified time period.
      documentation:
        doc: Workspace Metrics
        doc_link: https://developer.webex.com/docs/api/v1/workspace-metrics/workspace-metrics
        endpoint: https://webexapis.com/v1/workspaceMetrics
        http_method: GET
      header: Workspace Metrics
      parameters_and_response:
        Query Parameters:
        - doc: ID of the workspace to get metrics for.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'The type of data to extract.

            Possible values: soundLevel, ambientNoise, temperature, humidity, tvoc,
            peopleCount'
          name: metricName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Time unit over which to aggregate measurements.

            Possible values: none, hourly, daily'
          name: aggregation
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List only data points after a specific date and time (ISO 8601 timestamp)
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List data points before a specific date and time (ISO 8601 timestamp)
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Output data unit (only a valid parameter if metricName is temperature).

            Possible values: celsius, fahrenheit'
          name: unit
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Sort results.

            Possible values: newestFirst, oldestFirst'
          name: sortBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: metricName
          param_attrs:
          - doc: ''
            name: soundLevel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: ambientNoise
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: temperature
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: humidity
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: tvoc
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: peopleCount
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: ''
          name: aggregation
          param_attrs:
          - doc: ''
            name: none
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: hourly
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: daily
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: ''
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Output data unit (only present if metricName is temperature).
          name: unit
          param_attrs:
          - doc: ''
            name: celsius
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: fahrenheit
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: ''
          name: sortBy
          param_attrs:
          - doc: ''
            name: newestFirst
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: oldestFirst
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: ''
          name: items
          param_attrs: []
          param_object: []
          type: array[string]
          type_spec: null
    - doc: 'Get metrics for how much time a workspace has been in the state given
        by the measurement parameter.

        For example, if the measurement is  timeBooked then the duration for which
        the workspace has been booked is returned. The workspaceId parameter indicates
        which workspace to fetch metrics for. If no measurement is given, the default
        value is timeUsed.'
      documentation:
        doc: Workspace Duration Metrics
        doc_link: https://developer.webex.com/docs/api/v1/workspace-metrics/workspace-duration-metrics
        endpoint: https://webexapis.com/v1/workspaceDurationMetrics
        http_method: GET
      header: Workspace Duration Metrics
      parameters_and_response:
        Query Parameters:
        - doc: ID of the workspace to get metrics for.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'Unit of time over which to aggregate measurements.

            Possible values: hourly, daily'
          name: aggregation
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The measurement to return duration for.

            Possible values: timeUsed, timeBooked'
          name: measurement
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Include data points after a specific date and time (ISO 8601 timestamp).
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Include data points before a specific date and time (ISO 8601 timestamp).
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: aggregation
          param_attrs:
          - doc: ''
            name: hourly
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: daily
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: ''
          name: measurement
          param_attrs:
          - doc: ''
            name: timeUsed
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: timeBooked
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: ''
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The time unit.
          name: unit
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: ''
          name: items
          param_attrs:
          - doc: Timestamp indicating the start of the aggregation bucket (ISO 8601).
            name: start
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Timestamp indicating the end of the aggregation bucket (ISO 8601).
            name: end
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The time duration (in a given state) in the bucket.
            name: duration
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          param_object: []
          type: array[Duration Metric]
          type_spec: null
  Workspace Personalization:
    doc: 'This API collection applies only to Webex Edge registered devices.

      The Workspace Personalization API is designed to help administrators enable
      Personal Mode for Webex Edge registered devices. This one-time operation allows
      for end users to receive calls and meeting notifications directly on their device,
      without needing to pair. This API aids with the process of the migration from
      on-premise to cloud-registered personal mode systems.

      For the personalization of a device to be successful, the following requirements
      must be satisfied:

      The workspace must contain a single, Webex Edge registered, shared mode device.

      The workspace must not have any calendars configured.

      The device belonging to the workspace must be online.

      Invoking this API requires the spark-admin:devices_write, spark:xapi_commands,
      spark:xapi_statuses and Identity:one_time_password scopes.'
    header: Workspace Personalization
    methods:
    - doc: 'Initializes the personalization for a given workspace for the user email
        provided.

        The personalization process is asynchronous and thus a background task is
        created when this endpoint is invoked.

        After successful invocation of this endpoint a personalization task status
        URL will be returned in the Location header, which will point to the Get Personalization
        Task endpoint for this workspace.

        The task should be completed in approximately 30 seconds.'
      documentation:
        doc: Personalize a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/workspace-personalization/personalize-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/personalize
        http_method: POST
      header: Personalize a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: The user that the device will become personalised for.
          name: email
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        URI Parameters:
        - doc: A unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Returns the status of a personalization task for a given workspace.

        Whilst in progress the endpoint will return Accepted and provide a Retry-After
        header indicating the number of seconds a client should wait before retrying.

        Upon completion of the task, the endpoint will return OK with a body detailing
        if the personalization was successful and an error description if appropriate.'
      documentation:
        doc: Get Personalization Task
        doc_link: https://developer.webex.com/docs/api/v1/workspace-personalization/get-personalization-task
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/personalizationTask
        http_method: GET
      header: Get Personalization Task
      parameters_and_response:
        Response Properties:
        - doc: Describes if the personalization was successful.
          name: success
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A description of the error will be provided if the personalization
            was not successful.
          name: errorDescription
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Workspaces:
    doc: 'Workspaces represent where people work, such as conference rooms, meeting
      spaces, lobbies, and lunch rooms. Devices may be associated with workspaces.

      Viewing the list of workspaces in an organization requires an administrator
      auth token with the spark-admin:workspaces_read scope. Adding, updating, or
      deleting workspaces in an organization requires an administrator auth token
      with the scopes spark-admin:workspaces_write and spark-admin:telephony_config_write.

      The Workspaces API can also be used by partner administrators acting as administrators
      of a different organization than their own. In those cases an orgId value must
      be supplied, as indicated in the reference documentation for the relevant endpoints.'
    header: Workspaces
    methods:
    - doc: 'List workspaces.

        Use query parameters to filter the response. The orgId parameter can only
        be used by admin users of another organization (such as partners). The workspaceLocationId,
        floorId, capacity and type fields will only be present for workspaces that
        have a value set for them. The special values notSet (for filtering on category)
        and -1 (for filtering on capacity) can be used to filter for workspaces without
        a type and/or capacity.'
      documentation:
        doc: List Workspaces
        doc_link: https://developer.webex.com/docs/api/v1/workspaces/list-workspaces
        endpoint: https://webexapis.com/v1/workspaces
        http_method: GET
      header: List Workspaces
      parameters_and_response:
        Query Parameters:
        - doc: List workspaces in this organization. Only admin users of another organization
            (such as partners) may use this parameter.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location associated with the workspace.
          name: workspaceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Floor associated with the workspace.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List workspaces by display name.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List workspaces with the given capacity. Must be -1 or higher. A value
            of -1 lists workspaces with no capacity set.
          name: capacity
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: 'List workspaces by type.

            Possible values: notSet, focus, huddle, meetingRoom, open, desk, other'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Offset. Default is 0.
          name: start
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Limit the maximum number of workspaces in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: 'List workspaces by calling type.

            Possible values: freeCalling, hybridCalling, webexCalling, webexEdgeForDevices,
            thirdPartySipCalling, none'
          name: calling
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List workspaces by calendar type.

            Possible values: none, google, microsoft'
          name: calendar
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: An array of workspace objects.
          name: items
          param_attrs:
          - doc: Unique identifier for the Workspace.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: OrgId associate with the workspace.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Location associated with the workspace.
            name: workspaceLocationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Floor associated with the workspace.
            name: floorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A friendly name for the workspace.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: How many people the workspace is suitable for.
            name: capacity
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          - doc: The workspace type.
            name: type
            param_attrs:
            - doc: No workspace type set.
              name: notSet
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: High concentration.
              name: focus
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Brainstorm/collaboration.
              name: huddle
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Dedicated meeting space.
              name: meetingRoom
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Unstructured agile.
              name: open
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Individual.
              name: desk
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Unspecified.
              name: other
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: SipUrl to call all the devices associated with the workspace.
            name: sipAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time that the workspace was registered, in ISO8601 format.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Calling type.
            name: calling
            param_attrs: []
            param_object:
            - doc: Calling.
              name: type
              param_attrs:
              - doc: Free Calling.
                name: freeCalling
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Hybrid Calling.
                name: hybridCalling
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Webex Calling.
                name: webexCalling
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Webex Edge For Devices.
                name: webexEdgeForDevices
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Third-party SIP URI.
                name: thirdPartySipCalling
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: No Calling.
                name: none
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: The hybridCalling object only applies when calling type is hybridCalling.
              name: hybridCalling
              param_attrs: []
              param_object:
              - doc: End user email address in Cisco Unified CM.
                name: emailAddress
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              type: object
              type_spec: null
            type: object
            type_spec: null
          - doc: Calendar type. Calendar of type none does not include an emailAddress
              field.
            name: calendar
            param_attrs: []
            param_object:
            - doc: ''
              name: type
              param_attrs:
              - doc: No calendar.
                name: none
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Google Calendar.
                name: google
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: Microsoft Exchange or Office 365.
                name: microsoft
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              param_object: []
              type: enum
              type_spec: null
            - doc: Workspace email address. Will not be set when the calendar type
                is none.
              name: emailAddress
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          - doc: Notes associated to the workspace.
            name: notes
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Hot desking status of the workspace.
            name: hotdeskingStatus
            param_attrs:
            - doc: Workspace supports hotdesking.
              name: 'on'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Workspace does not support hotdesking.
              name: 'off'
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The supported devices for the workspace.
            name: supportedDevices
            param_attrs:
            - doc: Workspace supports collaborationDevices.
              name: collaborationDevices
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Workspace supports MPP phones.
              name: phones
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          param_object: []
          type: array[Workspace]
          type_spec: null
    - doc: 'Create a workspace.

        The workspaceLocationId, floorId, capacity, type, notes and hotdeskingStatus  parameters
        are optional, and omitting them will result in the creation of a workspace
        without these values set, or set to their default. A workspaceLocationId must
        be provided when the floorId is set. Calendar and calling can also be set
        for a new workspace. Omitting them will default to free calling and no calendaring.
        The orgId parameter can only be used by admin users of another organization
        (such as partners).'
      documentation:
        doc: Create a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/workspaces/create-a-workspace
        endpoint: https://webexapis.com/v1/workspaces
        http_method: POST
      header: Create a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: A friendly name for the workspace.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: OrgId associated with the workspace. Only admin users of another organization
            (such as partners) may use this parameter.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location associated with the workspace. Must be provided when the floorId
            is set.
          name: workspaceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Floor associated with the workspace.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: How many people the workspace is suitable for. If set, must be 0 or
            higher.
          name: capacity
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The type that best describes the workspace.
          name: type
          param_attrs:
          - doc: No workspace type set.
            name: notSet
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: High concentration.
            name: focus
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Brainstorm/collaboration.
            name: huddle
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Dedicated meeting space.
            name: meetingRoom
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unstructured agile.
            name: open
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Individual.
            name: desk
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unspecified.
            name: other
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The sipAddress field can only be provided when calling type is thirdPartySipCalling
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Calling types supported on create are freeCalling, webexEdgeForDevices,
            thirdPartySipCalling and none. Default is freeCalling.

            Calling.'
          name: calling
          param_attrs: []
          param_object: []
          type: object
          type_spec: null
        - doc: Workspace calendar configuration. Provide a type (microsoft, google
            or none) and an emailAddress. Default is none.
          name: calendar
          param_attrs:
          - doc: ''
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Workspace email address. Will not be set when the calendar type is
              none.
            name: emailAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: Notes associated to the workspace.
          name: notes
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Hot desking status of the workspace.
          name: hotdeskingStatus
          param_attrs:
          - doc: Workspace supports hotdesking.
            name: 'on'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Workspace does not support hotdesking.
            name: 'off'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        Response Properties:
        - doc: Unique identifier for the Workspace.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: OrgId associate with the workspace.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location associated with the workspace.
          name: workspaceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Floor associated with the workspace.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A friendly name for the workspace.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: How many people the workspace is suitable for.
          name: capacity
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The workspace type.
          name: type
          param_attrs:
          - doc: No workspace type set.
            name: notSet
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: High concentration.
            name: focus
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Brainstorm/collaboration.
            name: huddle
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Dedicated meeting space.
            name: meetingRoom
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unstructured agile.
            name: open
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Individual.
            name: desk
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unspecified.
            name: other
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: SipUrl to call all the devices associated with the workspace.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time that the workspace was registered, in ISO8601 format.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Calling type.
          name: calling
          param_attrs: []
          param_object:
          - doc: Calling.
            name: type
            param_attrs:
            - doc: Free Calling.
              name: freeCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Hybrid Calling.
              name: hybridCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webex Calling.
              name: webexCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webex Edge For Devices.
              name: webexEdgeForDevices
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Third-party SIP URI.
              name: thirdPartySipCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: No Calling.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The hybridCalling object only applies when calling type is hybridCalling.
            name: hybridCalling
            param_attrs: []
            param_object:
            - doc: End user email address in Cisco Unified CM.
              name: emailAddress
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: Calendar type. Calendar of type none does not include an emailAddress
            field.
          name: calendar
          param_attrs: []
          param_object:
          - doc: ''
            name: type
            param_attrs:
            - doc: No calendar.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Google Calendar.
              name: google
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Microsoft Exchange or Office 365.
              name: microsoft
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Workspace email address. Will not be set when the calendar type is
              none.
            name: emailAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Notes associated to the workspace.
          name: notes
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Hot desking status of the workspace.
          name: hotdeskingStatus
          param_attrs:
          - doc: Workspace supports hotdesking.
            name: 'on'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Workspace does not support hotdesking.
            name: 'off'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The supported devices for the workspace.
          name: supportedDevices
          param_attrs:
          - doc: Workspace supports collaborationDevices.
            name: collaborationDevices
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Workspace supports MPP phones.
            name: phones
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
    - doc: 'Shows details for a workspace, by ID.

        The workspaceLocationId, floorId, capacity, type and notes fields will only
        be present if they have been set for the workspace. Specify the workspace
        ID in the workspaceId parameter in the URI.'
      documentation:
        doc: Get Workspace Details
        doc_link: https://developer.webex.com/docs/api/v1/workspaces/get-workspace-details
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}
        http_method: GET
      header: Get Workspace Details
      parameters_and_response:
        Response Properties:
        - doc: Unique identifier for the Workspace.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: OrgId associate with the workspace.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location associated with the workspace.
          name: workspaceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Floor associated with the workspace.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A friendly name for the workspace.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: How many people the workspace is suitable for.
          name: capacity
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The workspace type.
          name: type
          param_attrs:
          - doc: No workspace type set.
            name: notSet
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: High concentration.
            name: focus
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Brainstorm/collaboration.
            name: huddle
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Dedicated meeting space.
            name: meetingRoom
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unstructured agile.
            name: open
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Individual.
            name: desk
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unspecified.
            name: other
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: SipUrl to call all the devices associated with the workspace.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time that the workspace was registered, in ISO8601 format.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Calling type.
          name: calling
          param_attrs: []
          param_object:
          - doc: Calling.
            name: type
            param_attrs:
            - doc: Free Calling.
              name: freeCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Hybrid Calling.
              name: hybridCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webex Calling.
              name: webexCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webex Edge For Devices.
              name: webexEdgeForDevices
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Third-party SIP URI.
              name: thirdPartySipCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: No Calling.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The hybridCalling object only applies when calling type is hybridCalling.
            name: hybridCalling
            param_attrs: []
            param_object:
            - doc: End user email address in Cisco Unified CM.
              name: emailAddress
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: Calendar type. Calendar of type none does not include an emailAddress
            field.
          name: calendar
          param_attrs: []
          param_object:
          - doc: ''
            name: type
            param_attrs:
            - doc: No calendar.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Google Calendar.
              name: google
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Microsoft Exchange or Office 365.
              name: microsoft
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Workspace email address. Will not be set when the calendar type is
              none.
            name: emailAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Notes associated to the workspace.
          name: notes
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Hot desking status of the workspace.
          name: hotdeskingStatus
          param_attrs:
          - doc: Workspace supports hotdesking.
            name: 'on'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Workspace does not support hotdesking.
            name: 'off'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The supported devices for the workspace.
          name: supportedDevices
          param_attrs:
          - doc: Workspace supports collaborationDevices.
            name: collaborationDevices
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Workspace supports MPP phones.
            name: phones
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates details for a workspace by ID.

        Specify the workspace ID in the workspaceId parameter in the URI. Include
        all details for the workspace that are present in a GET request for the workspace
        details. Not including the optional capacity, type or notes fields will result
        in the fields no longer being defined for the workspace. A workspaceLocationId
        must be provided when the floorId is set. The workspaceLocationId, floorId,
        calendar and calling fields do not change when omitted from the update request.

        Updating the calling parameter is only supported if the existing calling type
        is freeCalling, none or thirdPartySipCalling.

        Updating the calling parameter to none or thirdPartySipCalling is not supported
        if the workspace contains any devices.'
      documentation:
        doc: Update a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/workspaces/update-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}
        http_method: PUT
      header: Update a Workspace
      parameters_and_response:
        Body Parameters:
        - doc: A friendly name for the workspace.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location associated with the workspace. Must be provided when the floorId
            is set.
          name: workspaceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Floor associated with the workspace.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: How many people the workspace is suitable for. If set, must be 0 or
            higher.
          name: capacity
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The type that best describes the workspace.
          name: type
          param_attrs:
          - doc: No workspace type set.
            name: notSet
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: High concentration.
            name: focus
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Brainstorm/collaboration.
            name: huddle
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Dedicated meeting space.
            name: meetingRoom
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unstructured agile.
            name: open
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Individual.
            name: desk
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unspecified.
            name: other
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: An empty/null calendar field will not cause any changes. Provide a
            type (microsoft, google or none) and an emailAddress. Removing calendar
            is done by setting the none type, and setting none type does not require
            an emailAddress.
          name: calendar
          param_attrs:
          - doc: ''
            name: type
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Workspace email address. Will not be set when the calendar type is
              none.
            name: emailAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        - doc: The sipAddress field can only be provided when calling type is thirdPartySipCalling
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Calling types supported on update are freeCalling, thirdPartySipCalling
            and none.

            Calling type.'
          name: calling
          param_attrs: []
          param_object: []
          type: object
          type_spec: null
        - doc: Notes associated to the workspace.
          name: notes
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Hot desking status of the workspace.
          name: hotdeskingStatus
          param_attrs:
          - doc: Workspace supports hotdesking.
            name: 'on'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Workspace does not support hotdesking.
            name: 'off'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        Response Properties:
        - doc: Unique identifier for the Workspace.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: OrgId associate with the workspace.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Location associated with the workspace.
          name: workspaceLocationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Floor associated with the workspace.
          name: floorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A friendly name for the workspace.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: How many people the workspace is suitable for.
          name: capacity
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: The workspace type.
          name: type
          param_attrs:
          - doc: No workspace type set.
            name: notSet
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: High concentration.
            name: focus
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Brainstorm/collaboration.
            name: huddle
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Dedicated meeting space.
            name: meetingRoom
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unstructured agile.
            name: open
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Individual.
            name: desk
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Unspecified.
            name: other
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: SipUrl to call all the devices associated with the workspace.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time that the workspace was registered, in ISO8601 format.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Calling type.
          name: calling
          param_attrs: []
          param_object:
          - doc: Calling.
            name: type
            param_attrs:
            - doc: Free Calling.
              name: freeCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Hybrid Calling.
              name: hybridCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webex Calling.
              name: webexCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Webex Edge For Devices.
              name: webexEdgeForDevices
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Third-party SIP URI.
              name: thirdPartySipCalling
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: No Calling.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The hybridCalling object only applies when calling type is hybridCalling.
            name: hybridCalling
            param_attrs: []
            param_object:
            - doc: End user email address in Cisco Unified CM.
              name: emailAddress
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        - doc: Calendar type. Calendar of type none does not include an emailAddress
            field.
          name: calendar
          param_attrs: []
          param_object:
          - doc: ''
            name: type
            param_attrs:
            - doc: No calendar.
              name: none
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Google Calendar.
              name: google
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Microsoft Exchange or Office 365.
              name: microsoft
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Workspace email address. Will not be set when the calendar type is
              none.
            name: emailAddress
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: Notes associated to the workspace.
          name: notes
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Hot desking status of the workspace.
          name: hotdeskingStatus
          param_attrs:
          - doc: Workspace supports hotdesking.
            name: 'on'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Workspace does not support hotdesking.
            name: 'off'
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The supported devices for the workspace.
          name: supportedDevices
          param_attrs:
          - doc: Workspace supports collaborationDevices.
            name: collaborationDevices
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Workspace supports MPP phones.
            name: phones
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a workspace by ID.

        Also deletes all devices associated with the workspace. Any deleted devices
        will need to be reactivated. Specify the workspace ID in the workspaceId parameter
        in the URI.'
      documentation:
        doc: Delete a Workspace
        doc_link: https://developer.webex.com/docs/api/v1/workspaces/delete-a-workspace
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}
        http_method: DELETE
      header: Delete a Workspace
      parameters_and_response:
        URI Parameters:
        - doc: A unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Shows the capabilities for a workspace by ID.

        Returns a set of capabilities, including whether or not the capability is
        supported by any device in the workspace, and if the capability is configured
        (enabled). For example for a specific capability like occupancyDetection,
        the API will return if the capability is supported and/or configured such
        that occupancy detection data will flow from the workspace (device) to the
        cloud. Specify the workspace ID in the workspaceId parameter in the URI.'
      documentation:
        doc: Get Workspace Capabilities
        doc_link: https://developer.webex.com/docs/api/v1/workspaces/get-workspace-capabilities
        endpoint: https://webexapis.com/v1/workspaces/{workspaceId}/capabilities
        http_method: GET
      header: Get Workspace Capabilities
      parameters_and_response:
        Response Properties:
        - doc: The map of workspace capabilities.
          name: capabilities
          param_attrs:
          - doc: Occupancy detection.
            name: occupancyDetection
            param_attrs:
            - doc: Is the workspace capability supported or not.
              name: supported
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Is the workspace capability configured or not.
              name: configured
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: SupportAndConfiguredInfo
            type_spec: null
          - doc: Presence detection.
            name: presenceDetection
            param_attrs:
            - doc: Is the workspace capability supported or not.
              name: supported
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Is the workspace capability configured or not.
              name: configured
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: SupportAndConfiguredInfo
            type_spec: null
          - doc: Ambient noise.
            name: ambientNoise
            param_attrs:
            - doc: Is the workspace capability supported or not.
              name: supported
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Is the workspace capability configured or not.
              name: configured
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: SupportAndConfiguredInfo
            type_spec: null
          - doc: Sound level.
            name: soundLevel
            param_attrs:
            - doc: Is the workspace capability supported or not.
              name: supported
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Is the workspace capability configured or not.
              name: configured
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: SupportAndConfiguredInfo
            type_spec: null
          - doc: Temperature.
            name: temperature
            param_attrs:
            - doc: Is the workspace capability supported or not.
              name: supported
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Is the workspace capability configured or not.
              name: configured
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: SupportAndConfiguredInfo
            type_spec: null
          - doc: Air quality.
            name: airQuality
            param_attrs:
            - doc: Is the workspace capability supported or not.
              name: supported
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Is the workspace capability configured or not.
              name: configured
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: SupportAndConfiguredInfo
            type_spec: null
          - doc: Relative humidity.
            name: relativeHumidity
            param_attrs:
            - doc: Is the workspace capability supported or not.
              name: supported
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            - doc: Is the workspace capability configured or not.
              name: configured
              param_attrs: []
              param_object: []
              type: boolean
              type_spec: null
            param_object: []
            type: SupportAndConfiguredInfo
            type_spec: null
          param_object: []
          type: CapabilityMap
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the workspace.
          name: workspaceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  xAPI:
    doc: 'The xAPI allows developers to programmatically invoke commands and query
      the status of devices that run Webex RoomOS software.

      Executing commands requires an auth token with the spark:xapi_commands scope.
      Querying devices requires an auth token with the spark:xapi_statuses scope.

      All xAPI requests require a deviceId which can be obtained using the Devices
      API. xAPI commands and statuses are described in the Cisco Collaboration Endpoint
      Software API Reference Guide. For more information about developing applications
      for cloud connected devices, see the Device Developers Guide.'
    header: xAPI
    methods:
    - doc: 'Query the current status of the Webex RoomOS Device. You specify the target
        device in the deviceId parameter in the URI. The target device is queried
        for statuses according to the expression in the name parameter.

        See the xAPI section of the Device Developers Guide for a description of status
        expressions.'
      documentation:
        doc: Query Status
        doc_link: https://developer.webex.com/docs/api/v1/xapi/query-status
        endpoint: https://webexapis.com/v1/xapi/status
        http_method: GET
      header: Query Status
      parameters_and_response:
        Query Parameters:
        - doc: The unique identifier for the Webex RoomOS Device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Status expression used to query the Webex RoomOS Device. See the xAPI
            section of the Device Developers Guide for a description of status expressions.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: The unique identifier for the Webex RoomOS Device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: xAPI status result
          name: result
          param_attrs: []
          param_object:
          - doc: ''
            name: Audio
            param_attrs: []
            param_object:
            - doc: ''
              name: Volume
              param_attrs: []
              param_object: []
              type: number
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
    - doc: 'Executes a command on the Webex RoomOS Device. Specify the command to
        execute in the commandName URI parameter.

        See the xAPI section of the Device Developers Guide for a description of command
        expressions.'
      documentation:
        doc: Execute Command
        doc_link: https://developer.webex.com/docs/api/v1/xapi/execute-command
        endpoint: https://webexapis.com/v1/xapi/command/{commandName}
        http_method: POST
      header: Execute Command
      parameters_and_response:
        Body Parameters:
        - doc: The unique identifier for the Webex RoomOS Device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: 'xAPI command arguments

            '
          name: arguments
          param_attrs: []
          param_object: []
          type: object
          type_spec: required
        - doc: 'xAPI command body, as a complex JSON object or as a string, for example:
            import xapi from ''xapi'';\n\nconsole.log(''Hello, World!'');\n'
          name: body
          param_attrs:
          - doc: ''
            name: Booking
            param_attrs:
            - doc: ''
              name: Id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Title
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Protocol
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Time
              param_attrs:
              - doc: ''
                name: StartTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: Duration
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              param_object: []
              type: object
              type_spec: null
            - doc: '

                '
              name: Organizer
              param_attrs: []
              param_object: []
              type: object
              type_spec: null
            - doc: ''
              name: Number
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: object
            type_spec: null
          param_object: []
          type: object
          type_spec: null
        Response Properties:
        - doc: The unique identifier for the Webex RoomOS Device.
          name: deviceId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: xAPI command arguments
          name: arguments
          param_attrs: []
          param_object:
          - doc: ''
            name: Level
            param_attrs: []
            param_object: []
            type: number
            type_spec: null
          type: object
          type_spec: null
        - doc: xAPI command results
          name: result
          param_attrs: []
          param_object:
          - doc: ''
            name: Booking
            param_attrs: []
            param_object:
            - doc: ''
              name: Id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Title
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Protocol
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: Time
              param_attrs: []
              param_object:
              - doc: ''
                name: StartTime
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              - doc: ''
                name: Duration
                param_attrs: []
                param_object: []
                type: number
                type_spec: null
              type: object
              type_spec: null
            - doc: ''
              name: Organizer
              param_attrs: []
              param_object:
              - doc: ''
                name: Name
                param_attrs: []
                param_object: []
                type: string
                type_spec: null
              type: object
              type_spec: null
            - doc: ''
              name: Number
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: Command to execute on the Webex RoomOS Device.
          name: commandName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
